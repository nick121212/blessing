{"version":3,"sources":["../../src/lib/compose.js"],"names":["compose","middleware","Array","isArray","TypeError","fn","context","next","resolve","reject","index","dispatch","i","resolve1","reject1","create","length","err","catch","Compose","_maxJobs","middlewares","maxJobs","jobs","ctx","console","error","app","emit","isFunction","push","options","extend","tap","onError","finally","onComplete"],"mappings":"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","file":"compose.js","sourcesContent":["import { EventEmitter } from \"events\";\nimport _ from \"lodash\";\nimport boom from \"boom\";\nimport { Promise } from \"bluebird\";\n\nexport const compose = (middleware) => {\n    if (!Array.isArray(middleware)) throw new TypeError(\"Middleware stack must be an array!\");\n    for (const fn of middleware) {\n        if (typeof fn !== \"function\") throw new TypeError(\"Middleware must be composed of functions!\");\n    }\n\n    /**\n     * @param {Object} context\n     * @return {Promise}\n     * @api public\n     */\n    return (context, next) => {\n        return new Promise((resolve, reject) => {\n            let index = -1;\n\n            const dispatch = async(i) => {\n                return new Promise((resolve1, reject1) => {\n                    if (i <= index) {\n                        return reject1(boom.create(610, \"next() called multiple times\" + i + \"-\" + index));\n                    }\n                    index = i;\n                    let fn = middleware[i];\n                    if (i === middleware.length) fn = next;\n                    if (!fn) {\n                        return resolve(context);\n                    }\n                    try {\n                        // Promise.try(async() => {\n                        resolve1(fn(context, () => {\n                            dispatch(i + 1);\n                        }));\n                        // }).then(resolveFunc).catch(reject);\n                    } catch (err) {\n                        reject1(err);\n                    }\n                }).catch(reject);\n            };\n            dispatch(0).catch(reject);\n        });\n    };\n};\n\nexport class Compose extends EventEmitter {\n    constructor(_maxJobs = 10) {\n        super();\n\n        this.middlewares = [];\n        this.maxJobs = _maxJobs;\n        this.jobs = 0;\n    }\n\n    next(ctx) {}\n\n    onError(err, ctx) {\n        console.error(\"compose.js\", ctx.app.jobs);\n        ctx.err = err;\n    }\n\n    onComplete(ctx) {\n        ctx.app.jobs--;\n        this.emit(\"complete\", ctx);\n    }\n\n    use(fn) {\n        if (!_.isFunction(fn)) {\n            throw new TypeError(\"middleware must be a function！\");\n        }\n\n        this.middlewares.push(fn);\n    }\n\n    callback(next) {\n        const fn = compose(this.middlewares);\n\n        if (next) {\n            this.next = next;\n        }\n\n        return (options) => {\n            let ctx = _.extend({}, options || {}, {\n                app: this\n            });\n\n            this.jobs++;\n\n            return fn(ctx, async(ctx, next) => {\n                this.next(ctx);\n                await next();\n            }).tap(() => {}).catch((err) => {\n                this.onError(err, ctx);\n            }).finally(() => {\n                this.onComplete(ctx);\n            });\n        };\n    }\n}"]}