"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Spa = exports.SpaClient = exports.SpaServer = exports.SpaRouter = undefined;

var _get2 = require("babel-runtime/helpers/get");

var _get3 = _interopRequireDefault(_get2);

var _regenerator = require("babel-runtime/regenerator");

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require("babel-runtime/helpers/asyncToGenerator");

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _getPrototypeOf = require("babel-runtime/core-js/object/get-prototype-of");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require("babel-runtime/helpers/createClass");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require("babel-runtime/helpers/inherits");

var _inherits3 = _interopRequireDefault(_inherits2);

var _eureca = require("eureca.io");

var _events = require("events");

var _compose = require("./compose");

var _lodash = require("lodash");

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Created by NICK on 2016/12/16.
 */

var SpaRouter = exports.SpaRouter = function (_EventEmitter) {
    (0, _inherits3.default)(SpaRouter, _EventEmitter);

    function SpaRouter() {
        (0, _classCallCheck3.default)(this, SpaRouter);

        var _this = (0, _possibleConstructorReturn3.default)(this, (SpaRouter.__proto__ || (0, _getPrototypeOf2.default)(SpaRouter)).call(this));

        _this.keys = {};
        return _this;
    }

    (0, _createClass3.default)(SpaRouter, [{
        key: "attach",


        /**
         * 开始中间件
         */
        value: function attach(app, spaEureca) {
            var _this2 = this;

            var fn = app.callback();

            spaEureca.eureca.exports = _lodash2.default.extend({}, spaEureca.eureca.exports || {});
            _lodash2.default.forEach(this.keys, function (val, key) {
                spaEureca.eureca.exports[key] = function (data) {
                    var context = this;
                    context.async = true;
                    if (!context.retId) return;
                    fn({
                        routerKey: key,
                        context: _lodash2.default.clone(context),
                        params: data || {},
                        proxy: spaEureca
                    });
                };
            });

            return function () {
                var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(ctx, next) {
                    return _regenerator2.default.wrap(function _callee$(_context) {
                        while (1) {
                            switch (_context.prev = _context.next) {
                                case 0:
                                    if (!_this2.keys.hasOwnProperty(ctx.routerKey)) {
                                        _context.next = 5;
                                        break;
                                    }

                                    _context.next = 3;
                                    return _this2.keys[ctx.routerKey](ctx, next);

                                case 3:
                                    _context.next = 7;
                                    break;

                                case 5:
                                    _context.next = 7;
                                    return next();

                                case 7:
                                case "end":
                                    return _context.stop();
                            }
                        }
                    }, _callee, _this2);
                }));

                return function (_x, _x2) {
                    return _ref.apply(this, arguments);
                };
            }();
        }

        /**
         * 添加路由方法
         */

    }, {
        key: "attachRouteToSocket",
        value: function attachRouteToSocket(key, func) {
            this.keys[key] = func;
        }
    }, {
        key: "eureca",
        get: function get() {
            return null;
        }
    }]);
    return SpaRouter;
}(_events.EventEmitter);

var SpaServer = exports.SpaServer = function (_SpaRouter) {
    (0, _inherits3.default)(SpaServer, _SpaRouter);

    function SpaServer(config) {
        (0, _classCallCheck3.default)(this, SpaServer);

        var _this3 = (0, _possibleConstructorReturn3.default)(this, (SpaServer.__proto__ || (0, _getPrototypeOf2.default)(SpaServer)).call(this));

        _this3._server = null;
        _this3._connections = {};

        _this3.init(config);
        return _this3;
    }

    (0, _createClass3.default)(SpaServer, [{
        key: "attach",
        value: function attach(app) {
            return (0, _get3.default)(SpaServer.prototype.__proto__ || (0, _getPrototypeOf2.default)(SpaServer.prototype), "attach", this).call(this, app, this);
        }
    }, {
        key: "init",
        value: function init(config) {
            var _this4 = this;

            var events = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

            this._server = new _eureca.Server({
                transport: config.transport,
                allow: config.allow || []
            });
            this._server.exports = {};

            _lodash2.default.forEach(events, function (fn, key) {
                if (key !== "connect" && key !== "disconnect") {
                    _this4._server.on(key, function (data) {
                        fn(_this4, data);
                    });
                }
            });

            this._server.on("connect", function (connection) {
                _this4._connections[connection.id] = {
                    socket: connection
                };
                _this4.emit("onconnect", connection, _this4._connections[connection.id]);
            });
            this._server.on("disconnect", function (connection) {
                if (_this4._connections[connection.id]) {
                    delete _this4._connections[connection.id];
                }
                _this4.emit("ondisconnect", connection);
            });
            return this._server;
        }
    }, {
        key: "eureca",
        get: function get() {
            return this._server;
        }
    }, {
        key: "connections",
        get: function get() {
            return this._connections;
        }
    }]);
    return SpaServer;
}(SpaRouter);

var SpaClient = exports.SpaClient = function (_SpaRouter2) {
    (0, _inherits3.default)(SpaClient, _SpaRouter2);

    function SpaClient(config) {
        (0, _classCallCheck3.default)(this, SpaClient);

        var _this5 = (0, _possibleConstructorReturn3.default)(this, (SpaClient.__proto__ || (0, _getPrototypeOf2.default)(SpaClient)).call(this));

        _this5._client = null;
        _this5.init(config);
        return _this5;
    }

    (0, _createClass3.default)(SpaClient, [{
        key: "attach",
        value: function attach(app) {
            return (0, _get3.default)(SpaClient.prototype.__proto__ || (0, _getPrototypeOf2.default)(SpaClient.prototype), "attach", this).call(this, app, this);
        }
    }, {
        key: "init",
        value: function init(config) {
            var _this6 = this;

            var events = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

            this._client = new _eureca.Client({
                uri: config.uri,
                prefix: config.prefix || ""
            });

            _lodash2.default.forEach(events, function (fn, key) {
                _this6._client.on(key, function (data) {
                    fn(_this6, data);
                });
            });

            this._client.on("ready", function (proxy) {
                _this6.emit("ready", proxy);
            });
        }
    }, {
        key: "connections",
        get: function get() {
            return {};
        }
    }, {
        key: "eureca",
        get: function get() {
            return this._client;
        }
    }, {
        key: "proxy",
        get: function get() {
            if (this._client && this._client.isReady()) {
                return this._client.serverProxy;
            }
        }
    }]);
    return SpaClient;
}(SpaRouter);

var Spa = exports.Spa = function (_Compose) {
    (0, _inherits3.default)(Spa, _Compose);

    function Spa(_maxJobs) {
        (0, _classCallCheck3.default)(this, Spa);
        return (0, _possibleConstructorReturn3.default)(this, (Spa.__proto__ || (0, _getPrototypeOf2.default)(Spa)).call(this, _maxJobs));
    }

    (0, _createClass3.default)(Spa, [{
        key: "onComplete",
        value: function onComplete(ctx) {
            if (ctx.err) {
                console.log("onComplete-----", ctx.err);
            }
            console.log("onComplete-----", ctx.routerKey, ctx.app.jobs, "retId:", ctx.context.retId);
            (0, _get3.default)(Spa.prototype.__proto__ || (0, _getPrototypeOf2.default)(Spa.prototype), "onComplete", this).call(this, ctx);
            ctx.context.return && ctx.context.return(ctx.err || ctx.body);
        }
    }, {
        key: "initClient",
        value: function initClient(config) {
            this.spaClient = new SpaClient(config);
        }
    }, {
        key: "initServer",
        value: function initServer(config, app) {
            this.spaServer = new SpaServer(config);
            this.spaServer.eureca.attach(app);
        }
    }]);
    return Spa;
}(_compose.Compose);
//# sourceMappingURL=application.js.map