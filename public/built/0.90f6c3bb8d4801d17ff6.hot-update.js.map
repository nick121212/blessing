{"version":3,"sources":["webpack:///./src/pages/salt/index.ts?894c","webpack:///./src/pages/salt/service/salt.api.value.ts?507a"],"names":[],"mappings":"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","file":"0.90f6c3bb8d4801d17ff6.hot-update.js","sourcesContent":["/**\n * Created by NICK on 16/8/16.\n * page页面,用户生成列表页和表单操作\n */\n\nimport * as ngMaterial from 'angular-material';\nimport uiRouter from 'angular-ui-router';\nimport * as ngMaterialIcons from 'angular-material-icons';\n\nimport {initRouter} from './router';\nimport materialServiceMod from '../../services/material.service';\nimport restRegMod from '../../services/rest.service';\nimport * as _ from 'lodash';\nimport apiValueFunc from './service/salt.api.value';\n\nconst module = angular.module(\"saltModule\", [ngMaterialIcons, ngMaterial as string, 'ui.router', materialServiceMod, restRegMod]);\n\nmodule.config([\n    \"$stateProvider\",\n    \"$urlRouterProvider\",\n    \"RestangularProvider\",\n    ($stateProvider, $urlRouterProvider, RestangularProvider) => {\n        // 初始化路由\n        initRouter($urlRouterProvider, $stateProvider);\n        // 添加全局拦截器拦截器\n        // RestangularProvider.addResponseInterceptor((data, operation, what, url, response: restangular.IResponse, deferred)=> {\n        //     console.log(arguments);\n        //     return data;\n        // });\n    }])\n    .run([\"$state\", \"restUtils\", \"materialUtils\", ($state, restUtils: fx.utils.restStatic, materialUtils: fx.utils.materialStatic)=> {\n        // 添加全局拦截器拦截器\n        restUtils.setConfig((restAngularConfigure: restangular.IProvider)=> {\n            restAngularConfigure.addResponseInterceptor((data, operation, what, url, response: restangular.IResponse, deferred)=> {\n                console.log(arguments);\n\n                return data;\n            });\n        });\n    }]);\n\napiValueFunc(module);\n\nexport default module.name;\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/salt/index.ts\n **/","import {IActionModel, ActionType} from '../../../directives/action/models/action.model';\nimport {MethodType} from '../../../directives/action/models/interface.model';\n\nclass Login {\n    static key: string = \"saltApiLogin\";\n\n    constructor() {\n        let actionModel: IActionModel = {\n            key: Login.key,\n            type: ActionType.form,\n            title: \"登陆\",\n            icon: \"login\",\n            form: {\n                dataSchema: {\n                    type: \"object\",\n                    required: [\"username\", \"password\"],\n                    properties: {\n                        username: {\n                            type: \"string\",\n                            minLength: 4,\n                            maxLength: 20,\n                            title: \"用户名\"\n                        },\n                        eauth: {\n                            type: \"string\",\n                            default: \"pam\"\n                        },\n                        password: {\n                            type: \"string\",\n                            title: \"密码\",\n                            minLength: 4,\n                            maxLength: 20\n                        }\n                    }\n                },\n                formSchema: [{\n                    key: \"username\",\n                    type: \"string\",\n                    placeHolder: \"用户名\",\n                    icon: {\n                        leftIcon: \"account\"\n                    },\n                    htmlClass: \"md-icon-left md-block\"\n                }, {\n                    key: \"password\",\n                    type: \"password\",\n                    icon: {\n                        leftIcon: \"lock\"\n                    },\n                    htmlClass: \"md-icon-left md-block\"\n                }]\n            },\n            refreshList: true,\n            closeDialog: true,\n            interfaces: [{\n                key: \"saltApiLogin\",\n                method: MethodType.POST,\n                address: \"https://172.16.140.164\",\n                port: 8888,\n                path: \"login\",\n                jpp: {\n                    set: {\n                        \"/data\": \"/return\"\n                    }\n                },\n                header: {\n                    set: {\n                        \"/X-Auth-Token\": \"/return/0/token\"\n                    }\n                },\n                isRestful: false\n            }]\n        };\n\n        return actionModel;\n    }\n}\n\nclass Logout {\n    static key: string = \"saltApiLogout\";\n\n    constructor() {\n        let actionModel: IActionModel = {\n            key: Logout.key,\n            type: ActionType.confirm,\n            title: \"salt退出登录\",\n            icon: \"logout\",\n            refreshList: true,\n            confirm: {\n                confirmTitle: \"\",\n                confirmContent: \"确定要退出登录吗!\"\n            },\n            interfaces: [{\n                key: \"saltApiLogin\",\n                method: MethodType.POST,\n                address: \"https://172.16.140.164\",\n                port: 8888,\n                path: \"logout\",\n                jpp: {\n                    set: {\n                        \"/data\": \"/return\"\n                    }\n                },\n                isRestful: false\n            }]\n        };\n\n        return actionModel;\n    }\n}\n\nclass Minions {\n    static key: string = \"saltApiMinions\";\n\n    constructor() {\n        let actionModel: IActionModel = {\n            key: Minions.key,\n            type: ActionType.confirm,\n            title: \"所有CLIENT\",\n            icon: \"client\",\n            refreshList: true,\n            confirm: {\n                confirmTitle: \"\",\n                confirmContent: \"获取minions!\"\n            },\n            interfaces: [{\n                key: \"saltApiMinions\",\n                method: MethodType.GET,\n                address: \"https://172.16.140.164\",\n                port: 8888,\n                path: \"minions\",\n                jpp: {\n                    set: {\n                        \"/data\": \"/return\"\n                    }\n                },\n                isRestful: false\n            }]\n        };\n\n        return actionModel;\n    }\n}\n\nexport default (module: ng.IModule)=> {\n    const services = [Login, Logout, Minions];\n\n    _.each(services, (model)=> {\n        module.service(model.key, model);\n    });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/salt/service/salt.api.value.ts\n **/"],"sourceRoot":""}