{"version":3,"sources":["webpack:///0.22d0a7bc24e06b13da1b.hot-update.js","webpack:///./src/directives/action/index.ts?1f08","webpack:///./src/directives/action/directives/list.directive.ts?de17"],"names":["webpackHotUpdate","44","module","exports","__webpack_require__","sfLayout","args","layoutDiv","fieldFrag","querySelector","form","grid","Object","getOwnPropertyNames","forEach","property","idx","array","setAttribute","angular","ngMaterial","action_provider_1","utils_service_1","rest_service_1","login_value_1","modules_value_1","crawler_value_1","common_value_1","form_directive_1","list_directive_1","dialog_form_directive_1","search_directive_1","wizard_directive_1","dialog_wizard_directive_1","builder_directive_1","autocomplete_provider_1","jsoneditor_provider_1","_name","config","sfErrorMessageProvider","setDefaultMessage","sfBuilderProvider","schemaFormDecoratorsProvider","jsonEditorBuilder","autoCompleteBuilder","defineAddOn","stdBuilders","concat","builder","builders","sfField","condition","transclusion","run","$templateCache","put","defineProperty","value","name","152","Directive","restrict","template","scope","bindToController","key","selected","controller","Controller","controllerAs","replace","transclude","action_model_1","$scope","$q","$timeout","fxAction","toolbarUtils","materialUtils","_this","this","mdLimitOptions","clientData","queryData","offset","limit","page","isBusy","showPage","getModel","then","model","actionModel","_","cloneDeep","initToolbar","initItemToolbar","doSearch","onOrderChange","orderChange","bind","onPageChange","pageChange","doSearchBind","prototype","doClickActionMenu","$event","item","doActionModel","result","showMsg","successMsg","refreshList","where","list","toolbars","push","noneBuilder","iconBuilder","icon","fill","toValue","labelBuilder","title","attrBuilder","flex","getModels","actions","actionModels","type","ActionType","btnBuilder","tooltipBuilder","btnClick","showRefreshBtn","showSearchBtn","showSearchPanel","menuTool","menuBuilder","menuOptionsBuilder","keys","itemActionsObj","keyBy","itemActions","each","length","wizard","confirm","menu","menuItemBuilder","noOptions","conditionBuilder","items","itemToolbars","order","filterData","promise","doAction","doDealResult","$inject","directive"],"mappings":"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","file":"0.22d0a7bc24e06b13da1b.hot-update.js","sourcesContent":["webpackHotUpdate(0,{\n\n/***/ 44:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar angular = __webpack_require__(7);\n\tvar ngMaterial = __webpack_require__(6);\n\t__webpack_require__(88);\n\t__webpack_require__(135);\n\tvar action_provider_1 = __webpack_require__(159);\n\tvar utils_service_1 = __webpack_require__(162);\n\tvar rest_service_1 = __webpack_require__(18);\n\tvar login_value_1 = __webpack_require__(157);\n\tvar modules_value_1 = __webpack_require__(158);\n\tvar crawler_value_1 = __webpack_require__(156);\n\tvar common_value_1 = __webpack_require__(155);\n\tvar form_directive_1 = __webpack_require__(151);\n\tvar list_directive_1 = __webpack_require__(152);\n\tvar dialog_form_directive_1 = __webpack_require__(149);\n\tvar search_directive_1 = __webpack_require__(153);\n\tvar wizard_directive_1 = __webpack_require__(154);\n\tvar dialog_wizard_directive_1 = __webpack_require__(150);\n\tvar builder_directive_1 = __webpack_require__(148);\n\tvar autocomplete_provider_1 = __webpack_require__(160);\n\tvar jsoneditor_provider_1 = __webpack_require__(161);\n\t__webpack_require__(69);\n\t__webpack_require__(244);\n\t__webpack_require__(163);\n\tvar _name = \"fxAction\";\n\tvar module = angular.module(_name + \"Module\", [ngMaterial, rest_service_1.default, \"schemaForm\", \"ng.jsoneditor\"]);\n\tutils_service_1.default(module);\n\taction_provider_1.default(module);\n\tform_directive_1.default(module);\n\tlist_directive_1.default(module);\n\tmodules_value_1.default(module);\n\tlogin_value_1.default(module);\n\tdialog_form_directive_1.default(module);\n\tsearch_directive_1.default(module);\n\twizard_directive_1.default(module);\n\tdialog_wizard_directive_1.default(module);\n\tbuilder_directive_1.default(module);\n\tcrawler_value_1.default(module);\n\tcommon_value_1.default(module);\n\tautocomplete_provider_1.default(module);\n\tjsoneditor_provider_1.default(module);\n\tfunction sfLayout(args) {\n\t    var layoutDiv = args.fieldFrag.querySelector('[sf-layout]');\n\t    if (layoutDiv && args.form.grid) {\n\t        Object.getOwnPropertyNames(args.form.grid).forEach(function (property, idx, array) {\n\t            layoutDiv.setAttribute(property, args.form.grid[property]);\n\t        });\n\t    }\n\t}\n\t;\n\tmodule\n\t    .config([\"sfErrorMessageProvider\", function (sfErrorMessageProvider) {\n\t        sfErrorMessageProvider.setDefaultMessage(\"302\", \"[{{title}}]是必填项\");\n\t        sfErrorMessageProvider.setDefaultMessage(\"103\", \"[{{title}}]超过了最大值{{schema.maximum}}\");\n\t        sfErrorMessageProvider.setDefaultMessage(\"101\", \"[{{title}}]小于最小值{{schema.minimum}}\");\n\t        sfErrorMessageProvider.setDefaultMessage(\"200\", \"[{{title}}]字符长度小于最小值({{schema.minLength}})\");\n\t        sfErrorMessageProvider.setDefaultMessage(\"201\", \"[{{title}}]字符长度大于最大值({{schema.maxLength}})\");\n\t        sfErrorMessageProvider.setDefaultMessage(\"400\", \"数组长度不正确，{{schema.minItems||0}}-{{schema.maxItems||'∞'}}\");\n\t        sfErrorMessageProvider.setDefaultMessage(\"500\", \"格式不正确\");\n\t    }])\n\t    .config([\"sfBuilderProvider\", \"schemaFormDecoratorsProvider\", \"jsonEditorBuilderProvider\", \"autoCompleteBuilderProvider\", function (sfBuilderProvider, schemaFormDecoratorsProvider, jsonEditorBuilder, autoCompleteBuilder) {\n\t        schemaFormDecoratorsProvider.defineAddOn('materialDecorator', 'jeditor', \"./decorators/jsoneditor.jade\", sfBuilderProvider.stdBuilders.concat(jsonEditorBuilder.builder));\n\t        schemaFormDecoratorsProvider.defineAddOn('materialDecorator', 'card', \"./decorators/card.jade\", [sfBuilderProvider.builders.sfField, sfBuilderProvider.builders.condition, sfBuilderProvider.builders.transclusion]);\n\t        schemaFormDecoratorsProvider.defineAddOn('materialDecorator', 'autocomplete-1', \"./decorators/autocomplete-1.jade\", [sfBuilderProvider.builders.sfField, sfLayout, sfBuilderProvider.builders.condition, autoCompleteBuilder.builder, sfBuilderProvider.builders.transclusion]);\n\t    }])\n\t    .run([\"$templateCache\", \"autoCompleteBuilder\", function ($templateCache) {\n\t        $templateCache.put('./decorators/jsoneditor.jade', __webpack_require__(102)());\n\t        $templateCache.put('./decorators/card.jade', __webpack_require__(101)());\n\t        $templateCache.put('./decorators/autocomplete-1.jade', __webpack_require__(100)());\n\t        $templateCache.put('./decorators/section-1.jade', __webpack_require__(103)());\n\t    }]);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = module.name;\n\n\n/***/ },\n\n/***/ 152:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar action_model_1 = __webpack_require__(5);\n\tvar Controller = (function () {\n\t    function Controller($scope, $q, $timeout, fxAction, toolbarUtils, materialUtils) {\n\t        var _this = this;\n\t        this.$scope = $scope;\n\t        this.$q = $q;\n\t        this.$timeout = $timeout;\n\t        this.fxAction = fxAction;\n\t        this.toolbarUtils = toolbarUtils;\n\t        this.materialUtils = materialUtils;\n\t        this.mdLimitOptions = [10, 30, 50, 100, 300];\n\t        this.clientData = {};\n\t        this.queryData = { offset: 0, limit: 10, page: 1 };\n\t        this.isBusy = false;\n\t        this.showPage = false;\n\t        this.selected = [];\n\t        fxAction.getModel(this.key).then(function (model) {\n\t            _this.actionModel = _.cloneDeep(model);\n\t            _this.initToolbar();\n\t            _this.initItemToolbar();\n\t            _this.doSearch();\n\t        });\n\t        this.onOrderChange = this.orderChange.bind(this);\n\t        this.onPageChange = this.pageChange.bind(this);\n\t        this.doSearchBind = this.doSearch.bind(this);\n\t    }\n\t    Controller.prototype.doClickActionMenu = function ($event, actionModel, item) {\n\t        var _this = this;\n\t        this.fxAction.doActionModel($event, actionModel, item).then(function (result) {\n\t            _this.materialUtils.showMsg(\"\" + (actionModel.successMsg || \"操作成功!\"));\n\t            _this.$timeout(function () {\n\t                if (actionModel.refreshList) {\n\t                    _this.doSearch(_this.queryData.where || {});\n\t                }\n\t            }, 200);\n\t        });\n\t    };\n\t    Controller.prototype.initToolbar = function () {\n\t        var _this = this;\n\t        this.actionModel.list.toolbars.push(this.toolbarUtils.noneBuilder(\"icon\").iconBuilder(this.actionModel.icon, { fill: \"black\" }).toValue());\n\t        this.actionModel.list.toolbars.push(this.toolbarUtils.labelBuilder(\"\" + this.actionModel.title).attrBuilder({ flex: \"\" }).toValue());\n\t        this.fxAction.getModels(this.actionModel.actions).then(function (actionModels) {\n\t            _.forEach(actionModels, function (actionModel) {\n\t                if (actionModel.type !== action_model_1.ActionType.list) {\n\t                    _this.actionModel.list.toolbars.push(_this.toolbarUtils.btnBuilder(actionModel.title, \"md-icon-button\", false).tooltipBuilder(\"\").iconBuilder(actionModel.icon, { fill: \"black\" }).btnClick(function ($event, item) {\n\t                        _this.doClickActionMenu($event, actionModel, item || {});\n\t                    }).toValue());\n\t                }\n\t            });\n\t            if (_this.actionModel.list.showRefreshBtn) {\n\t                _this.actionModel.list.toolbars.push(_this.toolbarUtils.btnBuilder(\"刷新\", \"md-icon-button\", false).iconBuilder(\"refresh\", { fill: \"black\" }).btnClick(function ($event) {\n\t                    _this.doSearch(_this.queryData.where || {});\n\t                }).toValue());\n\t            }\n\t            if (_this.actionModel.list.showSearchBtn) {\n\t                _this.actionModel.list.toolbars.push(_this.toolbarUtils.btnBuilder(\"{{listCtl.actionModel.list.showSearchPanel?'关闭搜索栏':'打开搜索栏'}}\", \"md-icon-button\", false).iconBuilder(\"{{listCtl.actionModel.list.showSearchPanel?'window-open':'window-closed'}}\", { fill: \"black\" }).btnClick(function ($event) {\n\t                    _this.actionModel.list.showSearchPanel = !_this.actionModel.list.showSearchPanel;\n\t                }).toValue());\n\t            }\n\t        });\n\t    };\n\t    Controller.prototype.initItemToolbar = function () {\n\t        var _this = this;\n\t        var menuTool = this.toolbarUtils.menuBuilder(\"\", \"md-icon-button\").tooltipBuilder(\"操作菜单\").iconBuilder(\"expand_more\").menuOptionsBuilder().toValue();\n\t        var keys = [];\n\t        var itemActionsObj = _.keyBy(this.actionModel.itemActions, \"key\");\n\t        _.each(this.actionModel.itemActions, function (item) {\n\t            keys.push(item.key);\n\t        });\n\t        keys.length && this.fxAction.getModels(keys).then(function (actionModels) {\n\t            _.forEach(actionModels, function (actionModel, key) {\n\t                var condition = itemActionsObj[key].condition;\n\t                switch (actionModel.type) {\n\t                    case action_model_1.ActionType.form:\n\t                    case action_model_1.ActionType.wizard:\n\t                    case action_model_1.ActionType.confirm:\n\t                        var menu = _this.toolbarUtils.menuItemBuilder(actionModel.title, null, true).tooltipBuilder(\"\").noOptions(true, false).iconBuilder(actionModel.icon).btnClick(function ($event, item) {\n\t                            _this.doClickActionMenu($event, actionModel, item);\n\t                        });\n\t                        if (condition) {\n\t                            menu.conditionBuilder(condition);\n\t                        }\n\t                        menuTool.items.push(menu.toValue());\n\t                        break;\n\t                }\n\t            });\n\t            _this.actionModel.list.itemToolbars = [menuTool];\n\t        });\n\t    };\n\t    Controller.prototype.orderChange = function (order) {\n\t        this.queryData.order = order;\n\t        this.doSearch(this.queryData.where || {});\n\t    };\n\t    Controller.prototype.pageChange = function (page, limit) {\n\t        if (limit !== this.queryData.limit) {\n\t            page = 1;\n\t        }\n\t        this.queryData.page = page;\n\t        if (page > 0) {\n\t            this.queryData.offset = (page - 1) * limit;\n\t        }\n\t        this.doSearch(this.queryData.where || {});\n\t    };\n\t    Controller.prototype.doSearch = function (filterData) {\n\t        var _this = this;\n\t        this.isBusy = true;\n\t        this.queryData.where = filterData || {};\n\t        this.promise = this.fxAction.doAction(this.key, this.queryData);\n\t        if (!this.promise) {\n\t            return;\n\t        }\n\t        this.promise.then(function (result) {\n\t            _this.fxAction.doDealResult(_this.actionModel, result, _this.clientData);\n\t        }).finally(function () {\n\t            _this.isBusy = false;\n\t        });\n\t    };\n\t    Controller.$inject = [\"$scope\", \"$q\", \"$timeout\", \"fxAction\", \"toolbarUtils\", \"materialUtils\"];\n\t    return Controller;\n\t}());\n\tfunction Directive() {\n\t    return {\n\t        restrict: 'EA',\n\t        template: __webpack_require__(108)(),\n\t        scope: true,\n\t        bindToController: {\n\t            key: \"@\",\n\t            selected: '=?'\n\t        },\n\t        controller: Controller,\n\t        controllerAs: 'listCtl',\n\t        replace: true,\n\t        transclude: true\n\t    };\n\t}\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = function (module) {\n\t    module.directive(\"fxListAction\", Directive);\n\t};\n\n\n/***/ }\n\n})\n\n\n/** WEBPACK FOOTER **\n ** 0.22d0a7bc24e06b13da1b.hot-update.js\n **/","/**\n * Created by NICK on 16/8/9.\n */\n\nimport * as angular from 'angular';\nimport * as ngMaterial from 'angular-material';\nimport 'expose?JSONEditor!jsoneditor';\nimport 'ng-jsoneditor';\n\nimport actProviderRegFunc from './services/action.provider';\nimport actUtilsFunc from './services/utils.service';\nimport restSvrMod from '../../services/rest.service';\nimport loginSchFunc from './schemas/login.value';\nimport moduleSchFunc from './schemas/modules.value';\nimport crawlerSchFunc from './schemas/crawler.value';\nimport commonSchFunc from './schemas/common.value';\nimport formActionFunc from './directives/form.directive';\nimport listActionFunc from './directives/list.directive';\nimport dialogFormFunc from './directives/dialog-form.directive';\nimport searchActionFunc from './directives/search.directive';\nimport wizardActionFunc from './directives/wizard.directive';\nimport wizardDialogActionFunc from './directives/dialog-wizard.directive';\nimport builderActionFunc from './directives/builder.directive';\n\nimport autoCompleteFunc from './services/autocomplete.provider';\nimport jsonEditorFunc from './services/jsoneditor.provider';\n\nimport 'angular-schema-form';\nimport 'angular-schema-form-ng-material';\nimport './services/validator.custom.value';\n\nconst _name = \"fxAction\";\nconst module = angular.module(`${_name}Module`, [ngMaterial, restSvrMod, \"schemaForm\", \"ng.jsoneditor\"]);\n\nactUtilsFunc(module);\nactProviderRegFunc(module);\nformActionFunc(module);\nlistActionFunc(module);\nmoduleSchFunc(module);\nloginSchFunc(module);\ndialogFormFunc(module);\nsearchActionFunc(module);\nwizardActionFunc(module);\nwizardDialogActionFunc(module);\nbuilderActionFunc(module);\ncrawlerSchFunc(module);\ncommonSchFunc(module);\nautoCompleteFunc(module);\njsonEditorFunc(module);\n\n\nfunction sfLayout(args) {\n    var layoutDiv = args.fieldFrag.querySelector('[sf-layout]');\n\n    if (layoutDiv && args.form.grid) {\n        Object.getOwnPropertyNames(args.form.grid).forEach(function (property, idx, array) {\n            layoutDiv.setAttribute(property, args.form.grid[property]);\n        });\n    }\n};\n// 处理默认的错误信息\nmodule\n    .config([\"sfErrorMessageProvider\", (sfErrorMessageProvider)=> {\n        // sfErrorMessageProvider.setDefaultMessage(\"10000\", \"邮箱格式不正确\");\n        // sfErrorMessageProvider.setDefaultMessage(\"10001\", \"两次密码不一致\");\n        // sfErrorMessageProvider.setDefaultMessage(\"10002\", \"用户名中存在非法字符\");\n        // sfErrorMessageProvider.setDefaultMessage(\"10003\", \"手机格式不正确\");\n        // sfErrorMessageProvider.setDefaultMessage(\"10004\", \"JSON格式不正确\");\n        // sfErrorMessageProvider.setDefaultMessage(\"10005\", \"地址格式不正确\");\n        sfErrorMessageProvider.setDefaultMessage(\"302\", \"[{{title}}]是必填项\");\n        sfErrorMessageProvider.setDefaultMessage(\"103\", \"[{{title}}]超过了最大值{{schema.maximum}}\");\n        sfErrorMessageProvider.setDefaultMessage(\"101\", \"[{{title}}]小于最小值{{schema.minimum}}\");\n        sfErrorMessageProvider.setDefaultMessage(\"200\", \"[{{title}}]字符长度小于最小值({{schema.minLength}})\");\n        sfErrorMessageProvider.setDefaultMessage(\"201\", \"[{{title}}]字符长度大于最大值({{schema.maxLength}})\");\n        sfErrorMessageProvider.setDefaultMessage(\"400\", \"数组长度不正确，{{schema.minItems||0}}-{{schema.maxItems||'∞'}}\");\n        sfErrorMessageProvider.setDefaultMessage(\"500\", \"格式不正确\");\n    }])\n    // 添加自定义的表单组件\n    .config([\"sfBuilderProvider\", \"schemaFormDecoratorsProvider\", \"jsonEditorBuilderProvider\", \"autoCompleteBuilderProvider\", (sfBuilderProvider, schemaFormDecoratorsProvider, jsonEditorBuilder, autoCompleteBuilder)=> {\n        // jsoneditor--schema-form组件化\n        schemaFormDecoratorsProvider.defineAddOn(\n            'materialDecorator',\n            'jeditor',\n            \"./decorators/jsoneditor.jade\",\n            sfBuilderProvider.stdBuilders.concat(jsonEditorBuilder.builder)\n        );\n        // card--schema-form组件化\n        schemaFormDecoratorsProvider.defineAddOn(\n            'materialDecorator',\n            'card',\n            \"./decorators/card.jade\",\n            [sfBuilderProvider.builders.sfField, sfBuilderProvider.builders.condition, sfBuilderProvider.builders.transclusion]\n        );\n        // autocomplete--schema-form组件化\n        schemaFormDecoratorsProvider.defineAddOn(\n            'materialDecorator',\n            'autocomplete-1',\n            \"./decorators/autocomplete-1.jade\",\n            [sfBuilderProvider.builders.sfField, sfLayout, sfBuilderProvider.builders.condition, autoCompleteBuilder.builder, sfBuilderProvider.builders.transclusion]\n        );\n        // // section--schema-section组件\n        // schemaFormDecoratorsProvider.defineAddOn(\n        //     'materialDecorator',\n        //     'section-1',\n        //     \"./decorators/section-1.jade\",\n        //     [sfBuilderProvider.builders.sfField, sfBuilderProvider.builders.ngModel, sfBuilderProvider.builders.condition, sfBuilderProvider.builders.simpleTransclusion, sfBuilderProvider.builders.array]\n        // );\n    }])\n    // 打包工具的原因,只能把模板字符串写入cache中\n    .run([\"$templateCache\", \"autoCompleteBuilder\", ($templateCache: ng.ITemplateCacheService)=> {\n        $templateCache.put('./decorators/jsoneditor.jade', require(\"./decorators/jsoneditor.jade\")());\n        $templateCache.put('./decorators/card.jade', require(\"./decorators/card.jade\")());\n        $templateCache.put('./decorators/autocomplete-1.jade', require(\"./decorators/autocomplete-1.jade\")());\n        $templateCache.put('./decorators/section-1.jade', require(\"./decorators/section-1.jade\")());\n    }]);\n\n\nexport default module.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/action/index.ts\n **/","import {IActionModel, IClientData, IQueryData, ActionType} from '../models/action.model';\n\nclass Controller {\n    static $inject = [\"$scope\", \"$q\", \"$timeout\", \"fxAction\", \"toolbarUtils\", \"materialUtils\"];\n\n    key: string;\n    mdLimitOptions: Array<number> = [10, 30, 50, 100, 300];\n    actionModel: IActionModel;\n    clientData: IClientData = {};\n    queryData: IQueryData = {offset: 0, limit: 10, page: 1};\n    isBusy: boolean = false;\n    showPage: boolean = false;\n    selected: Array<Object> = [];\n    promise: ng.IPromise<any>;\n\n    onOrderChange: Function;\n    onPageChange: Function;\n    doSearchBind: Function;\n\n    /**\n     * 构造函数\n     * @param $scope\n     * @param $q\n     * @param $timeout\n     * @param fxAction\n     * @param toolbarUtils\n     * @param materialUtils\n     */\n    constructor(private $scope, private $q, private $timeout, private fxAction, private toolbarUtils, private materialUtils: fx.utils.materialStatic) {\n        fxAction.getModel(this.key).then((model) => {\n            this.actionModel = _.cloneDeep(model);\n            this.initToolbar();\n            this.initItemToolbar();\n            this.doSearch();\n        });\n        this.onOrderChange = this.orderChange.bind(this);\n        this.onPageChange = this.pageChange.bind(this);\n        this.doSearchBind = this.doSearch.bind(this);\n    }\n\n    /**\n     * 按钮的点击事件\n     * @param $event\n     * @param actionModel\n     * @param item\n     */\n    doClickActionMenu($event, actionModel, item) {\n        this.fxAction.doActionModel($event, actionModel, item).then((result)=> {\n            this.materialUtils.showMsg(`${actionModel.successMsg || \"操作成功!\"}`);\n            this.$timeout(()=> {\n                if (actionModel.refreshList) {\n                    this.doSearch(this.queryData.where || {});\n                }\n            }, 200);\n        });\n    }\n\n    /**\n     * 初始化顶部toolbar\n     */\n    initToolbar() {\n        // 添加标题label和icon\n        this.actionModel.list.toolbars.push(this.toolbarUtils.noneBuilder(\"icon\").iconBuilder(this.actionModel.icon, {fill: \"black\"}).toValue());\n        this.actionModel.list.toolbars.push(this.toolbarUtils.labelBuilder(`${this.actionModel.title}`).attrBuilder({flex: \"\"}).toValue());\n        // 获取操作按钮\n        this.fxAction.getModels(this.actionModel.actions).then((actionModels)=> {\n            // 添加顶部按钮\n            _.forEach(actionModels, (actionModel: IActionModel)=> {\n                if (actionModel.type !== ActionType.list) {\n                    this.actionModel.list.toolbars.push(this.toolbarUtils.btnBuilder(actionModel.title, \"md-icon-button\", false).tooltipBuilder(\"\").iconBuilder(actionModel.icon, {fill: \"black\"}).btnClick(($event, item: any)=> {\n                        this.doClickActionMenu($event, actionModel, item || {});\n                    }).toValue());\n                }\n            });\n            // 添加刷新按钮\n            if (this.actionModel.list.showRefreshBtn) {\n                this.actionModel.list.toolbars.push(this.toolbarUtils.btnBuilder(\"刷新\", \"md-icon-button\", false).iconBuilder(\"refresh\", {fill: \"black\"}).btnClick(($event)=> {\n                    this.doSearch(this.queryData.where || {});\n                }).toValue());\n            }\n            // 添加显示/隐藏搜索按钮\n            if (this.actionModel.list.showSearchBtn) {\n                this.actionModel.list.toolbars.push(this.toolbarUtils.btnBuilder(\"{{listCtl.actionModel.list.showSearchPanel?'关闭搜索栏':'打开搜索栏'}}\", \"md-icon-button\", false).iconBuilder(\"{{listCtl.actionModel.list.showSearchPanel?'window-open':'window-closed'}}\", {fill: \"black\"}).btnClick(($event)=> {\n                    this.actionModel.list.showSearchPanel = !this.actionModel.list.showSearchPanel;\n                }).toValue());\n            }\n        });\n    }\n\n    /**\n     * 初始化单项的Item的toolbar\n     */\n    initItemToolbar() {\n        const menuTool: any = this.toolbarUtils.menuBuilder(\"\", \"md-icon-button\").tooltipBuilder(\"操作菜单\").iconBuilder(\"expand_more\").menuOptionsBuilder().toValue();\n        const keys = [];\n        let itemActionsObj = _.keyBy(this.actionModel.itemActions, \"key\");\n\n        // 提取所有的keys\n        _.each(this.actionModel.itemActions, (item)=> {\n            keys.push(item.key);\n        });\n        // 处理所有提取的keys\n        keys.length && this.fxAction.getModels(keys).then((actionModels)=> {\n            _.forEach(actionModels, (actionModel: IActionModel, key)=> {\n                let condition = itemActionsObj[key].condition;\n\n                // 添加操作按钮\n                switch (actionModel.type) {\n                    case  ActionType.form:\n                    case  ActionType.wizard:\n                    case  ActionType.confirm:\n                        let menu = this.toolbarUtils.menuItemBuilder(actionModel.title, null, true).tooltipBuilder(\"\").noOptions(true, false).iconBuilder(actionModel.icon).btnClick(($event, item: any)=> {\n                            this.doClickActionMenu($event, actionModel, item);\n                        });\n                        // 处理显示/隐藏逻辑\n                        if (condition) {\n                            menu.conditionBuilder(condition);\n                        }\n                        // 添加到操作\n                        menuTool.items.push(menu.toValue());\n                        break;\n                }\n            });\n            // 单挑数据的操作按钮数据\n            this.actionModel.list.itemToolbars = [menuTool];\n        });\n    }\n\n    /**\n     * 更改排序回调\n     * @param order\n     */\n    orderChange(order: string) {\n        this.queryData.order = order;\n        this.doSearch(this.queryData.where || {});\n    }\n\n    /**\n     * 更改页码或者pageSize回调\n     * @param page\n     * @param limit\n     */\n    pageChange(page: number, limit: number) {\n        if (limit !== this.queryData.limit) {\n            page = 1;\n        }\n        this.queryData.page = page;\n        if (page > 0) {\n            this.queryData.offset = (page - 1) * limit;\n        }\n        this.doSearch(this.queryData.where || {});\n    }\n\n    /**\n     * 搜索数据\n     * @param filterData {Object} 搜索数据\n     */\n    doSearch(filterData?: any) {\n        this.isBusy = true;\n\n        this.queryData.where = filterData || {};\n        this.promise = this.fxAction.doAction(this.key, this.queryData);\n\n        if (!this.promise) {\n            return;\n        }\n        this.promise.then((result)=> {\n            this.fxAction.doDealResult(this.actionModel, result, this.clientData);\n        }).finally(()=> {\n            this.isBusy = false;\n        });\n    }\n}\n\n/**\n * 操作指令,某个表单操作\n * @returns {{restrict: string, template: any, scope: {}, replace: boolean, link: (($scope:IDirectiveScope))}}\n * @constructor\n */\nfunction Directive(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        template: require(\"../tpls/list.jade\")(),\n        scope: true,\n        bindToController: {\n            key: \"@\",\n            selected: '=?'\n        },\n        controller: Controller,\n        controllerAs: 'listCtl',\n        replace: true,\n        transclude: true\n    };\n}\n\nexport default (module: ng.IModule) => {\n    module.directive(\"fxListAction\", Directive);\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/action/directives/list.directive.ts\n **/"],"sourceRoot":""}