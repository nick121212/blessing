{"version":3,"sources":["webpack:///./src/pages/salt/index.ts?894c","webpack:///./src/pages/salt/router.ts?7c0c","webpack:///./src/pages/salt/ctls/index.controller.ts?7eed","webpack:///./src/pages/salt/service/salt.api.value.ts?507a"],"names":[],"mappings":"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","file":"0.e7f1195e7558d17b2bd0.hot-update.js","sourcesContent":["/**\n * Created by NICK on 16/8/16.\n * page页面,用户生成列表页和表单操作\n */\n\nimport * as ngMaterial from 'angular-material';\nimport uiRouter from 'angular-ui-router';\nimport * as ngMaterialIcons from 'angular-material-icons';\n\nimport {initRouter} from './router';\nimport materialServiceMod from '../../services/material.service';\nimport restRegMod from '../../services/rest.service';\nimport * as _ from 'lodash';\nimport apiValueFunc from './service/salt.api.value';\n\nconst module = angular.module(\"saltModule\", [ngMaterialIcons, ngMaterial as string, 'ui.router', materialServiceMod, restRegMod]);\n\nmodule.config([\n    \"$stateProvider\",\n    \"$urlRouterProvider\",\n    \"RestangularProvider\",\n    ($stateProvider, $urlRouterProvider, RestangularProvider) => {\n        // 初始化路由\n        initRouter($urlRouterProvider, $stateProvider);\n        // 添加全局拦截器拦截器\n        RestangularProvider.setDefaultHeaders({\n            'Content-Type': 'application/json'\n        });\n        RestangularProvider.setDefaultHttpFields({\n            'withCredentials': true\n        });\n    }])\n    .run([\"$state\", \"restUtils\", \"materialUtils\", ($state, restUtils: fx.utils.restStatic, materialUtils: fx.utils.materialStatic)=> {\n    }]);\n\napiValueFunc(module);\n\nexport default module.name;\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/salt/index.ts\n **/","/**\n * Created by NICK on 16/8/9.\n */\n\nimport {SaltController} from './ctls/index.controller';\n\nexport const initRouter = ($urlRouterProvider, $stateProvider) => {\n    // 路由规则\n    $stateProvider.state(\"home.salt\", {\n        url: \"salt/:key\",\n        data: {\n            permissions: {\n                except: [\"anonymous\"],\n                only: [\"user\"]\n            }\n        },\n        views: {\n            \"content\": {\n                controller: SaltController,\n                controllerAs: \"saltCtl\",\n                template: require(\"./tpls/index.template.jade\")()\n            }\n        }\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/salt/router.ts\n **/","// import * as io from 'socket.io-client';\nimport * as _ from 'lodash';\n\nexport class SaltController {\n    static $inject = [\"$scope\", \"$stateParams\", \"toolbarUtils\", \"materialUtils\", \"fxAction\"];\n\n    toolbar: Array<Object>;\n\n    constructor(private $scope: ng.IScope, private $stateParams: ng.ui.IStateParamsService, private toolbarUtils, private materialUtils: fx.utils.materialStatic, private fxAction) {\n        this.toolbar = [\n            this.toolbarUtils.noneBuilder(\"icon\").iconBuilder('power-socket', {fill: \"black\"}).toValue(),\n            this.toolbarUtils.labelBuilder('SALT-API').attrBuilder({flex: \"\"}).toValue()\n        ];\n\n        this.fxAction.getModels([\"saltApiLogin\", \"saltApiLogout\", \"saltApiMinions\", \"saltApiJobs\", \"saltApiEvents\"]).then((actionModels)=> {\n            console.log(actionModels);\n\n            _.forEach(actionModels, (actionModel)=> {\n                this.toolbar.push(\n                    this.toolbarUtils.btnBuilder(actionModel.title, \"md-icon-button\", false).iconBuilder(actionModel.icon, {fill: \"black\"}).btnClick(($event)=> {\n                        this.fxAction.doActionModel($event, actionModel, null, (result)=> {\n                            return this.fxAction.getModel(\"resultAction\").then((actionModelResult)=> {\n                                this.fxAction.doActionModel($event, actionModelResult, this.fxAction.doDealResult(actionModel, result, {}), ()=> {\n                                    this.materialUtils.close();\n                                });\n                            });\n                        });\n                    }).toValue()\n                );\n            });\n        });\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/salt/ctls/index.controller.ts\n **/","import {IActionModel, ActionType} from '../../../directives/action/models/action.model';\nimport {MethodType} from '../../../directives/action/models/interface.model';\n\nconst ip = \"https://172.16.140.164\";\n\nclass Login {\n    static key: string = \"saltApiLogin\";\n\n    constructor() {\n        let actionModel: IActionModel = {\n            key: Login.key,\n            type: ActionType.form,\n            title: \"登陆\",\n            icon: \"login\",\n            form: {\n                dataSchema: {\n                    type: \"object\",\n                    required: [\"username\", \"password\"],\n                    properties: {\n                        username: {\n                            type: \"string\",\n                            minLength: 4,\n                            maxLength: 20,\n                            title: \"用户名\"\n                        },\n                        eauth: {\n                            type: \"string\",\n                            default: \"pam\"\n                        },\n                        password: {\n                            type: \"string\",\n                            title: \"密码\",\n                            minLength: 4,\n                            maxLength: 20\n                        }\n                    }\n                },\n                formSchema: [{\n                    key: \"username\",\n                    type: \"string\",\n                    placeHolder: \"用户名\",\n                    icon: {\n                        leftIcon: \"account\"\n                    },\n                    htmlClass: \"md-icon-left md-block\"\n                }, {\n                    key: \"password\",\n                    type: \"password\",\n                    icon: {\n                        leftIcon: \"lock\"\n                    },\n                    htmlClass: \"md-icon-left md-block\"\n                }]\n            },\n            refreshList: true,\n            closeDialog: true,\n            interfaces: [{\n                key: \"saltApiLogin\",\n                method: MethodType.POST,\n                address: ip,\n                port: 8888,\n                path: \"login\",\n                jpp: {\n                    set: {\n                        \"/data\": \"/return\"\n                    }\n                },\n                header: {\n                    set: {\n                        \"/X-Auth-Token\": \"/return/0/token\"\n                    }\n                },\n                isRestful: false\n            }]\n        };\n\n        return actionModel;\n    }\n}\n\nclass Logout {\n    static key: string = \"saltApiLogout\";\n\n    constructor() {\n        let actionModel: IActionModel = {\n            key: Logout.key,\n            type: ActionType.confirm,\n            title: \"salt退出登录\",\n            icon: \"logout\",\n            refreshList: true,\n            confirm: {\n                confirmTitle: \"\",\n                confirmContent: \"确定要退出登录吗!\"\n            },\n            interfaces: [{\n                key: \"saltApiLogin\",\n                method: MethodType.POST,\n                address: ip,\n                port: 8888,\n                path: \"logout\",\n                jpp: {\n                    set: {\n                        \"/data\": \"/return\"\n                    }\n                },\n                isRestful: false\n            }]\n        };\n\n        return actionModel;\n    }\n}\n\nclass Minions {\n    static key: string = \"saltApiMinions\";\n\n    constructor() {\n        let actionModel: IActionModel = {\n            key: Minions.key,\n            type: ActionType.confirm,\n            title: \"所有CLIENT\",\n            icon: \"client\",\n            refreshList: true,\n            confirm: {\n                confirmTitle: \"\",\n                confirmContent: \"获取minions!\"\n            },\n            interfaces: [{\n                key: \"saltApiMinions\",\n                method: MethodType.GET,\n                address: ip,\n                port: 8888,\n                path: \"minions\",\n                jpp: {\n                    set: {\n                        \"/data\": \"/return\"\n                    }\n                },\n                isRestful: false\n            }]\n        };\n\n        return actionModel;\n    }\n}\n\nclass Jobs {\n    static key: string = \"saltApiJobs\";\n\n    constructor() {\n        let actionModel: IActionModel = {\n            key: Jobs.key,\n            type: ActionType.confirm,\n            title: \"所有JOBS\",\n            icon: \"client\",\n            refreshList: true,\n            confirm: {\n                confirmTitle: \"\",\n                confirmContent: \"获取JOBS!\"\n            },\n            interfaces: [{\n                key: \"saltApiJobs\",\n                method: MethodType.GET,\n                address: ip,\n                port: 8888,\n                path: \"jobs\",\n                jpp: {\n                    set: {\n                        \"/data\": \"/return\"\n                    }\n                },\n                isRestful: false\n            }]\n        };\n\n        return actionModel;\n    }\n}\n\nclass Events {\n    static key: string = \"saltApiEvents\";\n\n    constructor() {\n        let actionModel: IActionModel = {\n            key: Events.key,\n            type: ActionType.confirm,\n            title: \"所有EVENTS\",\n            icon: \"client\",\n            refreshList: true,\n            confirm: {\n                confirmTitle: \"\",\n                confirmContent: \"获取EVENTS!\"\n            },\n            interfaces: [{\n                key: \"saltApiEvents\",\n                method: MethodType.GET,\n                address: ip,\n                port: 8888,\n                path: \"events\",\n                jpp: {\n                    set: {\n                        \"/data\": \"/return\"\n                    }\n                },\n                isRestful: false\n            }]\n        };\n\n        return actionModel;\n    }\n}\n\nexport default (module: ng.IModule)=> {\n    const services = [Login, Logout, Minions, Jobs, Events];\n\n    _.each(services, (model)=> {\n        module.service(model.key, model);\n    });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/salt/service/salt.api.value.ts\n **/"],"sourceRoot":""}