{"version":3,"sources":["webpack:///./src/directives/action/index.ts?5e33","webpack:///./src/directives/action/schemas/crawler.value.ts?83d9"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,6DAA4D,OAAO;AACnE,6DAA4D,OAAO,SAAS,gBAAgB;AAC5F,6DAA4D,OAAO,QAAQ,gBAAgB;AAC3F,6DAA4D,OAAO,aAAa,kBAAkB;AAClG,6DAA4D,OAAO,aAAa,kBAAkB;AAClG,oEAAmE,oBAAoB,GAAG,sBAAsB;AAChH;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,+CAA8C,cAAc;AAC5D;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,YAAY;AACnE,wDAAuD,eAAe;AACtE,wDAAuD,mBAAmB;AAC1E,wDAAuD,qBAAqB;AAC5E,wDAAuD,sBAAsB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,4BAA2B,gBAAgB,GAAG,kBAAkB,GAAG,gBAAgB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB,iCAAgC;AAChC,iCAAgC;AAChC;AACA,sBAAqB;AACrB;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA,8BAA6B;AAC7B;AACA,sBAAqB;AACrB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA,sCAAqC;AACrC,8BAA6B;AAC7B,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA,sCAAqC;AACrC,8BAA6B;AAC7B;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,WAAW;AAClD;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD;AACrD;AACA;AACA,sDAAqD;AACrD,8CAA6C;AAC7C,sCAAqC;AACrC,8BAA6B;AAC7B,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,0BAA0B;AACjF;AACA;AACA;AACA,sDAAqD;AACrD;AACA;AACA;AACA,sDAAqD;AACrD;AACA;AACA,sDAAqD;AACrD,8CAA6C;AAC7C,sCAAqC;AACrC;AACA;AACA;AACA,sCAAqC;AACrC,8BAA6B;AAC7B,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,8BAA6B,wDAAwD;AACrF,8BAA6B,uDAAuD;AACpF,8BAA6B,4DAA4D;AACzF,8BAA6B,2DAA2D;AACxF,8BAA6B;AAC7B;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,sBAAqB;AACrB;AACA;AACA,gCAA+B,aAAa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,0CAA0C;AAC/E,sCAAqC;AACrC;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,MAAK;AACL","file":"0.8171849c26c92ef51c4f.hot-update.js","sourcesContent":["\"use strict\";\nvar angular = require('angular');\nvar ngMaterial = require('angular-material');\nrequire('expose?JSONEditor!jsoneditor');\nrequire('ng-jsoneditor');\nvar action_provider_1 = require('./services/action.provider');\nvar utils_service_1 = require('./services/utils.service');\nvar rest_service_1 = require('../../services/rest.service');\nvar login_value_1 = require('./schemas/login.value');\nvar modules_value_1 = require('./schemas/modules.value');\nvar crawler_value_1 = require('./schemas/crawler.value');\nvar form_directive_1 = require('./directives/form.directive');\nvar list_directive_1 = require('./directives/list.directive');\nvar dialog_form_directive_1 = require('./directives/dialog-form.directive');\nvar search_directive_1 = require('./directives/search.directive');\nvar wizard_directive_1 = require('./directives/wizard.directive');\nvar dialog_wizard_directive_1 = require('./directives/dialog-wizard.directive');\nvar builder_directive_1 = require('./directives/builder.directive');\nvar autocomplete_provider_1 = require('./services/autocomplete.provider');\nvar jsoneditor_provider_1 = require('./services/jsoneditor.provider');\nrequire('angular-schema-form');\nrequire('angular-schema-form-ng-material');\nrequire('./services/validator.custom.value');\nvar _name = \"fxAction\";\nvar module = angular.module(_name + \"Module\", [ngMaterial, rest_service_1.default, \"schemaForm\", \"ng.jsoneditor\"]);\nutils_service_1.default(module);\naction_provider_1.default(module);\nform_directive_1.default(module);\nlist_directive_1.default(module);\nmodules_value_1.default(module);\nlogin_value_1.default(module);\ndialog_form_directive_1.default(module);\nsearch_directive_1.default(module);\nwizard_directive_1.default(module);\ndialog_wizard_directive_1.default(module);\nbuilder_directive_1.default(module);\ncrawler_value_1.default(module);\nautocomplete_provider_1.default(module);\njsoneditor_provider_1.default(module);\nfunction sfLayout(args) {\n    var layoutDiv = args.fieldFrag.querySelector('[sf-layout]');\n    if (layoutDiv && args.form.grid) {\n        Object.getOwnPropertyNames(args.form.grid).forEach(function (property, idx, array) {\n            layoutDiv.setAttribute(property, args.form.grid[property]);\n        });\n    }\n}\n;\nmodule\n    .config([\"sfErrorMessageProvider\", function (sfErrorMessageProvider) {\n        sfErrorMessageProvider.setDefaultMessage(\"302\", \"[{{title}}]是必填项\");\n        sfErrorMessageProvider.setDefaultMessage(\"103\", \"[{{title}}]超过了最大值{{schema.maximum}}\");\n        sfErrorMessageProvider.setDefaultMessage(\"101\", \"[{{title}}]小于最小值{{schema.minimum}}\");\n        sfErrorMessageProvider.setDefaultMessage(\"200\", \"[{{title}}]字符长度小于最小值({{schema.minLength}})\");\n        sfErrorMessageProvider.setDefaultMessage(\"201\", \"[{{title}}]字符长度大于最大值({{schema.maxLength}})\");\n        sfErrorMessageProvider.setDefaultMessage(\"400\", \"数组长度不正确，{{schema.minItems||0}}-{{schema.maxItems||'∞'}}\");\n        sfErrorMessageProvider.setDefaultMessage(\"500\", \"格式不正确\");\n    }])\n    .config([\"sfBuilderProvider\", \"schemaFormDecoratorsProvider\", \"jsonEditorBuilderProvider\", \"autoCompleteBuilderProvider\", function (sfBuilderProvider, schemaFormDecoratorsProvider, jsonEditorBuilder, autoCompleteBuilder) {\n        schemaFormDecoratorsProvider.defineAddOn('materialDecorator', 'jeditor', \"./decorators/jsoneditor.jade\", sfBuilderProvider.stdBuilders.concat(jsonEditorBuilder.builder));\n        schemaFormDecoratorsProvider.defineAddOn('materialDecorator', 'card', \"./decorators/card.jade\", [sfBuilderProvider.builders.sfField, sfBuilderProvider.builders.condition, sfBuilderProvider.builders.transclusion]);\n        schemaFormDecoratorsProvider.defineAddOn('materialDecorator', 'autocomplete-1', \"./decorators/autocomplete-1.jade\", [sfBuilderProvider.builders.sfField, sfLayout, sfBuilderProvider.builders.condition, autoCompleteBuilder.builder, sfBuilderProvider.builders.transclusion]);\n        schemaFormDecoratorsProvider.defineAddOn('materialDecorator', 'section-1', \"./decorators/section-1.jade\", [sfBuilderProvider.builders.sfField, sfBuilderProvider.builders.ngModel, sfBuilderProvider.builders.condition, sfBuilderProvider.builders.simpleTransclusion, sfBuilderProvider.builders.array]);\n    }])\n    .run([\"$templateCache\", \"autoCompleteBuilder\", function ($templateCache) {\n        $templateCache.put('./decorators/jsoneditor.jade', require(\"./decorators/jsoneditor.jade\")());\n        $templateCache.put('./decorators/card.jade', require(\"./decorators/card.jade\")());\n        $templateCache.put('./decorators/autocomplete-1.jade', require(\"./decorators/autocomplete-1.jade\")());\n        $templateCache.put('./decorators/section-1.jade', require(\"./decorators/section-1.jade\")());\n    }]);\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = module.name;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/action/index.ts\n ** module id = 36\n ** module chunks = 0\n **/","\"use strict\";\nvar action_model_1 = require('../models/action.model');\nvar interface_model_1 = require('../models/interface.model');\nvar dataSchema = {\n    type: \"object\",\n    required: [\"key\", \"host\", \"interval\"],\n    properties: {\n        key: {\n            type: \"string\",\n            title: \"KEY\"\n        },\n        host: {\n            type: \"string\",\n            title: \"主HOST\"\n        },\n        domainWhiteList: {\n            type: \"array\",\n            title: \"域名白名单\",\n            default: [],\n            items: {\n                type: \"string\",\n                format: \"url-ip\",\n                title: \"域名或者IP\"\n            }\n        },\n        whitePathList: {\n            type: \"array\",\n            title: \"路径白名单\",\n            default: [],\n            items: {\n                type: \"object\",\n                title: \"路径配置\",\n                required: [\"regexp\", \"scope\"],\n                properties: {\n                    regexp: {\n                        type: \"string\",\n                        title: \"正则规则\"\n                    },\n                    scope: {\n                        type: \"string\",\n                        title: \"修饰符\"\n                    }\n                }\n            }\n        },\n        interval: {\n            type: \"number\",\n            default: 1000,\n            minimum: 1000,\n            title: \"下载间隔，单位ms\"\n        },\n        downloader: {\n            type: \"string\",\n            default: \"superagent\",\n            title: \"下载策略\"\n        },\n        initDomain: {\n            type: \"string\",\n            title: \"初始化域名\"\n        },\n        proxySettings: {\n            type: \"object\",\n            title: \"基础设置\",\n            properties: {\n                useProxy: {\n                    type: \"boolean\",\n                    title: \"是否启用代理\"\n                },\n                timeout: {\n                    type: \"number\",\n                    title: \"超时时间\"\n                },\n                charset: {\n                    type: \"string\",\n                    title: \"字符编码\"\n                },\n                ua: {\n                    type: \"string\",\n                    title: \"USERAGENT\"\n                },\n                ipInfo: {\n                    type: \"object\",\n                    title: \"代理ip设置\",\n                    properties: {\n                        host: {\n                            type: \"string\",\n                            format: 'url-ip',\n                            title: \"代理ip或域名\"\n                        },\n                        port: {\n                            type: \"number\",\n                            title: \"代理端口\"\n                        }\n                    }\n                }\n            }\n        },\n        pages: {\n            type: \"array\",\n            title: \"分析页面配置\",\n            items: {\n                type: \"object\",\n                required: [\"key\", \"fieldKey\"],\n                title: \"分析页面配置\",\n                properties: {\n                    key: {\n                        type: \"string\",\n                        title: \"页面的KEY\"\n                    },\n                    areas: {\n                        type: \"array\",\n                        title: \"页面区域\",\n                        items: {\n                            type: \"object\",\n                            required: [\"selector\", \"dealStrategy\", \"key\"],\n                            properties: {\n                                key: {\n                                    type: \"string\",\n                                    title: \"区域KEY\"\n                                },\n                                selector: {\n                                    type: \"string\",\n                                    title: \"选择器\"\n                                },\n                                dealStrategy: {\n                                    type: \"string\",\n                                    default: \"jsdom\",\n                                    title: \"分析策略\"\n                                }\n                            }\n                        }\n                    },\n                    rule: {\n                        type: \"array\",\n                        title: \"匹配规则\",\n                        default: [],\n                        items: {\n                            type: \"object\",\n                            title: \"路径配置\",\n                            required: [\"regexp\", \"scope\"],\n                            properties: {\n                                regexp: {\n                                    type: \"string\",\n                                    title: \"正则规则\"\n                                },\n                                scope: {\n                                    type: \"string\",\n                                    title: \"修饰符\"\n                                }\n                            }\n                        }\n                    },\n                    fieldKey: {\n                        type: \"string\",\n                        title: \"主键字段\"\n                    },\n                    strict: {\n                        type: \"boolean\",\n                        title: \"是否启用严格模式\"\n                    },\n                    strictFields: {\n                        type: \"array\",\n                        title: \"严格模式下，验证字段\",\n                        default: [],\n                        items: {\n                            type: \"string\",\n                            title: \"验证字段\"\n                        }\n                    },\n                    fields: {\n                        type: \"object\",\n                        title: \"分析字段配置\"\n                    }\n                }\n            }\n        },\n        description: {\n            type: \"string\",\n            title: \"描述\",\n            maxLength: 500\n        }\n    }\n};\nvar List = (function () {\n    function List(toolbarUtils, actionUtils) {\n        var actionModel = {\n            key: List.key,\n            type: action_model_1.ActionType.list,\n            title: \"爬虫配置文件管理\",\n            icon: \"content-save-settings\",\n            list: {\n                columns: [\n                    actionUtils.columnBuilder(\"<span>{{::item.key}}</span>\", \"KEY\").toValue(),\n                    actionUtils.columnBuilder(\"<span>{{ ::item.host }}</span>\", \"域名\").toValue(),\n                    actionUtils.columnBuilder(\"<span>{{ ::item.interval }}</span>\", \"间隔时间\").toValue(),\n                    actionUtils.columnBuilder(\"<span>{{ ::item.downloader }}</span>\", \"下载策略\").toValue(),\n                    actionUtils.columnBuilder(\"<span>{{ ::item.description }}</span>\", \"详情\").toValue()\n                ],\n                searchActionKey: Search.key,\n                showRefreshBtn: true,\n                showSearchBtn: true,\n                showSearchPanel: false,\n                toolbars: [],\n                itemToolbars: []\n            },\n            itemActions: [{ key: Edit.key }, { key: Delete.key }, { key: Copy.key }],\n            actions: [Add.key],\n            interfaces: [{\n                    key: \"crawlerSettingList\",\n                    method: interface_model_1.MethodType.GET,\n                    address: \"\",\n                    port: null,\n                    path: \"crawler_settings\",\n                    jpp: {\n                        set: {\n                            \"/total\": \"/count\",\n                            \"/rows\": \"/rows\"\n                        },\n                        copy: {},\n                        move: {},\n                        del: {}\n                    },\n                    isRestful: true\n                }]\n        };\n        return actionModel;\n    }\n    List.$inject = [\"toolbarUtils\", \"actionUtils\"];\n    List.key = \"crawlerSettingListAction\";\n    return List;\n}());\nvar AddFirst = (function () {\n    function AddFirst(toolbarUtils, actionUtils) {\n        var actionModel = {\n            key: AddFirst.key,\n            type: action_model_1.ActionType.form,\n            title: \"基础设置\",\n            icon: \"add\",\n            form: {\n                formSchema: [{\n                        key: \"key\",\n                        type: \"text\",\n                        htmlClass: \"md-block\"\n                    }, {\n                        key: \"host\",\n                        type: \"text\",\n                        htmlClass: \"md-block\"\n                    }, {\n                        key: \"initDomain\",\n                        type: \"text\",\n                        htmlClass: \"md-block\"\n                    }, {\n                        key: \"interval\",\n                        type: \"number\",\n                        htmlClass: \"md-block\"\n                    }, {\n                        key: \"downloader\",\n                        type: \"select\",\n                        titleMap: [{\n                                \"name\": \"SUPERAGENT\",\n                                \"value\": \"superagent\"\n                            }, {\n                                \"name\": \"PHANTOM\",\n                                \"value\": \"phantom\"\n                            }],\n                        htmlClass: \"md-block\"\n                    }, {\n                        key: \"description\",\n                        type: \"textarea\",\n                        htmlClass: \"md-block\"\n                    }]\n            }\n        };\n        return actionModel;\n    }\n    AddFirst.$inject = [\"toolbarUtils\", \"actionUtils\"];\n    AddFirst.key = \"crawlerSettingAddFirstAction\";\n    return AddFirst;\n}());\nvar AddSecond = (function () {\n    function AddSecond(toolbarUtils, actionUtils) {\n        var actionModel = {\n            key: AddSecond.key,\n            type: action_model_1.ActionType.form,\n            title: \"白名单设置\",\n            icon: \"add\",\n            form: {\n                formSchema: [{\n                        key: \"domainWhiteList\",\n                        type: \"chips\",\n                        startEmpty: true,\n                        description: \"域名白名单，配置可以爬取的域名列表\",\n                        showHints: true,\n                        htmlClass: \"md-block\"\n                    }, {\n                        key: \"whitePathList\",\n                        type: \"array\",\n                        fieldHtmlClass: \"layout-row flex\",\n                        startEmpty: true,\n                        description: \"路径白名单，配置可以爬取的路径列表\",\n                        showHints: true,\n                        items: [{\n                                type: \"section\",\n                                htmlClass: \"layout-row flex\",\n                                items: [{\n                                        key: \"whitePathList[].regexp\",\n                                        htmlClass: \"md-block flex\",\n                                        type: \"text\"\n                                    }, {\n                                        key: \"whitePathList[].scope\",\n                                        type: \"text\"\n                                    }]\n                            }]\n                    }]\n            }\n        };\n        return actionModel;\n    }\n    AddSecond.$inject = [\"toolbarUtils\", \"actionUtils\"];\n    AddSecond.key = \"crawlerSettingAddSecondAction\";\n    return AddSecond;\n}());\nvar AddThird = (function () {\n    function AddThird(toolbarUtils, actionUtils) {\n        var actionModel = {\n            key: AddThird.key,\n            type: action_model_1.ActionType.form,\n            title: \"其他设置\",\n            icon: \"add\",\n            form: {\n                formSchema: [{\n                        key: \"proxySettings\",\n                        type: \"card\",\n                        items: [{\n                                key: \"proxySettings.useProxy\",\n                                type: \"checkbox\"\n                            }, {\n                                key: \"proxySettings.timeout\",\n                                type: \"number\",\n                                htmlClass: \"md-block\"\n                            }, {\n                                key: \"proxySettings.charset\",\n                                type: \"text\",\n                                htmlClass: \"md-block\"\n                            }, {\n                                key: \"proxySettings.ua\",\n                                type: \"textarea\",\n                                maxLength: 300,\n                                htmlClass: \"md-block\"\n                            }, {\n                                key: \"proxySettings.ipInfo\",\n                                type: \"card\",\n                                items: [{\n                                        key: \"proxySettings.ipInfo.host\",\n                                        type: \"text\",\n                                        htmlClass: \"md-block\"\n                                    }, {\n                                        key: \"proxySettings.ipInfo.port\",\n                                        type: \"number\",\n                                        htmlClass: \"md-block\"\n                                    }]\n                            }],\n                        htmlClass: \"md-block\"\n                    }]\n            }\n        };\n        return actionModel;\n    }\n    AddThird.$inject = [\"toolbarUtils\", \"actionUtils\"];\n    AddThird.key = \"crawlerSettingAddThirdAction\";\n    return AddThird;\n}());\nvar AddForth = (function () {\n    function AddForth(toolbarUtils, actionUtils) {\n        var actionModel = {\n            key: AddFifth.key,\n            type: action_model_1.ActionType.form,\n            title: \"页面配置\",\n            icon: \"add\",\n            form: {\n                formSchema: [{\n                        key: \"pages\",\n                        type: \"tabarray\",\n                        startEmpty: true,\n                        fieldHtmlClass: \"layout-column flex\",\n                        items: [{\n                                type: \"section\",\n                                grid: { flex: \"\" },\n                                items: [{\n                                        key: \"pages[].key\",\n                                        type: \"text\",\n                                        htmlClass: \"md-block\"\n                                    }, {\n                                        key: \"pages[].fieldKey\",\n                                        type: \"text\",\n                                        htmlClass: \"md-block\"\n                                    }, {\n                                        key: \"pages[].strict\",\n                                        type: \"switch\",\n                                        htmlClass: \"md-block\"\n                                    }, {\n                                        key: \"pages[].strictFields\",\n                                        startEmpty: true,\n                                        type: \"chips\",\n                                        htmlClass: \"md-block\"\n                                    }, {\n                                        key: \"pages[].rule\",\n                                        type: \"array\",\n                                        startEmpty: true,\n                                        items: [{\n                                                type: \"section\",\n                                                htmlClass: \"layout-row flex\",\n                                                items: [{\n                                                        key: \"pages[].rule[].regexp\",\n                                                        htmlClass: \"md-block flex\",\n                                                        type: \"text\"\n                                                    }, {\n                                                        key: \"pages[].rule[].scope\",\n                                                        type: \"text\"\n                                                    }]\n                                            }]\n                                    }]\n                            }]\n                    }]\n            }\n        };\n        return actionModel;\n    }\n    AddForth.$inject = [\"toolbarUtils\", \"actionUtils\"];\n    AddForth.key = \"crawlerSettingAddForthAction\";\n    return AddForth;\n}());\nvar AddFifth = (function () {\n    function AddFifth(toolbarUtils, actionUtils) {\n        var actionModel = {\n            key: AddFifth.key,\n            type: action_model_1.ActionType.form,\n            title: \"页面配置\",\n            icon: \"add\",\n            form: {\n                formSchema: [{\n                        key: \"pages\",\n                        type: \"tabarray\",\n                        items: [{\n                                type: \"section\",\n                                htmlClass: \"column-row flex\",\n                                items: [{\n                                        key: \"pages[].key\",\n                                        type: \"text\",\n                                        htmlClass: \"md-block\"\n                                    }, {\n                                        key: \"pages[].areas\",\n                                        type: \"array\",\n                                        startEmpty: true,\n                                        description: \"区域配置，用户优化分析性能，减少dom的查询。\",\n                                        showHints: true,\n                                        items: [{\n                                                type: \"section\",\n                                                grid: { flex: \"\", layout: \"row\" },\n                                                items: [{\n                                                        key: \"pages[].areas[].key\",\n                                                        type: \"text\"\n                                                    }, {\n                                                        key: \"pages[].areas[].selector\",\n                                                        htmlClass: \"md-block flex\",\n                                                        type: \"text\"\n                                                    }, {\n                                                        key: \"pages[].areas[].dealStrategy\",\n                                                        type: \"text\"\n                                                    }]\n                                            }]\n                                    }, {\n                                        key: \"pages[].fields\",\n                                        type: \"jeditor\",\n                                        htmlClass: \"md-block\"\n                                    }]\n                            }]\n                    }]\n            }\n        };\n        return actionModel;\n    }\n    AddFifth.$inject = [\"toolbarUtils\", \"actionUtils\"];\n    AddFifth.key = \"crawlerSettingAddFifthAction\";\n    return AddFifth;\n}());\nvar Add = (function () {\n    function Add() {\n        var actionModel = {\n            key: Add.key,\n            type: action_model_1.ActionType.wizard,\n            title: \"新建爬虫配置文件\",\n            icon: \"add\",\n            refreshList: true,\n            wizard: {\n                defaultSchema: {\n                    dataSchema: dataSchema\n                },\n                actions: [AddFirst.key, AddSecond.key, AddThird.key, AddForth.key, AddFifth.key]\n            },\n            interfaces: [{\n                    key: \"crawlerSettingAdd\",\n                    method: interface_model_1.MethodType.POST,\n                    address: \"\",\n                    port: null,\n                    path: \"crawler_settings\",\n                    isRestful: true\n                }]\n        };\n        return actionModel;\n    }\n    Add.key = \"crawlerSettingAddAction\";\n    return Add;\n}());\nvar Copy = (function () {\n    function Copy() {\n        var actionModel = {\n            key: Copy.key,\n            type: action_model_1.ActionType.wizard,\n            title: \"复制爬虫配置文件\",\n            icon: \"content_copy\",\n            refreshList: true,\n            wizard: {\n                defaultSchema: {\n                    dataSchema: dataSchema\n                },\n                actions: [AddFirst.key, AddSecond.key, AddThird.key, AddForth.key]\n            },\n            interfaces: [{\n                    key: \"crawlerSettingAdd\",\n                    method: interface_model_1.MethodType.POST,\n                    address: \"\",\n                    port: null,\n                    path: \"crawler_settings\",\n                    isRestful: true\n                }]\n        };\n        return actionModel;\n    }\n    Copy.key = \"crawlerSettingCopyAction\";\n    return Copy;\n}());\nvar Edit = (function () {\n    function Edit(toolbarUtils, actionUtils) {\n        var actionModel = {\n            key: Edit.key,\n            type: action_model_1.ActionType.wizard,\n            title: \"修改爬虫配置文件\",\n            icon: \"edit\",\n            refreshList: true,\n            wizard: {\n                defaultSchema: {\n                    dataSchema: dataSchema\n                },\n                actions: [AddFirst.key, AddSecond.key, AddThird.key, AddForth.key, AddFifth.key]\n            },\n            interfaces: [{\n                    key: \"crawlerSettingEdit\",\n                    method: interface_model_1.MethodType.PUT,\n                    idFieldPath: \"/key\",\n                    address: \"\",\n                    port: null,\n                    path: \"crawler_settings\",\n                    isRestful: true\n                }]\n        };\n        return actionModel;\n    }\n    Edit.$inject = [\"toolbarUtils\", \"actionUtils\"];\n    Edit.key = \"crawlerSettingEditAction\";\n    return Edit;\n}());\nvar Delete = (function () {\n    function Delete() {\n        var actionModel = {\n            key: Delete.key,\n            type: action_model_1.ActionType.confirm,\n            title: \"删除爬虫配置文件\",\n            icon: \"delete\",\n            refreshList: true,\n            confirm: {\n                confirmTitle: \"\",\n                confirmContent: \"确定要删除爬虫配置文件吗!\"\n            },\n            interfaces: [{\n                    key: \"crawlerSettingDelete\",\n                    method: interface_model_1.MethodType.DELETE,\n                    idFieldPath: \"/key\",\n                    address: \"\",\n                    port: null,\n                    path: \"crawler_settings\",\n                    isRestful: true\n                }]\n        };\n        return actionModel;\n    }\n    Delete.key = \"crawlerSettingDeleteAction\";\n    return Delete;\n}());\nvar Search = (function () {\n    function Search() {\n        var actionModel = {\n            key: Search.key,\n            type: action_model_1.ActionType.form,\n            title: \"搜索爬虫配置文件\",\n            icon: \"search\",\n            form: {\n                dataSchema: dataSchema,\n                formSchema: [{\n                        key: \"key\",\n                        type: \"text\",\n                        required: false,\n                        copyValueTo: [\"/key/$eq\"],\n                        htmlClass: \"md-block\"\n                    }]\n            }\n        };\n        return actionModel;\n    }\n    Search.key = \"crawlerSettingSearchAction\";\n    return Search;\n}());\nvar Ack = (function () {\n    function Ack() {\n        var actionModel = {\n            key: Ack.key,\n            type: action_model_1.ActionType.form,\n            title: \"爬虫命令\",\n            icon: \"apple-keyboard-command\",\n            form: {\n                dataSchema: {\n                    type: \"object\",\n                    required: [\"key\", \"action\"],\n                    properties: {\n                        key: {\n                            type: \"string\",\n                            title: \"配置文件KEY\"\n                        },\n                        action: {\n                            type: \"string\",\n                            title: \"执行的命令\"\n                        },\n                        options: {\n                            type: \"object\",\n                            title: \"可选项\",\n                            properties: {\n                                type: {\n                                    type: \"string\",\n                                    default: \"forever\",\n                                    title: \"爬虫启动模式\"\n                                },\n                                startCrawler: {\n                                    type: \"boolean\",\n                                    default: true,\n                                    title: \"开启爬取链接模块\"\n                                },\n                                startDeal: {\n                                    type: \"boolean\",\n                                    default: false,\n                                    title: \"开启html处理模块\"\n                                },\n                                startDownload: {\n                                    type: \"boolean\",\n                                    default: false,\n                                    title: \"开启图片下载模块\"\n                                },\n                                startChip: {\n                                    type: \"boolean\",\n                                    default: false,\n                                    title: \"开启更换ip模块\"\n                                }\n                            }\n                        }\n                    }\n                },\n                formSchema: [{\n                        key: \"action\",\n                        type: \"select\",\n                        titleMap: [\n                            { \"value\": \"crawler:start\", \"name\": \"开始爬虫\", \"group\": \"\" },\n                            { \"value\": \"crawler:stop\", \"name\": \"停止爬虫\", \"group\": \"\" },\n                            { \"value\": \"crawler:create\", \"name\": \"开启一个新爬虫\", \"group\": \"\" },\n                            { \"value\": \"crawler:reset\", \"name\": \"重置一个数据库\", \"group\": \"\" },\n                            { \"value\": \"crawler:chip\", \"name\": \"更改代理ip\", \"group\": \"\" }\n                        ],\n                        htmlClass: \"md-block\"\n                    }, {\n                        key: \"key\",\n                        type: \"autocomplete-1\",\n                        condition: \"model.action==='crawler:start' || model.action==='crawler:reset'\",\n                        acOptions: {\n                            textField: \"key\",\n                            dataField: \"rows\",\n                            noCache: false,\n                            search: \"/where/key/$like\",\n                            actionKey: List.key\n                        },\n                        htmlClass: \"md-block\"\n                    }, {\n                        key: \"options\",\n                        type: \"card\",\n                        grid: { \"flex\": \"\" },\n                        condition: \"!!model.action\",\n                        items: [{\n                                key: \"options.type\",\n                                type: \"select\",\n                                htmlClass: \"md-block\",\n                                titleMap: [\n                                    { \"value\": \"forever\", \"name\": \"FOREVER启动\" },\n                                    { \"value\": \"\", \"name\": \"NODE启动\" }\n                                ]\n                            }, {\n                                key: \"options.startCrawler\",\n                                condition: \"model.action==='crawler:start'\",\n                                htmlClass: \"md-block\",\n                                type: \"checkbox\"\n                            }, {\n                                key: \"options.startDeal\",\n                                condition: \"model.action==='crawler:start'\",\n                                htmlClass: \"md-block\",\n                                type: \"checkbox\"\n                            }, {\n                                key: \"options.startDownload\",\n                                condition: \"model.action==='crawler:start'\",\n                                htmlClass: \"md-block\",\n                                type: \"checkbox\"\n                            }, {\n                                key: \"options.startChip\",\n                                condition: \"model.action==='crawler:start'\",\n                                htmlClass: \"md-block\",\n                                type: \"checkbox\"\n                            }]\n                    }]\n            }\n        };\n        return actionModel;\n    }\n    Ack.key = \"crawlerSettingAckAction\";\n    return Ack;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = function (module) {\n    var services = [List, Search, Add, Edit, Delete, Copy, Ack, AddFirst, AddSecond, AddThird, AddForth, AddFifth];\n    _.each(services, function (ser) {\n        module.service(ser.key, ser);\n    });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/action/schemas/crawler.value.ts\n ** module id = 50\n ** module chunks = 0\n **/"],"sourceRoot":""}