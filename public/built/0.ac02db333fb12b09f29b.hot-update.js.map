{"version":3,"sources":["webpack:///./src/pages/page/ctls/page.d3.controller.ts?28a4","webpack:///./src/pages/page/ctls/force.d3.ts?3da9"],"names":[],"mappings":";;;;;;AAKA,sCAAsB,EAAY,CAAC;AAEnC;KAGI,sBAAoB,YAAuC;SAAvC,iBAAY,GAAZ,YAAY,CAA2B;SACvD,IAAI,gBAAK,CAAC,SAAS,CAAC,CAAC;KACzB,CAAC;KAJM,oBAAO,GAAG,CAAC,cAAc,CAAC,CAAC;KAKtC,mBAAC;AAAD,EAAC;AANY,qBAAY,eAMxB;;;;;;;;;ACZD,KAAI,KAAK,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;KAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;KAC9B,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;KAC9B,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;AAEhB,KAAI,KAAK,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;KAC/D,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;KAClD,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;AAEpD,KAAY,EAAE,uBAAM,EAAI,CAAC;AAEzB;KAAA;KA0IA,CAAC;KAAD,YAAC;AAAD,EAAC;AA1IY,cAAK,QA0IjB","file":"0.ac02db333fb12b09f29b.hot-update.js","sourcesContent":["/**\n * Created by NICK on 16/8/10.\n */\n\nimport * as _ from 'lodash';\nimport { Force } from './force.d3';\n\nexport class D3Controller {\n    static $inject = [\"$stateParams\"];\n\n    constructor(private $stateParams: ng.ui.IStateParamsService) {\n        new Force(\"#paged3\");\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/page/ctls/page.d3.controller.ts\n **/","\nvar nodes = [{ name: \"桂林\" }, { name: \"广州\" },\n{ name: \"厦门\" }, { name: \"杭州\" },\n{ name: \"上海\" }, { name: \"青岛\" },\n{ name: \"天津\" }];\n\nvar links = [{ source: 0, target: 1 }, { source: 0, target: 2 },\n{ source: 0, target: 3 }, { source: 1, target: 4 },\n{ source: 1, target: 5 }, { source: 1, target: 6 }];\n\nimport * as d3 from 'd3';\n\nexport class Force {\n    svg: d3.Selection<d3.BaseType, any, any, any>;\n    svgNodes: d3.Selection<d3.BaseType, any, any, any>;\n    svgEdges: d3.Selection<d3.BaseType, any, any, any>;\n    svgTexts: d3.Selection<d3.BaseType, any, any, any>;\n    simulation: any;\n    zoom: d3.ZoomBehavior<d3.ZoomedElementBaseType, any>;\n    nodes: Array<{ name: string }>;\n\n    constructor(select: string, private nodes: Array<{ title: string }>, private links Array<{ source: number, target: number }>) {\n        this.nodes = nodes;\n        this.svg = d3.select(select)\n            .append(\"svg\")\n            .attr(\"width\", \"100%\")\n            .attr(\"height\", \"100%\");\n        this.doDraw();\n    }\n\n    doZoom() {\n            this.zoom = d3.zoom()\n                .scaleExtent([0.5, 10])\n                .duration(400)\n                .on(\"zoom\", () => {\n                    this.svg.select(\".nodes\").attr(\"transform\", d3.event.transform);\n                    this.svg.select(\".texts\").attr(\"transform\", d3.event.transform);\n                    this.svg.select(\".lines\").attr(\"transform\", d3.event.transform);\n                });\n            this.svg.call(this.zoom);\n        }\n\n    doDrawNodes() {\n            this.svgEdges = this.svg.append(\"g\")\n                .attr(\"class\", \"nodes\")\n                .selectAll(\"circle\")\n                .data(this.nodes)\n                .enter()\n                .append(\"circle\")\n                .attr(\"r\", 5)\n                .attr(\"cx\", 100)\n                .attr(\"cy\", 100)\n                .style(\"fill\", \"black\")\n                .call((d3.drag()\n                    .on(\"start\", (d: d3.SimulationNodeDatum) => {\n                        if (!d3.event.active) {\n                            this.simulation.alphaTarget(0.5).restart();\n                        }\n                        d.fx = d.x;\n                        d.fy = d.y;\n                    })\n                    .on(\"drag\", (d: d3.SimulationNodeDatum) => {\n                        d.fx = d3.event.x;\n                        d.fy = d3.event.y;\n                    })\n                    .on(\"end\", (d: d3.SimulationNodeDatum) => {\n                        if (!d3.event.active) {\n                            this.simulation.alphaTarget(0);\n                        }\n                        d.fx = null;\n                        d.fy = null;\n                    }) as any));\n\n            return this.svgEdges;\n        }\n\n    doDrawEdges() {\n            this.svgEdges = this.svg.append(\"g\")\n                .attr(\"class\", \"lines\")\n                .selectAll(\"line\")\n                .data(links)\n                .enter()\n                .append(\"line\")\n                .style(\"stroke\", \"#ccc\")\n                .style(\"stroke-width\", 1);\n\n            return this.svgEdges;\n        }\n\n    doDrawTexts() {\n            this.svgTexts = this.svg.append(\"g\")\n                .attr(\"class\", \"texts\")\n                .selectAll(\"text\")\n                .data(this.nodes)\n                .enter()\n                .append(\"text\")\n                .style(\"fill\", \"black\")\n                .attr(\"dx\", 20)\n                .attr(\"dy\", 8)\n                .text(function (d) {\n                    return d.name;\n                });\n\n            return this.svgTexts;\n        }\n\n    doDraw() {\n            let width = innerWidth,\n                height = innerHeight;\n\n            this.doZoom();\n            this.simulation = d3.forceSimulation(this.nodes)\n                .force(\"link\", d3.forceLink(links))\n                .force(\"charge\", d3.forceManyBody().strength(-150))\n                .force(\"center\", d3.forceCenter(width / 3, height / 2));\n\n            let edges = this.doDrawEdges();\n            let texts = this.doDrawTexts();\n            let nodes = this.doDrawNodes();\n\n            this.simulation.nodes(this.nodes)\n                .on(\"tick\", tick)\n                .force(\"link\");\n\n            function tick() {\n                edges && edges\n                    .attr(\"x1\", function (d: d3.SimulationLinkDatum<d3.SimulationNodeDatum>) {\n                        return (d.source as d3.SimulationNodeDatum).x || 0;\n                    })\n                    .attr(\"y1\", function (d: d3.SimulationLinkDatum<d3.SimulationNodeDatum>) {\n                        return (d.source as d3.SimulationNodeDatum).y || 0;\n                    })\n                    .attr(\"x2\", function (d: d3.SimulationLinkDatum<d3.SimulationNodeDatum>) {\n                        return (d.target as d3.SimulationNodeDatum).x || 0;\n                    })\n                    .attr(\"y2\", function (d: d3.SimulationLinkDatum<d3.SimulationNodeDatum>) {\n                        return (d.target as d3.SimulationNodeDatum).y || 0;\n                    });\n                nodes && nodes.attr(\"cx\", function (datum: d3.SimulationNodeDatum) {\n                    return datum.x || 0;\n                }).attr(\"cy\", function (datum: d3.SimulationNodeDatum) {\n                    return datum.y || 0;\n                });\n                texts && texts.attr(\"x\", function (d: d3.SimulationNodeDatum) {\n                    return d.x || 0;\n                }).attr(\"y\", function (d: d3.SimulationNodeDatum) {\n                    return d.y || 0;\n                });\n            }\n        }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/page/ctls/force.d3.ts\n **/"],"sourceRoot":""}