{"version":3,"sources":["webpack:///./src/directives/action/index.ts?1f08","webpack:///./src/directives/action/services/autocomplete.provider.ts?0b3e"],"names":[],"mappings":"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","file":"0.69f7f7876a8ea56aee4a.hot-update.js","sourcesContent":["/**\n * Created by NICK on 16/8/9.\n */\n\nimport * as angular from 'angular';\nimport * as ngMaterial from 'angular-material';\nimport 'expose?JSONEditor!jsoneditor';\nimport 'ng-jsoneditor';\n\nimport restSvrMod from '../../services/rest.service';\n\nimport 'angular-schema-form';\nimport 'angular-schema-form-ng-material';\n\n\nconst _name = \"fxAction\";\nexport const module = angular.module(`${_name}Module`, [ngMaterial, restSvrMod, \"schemaForm\", \"ng.jsoneditor\"]);\n\nfunction sfLayout(args) {\n    var layoutDiv = args.fieldFrag.querySelector('[sf-layout]');\n\n    if (layoutDiv && args.form.grid) {\n        Object.getOwnPropertyNames(args.form.grid).forEach(function (property, idx, array) {\n            layoutDiv.setAttribute(property, args.form.grid[property]);\n        });\n    }\n};\n// 处理默认的错误信息\nmodule\n    .config([\"sfErrorMessageProvider\", (sfErrorMessageProvider) => {\n        // sfErrorMessageProvider.setDefaultMessage(\"10000\", \"邮箱格式不正确\");\n        // sfErrorMessageProvider.setDefaultMessage(\"10001\", \"两次密码不一致\");\n        // sfErrorMessageProvider.setDefaultMessage(\"10002\", \"用户名中存在非法字符\");\n        // sfErrorMessageProvider.setDefaultMessage(\"10003\", \"手机格式不正确\");\n        // sfErrorMessageProvider.setDefaultMessage(\"10004\", \"JSON格式不正确\");\n        // sfErrorMessageProvider.setDefaultMessage(\"10005\", \"地址格式不正确\");\n        sfErrorMessageProvider.setDefaultMessage(\"302\", \"[{{title}}]是必填项\");\n        sfErrorMessageProvider.setDefaultMessage(\"103\", \"[{{title}}]超过了最大值{{schema.maximum}}\");\n        sfErrorMessageProvider.setDefaultMessage(\"101\", \"[{{title}}]小于最小值{{schema.minimum}}\");\n        sfErrorMessageProvider.setDefaultMessage(\"200\", \"[{{title}}]字符长度小于最小值({{schema.minLength}})\");\n        sfErrorMessageProvider.setDefaultMessage(\"201\", \"[{{title}}]字符长度大于最大值({{schema.maxLength}})\");\n        sfErrorMessageProvider.setDefaultMessage(\"400\", \"数组长度不正确，{{schema.minItems||0}}-{{schema.maxItems||'∞'}}\");\n        sfErrorMessageProvider.setDefaultMessage(\"500\", \"格式不正确\");\n    }])\n    // 添加自定义的表单组件\n    .config([\"sfBuilderProvider\", \"schemaFormDecoratorsProvider\", \"jsonEditorBuilderProvider\", \"autoCompleteBuilderProvider\", (sfBuilderProvider, schemaFormDecoratorsProvider, jsonEditorBuilder, autoCompleteBuilder) => {\n        // jsoneditor--schema-form组件化\n        schemaFormDecoratorsProvider.defineAddOn(\n            'materialDecorator',\n            'jeditor',\n            \"./decorators/jsoneditor.jade\",\n            sfBuilderProvider.stdBuilders.concat(jsonEditorBuilder.builder)\n        );\n        // card--schema-form组件化\n        schemaFormDecoratorsProvider.defineAddOn(\n            'materialDecorator',\n            'card',\n            \"./decorators/card.jade\",\n            [sfBuilderProvider.builders.sfField, sfBuilderProvider.builders.condition, sfBuilderProvider.builders.transclusion]\n        );\n        // autocomplete--schema-form组件化\n        schemaFormDecoratorsProvider.defineAddOn(\n            'materialDecorator',\n            'autocomplete-1',\n            \"./decorators/autocomplete-1.jade\",\n            [sfBuilderProvider.builders.sfField, sfBuilderProvider.builders.ngModel, sfLayout, sfBuilderProvider.builders.condition, sfBuilderProvider.builders.transclusion, autoCompleteBuilder.builder]\n        );\n    }])\n    // 打包工具的原因,只能把模板字符串写入cache中\n    .run([\"$templateCache\", \"autoCompleteBuilder\", ($templateCache: ng.ITemplateCacheService) => {\n        $templateCache.put('./decorators/jsoneditor.jade', require(\"./decorators/jsoneditor.jade\")());\n        $templateCache.put('./decorators/card.jade', require(\"./decorators/card.jade\")());\n        $templateCache.put('./decorators/autocomplete-1.jade', require(\"./decorators/autocomplete-1.jade\")());\n        $templateCache.put('./decorators/section-1.jade', require(\"./decorators/section-1.jade\")());\n    }]);\n\n\nexport default `${module.name}`;\n\nimport './services/autocomplete.provider';\nimport './services/jsoneditor.provider';\nimport './services/validator.custom.value';\n\nimport './schemas/modules.value';\nimport './schemas/common.value';\nimport './schemas/backup.value';\nimport './schemas/schema.value';\nimport './schemas/action.value';\n\nimport './directives/form.directive';\nimport './directives/list.directive';\nimport './directives/autocomplete.directive';\nimport './directives/dialog-form.directive';\nimport './directives/search.directive';\nimport './directives/wizard.directive';\nimport './directives/dialog-wizard.directive';\nimport './directives/builder.directive';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/action/index.ts\n **/","import { module } from '../index';\nimport * as pointer from 'json-pointer';\nimport * as _ from 'lodash';\n\nfunction Provider() {\n    /**\n     * autocomplete builder函数\n     * 初始化参数\n     * 初始化搜索功能\n     * @param args\n     */\n    this.builder = function (args) {\n        args.form.acOptions = _.extend({\n            textField: \"\",\n            keyField: \"\",\n            dataField: \"\",\n            delay: 300,\n            noCache: false,\n            _where: {},\n            search: \"\",\n            actionKey: \"\"\n        }, args.form.acOptions || {});\n    };\n\n    this.$get = [ function () {\n        return {};\n    }];\n}\n\nmodule.provider('autoCompleteBuilder', [Provider]);\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/action/services/autocomplete.provider.ts\n **/"],"sourceRoot":""}