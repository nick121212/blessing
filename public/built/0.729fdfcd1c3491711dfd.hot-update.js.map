{"version":3,"sources":["webpack:///./src/pages/page/ctls/page.d3.controller.ts?28a4","webpack:///./src/directives/action/models/action.model.ts?5a9f","webpack:///./src/pages/page/ctls/page.execute.cmd.ts?d6bb","webpack:///./src/pages/page/services/execute.cmd.ts?0e43","webpack:///./src/directives/action/services/utils.service.ts?487b","webpack:///./src/directives/action/services/action.provider.ts?f27c","webpack:///./src/directives/action/schemas/local.value.ts?e987","webpack:///./src/directives/action/directives/form.directive.ts?a8d2","webpack:///./src/directives/action/directives/list.directive.ts?de17","webpack:///./src/directives/action/directives/dialog-form.directive.ts?1dd8","webpack:///./src/directives/action/directives/search.directive.ts?1909","webpack:///./src/directives/action/directives/wizard.directive.ts?b00c","webpack:///./src/directives/action/directives/dialog-wizard.directive.ts?2c91","webpack:///./src/directives/action/directives/builder.directive.ts?b665","webpack:///./src/directives/execute/execute.cmd.directive.ts?8d80","webpack:///./src/pages/home/index.ts?13ac","webpack:///./src/pages/passport/services/login.value.ts?5a5d"],"names":[],"mappings":";;;;;;AAIA,KAAY,CAAC,uBAAM,EAAQ,CAAC;AAC5B,sCAAsB,EAAgB,CAAC;AACvC,0CAAsD,EAAgD,CAAC;AAEvG;KAQI,sBAAoB,YAAuC,EAAU,QAAQ,EAAU,YAAY,EAAU,aAAa;SAAtG,iBAAY,GAAZ,YAAY,CAA2B;SAAU,aAAQ,GAAR,QAAQ;SAAU,iBAAY,GAAZ,YAAY;SAAU,kBAAa,GAAb,aAAa;SAEtH,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;SACrB,IAAI,CAAC,GAAG,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;SAC/B,IAAI,CAAC,MAAM,EAAE,CAAC;KAClB,CAAC;KAKD,wCAAiB,GAAjB,UAAkB,MAAM,EAAE,WAAW,EAAE,IAAI;SAA3C,iBAOC;SANG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;aAC/D,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAG,WAAW,CAAC,UAAU,IAAI,OAAO,CAAE,CAAC,CAAC;aACnE,EAAE,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC;aAE9B,CAAC;SACL,CAAC,CAAC,CAAC;KACP,CAAC;KAKD,gCAAS,GAAT;SAAA,iBAkBC;SAjBG,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;SAE1E,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACX,MAAM,CAAC;SACX,CAAC;SACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACnB,OAAO,CAAC,IAAI,CAAC,UAAC,MAAM;aAChB,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAI,CAAC,WAAW,EAAE,MAAM,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;SACjF,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;SAGhB,CAAC,CAAC,CAAC,OAAO,CAAC;aACP,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACpB,UAAU,CAAC;iBACP,IAAI,gBAAK,CAAC,SAAS,EAAE,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aAC/C,CAAC,EAAE,GAAG,CAAC,CAAC;SACZ,CAAC,CAAC,CAAC;KACP,CAAC;KAKD,6BAAM,GAAN;SAAA,iBAqBC;SApBG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,WAAW;aAC9C,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;aAC/B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;aACpC,KAAI,CAAC,SAAS,EAAE,CAAC;aAEjB,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SAC7D,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,YAAY;aACjB,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,UAAC,WAAyB;iBAC9C,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,KAAK,yBAAU,CAAC,IAAI,CAAC,CAAC,CAAC;qBACvC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,EAAE,0BAA0B,EAAE,KAAK,CAAC,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAC,MAAM,EAAE,IAAS;yBAClN,KAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;qBAC5D,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;iBAClB,CAAC;aACL,CAAC,CAAC,CAAC;aACH,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;iBACvC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,EAAE,0BAA0B,EAAE,KAAK,CAAC,CAAC,WAAW,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAC,MAAM;qBAChK,KAAI,CAAC,SAAS,EAAE,CAAC;iBACrB,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;aAClB,CAAC;SACL,CAAC,CAAC,CAAC;KACP,CAAC;KAzEM,oBAAO,GAAG,CAAC,cAAc,EAAE,UAAU,EAAE,cAAc,EAAE,eAAe,CAAC,CAAC;KA0EnF,mBAAC;AAAD,EAAC;AA3EY,qBAAY,eA2ExB;;;;;;;;;AC/ED,YAAY,UAAU;KAClB,2CAAQ;KACR,2CAAQ;KACR,2CAAQ;KACR,+CAAU;KACV,iDAAW;AACf,EAAC,EANW,kBAAU,KAAV,kBAAU,QAMrB;AAND,KAAY,UAAU,GAAV,kBAMX;;;;;;;;;ACRD,yCAA+B,EAAyB,CAAC;AAGzD;KAUI,kCAAoB,UAAqC,EAAU,YAAuC,EAAU,QAAQ,EAAU,YAAqC,EAAU,QAAQ,EAAU,YAAY;SAA/L,eAAU,GAAV,UAAU,CAA2B;SAAU,iBAAY,GAAZ,YAAY,CAA2B;SAAU,aAAQ,GAAR,QAAQ;SAAU,iBAAY,GAAZ,YAAY,CAAyB;SAAU,aAAQ,GAAR,QAAQ;SAAU,iBAAY,GAAZ,YAAY;SAFnN,kBAAa,GAAQ,EAAE,CAAC;SAGpB,IAAI,CAAC,GAAG,GAAG,4BAAc,CAAC,GAAG,CAAC;SAC9B,IAAI,CAAC,aAAa,EAAE,CAAC;SACrB,IAAI,CAAC,QAAQ,GAAG;aACZ,OAAO,EAAE,EAAE;UACd,CAAC;KACN,CAAC;KAED,gDAAa,GAAb;SACI,IAAI,CAAC,QAAQ,GAAG;aACZ,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,wBAAwB,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE;aACzF,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE;UAC7E,CAAC;KACN,CAAC;KAED,2CAAQ,GAAR,UAAS,MAAM,EAAE,IAAI;SAArB,iBAqBC;SApBG,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;SACpE,IAAI,OAAO,CAAC;SAEZ,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACV,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;aACnB,OAAO,CAAC,IAAI,CAAC,UAAC,GAAG;iBACb,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;iBACrC,OAAO,GAAG,GAAG,CAAC;iBAEd,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAI,CAAC,GAAG,CAAC,CAAC;aAC5C,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,WAAW;iBAChB,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;iBAE/B,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,EAAE,OAAO,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;aAChF,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;iBACR,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC,sBAAsB,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACvE,CAAC,CAAC,CAAC,OAAO,CAAC;iBACP,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACxB,CAAC,CAAC,CAAC;SACP,CAAC;KACL,CAAC;KA7CM,gCAAO,GAAG,CAAC,YAAY,EAAE,cAAc,EAAE,UAAU,EAAE,eAAe,EAAE,UAAU,EAAE,cAAc,CAAC,CAAC;KA8C7G,+BAAC;AAAD,EAAC;AA/CY,iCAAwB,2BA+CpC;;;;;;;;;ACpDD,0CAAyC,EAAgD,CAAC;AAC1F,6CAA2B,EAAmD,CAAC;AAE/E;KAGI;SACI,IAAI,WAAW,GAAiB;aAC5B,GAAG,EAAE,cAAc,CAAC,GAAG;aACvB,IAAI,EAAE,yBAAU,CAAC,IAAI;aACrB,KAAK,EAAE,EAAE;aACT,IAAI,EAAE,EAAE;aACR,IAAI,EAAE;iBACF,UAAU,EAAE;qBACR,IAAI,EAAE,QAAQ;qBACd,QAAQ,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;qBAChC,UAAU,EAAE;yBACR,OAAO,EAAE;6BACL,IAAI,EAAE,QAAQ;6BACd,KAAK,EAAE,IAAI;0BACd;yBACD,OAAO,EAAE;6BACL,IAAI,EAAE,OAAO;6BACb,OAAO,EAAE,EAAE;6BACX,KAAK,EAAE,OAAO;6BACd,QAAQ,EAAE,CAAC;6BACX,KAAK,EAAE;iCACH,IAAI,EAAE,QAAQ;8BACjB;0BACJ;sBACJ;kBACJ;iBACD,UAAU,EAAE,CAAC;yBACT,GAAG,EAAE,SAAS;yBACd,IAAI,EAAE,gBAAgB;yBACtB,WAAW,EAAE,OAAO;yBACpB,SAAS,EAAE;6BACP,SAAS,EAAE,OAAO;6BAClB,QAAQ,EAAE,KAAK;6BACf,SAAS,EAAE,MAAM;6BACjB,OAAO,EAAE,IAAI;6BACb,MAAM,EAAE,kBAAkB;6BAC1B,SAAS,EAAE,SAAS;0BACvB;yBACD,SAAS,EAAE,UAAU;sBACxB,EAAE;yBACC,GAAG,EAAE,SAAS;yBACd,IAAI,EAAE,YAAY;yBAClB,SAAS,EAAE;6BACP,GAAG,EAAE,SAAS;0BACjB;yBACD,UAAU,EAAE,IAAI;yBAChB,SAAS,EAAE,UAAU;sBACxB,CAAC;cACL;aACD,WAAW,EAAE,IAAI;aACjB,WAAW,EAAE,IAAI;aACjB,UAAU,EAAE,CAAC;qBACT,GAAG,EAAE,aAAa;qBAClB,MAAM,EAAE,4BAAU,CAAC,IAAI;qBACvB,OAAO,EAAE,EAAE;qBAEX,IAAI,EAAE,uBAAuB;qBAC7B,GAAG,EAAE;yBACD,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,YAAY,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;sBACjD;qBAID,SAAS,EAAE,KAAK;kBACnB,CAAC;UACL,CAAC;SAEF,MAAM,CAAC,WAAW,CAAC;KACvB,CAAC;KAtEM,kBAAG,GAAW,aAAa,CAAC;KAuEvC,qBAAC;AAAD,EAAC;AAxEY,uBAAc,iBAwE1B;AAED;mBAAe,UAAC,MAAkB;KAC9B,IAAM,QAAQ,GAAG,CAAC,cAAc,CAAC,CAAC;KAElC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,KAAK;SACnB,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;KACrC,CAAC,CAAC,CAAC;AACP,EAAC;;;;;;;;;;;;;;ACnFD,oCAAuB,EAAW,CAAC;AACnC,KAAY,CAAC,uBAAM,EAAQ,CAAC;AAG5B;KAAA;KAqDA,CAAC;KApDiB,oBAAY,GAAW,aAAa,CAAC;KAMrC,eAAO,GAA6B,CAAC;aAE/C;iBACI,cAAsB,IAAQ;qBAAR,SAAI,GAAJ,IAAI,CAAI;iBAE9B,CAAC;iBAED,gCAAiB,GAAjB,UAAkB,IAAY,EAAE,OAAiC;qBAAjC,uBAAiC,GAAjC,eAAiC;qBAC7D,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE;yBAChC,IAAI,EAAE,IAAI;yBACV,OAAO,EAAE,OAAO;sBACnB,CAAC,CAAC;qBAEH,MAAM,CAAC,IAAI,CAAC;iBAChB,CAAC;iBAED,sBAAO,GAAP;qBACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;iBACrB,CAAC;iBACL,WAAC;aAAD,CAAC;aAED;iBAAyB,2BAAO;iBAC5B,iBAAsB,IAAQ;qBAC1B,kBAAM,IAAI,CAAC,CAAC;qBADM,SAAI,GAAJ,IAAI,CAAI;iBAE9B,CAAC;iBASD,+BAAa,GAAb,UAAc,OAAe,EAAE,KAAa,EAAE,IAAa,EAAE,IAAa,EAAE,IAAa;qBACrF,MAAM,CAAC,IAAI,OAAO,CAAU;yBACxB,OAAO,EAAE,OAAO;yBAChB,KAAK,EAAE,KAAK;yBACZ,IAAI,EAAE,IAAI;yBACV,IAAI,EAAE,IAAI;yBACV,IAAI,EAAE,IAAI;sBACb,CAAC,CAAC;iBACP,CAAC;iBACL,cAAC;aAAD,CAAC,CArBwB,IAAI,GAqB5B;aAED,MAAM,CAAC,IAAI,OAAO,EAAE,CAAC;SACzB,CAAC,CAAC,CAAC;KACP,cAAC;AAAD,EAAC;AAED,gBAAM,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;;;;;;;;;AC3DtD,KAAY,GAAG,uBAAM,EAAW,CAAC;AACjC,0CAAsD,EAAwB,CAAC;AAC/E,6CAA4C,EAA2B,CAAC;AACxE,KAAY,OAAO,uBAAM,EAAc,CAAC;AACxC,KAAY,CAAC,uBAAM,EAAQ,CAAC;AAE5B;KAGI,0BAAoB,MAAM,EAAU,IAAI,EAAU,GAAG,EAAU,MAAM;SAAjD,WAAM,GAAN,MAAM;SAAU,SAAI,GAAJ,IAAI;SAAU,QAAG,GAAH,GAAG;SAAU,WAAM,GAAN,MAAM;KAErE,CAAC;KAJM,wBAAO,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;KAKzD,uBAAC;AAAD,EAAC;AAED;KAKI,kBAAoB,UAAgC,EAAU,SAAmC,EAAU,SAA8B,EAAU,OAAgC,EAAU,EAAgB,EAAU,SAAqC;SALhQ,iBAkXC;SA7WuB,eAAU,GAAV,UAAU,CAAsB;SAAU,cAAS,GAAT,SAAS,CAA0B;SAAU,cAAS,GAAT,SAAS,CAAqB;SAAU,YAAO,GAAP,OAAO,CAAyB;SAAU,OAAE,GAAF,EAAE,CAAc;SAAU,cAAS,GAAT,SAAS,CAA4B;SAI5P,SAAI,GAA6B,CAAC,WAAW,EAAE,UAAC,SAAS;iBACrD,IAAM,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAI,EAAE,IAAI,CAAC,CAAC;iBAEvD,MAAM,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;aAClI,CAAC,CAAC,CAAC;SAPC,MAAM,CAAC,IAAI,CAAC;KAChB,CAAC;KASD,8BAAW,GAAX,UAAY,GAAW;SACnB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aAC1B,MAAM,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;SACpD,CAAC;SACD,MAAM,CAAC,IAAI,CAAC;KAChB,CAAC;KAKD,qCAAkB,GAAlB,UAAmB,GAAW;SAA9B,iBA0BC;SAzBG,IAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;SAC9B,IAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;SAE/C,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,UAAC,WAAyB;aAC7D,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,EAAE;iBAC3B,KAAK,EAAE;qBACH,GAAG,EAAE;yBACD,KAAK,EAAE,GAAG;sBACb;kBACJ;cACJ,CAAC,CAAC,IAAI,CAAC,UAAC,OAAY;iBACjB,IAAI,QAAQ,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;iBAE5B,KAAI,CAAC,YAAY,CAAC,WAAW,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;iBAClD,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;qBACxC,MAAM,CAAC,GAAG,KAAK,YAAY,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;qBACvE,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC3C,CAAC;iBAED,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,iCAAW,GAAG,OAAI,CAAC,CAAC;iBAC5C,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aACtB,CAAC,CAAC,CAAC;SACP,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAEvB,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC;KACzB,CAAC;KAOD,2BAAQ,GAAR,UAAS,GAAW;SAChB,IAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;SAE9B,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aACP,KAAK,CAAC,MAAM,EAAE,CAAC;SACnB,CAAC;SAAC,IAAI,CAAC,CAAC;aAEJ,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBAC1B,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aAC5D,CAAC;aAAC,IAAI,CAAC,CAAC;iBAEJ,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;qBAC/C,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;iBAChE,CAAC;iBACD,IAAI,CAAC,CAAC;qBAEF,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;iBACxC,CAAC;aACL,CAAC;SACL,CAAC;SAED,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC;KACzB,CAAC;KAOD,4BAAS,GAAT,UAAU,WAAyB;SAAnC,iBAuCC;SAtCG,IAAI,IAAI,GAAG,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,iBAAiB,CAAC;SAE1D,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,KAAK,yBAAU,CAAC,IAAI,CAAC,CAAC,CAAC;aACvC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAClF,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACtF,CAAC;SAED,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;aACd,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,UAAC,KAAmB;iBACvD,iBAAiB,GAAG,KAAK,CAAC;iBAC1B,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE;qBAC5B,KAAK,EAAE,IAAI,CAAC,MAAM;qBAClB,KAAK,EAAE;yBACH,KAAK,EAAE;6BACH,KAAK,EAAE,IAAI;0BACd;sBACJ;kBACJ,CAAC,CAAC;aACP,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;iBACZ,IAAM,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;iBAC/D,IAAM,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;iBAE1C,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,KAAK,yBAAU,CAAC,IAAI,CAAC,CAAC,CAAC;qBACvC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;yBAC7F,WAAW,CAAC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;qBAC1F,CAAC;qBACD,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;yBAC7F,WAAW,CAAC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC;qBAC9F,CAAC;iBACL,CAAC;aACL,CAAC,CAAC,CAAC,OAAO,CAAC;iBACP,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;aAC/B,CAAC,CAAC,CAAC;SACP,CAAC;SAAC,IAAI,CAAC,CAAC;aACJ,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SAC/B,CAAC;SAED,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC;KACzB,CAAC;KAOD,4BAAS,GAAT,UAAU,IAAkC;SAA5C,iBA0BC;SAzBG,IAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;SAC9B,IAAM,YAAY,GAAG,EAAE,CAAC;SACxB,IAAM,aAAa,GAAG,EAAE,CAAC;SACzB,IAAM,QAAQ,GAAuC,EAAE,CAAC;SAExD,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,UAAC,GAAG;aACb,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBAClB,YAAY,CAAE,GAAoB,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;aAClD,CAAC;aACD,IAAI,CAAC,CAAC;iBACF,QAAQ,CAAC,GAAa,CAAC,GAAG,KAAI,CAAC,QAAQ,CAAC,GAAa,CAAC,CAAC,IAAI,CAAC,UAAC,WAAW;qBACpE,YAAY,CAAC,GAAa,CAAC,GAAG,WAAW,CAAC;iBAC9C,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;qBACT,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAC5B,CAAC,CAAC,CAAC;aACP,CAAC;SACL,CAAC,CAAC,CAAC;SAEH,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;aACvB,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAChC,CAAC,CAAC,CAAC,KAAK,CAAC;aACL,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAChC,CAAC,CAAC,CAAC;SAEH,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC;KACzB,CAAC;KASD,gCAAa,GAAb,UAAc,MAAkB,EAAE,WAAyB,EAAE,IAAU,EAAE,QAAmB;SAA5F,iBA+CC;SA5CG,MAAM,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;aACvB,KAAK,yBAAU,CAAC,MAAM,CAAC;aACvB,KAAK,yBAAU,CAAC,IAAI;iBAChB,IAAM,SAAS,GAAG;qBACd,GAAC,yBAAU,CAAC,IAAI,CAAC,GAAE,mBAAO,CAAC,EAAiC,CAAC,EAAE;qBAC/D,GAAC,yBAAU,CAAC,MAAM,CAAC,GAAE,mBAAO,CAAC,EAAmC,CAAC,EAAE;;kBACtE,CAAC;iBAEF,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;qBACvB,WAAW,EAAE,MAAM;qBACnB,mBAAmB,EAAE,KAAK;qBAC1B,aAAa,EAAE,KAAK;qBACpB,UAAU,EAAE,IAAI;qBAChB,aAAa,EAAE,KAAK;qBACpB,QAAQ,EAAE,KAAK;qBACf,MAAM,EAAE;yBACJ,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC;yBAC/B,KAAK,EAAE,WAAW,CAAC,GAAG;yBACtB,QAAQ,EAAE,QAAQ;sBACrB;qBACD,UAAU,EAAE,gBAAgB;qBAC5B,YAAY,EAAE,WAAW;qBACzB,QAAQ,EAAE,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC;kBACxC,CAAC,CAAC,IAAI,CAAC;qBACJ,IAAI,GAAG,IAAI,CAAC;qBACZ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;iBACtB,CAAC,CAAC,CAAC;aACP,KAAK,yBAAU,CAAC,OAAO;iBACnB,IAAM,SAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;sBACnC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC;sBACvC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,cAAc,CAAC;sBAC/C,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC;sBAC3C,WAAW,CAAC,MAAM,CAAC;sBACnB,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC;sBACzC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,aAAa,IAAI,IAAI,CAAC,CAAC;iBAEvD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAO,CAAC,CAAC,IAAI,CAAC;qBACrC,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;yBACrD,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC;qBAChD,CAAC,CAAC,CAAC;iBACP,CAAC,CAAC,CAAC;SACX,CAAC;SAED,MAAM,CAAC,IAAI,CAAC;;KAChB,CAAC;KAOD,8BAAW,GAAX,UAAY,KAAK;SACb,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aACR,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;aACjD,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;iBAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;iBAC1B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;iBACrC,MAAM,CAAC,KAAK,CAAC;aACjB,CAAC;SACL,CAAC;SAED,MAAM,CAAC,IAAI,CAAC;KAChB,CAAC;KAUD,+BAAY,GAAZ,UAAa,WAAyB,EAAE,OAAe,EAAE,UAAuB,EAAE,GAAmB;SAAnB,mBAAmB,GAAnB,WAAmB;SACjG,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,UAAU,EAAE,UAAC,UAAU;aACzC,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;aACrC,IAAI,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;aAE1B,EAAE,CAAC,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;iBAEhB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,GAAG;qBAChB,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;iBACpG,CAAC,CAAC,CAAC;iBAEH,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,GAAG;qBACtC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;iBACpE,CAAC,CAAC,CAAC;aACP,CAAC;SACL,CAAC,CAAC,CAAC;SAEH,MAAM,CAAC,UAAU,CAAC;KACtB,CAAC;KAKO,6BAAU,GAAlB,UAAmB,WAAoC,EAAE,cAAmB,EAAE,cAA+B,EAAE,QAA4B;SAA5B,wBAA4B,GAA5B,aAA4B;SACvI,IAAI,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,QAAQ,GAAG,cAAc,CAAC,WAAW,CAAC;SAE1I,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,UAAC,KAAa;aAC/B,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;iBACtC,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,yCAAS,KAAO,CAAC,CAAC;iBACtC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBACnB,MAAM,GAAG,CAAC;aACd,CAAC;aACD,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;SACtE,CAAC,CAAC,CAAC;SAEH,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,CAAC;SAE7C,MAAM,CAAC,WAAW,CAAC;KACvB,CAAC;KASD,2BAAQ,GAAR,UAAS,GAAW,EAAE,SAAwC,EAAE,KAA0B;SAA1F,iBA8EC;SA7EG,IAAI,cAAc,EAAE,WAAW,CAAC;SAEhC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAC3B,MAAM,CAAC;SACX,CAAC;SAED,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,MAAoB;aAChD,IAAI,cAAc,GAAwC,EAAE,CAAC;aAC7D,IAAI,OAAO,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC;aACrC,IAAI,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;aAEnC,WAAW,GAAG,MAAM,CAAC;aAErB,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,UAAC,cAA+B;iBAE3D,IAAI,OAAyB,EACzB,WAAW,GAAG,cAAc,CAAC,SAAS;uBAChC,KAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,cAAc,CAAC,OAAO,EAAE,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC;uBACjG,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,cAAc,CAAC,OAAO,EAAE,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC;iBAErG,cAAc,GAAG,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;iBAGxC,EAAE,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;qBAErB,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,GAAG;yBAC/B,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;qBAC5E,CAAC,CAAC,CAAC;iBACP,CAAC;iBAGD,cAAc,CAAC,MAAM,IAAI,WAAW,CAAC,cAAc,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;iBAG3E,MAAM,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;qBAC5B,KAAK,4BAAU,CAAC,IAAI;yBAChB,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;yBAC1D,KAAK,CAAC;qBACV,KAAK,4BAAU,CAAC,GAAG;yBAIf,WAAW,GAAG,KAAI,CAAC,UAAU,CAAC,WAAW,EAAE,cAAc,EAAE,cAAc,CAAC,CAAC;yBAC3E,OAAO,GAAG,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC;yBAC/D,KAAK,CAAC;qBACV,KAAK,4BAAU,CAAC,GAAG;yBAKf,WAAW,GAAG,KAAI,CAAC,UAAU,CAAC,WAAW,EAAE,cAAc,EAAE,cAAc,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;yBACpF,OAAO,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,cAAc,GAAG,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;yBACnG,KAAK,CAAC;qBACV,KAAK,4BAAU,CAAC,MAAM;yBAKlB,WAAW,GAAG,KAAI,CAAC,UAAU,CAAC,WAAW,EAAE,cAAc,EAAE,cAAc,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;yBACpF,OAAO,GAAG,WAAW,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;yBAClD,KAAK,CAAC;iBACd,CAAC;iBACD,cAAc,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;aACjD,CAAC,CAAC,CAAC;aAEH,MAAM,CAAC,cAAc,CAAC;SAC1B,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,cAAc;aAEnB,MAAM,CAAC,KAAI,CAAC,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;SACvC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,OAAY;aAEjB,KAAI,CAAC,YAAY,CAAC,WAAW,EAAE,OAAO,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;aAE1E,OAAO,CAAC,WAAW,GAAG,WAAW,CAAC;aAElC,MAAM,CAAC,OAAO,CAAC;SACnB,CAAC,CAAC,CAAC;KACP,CAAC;KAhXM,gBAAO,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,eAAe,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;KAEvF,cAAK,GAAW,UAAU,CAAC;KA+WtC,eAAC;AAAD,EAAC;AAED,IAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;;;;;;;;;AClYhD,oCAAuB,EAAW,CAAC;AACnC,0CAAyC,EAAwB,CAAC;AAClE,6CAA2B,EAA2B,CAAC;AAEvD;KAII,oBAAY,YAAY,EAAE,WAAW;SACjC,IAAI,WAAW,GAAiB;aAC5B,GAAG,EAAE,UAAU,CAAC,GAAG;aACnB,IAAI,EAAE,yBAAU,CAAC,IAAI;aACrB,UAAU,EAAE,CAAC;qBACT,GAAG,EAAE,aAAa;qBAClB,MAAM,EAAE,4BAAU,CAAC,GAAG;qBACtB,OAAO,EAAE,EAAE;qBACX,IAAI,EAAE,IAAI;qBACV,IAAI,EAAE,SAAS;qBACf,GAAG,EAAE;yBACD,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;sBAClF;qBACD,SAAS,EAAE,IAAI;kBAClB,CAAC;UACL,CAAC;SAEF,MAAM,CAAC,WAAW,CAAC;KACvB,CAAC;KArBM,kBAAO,GAAG,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC;KAC1C,cAAG,GAAW,kBAAkB,CAAC;KAqB5C,iBAAC;AAAD,EAAC;AAED;KAII,oBAAY,YAAY,EAAE,WAAW;SACjC,IAAI,WAAW,GAAiB;aAC5B,GAAG,EAAE,UAAU,CAAC,GAAG;aACnB,IAAI,EAAE,yBAAU,CAAC,IAAI;aACrB,UAAU,EAAE,CAAC;qBACT,GAAG,EAAE,YAAY;qBACjB,MAAM,EAAE,4BAAU,CAAC,GAAG;qBACtB,OAAO,EAAE,EAAE;qBACX,IAAI,EAAE,IAAI;qBACV,IAAI,EAAE,SAAS;qBACf,GAAG,EAAE;yBACD,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;sBAClF;qBACD,SAAS,EAAE,IAAI;kBAClB,CAAC;UACL,CAAC;SAEF,MAAM,CAAC,WAAW,CAAC;KACvB,CAAC;KArBM,kBAAO,GAAG,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC;KAC1C,cAAG,GAAW,kBAAkB,CAAC;KAqB5C,iBAAC;AAAD,EAAC;AAED;KAII,sBAAY,YAAY,EAAE,WAAW;SACjC,IAAI,WAAW,GAAiB;aAC5B,GAAG,EAAE,YAAY,CAAC,GAAG;aACrB,IAAI,EAAE,yBAAU,CAAC,IAAI;aACrB,UAAU,EAAE,CAAC;qBACT,GAAG,EAAE,cAAc;qBACnB,MAAM,EAAE,4BAAU,CAAC,GAAG;qBACtB,OAAO,EAAE,EAAE;qBACX,IAAI,EAAE,IAAI;qBACV,IAAI,EAAE,cAAc;qBACpB,SAAS,EAAE,KAAK;kBACnB,CAAC;UACL,CAAC;SAEF,MAAM,CAAC,WAAW,CAAC;KACvB,CAAC;KAlBM,oBAAO,GAAG,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC;KAC1C,gBAAG,GAAW,cAAc,CAAC;KAkBxC,mBAAC;AAAD,EAAC;AAED,KAAM,QAAQ,GAAe,CAAC,UAAU,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;AAEpE,EAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,GAAG;KACjB,eAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACjC,EAAC,CAAC,CAAC;;;;;;;;;AChFH,oCAAuB,EAAW,CAAC;AACnC,0CAAyC,EAAwB,CAAC;AAClE,KAAY,OAAO,uBAAM,EAAc,CAAC;AAWxC;KASI,oBAAoB,MAAM,EAAU,QAAQ;SAThD,iBAyCC;SAhCuB,WAAM,GAAN,MAAM;SAAU,aAAQ,GAAR,QAAQ;SACxC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE;aACxB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACrB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aACxB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACxB,CAAC,CAAC,CAAC;SACH,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;aACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACxC,CAAC;KACL,CAAC;KAED,iCAAY,GAAZ,UAAa,WAAyB;SAElC,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,KAAK,yBAAU,CAAC,IAAI,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;aAC3D,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;iBACzD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;aAC3E,CAAC;SACL,CAAC;SACD,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC;KAC3C,CAAC;KAED,mCAAc,GAAd;SAAA,iBAUC;SATG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACnB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,WAAyB;aAC5D,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;aAC/B,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;SAChD,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;aACV,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SAC7B,CAAC,CAAC,CAAC,OAAO,CAAC;aACP,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACxB,CAAC,CAAC,CAAC;KACP,CAAC;KAvCM,kBAAO,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;KAwC5C,iBAAC;AAAD,EAAC;AAOD;KACI,MAAM,CAAC;SACH,QAAQ,EAAE,IAAI;SACd,QAAQ,EAAE,mBAAO,CAAC,GAAmB,CAAC,EAAE;SACxC,KAAK,EAAE,IAAI;SACX,OAAO,EAAE,eAAe;SACxB,gBAAgB,EAAE;aACd,OAAO,EAAE,UAAU;aACnB,WAAW,EAAE,IAAI;aACjB,MAAM,EAAE,cAAc;aACtB,GAAG,EAAE,IAAI;UACZ;SACD,UAAU,EAAE,UAAU;SACtB,YAAY,EAAE,SAAS;SACvB,OAAO,EAAE,IAAI;SACb,UAAU,EAAE,IAAI;SAChB,IAAI,EAAE,UAAC,MAAuB,EAAE,IAAyB,EAAE,MAAsB,EAAE,IAAgB;aAC/F,MAAM,CAAC,MAAM,CAAC;iBACV,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;aACpB,CAAC,EAAE,UAAC,QAAQ;iBACR,QAAQ,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;aACtC,CAAC,CAAC,CAAC;SACP,CAAC;MACJ,CAAC;AACN,EAAC;AAED,gBAAM,CAAC,SAAS,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;;;;;;;;;ACvF5C,oCAAuB,EAAW,CAAC;AACnC,0CAAkE,EAAwB,CAAC;AAC3F,KAAY,OAAO,uBAAM,EAAc,CAAC;AACxC,KAAY,CAAC,uBAAM,EAAQ,CAAC;AAE5B;KAiCI,oBAAoB,UAAqC,EAAU,MAAsB,EAAU,EAAE,EAAU,QAAQ,EAAU,QAAQ,EAAU,YAAY,EAAU,aAAsC;SAjCnN,iBAoPC;SAnNuB,eAAU,GAAV,UAAU,CAA2B;SAAU,WAAM,GAAN,MAAM,CAAgB;SAAU,OAAE,GAAF,EAAE;SAAU,aAAQ,GAAR,QAAQ;SAAU,aAAQ,GAAR,QAAQ;SAAU,iBAAY,GAAZ,YAAY;SAAU,kBAAa,GAAb,aAAa,CAAyB;SA7B/M,mBAAc,GAAkB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;SAI1D,WAAM,GAAY,KAAK,CAAC;SACxB,aAAQ,GAAY,IAAI,CAAC;SAyBrB,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,CAAC;SAC3C,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC;SAEvC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;aACnC,KAAI,CAAC,WAAW,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aACtC,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE,EAAE,KAAI,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC;aAC1H,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC;iBACd,KAAI,CAAC,WAAW,EAAE,CAAC;iBACnB,KAAI,CAAC,eAAe,EAAE,CAAC;iBACvB,KAAI,CAAC,QAAQ,EAAE,CAAC;aACpB,CAAC;aAAC,IAAI,CAAC,CAAC;iBACJ,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,IAAI,EAAE,CAAC;iBAC7D,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,WAAW,IAAI,EAAE,CAAC;aAC5D,CAAC;SACL,CAAC,CAAC,CAAC;SACH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACjD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC/C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAE7C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE;aACxB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aACxB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACtB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC1B,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aACzB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aACzB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACrB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aACzB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC5B,CAAC,CAAC,CAAC;SAEH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;aACf,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC;SACxB,CAAC,EAAE,UAAC,QAAQ,EAAE,QAAQ;aAClB,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC;iBACnC,KAAI,CAAC,QAAQ,EAAE,CAAC;aACpB,CAAC;SACL,CAAC,CAAC,CAAC;KACP,CAAC;KAED,8BAAS,GAAT;SACI,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;aACzC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;SACpD,CAAC;SAED,MAAM,CAAC,EAAE,CAAC;KACd,CAAC;KAQD,sCAAiB,GAAjB,UAAkB,MAAM,EAAE,WAAyB,EAAE,IAAI;SAAzD,iBAuBC;SAtBG,IAAI,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAE/B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAI,IAAI,CAAC,GAAG,eAAY,EAAE,WAAW,CAAC,CAAC;SACjE,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;aACrB,MAAM,CAAC;SACX,CAAC;SAED,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,KAAK,yBAAU,CAAC,IAAI,IAAI,WAAW,CAAC,IAAI,KAAK,yBAAU,CAAC,MAAM,CAAC,CAAC,CAAC;aACjF,UAAU,GAAG,EAAE,CAAC;aAChB,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;iBAC5C,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;aAC3D,CAAC;SACL,CAAC;SAED,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;aACrE,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAG,WAAW,CAAC,UAAU,IAAI,OAAO,CAAE,CAAC,CAAC;aACnE,KAAI,CAAC,QAAQ,CAAC;iBACV,EAAE,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC;qBAC1B,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;iBAC9C,CAAC;aACL,CAAC,EAAE,GAAG,CAAC,CAAC;SACZ,CAAC,CAAC,CAAC;KACP,CAAC;KAKD,gCAAW,GAAX;SAAA,iBA6BC;SA5BG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SAEpC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,YAAY;aAEhE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;aAC5H,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,KAAG,KAAI,CAAC,WAAW,CAAC,KAAO,CAAC,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;aAErI,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,UAAC,WAAyB;iBAC9C,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,KAAK,yBAAU,CAAC,IAAI,CAAC,CAAC,CAAC;qBACvC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAC,MAAM,EAAE,IAAS;yBACzL,KAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;qBAC5D,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;iBAClB,CAAC;aACL,CAAC,CAAC,CAAC;aAEH,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;iBACvC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,WAAW,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAC,MAAM;qBACvI,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;iBAC9C,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;aAClB,CAAC;aAED,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;iBACtC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,8DAA8D,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,WAAW,CAAC,4EAA4E,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAC,MAAM;qBACpQ,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC;iBACnF,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;aAClB,CAAC;aACD,KAAI,CAAC,UAAU,CAAC,UAAU,CAAI,KAAI,CAAC,GAAG,qBAAkB,EAAE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC9F,CAAC,CAAC,CAAC;KACP,CAAC;KAKD,oCAAe,GAAf;SAAA,iBAsCC;SArCG,IAAM,QAAQ,GAAQ,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE,EAAE,gBAAgB,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,kBAAkB,EAAE,CAAC,OAAO,EAAE,CAAC;SAC3J,IAAM,IAAI,GAAG,EAAE,CAAC;SAChB,IAAI,cAAc,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;SAGlE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,UAAC,IAAI;aACtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACxB,CAAC,CAAC,CAAC;SAEH,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,YAAY;aAC3D,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,UAAC,WAAyB,EAAE,GAAG;iBACnD,IAAI,SAAS,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;iBAG9C,MAAM,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;qBACvB,KAAK,yBAAU,CAAC,IAAI,CAAC;qBACrB,KAAK,yBAAU,CAAC,MAAM,CAAC;qBACvB,KAAK,yBAAU,CAAC,OAAO;yBACnB,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,UAAC,MAAM,EAAE,IAAS;6BAC3K,KAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;yBACtD,CAAC,CAAC,CAAC;yBAEH,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;6BACZ,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;yBACrC,CAAC;yBAKD,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;yBACpC,KAAK,CAAC;iBACd,CAAC;aACL,CAAC,CAAC,CAAC;aAEH,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,QAAQ,CAAC,CAAC;aAChD,KAAI,CAAC,UAAU,CAAC,UAAU,CAAI,KAAI,CAAC,GAAG,yBAAsB,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;SAClF,CAAC,CAAC,CAAC;KACP,CAAC;KAMD,gCAAW,GAAX,UAAY,KAAa;SACrB,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;SAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;SAC1C,IAAI,CAAC,SAAS,EAAE,CAAC;KACrB,CAAC;KAOD,+BAAU,GAAV,UAAW,IAAY,EAAE,KAAa;SAClC,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;aACjC,IAAI,GAAG,CAAC,CAAC;SACb,CAAC;SACD,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;SAC3B,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;aACX,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;SAC/C,CAAC;SACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;KAC9C,CAAC;KAMD,6BAAQ,GAAR,UAAS,UAAgB;SAAzB,iBAwBC;SAtBG,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aACb,MAAM,CAAC;SACX,CAAC;SAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACnB,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,IAAI,EAAE,CAAC;SAExC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aAClE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SACpD,CAAC;SAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SAEhE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;aAChB,MAAM,CAAC;SACX,CAAC;SACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAC,MAAM;aACrB,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAI,CAAC,WAAW,EAAE,MAAM,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;aACtE,KAAI,CAAC,UAAU,CAAC,UAAU,CAAI,KAAI,CAAC,GAAG,oBAAiB,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;SAC9E,CAAC,CAAC,CAAC,OAAO,CAAC;aACP,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACxB,CAAC,CAAC,CAAC;KACP,CAAC;KAlPM,kBAAO,GAAG,CAAC,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,cAAc,EAAE,eAAe,CAAC,CAAC;KAmP7G,iBAAC;AAAD,EAAC;AAOD;KACI,MAAM,CAAC;SACH,QAAQ,EAAE,IAAI;SACd,QAAQ,EAAE,mBAAO,CAAC,GAAmB,CAAC,EAAE;SACxC,KAAK,EAAE,IAAI;SACX,gBAAgB,EAAE;aACd,GAAG,EAAE,GAAG;aACR,QAAQ,EAAE,IAAI;aACd,OAAO,EAAE,UAAU;aACnB,UAAU,EAAE,IAAI;aAChB,WAAW,EAAE,IAAI;aACjB,QAAQ,EAAE,IAAI;aACd,UAAU,EAAE,IAAI;aAChB,KAAK,EAAE,IAAI;aACX,YAAY,EAAE,IAAI;aAClB,WAAW,EAAE,IAAI;aACjB,KAAK,EAAE,IAAI;UACd;SACD,UAAU,EAAE,UAAU;SACtB,YAAY,EAAE,SAAS;SACvB,OAAO,EAAE,IAAI;SACb,UAAU,EAAE,IAAI;MACnB,CAAC;AACN,EAAC;AAED,gBAAM,CAAC,MAAM,CAAC,MAAM,EAAE;KAClB,MAAM,CAAC,UAAC,UAAU,EAAE,IAAI,EAAE,OAAO;SAC7B,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC;aAAC,MAAM,CAAC,EAAE,CAAC;SAE3B,EAAE,CAAC,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC;aAClB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;SAC/C,CAAC;SAED,MAAM,CAAC,UAAU,CAAC;KACtB,CAAC;AACL,EAAC,CAAC,CAAC;AAEH,gBAAM,CAAC,SAAS,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;;;;;;;;;ACrS5C,oCAAuB,EAAW,CAAC;AAEnC,KAAY,CAAC,uBAAM,EAAQ,CAAC;AAE5B,KAAM,QAAQ,GAAG,oBAAoB,CAAC;AAEtC;KAWI,oBAAoB,MAAM,EAAU,QAAQ,EAAU,aAAsC,EAAU,YAAY,EAAU,SAAqC;SAA7I,WAAM,GAAN,MAAM;SAAU,aAAQ,GAAR,QAAQ;SAAU,kBAAa,GAAb,aAAa,CAAyB;SAAU,iBAAY,GAAZ,YAAY;SAAU,cAAS,GAAT,SAAS,CAA4B;KAEjK,CAAC;KAED,6BAAQ,GAAR,UAAS,KAAK;SAAd,iBAgBC;SAfG,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;SAErE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACV,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;aACnB,OAAO,CAAC,IAAI,CAAC,UAAC,MAAM;iBAChB,KAAI,CAAC,WAAW,CAAC,WAAW,KAAK,IAAI,IAAI,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACrE,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;qBACpC,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;iBAChC,CAAC;aACL,CAAC,CAAC,CAAC,OAAO,CAAC;iBACP,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACxB,CAAC,CAAC,CAAC;SACP,CAAC;SAED,MAAM,CAAC,OAAO,CAAC;KACnB,CAAC;KAED,mCAAc,GAAd;SAAA,iBAWC;SAVG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;aACxC,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aACzB,KAAI,CAAC,QAAQ,GAAG;iBACZ,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE;iBAClF,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE;iBAC1F,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,UAAC,MAAM;qBAC7F,KAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;iBAC5B,CAAC,CAAC,CAAC,OAAO,EAAE;cACf,CAAC;SACN,CAAC,CAAC,CAAC;KACP,CAAC;KA3CM,kBAAO,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,eAAe,EAAE,cAAc,EAAE,WAAW,CAAC,CAAC;KA4C1F,iBAAC;AAAD,EAAC;AAOD;KACI,MAAM,CAAC;SACH,QAAQ,EAAE,IAAI;SACd,QAAQ,EAAE,mBAAO,CAAC,GAA0B,CAAC,EAAE;SAC/C,KAAK,EAAE,IAAI;SACX,OAAO,EAAE,MAAI,QAAU;SACvB,gBAAgB,EAAE;aACd,GAAG,EAAE,GAAG;aACR,QAAQ,EAAE,UAAU;aACpB,cAAc,EAAE,YAAY;UAC/B;SACD,UAAU,EAAE,UAAU;SACtB,YAAY,EAAE,eAAe;SAC7B,OAAO,EAAE,KAAK;SACd,OAAO,EAAE,UAAC,IAAI;aACV,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;aAC/C,MAAM,CAAC,UAAC,MAAM,EAAE,IAAyB,EAAE,MAAM,EAAE,IAAgB;iBAC/D,MAAM,CAAC,MAAM,CAAC;qBACV,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;iBACpB,CAAC,EAAE;qBACC,IAAI,CAAC,cAAc,EAAE,CAAC;iBAC1B,CAAC,CAAC,CAAC;aACP,CAAC,CAAC;SACN,CAAC;MACJ,CAAC;AACN,EAAC;AAED,gBAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;;;;;;;;;ACrFtC,oCAAuB,EAAW,CAAC;AAEnC,KAAY,CAAC,uBAAM,EAAQ,CAAC;AAC5B,KAAY,OAAO,uBAAM,EAAc,CAAC;AAExC,KAAM,KAAK,GAAG,gBAAgB,CAAC;AAE/B;KAWI,oBAAoB,QAAQ,EAAU,YAAY;SAA9B,aAAQ,GAAR,QAAQ;SAAU,iBAAY,GAAZ,YAAY;SAC9C,IAAI,CAAC,iBAAiB,EAAE,CAAC;SACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;KACxC,CAAC;KAKD,oCAAe,GAAf;SAAA,iBAIC;SAHG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,GAAG,EAAE,GAAG;aAC9B,OAAO,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SAC9B,CAAC,CAAC,CAAC;KACP,CAAC;KAKD,sCAAiB,GAAjB;SAAA,iBAUC;SATG,IAAI,CAAC,QAAQ,GAAG;aACZ,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,uBAAuB,CAAC,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE;aAC3F,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,UAAC,MAAM;iBACrG,KAAI,CAAC,eAAe,EAAE,CAAC;aAC3B,CAAC,CAAC,CAAC,OAAO,EAAE;aACZ,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,OAAO,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,WAAW,CAAC,oDAAoD,CAAC,CAAC,QAAQ,CAAC,UAAC,MAAM;iBAC7I,KAAI,CAAC,MAAM,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC;aAC/B,CAAC,CAAC,CAAC,OAAO,EAAE;UACf,CAAC;KACN,CAAC;KAOD,gCAAW,GAAX,UAAY,MAAM,EAAE,KAAyB;SACzC,IAAM,UAAU,GAAG,EAAE,CAAC;SAEtB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aAClE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,IAAI,EAAE,GAAW;iBACvC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;qBAC3B,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;yBACxD,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;qBACvC,CAAC;qBAAC,IAAI,CAAC,CAAC;yBACJ,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;qBACpE,CAAC;iBACL,CAAC;aACL,CAAC,CAAC,CAAC;aAMH,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;SAC9B,CAAC;KACL,CAAC;KAhEM,kBAAO,GAAG,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;KAiElD,iBAAC;AAAD,EAAC;AAOD;KACI,MAAM,CAAC;SACH,QAAQ,EAAE,IAAI;SACd,QAAQ,EAAE,mBAAO,CAAC,GAAqB,CAAC,EAAE;SAC1C,gBAAgB,EAAE;aACd,QAAQ,EAAE,UAAU;aACpB,GAAG,EAAE,GAAG;aACR,QAAQ,EAAE,GAAG;aACb,MAAM,EAAE,GAAG;aACX,QAAQ,EAAE,IAAI;aACd,KAAK,EAAE,IAAI;UACd;SACD,OAAO,EAAE,MAAI,KAAO;SACpB,UAAU,EAAE,UAAU;SACtB,YAAY,EAAE,WAAW;SACzB,OAAO,EAAE,IAAI;MAChB,CAAC;AACN,EAAC;AAED,gBAAM,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;;;;;;;;;ACnGnC,oCAAuB,EAAW,CAAC;AACnC,0CAAsD,EAAwB,CAAC;AAU/E;KAaI,oBAAoB,MAAM,EAAU,QAAQ,EAAU,QAAQ,EAAU,YAAY,EAAU,aAAsC,EAAU,SAAS;SAb3J,iBAgKC;SAnJuB,WAAM,GAAN,MAAM;SAAU,aAAQ,GAAR,QAAQ;SAAU,aAAQ,GAAR,QAAQ;SAAU,iBAAY,GAAZ,YAAY;SAAU,kBAAa,GAAb,aAAa,CAAyB;SAAU,cAAS,GAAT,SAAS;SAVvJ,WAAM,GAAY,IAAI,CAAC;SAIvB,kBAAa,GAAW,CAAC,CAAC;SAOtB,IAAI,CAAC,WAAW,EAAE,CAAC;SAEnB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE;aACxB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACrB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;aACnB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACrB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC5B,CAAC,CAAC,CAAC;KACP,CAAC;KAOD,6BAAQ,GAAR,UAAS,MAAoB,EAAE,MAAiB;SAC5C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;aACf,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;SACrB,CAAC;SACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAG,MAAM,CAAC,GAAG,UAAM,CAAC,CAAC;KAC1D,CAAC;KAQD,6BAAQ,GAAR,UAAS,MAAoB,EAAE,KAAa;SACxC,MAAM,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,aAAa,IAAI,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;KACvJ,CAAC;KAMD,uCAAkB,GAAlB,UAAmB,KAAc;SAC7B,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,CAAC;SAGrG,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;aACd,IAAI,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,MAAI,WAA4B,CAAC,GAAG,CAAE,CAAC,CAAC;aAEzE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;iBAC7C,MAAM,CAAC,KAAK,CAAC;aACjB,CAAC;SACL,CAAC;SAED,MAAM,CAAC,IAAI,CAAC;KAChB,CAAC;KAMD,iCAAY,GAAZ;SAAA,iBAaC;SAZG,IAAI,GAAG,GAAG,IAAI,CAAC;SAEf,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,EAAE,UAAC,MAAM,EAAE,KAAK;aAClD,GAAG,GAAG,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;aAErC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBACP,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC3B,MAAM,CAAC,KAAK,CAAC;aACjB,CAAC;SACL,CAAC,CAAC,CAAC;SAEH,MAAM,CAAC,GAAG,CAAC;KACf,CAAC;KAKD,0BAAK,GAAL;SAAA,iBAQC;SAPG,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACnB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;SACjB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;SACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACpB,IAAI,CAAC,QAAQ,CAAC;aACV,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACvB,CAAC,EAAE,CAAC,CAAC,CAAC;KACV,CAAC;KAOD,gCAAW,GAAX;SAAA,iBA2BC;SA1BG,IAAI,CAAC,QAAQ,GAAG;aACZ,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,gBAAgB,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,UAAC,MAAM;iBACvJ,KAAI,CAAC,aAAa,IAAI,KAAI,CAAC,aAAa,EAAE,CAAC;aAC/C,CAAC,CAAC,CAAC,OAAO,EAAE;aACZ,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,eAAe,CAAC,CAAC,gBAAgB,CAAC,yEAAyE,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,UAAC,MAAM;iBAC/M,EAAE,CAAC,CAAC,KAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC;qBACzI,KAAI,CAAC,aAAa,EAAE,CAAC;iBACzB,CAAC;aACL,CAAC,CAAC,CAAC,OAAO,EAAE;aACZ,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,gBAAgB,CAAC,8FAA8F,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,UAAC,MAAM;iBAC1N,EAAE,CAAC,CAAC,KAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;qBACtB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;qBACnB,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAI,CAAC,WAAW,CAAC,GAAG,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;yBACpE,KAAI,CAAC,WAAW,CAAC,WAAW,KAAK,IAAI,IAAI,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;yBAErE,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;6BACpC,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;yBAChC,CAAC;qBAGL,CAAC,CAAC,CAAC,OAAO,CAAC;yBACP,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;qBACxB,CAAC,CAAC,CAAC;iBACP,CAAC;aACL,CAAC,CAAC,CAAC,OAAO,EAAE;UACf,CAAC;KACN,CAAC;KAKD,mCAAc,GAAd;SAAA,iBAyBC;SAxBG,IAAI,WAAW,CAAC;SAEhB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,KAAmB;aACtD,WAAW,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aAEjC,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACzD,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,YAAiC;aACtC,IAAI,OAAO,GAAG,EAAE,CAAC;aAEjB,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,EAAE,UAAC,MAAM;iBACtC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;qBACrB,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;iBAClC,CAAC;iBAED,EAAE,CAAC,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,yBAAU,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,yBAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;qBAInF,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACzB,CAAC;aACL,CAAC,CAAC,CAAC;aACH,WAAW,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;aACrC,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;SACnC,CAAC,CAAC,CAAC;KACP,CAAC;KA9JM,kBAAO,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,cAAc,EAAE,eAAe,EAAE,WAAW,CAAC,CAAC;KA+JtG,iBAAC;AAAD,EAAC;AAOD;KACI,MAAM,CAAC;SACH,QAAQ,EAAE,IAAI;SACd,QAAQ,EAAE,mBAAO,CAAC,GAAqB,CAAC,EAAE;SAC1C,KAAK,EAAE,IAAI;SACX,OAAO,EAAE,iBAAiB;SAC1B,gBAAgB,EAAE;aACd,QAAQ,EAAE,UAAU;aACpB,cAAc,EAAE,YAAY;aAC5B,GAAG,EAAE,GAAG;UACX;SACD,UAAU,EAAE,UAAU;SACtB,YAAY,EAAE,WAAW;SACzB,OAAO,EAAE,IAAI;SACb,UAAU,EAAE,IAAI;SAChB,IAAI,EAAE,UAAC,MAAuB,EAAE,IAAyB,EAAE,KAAqB,EAAE,IAAgB;aAC9F,MAAM,CAAC,MAAM,CAAC;iBACV,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;aACpB,CAAC,EAAE;iBACC,IAAI,CAAC,cAAc,EAAE,CAAC;aAC1B,CAAC,CAAC,CAAC;SACP,CAAC;MACJ,CAAC;AACN,EAAC;AACD,gBAAM,CAAC,SAAS,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;;;;;;;;;AC1M9C,oCAAuB,EAAW,CAAC;AAGnC,KAAM,QAAQ,GAAG,sBAAsB,CAAC;AAExC;KASI,oBAAoB,MAAM,EAAU,QAAQ,EAAU,aAAsC,EAAU,YAAY,EAAU,SAAqC;SAA7I,WAAM,GAAN,MAAM;SAAU,aAAQ,GAAR,QAAQ;SAAU,kBAAa,GAAb,aAAa,CAAyB;SAAU,iBAAY,GAAZ,YAAY;SAAU,cAAS,GAAT,SAAS,CAA4B;KAEjK,CAAC;KAED,mCAAc,GAAd;SAAA,iBAWC;SAVG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;aACxC,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aACzB,KAAI,CAAC,QAAQ,GAAG;iBACZ,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE;iBAClF,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE;iBAC1F,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,UAAC,MAAM;qBAC7F,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;iBAClC,CAAC,CAAC,CAAC,OAAO,EAAE;cACf,CAAC;SACN,CAAC,CAAC,CAAC;KACP,CAAC;KAvBM,kBAAO,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,eAAe,EAAE,cAAc,EAAE,WAAW,CAAC,CAAC;KAwB1F,iBAAC;AAAD,EAAC;AAOD;KACI,MAAM,CAAC;SACH,QAAQ,EAAE,IAAI;SACd,QAAQ,EAAE,mBAAO,CAAC,GAA4B,CAAC,EAAE;SACjD,KAAK,EAAE,IAAI;SACX,OAAO,EAAE,MAAI,QAAU;SACvB,gBAAgB,EAAE;aACd,GAAG,EAAE,GAAG;aACR,QAAQ,EAAE,UAAU;aACpB,cAAc,EAAE,YAAY;UAC/B;SACD,UAAU,EAAE,UAAU;SACtB,YAAY,EAAE,iBAAiB;SAC/B,OAAO,EAAE,KAAK;SACd,OAAO,EAAE,UAAC,IAAI;aACV,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;aAC/C,MAAM,CAAC,UAAC,MAAM,EAAE,IAAyB,EAAE,KAAK,EAAE,IAAgB;iBAC9D,MAAM,CAAC,MAAM,CAAC;qBACV,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;iBACpB,CAAC,EAAE;qBACC,IAAI,CAAC,cAAc,EAAE,CAAC;iBAC1B,CAAC,CAAC,CAAC;aACP,CAAC,CAAC;SACN,CAAC;MACJ,CAAC;AACN,EAAC;AACD,gBAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;;;;;;;;;AC/DtC,oCAAuB,EAAW,CAAC;AAInC,KAAM,KAAK,GAAG,iBAAiB,CAAC;AAEhC;KAOI,oBAAoB,QAAQ,EAAU,YAAY;SAA9B,aAAQ,GAAR,QAAQ;SAAU,iBAAY,GAAZ,YAAY;SAC9C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;KACxC,CAAC;KARM,kBAAO,GAAG,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;KASlD,iBAAC;AAAD,EAAC;AAOD;KACI,MAAM,CAAC;SACH,QAAQ,EAAE,IAAI;SACd,QAAQ,EAAE,mBAAO,CAAC,GAAsB,CAAC,EAAE;SAC3C,gBAAgB,EAAE;aACd,QAAQ,EAAE,UAAU;aACpB,GAAG,EAAE,GAAG;UACX;SACD,OAAO,EAAE,MAAI,KAAO;SACpB,UAAU,EAAE,UAAU;SACtB,YAAY,EAAE,gBAAgB;SAC9B,OAAO,EAAE,IAAI;MAChB,CAAC;AAEN,EAAC;AAED,UAAS,CAAC,OAAO,GAAG,EAAE,CAAC;AAEvB,gBAAM,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;;;;;;;;;ACxCnC,KAAY,CAAC,uBAAM,EAAQ,CAAC;AAC5B,oCAAuB,GAAU,CAAC;AAMlC;KAgBI,wCAAoB,MAAM,EAAU,QAAQ,EAAU,OAAO,EAAU,EAAqB,EAAU,QAAQ,EAAU,YAAY,EAAU,aAAsC;SAhBxL,iBA+FC;SA/EuB,WAAM,GAAN,MAAM;SAAU,aAAQ,GAAR,QAAQ;SAAU,YAAO,GAAP,OAAO;SAAU,OAAE,GAAF,EAAE,CAAmB;SAAU,aAAQ,GAAR,QAAQ;SAAU,iBAAY,GAAZ,YAAY;SAAU,kBAAa,GAAb,aAAa,CAAyB;SAXpL,kBAAa,GAAgB,EAAE,CAAC;SAChC,qBAAgB,GAAmB,EAAE,CAAC;SACtC,mBAAc,GAAe,EAAE,CAAC;SAEhC,cAAS,GAAQ,EAAE,CAAC;SAKpB,YAAO,GAAW,mBAAmB,CAAC;SAGlC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;aAChB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,cAAQ,CAAC,CAAC,CAAC;aAC7C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,UAAC,KAAK,EAAE,GAAG;iBAExC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,KAAI,CAAC,GAAG,CAAC,CAAC;iBAEjD,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,KAAK,KAAI,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC/B,MAAM,CAAC;iBACX,CAAC;iBACD,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;iBAC9B,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;qBACxC,IAAI,SAAO,GAAG,CAAC,CAAC,MAAM,CAAC,KAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,UAAC,IAAS;yBACzD,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC;qBAC/B,CAAC,CAAC,CAAC;qBACH,EAAE,CAAC,CAAC,SAAO,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;yBACtB,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBACzC,CAAC;qBAAC,IAAI,CAAC,CAAC;yBACJ,CAAC,CAAC,IAAI,CAAC,SAAO,EAAE,UAAC,GAAG,EAAE,GAAG;6BACrB,CAAC,CAAC,MAAM,CAAC,SAAO,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;yBAChC,CAAC,CAAC,CAAC;qBACP,CAAC;iBACL,CAAC;aACL,CAAC,CAAC,CAAC;SACP,CAAC;SACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,sBAAsB,EAAE,UAAC,KAAK,EAAE,KAAa;aACzD,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;aACxB,KAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;aAC3B,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;aACzB,KAAI,CAAC,SAAS,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;aAC5B,KAAI,CAAC,GAAG,GAAG,EAAE,CAAC;aACd,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SACjC,CAAC,CAAC,CAAC;SAEH,IAAI,CAAC,MAAM,CAAC,GAAG,CAAI,IAAI,CAAC,OAAO,oBAAiB,EAAE,UAAC,KAAK,EAAE,IAAI;aAC1D,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,UAAC,IAAI,EAAE,GAAG;iBACxB,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;qBAC1C,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;iBACvD,CAAC;aACL,CAAC,CAAC,CAAC;aACH,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SAE7C,CAAC,CAAC,CAAC;SAEH,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;SAC3B,IAAI,CAAC,QAAQ,GAAG;aACZ,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,wBAAwB,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE;aACzF,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE;UAC7E,CAAC;KACN,CAAC;KAED,yDAAgB,GAAhB,UAAiB,KAAa;SAA9B,iBA2BC;SA1BG,IAAI,CAAC,SAAS,GAAG,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;SACzE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;SACpB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;SAEjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SAErB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACnB,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC;aACR,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;UAE/G,CAAC,CAAC,IAAI,CAAC,UAAC,OAAY;aACjB,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;SAEvF,CAAC,CAAC,CAAC,IAAI,CAAC;aACJ,EAAE,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;iBACjC,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC;aAG9D,CAAC;aAAC,IAAI,CAAC,CAAC;iBACJ,MAAM,CAAC,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;aACxC,CAAC;SACL,CAAC,CAAC,CAAC,OAAO,CAAC;aACP,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACxB,CAAC,CAAC,CAAC;KAEP,CAAC;KA7FM,sCAAO,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,cAAc,EAAE,eAAe,CAAC,CAAC;KA8F1G,qCAAC;AAAD,EAAC;AA/FY,uCAA8B,iCA+F1C;AAED;KACI,MAAM,CAAC;SACH,QAAQ,EAAE,IAAI;SACd,KAAK,EAAE,EAAE;SACT,gBAAgB,EAAE;aACd,UAAU,EAAE,IAAI;UACnB;SAED,QAAQ,EAAE,mBAAO,CAAC,GAA6B,CAAC;SAChD,UAAU,EAAE,8BAA8B;SAC1C,YAAY,EAAE,eAAe;MAChC;AACL,EAAC;AAED,gBAAM,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;AAE5C,gBAAM,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,MAAM,EAAE,UAAU,IAAI;SAC/C,MAAM,CAAC,UAAU,IAAI;aACjB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SAClC,CAAC;KACL,CAAC,CAAC,CAAC,CAAC;AAEJ,gBAAM,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,YAAY,EAAE,UAAU,UAAU;SACnE,MAAM,CAAC;aACH,QAAQ,EAAE,GAAG;aACb,IAAI,EAAE,UAAU,KAAK,EAAE,OAAO,EAAE,KAAU;iBACtC,IAAI,SAAS,GAAG,WAAW,GAAG,CAAC,KAAK,CAAC,eAAe,IAAI,SAAS,CAAC,EAC9D,CAAC,CAAC;iBAEN,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAC,KAAK,EAAE,QAAQ;qBACjC,UAAU,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;iBACjD,CAAC,EAAE;qBACK,SAAS,EAAE,KAAK,CAAC,SAAS,IAAI,EAAE;qBAChC,OAAO,EAAE,KAAK;kBACjB,CAAC,CAAC;iBAEP,UAAU,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,EAAE,UAAU,CAAC,EAAE,GAAG;qBAChD,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAChB,CAAC,CAAC,CAAC;aACP,CAAC;UACJ,CAAC;KACN,CAAC,CAAC,CAAC,CAAC;;;;;;;;;AC7IJ,KAAY,UAAU,uBAAM,EAAkB,CAAC;AAC/C,qBAAO,GAAmB,CAAC;AAC3B,KAAY,eAAe,uBAAM,EAAwB,CAAC;AAC1D,KAAY,CAAC,uBAAM,EAAQ,CAAC;AAC5B,oCAA2B,GAAU,CAAC;AACtC,8CAA4B,EAAiC,CAAC;AAC9D,yCAAwB,GAA4B,CAAC;AACrD,qCAAoB,GAA0B,CAAC;AAC/C,sCAAqB,GAA2B,CAAC;AACjD,qBAAO,GAAqD,CAAC;AAC7D,0CAA2B,EAA6C,CAAC;AAEzE,KAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,iBAAO,EAAE,kBAAQ,EAAE,qBAAW,EAAE,0BAAe,EAAE,UAAU,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC,CAAC;AAEzI,OAAM,CAAC,MAAM,CAAC;KACV,gBAAgB;KAChB,oBAAoB;KACpB,eAAe;KACf,oBAAoB;KACpB,mBAAmB;KACnB,4BAA4B;KAC5B,UAAC,cAAc,EAAE,kBAAkB,EAAE,aAAa,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,0BAA0B,EAAE,qBAA6D;SAwBhL,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC;cAC9B,IAAI,EAAE;cACN,cAAc,CAAC,MAAM,CAAC;cACtB,aAAa,CAAC,MAAM,CAAC;cACrB,WAAW,CAAC,KAAK,CAAC,CAAC;SAExB,mBAAU,CAAC,kBAAkB,EAAE,cAAc,CAAC,CAAC;SAE/C,0BAA0B,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;KACjE,CAAC,CAAC,CAAC;MACF,GAAG,CAAC,CAAC,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,mBAAmB,EAAE,UAAC,UAAgC,EAAE,MAAM,EAAE,EAAgB,EAAE,QAA4B,EAAE,QAAQ;SAChL,IAAI,KAAK,GAA0F,EAAE,CAAC;SAEtG,IAAI,aAAa,GAAG,UAAC,UAAU;aAC3B,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SACjE,CAAC,CAAC;SAEF,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE,UAAC,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU;aAC9E,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;SACpF,CAAC,CAAC,CAAC;SAEH,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE,UAAU,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO;aAClG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;iBACpB,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE;qBACZ,OAAO,EAAE,OAAO;qBAChB,QAAQ,EAAE,QAAQ;qBAClB,SAAS,EAAE,SAAS;qBACpB,UAAU,EAAE,UAAU;qBACtB,OAAO,EAAE,OAAO;kBACnB,CAAC,CAAC;iBACH,KAAK,CAAC,cAAc,EAAE,CAAC;iBACvB,EAAE,CAAC,GAAG,CAAC;qBACH,GAAG,EAAE,QAAQ,CAAC,UAAU,CAAC,SAAS,GAAG,cAAc,CAAC;qBACpD,KAAK,EAAE,QAAQ,CAAC,UAAU,CAAC,SAAS,GAAG,gBAAgB,CAAC;kBAC3D,CAAC,CAAC,IAAI,CAAC,cAAQ,aAAa,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,cAAQ,aAAa,CAAC,KAAK,CAAC,EAAC,CAAC,CAAC,CAAC;aAC3E,CAAC;SACL,CAAC,CAAC,CAAC;SAEH,QAAQ,CAAC,QAAQ,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;aAC9C,UAAU,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC;SAC/C,CAAC,CAAC,CAAC;KACP,CAAC,CAAC,CAAC,CAAC;AAGR,OAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE;KAC/B,GAAG,EAAE,oBAAoB;KACzB,IAAI,EAAE,QAAQ;KACd,IAAI,EAAE,yBAAU,CAAC,IAAI;KACrB,KAAK,EAAE,QAAQ;KACf,IAAI,EAAE;SACF,UAAU,EAAE;aACR,IAAI,EAAE,QAAQ;aACd,UAAU,EAAE;iBACR,GAAG,EAAE;qBACD,IAAI,EAAE,QAAQ;qBACd,KAAK,EAAE,KAAK;kBACf;cACJ;UACJ;SACD,UAAU,EAAE,CAAC;iBACT,GAAG,EAAE,KAAK;iBACV,IAAI,EAAE,QAAQ;iBACd,WAAW,EAAE,KAAK;iBAClB,SAAS,EAAE,UAAU;cACxB,CAAC;MACL;EACJ,CAAC,CAAC;AAEH;mBAAe,KAAG,MAAM,CAAC,IAAM,CAAC;;;;;;;;;;ACvHhC,0CAAuC,EAAgD,CAAC;AACxF,6CAAyB,EAAmD,CAAC;AAO7E;KACI,IAAI,WAAW,GAAiB;SAC5B,GAAG,EAAE,OAAO;SACZ,IAAI,EAAE,yBAAU,CAAC,IAAI;SACrB,IAAI,EAAE,EAAE;SACR,IAAI,EAAE;aACF,UAAU,EAAE;iBACR,IAAI,EAAE,QAAQ;iBACd,QAAQ,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;iBAClC,UAAU,EAAE;qBACR,QAAQ,EAAE;yBACN,IAAI,EAAE,QAAQ;yBACd,SAAS,EAAE,CAAC;yBACZ,SAAS,EAAE,EAAE;yBACb,KAAK,EAAE,KAAK;sBACf;qBACD,QAAQ,EAAE;yBACN,IAAI,EAAE,QAAQ;yBACd,KAAK,EAAE,IAAI;yBACX,SAAS,EAAE,CAAC;yBACZ,SAAS,EAAE,EAAE;sBAChB;kBACJ;cACJ;aACD,UAAU,EAAE,CAAC;qBACT,GAAG,EAAE,UAAU;qBACf,IAAI,EAAE,QAAQ;qBACd,WAAW,EAAE,KAAK;qBAClB,IAAI,EAAE;yBACF,QAAQ,EAAE,SAAS;sBACtB;qBACD,SAAS,EAAE,uBAAuB;kBACrC,EAAE;qBACC,GAAG,EAAE,UAAU;qBACf,IAAI,EAAE,UAAU;qBAChB,IAAI,EAAE;yBACF,QAAQ,EAAE,MAAM;sBACnB;qBACD,SAAS,EAAE,uBAAuB;kBACrC,CAAC;UACL;SACD,UAAU,EAAE,CAAC;iBACT,GAAG,EAAE,aAAa;iBAClB,MAAM,EAAE,4BAAU,CAAC,IAAI;iBACvB,OAAO,EAAE,EAAE;iBACX,IAAI,EAAE,IAAI;iBACV,IAAI,EAAE,iBAAiB;iBACvB,SAAS,EAAE,KAAK;cACnB,CAAC;MACL,CAAC;KAEF,MAAM,CAAC,WAAW,CAAC;AACvB,EAAC;AAED;KACI,IAAI,WAAW,GAAiB;SAC5B,GAAG,EAAE,QAAQ;SACb,IAAI,EAAE,yBAAU,CAAC,OAAO;SACxB,IAAI,EAAE,EAAE;SACR,OAAO,EAAE;aACL,YAAY,EAAE,MAAM;aACpB,cAAc,EAAE,SAAS;aACzB,SAAS,EAAE,MAAM;aACjB,aAAa,EAAE,KAAK;UACvB;SACD,UAAU,EAAE,CAAC;iBACT,GAAG,EAAE,cAAc;iBACnB,MAAM,EAAE,4BAAU,CAAC,IAAI;iBACvB,OAAO,EAAE,EAAE;iBACX,IAAI,EAAE,IAAI;iBACV,IAAI,EAAE,kBAAkB;iBACxB,SAAS,EAAE,KAAK;cACnB,CAAC;MACL,CAAC;KAEF,MAAM,CAAC,WAAW,CAAC;AACvB,EAAC;AAED;mBAAe,UAAC,MAAkB;KAC9B,IAAM,MAAM,GAAG,CAAC,gBAAgB,EAAE,EAAE,iBAAiB,EAAE,CAAC,CAAC;KAEzD,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,KAAK;SACjB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;KACnC,CAAC,CAAC,CAAC;AACP,EAAC","file":"0.729fdfcd1c3491711dfd.hot-update.js","sourcesContent":["/**\n * Created by NICK on 16/8/10.\n */\n\nimport * as _ from 'lodash';\nimport { Force } from '../d3/force.d3';\nimport { IActionModel, ActionType, IClientData } from '../../../directives/action/models/action.model';\n\nexport class D3Controller {\n    static $inject = [\"$stateParams\", \"fxAction\", \"toolbarUtils\", \"materialUtils\"];\n\n    isBusy: boolean;\n    actionModel: IActionModel;\n    private key: string;\n    clientData: IClientData;\n\n    constructor(private $stateParams: ng.ui.IStateParamsService, private fxAction, private toolbarUtils, private materialUtils) {\n        // new Force(\"#paged3\");\n        this.clientData = {};\n        this.key = $stateParams[\"key\"];\n        this.doInit();\n    }\n\n    /**\n     * 按钮事件\n     */\n    doClickActionMenu($event, actionModel, item) {\n        this.fxAction.doActionModel($event, actionModel, item).then((result) => {\n            this.materialUtils.showMsg(`${actionModel.successMsg || \"操作成功!\"}`);\n            if (actionModel.refreshList) {\n\n            }\n        });\n    }\n\n    /**\n     * 获取数据\n     */\n    doGetData() {\n        let promise = this.fxAction.doAction(this.key, { limit: 100, where: {} });\n\n        if (!promise) {\n            return;\n        }\n        this.isBusy = true;\n        promise.then((result) => {\n            return this.fxAction.doDealResult(this.actionModel, result, this.clientData);\n        }).then((results) => {\n\n\n        }).finally(() => {\n            this.isBusy = false;\n            setTimeout(() => {\n                new Force(\"#paged3\", this.clientData.rows);\n            }, 200);\n        });\n    }\n\n    /**\n     * 初始化数据，按钮组\n     */\n    doInit() {\n        this.fxAction.getModel(this.key).then((actionModel) => {\n            this.actionModel = actionModel;\n            this.actionModel.list.toolbars = [];\n            this.doGetData();\n\n            return this.fxAction.getModels(this.actionModel.actions);\n        }).then((actionModels) => {\n            _.forEach(actionModels, (actionModel: IActionModel) => {\n                if (actionModel.type !== ActionType.list) {\n                    this.actionModel.list.toolbars.push(this.toolbarUtils.btnBuilder(actionModel.title, \"md-fab md-raised md-mini\", false).tooltipBuilder(\"\").iconBuilder(actionModel.icon, { fill: \"black\" }).btnClick(($event, item: any) => {\n                        this.doClickActionMenu($event, actionModel, item || {});\n                    }).toValue());\n                }\n            });\n            if (this.actionModel.list.showRefreshBtn) {\n                this.actionModel.list.toolbars.push(this.toolbarUtils.btnBuilder(\"刷新\", \"md-fab md-raised md-mini\", false).iconBuilder(\"refresh\", { fill: \"black\" }).btnClick(($event) => {\n                    this.doGetData();\n                }).toValue());\n            }\n        });\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/page/ctls/page.d3.controller.ts\n **/","/**\n * 操作类型\n */\nimport {IInterfaceModel} from \"./interface.model\";\nexport enum ActionType {\n    none = 0,\n    list = 1,\n    form = 2,\n    wizard = 3,\n    confirm = 4\n}\n\nexport interface IConfirm {\n    // confirm操作标题\n    confirmTitle: string;\n    // confirm操作显示内容\n    confirmContent: string;\n    // confirm操作ok按钮文字\n    confirmOk?: string;\n    // confirm操作cancel按钮文字\n    confirmCancel?: string;\n}\n\nexport interface ISchemaForm {\n    // form操作的时候表单schema\n    formSchema?: string | Array<Object>;\n    // form操作的时候字段schema\n    dataSchema?: string | Object;\n    // 表单标题\n    title?: string;\n    // 状态\n    status?: number;\n    // 数据的JSON路径,默认应该为\"/\"\n    path?: string;\n}\n\nexport interface IWizard {\n    defaultSchema?: ISchemaForm;\n    // schemas?: Array<ISchemaForm>;\n    actions: Array<string|IActionModel>;\n}\n\nexport interface IColumn {\n    // 显示内容\n    content: string;\n    // 表头\n    title: string;\n    // 名字\n    name?: string;\n    // 排序项\n    sort?: string;\n    // 单位\n    unit?: string;\n}\n\nexport interface IClientData {\n    total?: number;\n    rows?: Array<any>;\n}\n\nexport interface IQueryData {\n    limit?: number;\n    offset?: number;\n    page?: number;\n    where?: any;\n    attributes?: any;\n    order?: string;\n}\n\nexport interface IList {\n    // 列表的头\n    columns: Array<IColumn>;\n    // 数据项操作列表\n    itemToolbars?: Array<Object>;\n    // 是否显示分页\n    showPagination: boolean;\n    toolbars?: Array<Object>;\n    searchToolbars?: Array<Object>;\n    // 搜索操作KEY\n    searchActionKey?: String;\n    // 是否显示搜索按钮\n    showSearchBtn?: boolean;\n    // 是否显示刷新按钮\n    showRefreshBtn?: boolean;\n    // 默认显示搜索表单\n    showSearchPanel?: boolean;\n    queryData?: IQueryData;\n}\n\nexport interface IItemActionSet {\n    key: string,\n    condition?: string;\n}\n\n\n/**\n * 操作的模型\n */\nexport interface IActionModel {\n    // 唯一字符串\n    key: string;\n    // 图标\n    icon?: string;\n    // 标题\n    title?: string;\n    // 操作的类型\n    type: ActionType;\n    // confirm 操作\n    confirm?: IConfirm,\n    // form 操作\n    form?: ISchemaForm;\n    // 多表单操作\n    wizard?: IWizard;\n    // 列表操作\n    list?: IList;\n    // 开启条件\n    condition?: string;\n    // 数据路径\n    path?: string;\n    // 子操作\n    itemActions?: Array<IItemActionSet>;\n    // 子操作\n    actions?: Array<IActionModel|string>;\n    // 接口列表\n    interfaces?: Array<IInterfaceModel>;\n    // 成功后显示的文字\n    successMsg?: string;\n    // 执行成功后是否刷新列表\n    refreshList?: boolean ;\n    // 执行成功后是否需要关闭dialog\n    closeDialog?: boolean;\n    cancel?:boolean;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/action/models/action.model.ts\n **/","\nimport { IActionModel, ActionType, IClientData } from '../../../directives/action/models/action.model';\nimport { ExecuteCmdForm } from '../services/execute.cmd';\nimport * as _ from 'lodash';\n\nexport class PageExecuteCmdController {\n    static $inject = [\"$rootScope\", \"$stateParams\", \"$timeout\", \"materialUtils\", \"fxAction\", \"toolbarUtils\"];\n\n    key: string;\n    toolbars: Array<any>;\n    actionModel: IActionModel;\n    formData: any;\n    isBusy: boolean;\n    executeResult: any = {};\n\n    constructor(private $rootScope: angular.IRootScopeService, private $stateParams: ng.ui.IStateParamsService, private $timeout, private materilUtils: fx.utils.materialStatic, private fxAction, private toolbarUtils) {\n        this.key = ExecuteCmdForm.key;\n        this.doInitToolbar();\n        this.formData = {\n            listIps: []\n        };\n    }\n\n    doInitToolbar() {\n        this.toolbars = [\n            this.toolbarUtils.noneBuilder(\"icon\").iconBuilder('apple-keyboard-command', {}).toValue(),\n            this.toolbarUtils.labelBuilder('执行命令').attrBuilder({ flex: \"\" }).toValue()\n        ];\n    }\n\n    doSubmit($event, form) {\n        let promise = this.fxAction.doAction(this.key, this.formData, form);\n        let results;\n\n        if (promise) {\n            this.isBusy = true;\n            promise.then((res) => {\n                this.materilUtils.showMsg(\"执行命令成功！\");\n                results = res;\n\n                return this.fxAction.getModel(this.key);\n            }).then((actionModel) => {\n                this.actionModel = actionModel;\n\n                return this.fxAction.doDealResult(actionModel, results, this.executeResult);\n            }).then((res) => {\n                this.$rootScope.$broadcast(\"showExecuteCmdResult\", res.data.cmdid);\n            }).finally(() => {\n                this.isBusy = false;\n            });\n        }\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/page/ctls/page.execute.cmd.ts\n **/","import { IActionModel, ActionType } from '../../../directives/action/models/action.model';\nimport { MethodType } from '../../../directives/action/models/interface.model';\n\nexport class ExecuteCmdForm {\n    static key: string = \"execute.cmd\";\n\n    constructor() {\n        let actionModel: IActionModel = {\n            key: ExecuteCmdForm.key,\n            type: ActionType.form,\n            title: \"\",\n            icon: \"\",\n            form: {\n                dataSchema: {\n                    type: \"object\",\n                    required: [\"command\", \"listIps\"],\n                    properties: {\n                        command: {\n                            type: \"string\",\n                            title: \"命令\"\n                        },\n                        listIps: {\n                            type: \"array\",\n                            default: [],\n                            title: \"服务器列表\",\n                            minItems: 1,\n                            items: {\n                                type: \"object\"\n                            }\n                        }\n                    }\n                },\n                formSchema: [{\n                    key: \"command\",\n                    type: \"autocomplete-1\",\n                    placeHolder: \"请选择命令\",\n                    acOptions: {\n                        textField: \"title\",\n                        keyField: \"key\",\n                        dataField: \"rows\",\n                        noCache: true,\n                        search: \"/where/key/$like\",\n                        actionKey: \"command\"\n                    },\n                    htmlClass: \"md-block\"\n                }, {\n                    key: \"listIps\",\n                    type: \"querytable\",\n                    qtOptions: {\n                        key: \"devices\"\n                    },\n                    startEmpty: true,\n                    htmlClass: \"md-block\"\n                }]\n            },\n            refreshList: true,\n            closeDialog: true,\n            interfaces: [{\n                key: \"execute.cmd\",\n                method: MethodType.POST,\n                address: \"\",\n                // port: \"\",\n                path: \"/commands/manual/test\",\n                jpp: {\n                    set: [{ \"from\": \"/queueItem\", \"to\": \"/data\" }]\n                },\n                // config: {\n                //     salt: true\n                // },\n                isRestful: false\n            }]\n        };\n\n        return actionModel;\n    }\n}\n\nexport default (module: ng.IModule) => {\n    const services = [ExecuteCmdForm];\n\n    _.each(services, (model) => {\n        module.service(model.key, model);\n    });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/page/services/execute.cmd.ts\n **/","import { module } from '../module';\nimport * as _ from \"lodash\";\nimport { IActionModel, IColumn } from \"../models/action.model\";\n\nclass Service {\n    public static _builderName: string = \"actionUtils\";\n\n    /**\n     * 构建服务\n     * @type {()=>Service<T>[]}\n     */\n    public static builder: Array<string | Function> = [() => {\n\n        class Base<T> {\n            constructor(protected data?: T) {\n\n            }\n\n            columnUnitBuilder(unit: string, numeric: boolean | string = false) {\n                this.data = _.extend({}, this.data, {\n                    unit: unit,\n                    numeric: numeric\n                });\n\n                return this;\n            }\n\n            toValue(): T {\n                return this.data;\n            }\n        }\n\n        class Service<T> extends Base<T> {\n            constructor(protected data?: T) {\n                super(data);\n            }\n\n            /**\n             * 按钮配置生成方法\n             * @param title        按钮title\n             * @param cls          按钮className\n             * @param showTitle\n             * @returns {Service}\n             */\n            columnBuilder(content: string, title: string, name?: string, sort?: string, unit?: string): Object {\n                return new Service<IColumn>({\n                    content: content,\n                    title: title,\n                    name: name,\n                    sort: sort,\n                    unit: unit\n                });\n            }\n        }\n\n        return new Service();\n    }];\n}\n\nmodule.service(Service._builderName, Service.builder);\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/action/services/utils.service.ts\n **/","import * as mdl from '../module';\nimport { IActionModel, ActionType, IClientData } from \"../models/action.model\";\nimport { IInterfaceModel, MethodType } from \"../models/interface.model\";\nimport * as pointer from 'json-pointer';\nimport * as _ from 'lodash';\n\nclass DialogController {\n    static $inject = [\"$scope\", \"item\", \"key\", \"submit\"];\n\n    constructor(private $scope, private item, private key, private submit) {\n        // console.log(arguments);\n    }\n}\n\nclass Provider {\n    static $inject = [\"$rootScope\", \"$injector\", \"restUtils\", \"materialUtils\", \"$q\", \"$mdDialog\"];\n\n    static _name: string = 'fxAction';\n\n    constructor(private $rootScope: ng.IRootScopeService, private $injector: ng.auto.IInjectorService, private restUtils: fx.utils.restStatic, private mdUtils: fx.utils.materialStatic, private $q: ng.IQService, private $mdDialog: ng.material.IDialogService) {\n        return this;\n    }\n\n    $get: Array<string | Function> = [\"$injector\", ($injector) => {\n        const service = $injector.invoke(Provider, this, null);\n\n        return new Provider(service.$rootScope, service.$injector, service.restUtils, service.mdUtils, service.$q, service.$mdDialog);\n    }];\n\n\n    getInjector(key: string) {\n        if (this.$injector.has(key)) {\n            return _.cloneDeepWith(this.$injector.get(key));\n        }\n        return null;\n    }\n\n    /**\n     * 从数据库中获取model\n     */\n    getModelFromServer(key: string) {\n        const defer = this.$q.defer();\n        const config = this.$rootScope[\"config\"] || {};\n\n        this.getModel(\"actionCommonfx-1\").then((actionModel: IActionModel) => {\n            this.doAction(actionModel.key, {\n                where: {\n                    key: {\n                        \"$eq\": key\n                    }\n                }\n            }).then((results: any) => {\n                let resource = { rows: [] };\n\n                this.doDealResult(actionModel, results, resource);\n                if (resource.rows && resource.rows.length) {\n                    config.env === \"production\" && mdl.module.value(key, resource.rows[0]);\n                    return defer.resolve(resource.rows[0]);\n                }\n\n                this.mdUtils.showErrMsg(`没有找到key[${key}]!`);\n                defer.reject(key);\n            });\n        }).catch(defer.reject);\n\n        return defer.promise;\n    }\n\n    /**\n     * 查找操作模型,如果本地没有,则去服务器中查找\n     * @param key  {String}  操作的KEY\n     * @returns {IPromise<T>}\n     */\n    getModel(key: string) {\n        const defer = this.$q.defer();\n\n        if (!key) {\n            defer.reject();\n        } else {\n            // 先从注入器中查找\n            if (this.$injector.has(key)) {\n                defer.resolve(_.cloneDeepWith(this.$injector.get(key)));\n            } else {\n                // 从当前module的注入器中查找\n                if (angular.injector([mdl.module.name]).has(key)) {\n                    defer.resolve(angular.injector([mdl.module.name]).get(key));\n                }\n                else {\n                    // 从接口中查找\n                    return this.getModelFromServer(key);\n                }\n            }\n        }\n\n        return defer.promise;\n    }\n\n    /**\n     * 查找操作模型中的formSchema\n     * @param actionModel\n     * @returns {IPromise<T>}\n     */\n    getSchema(actionModel: IActionModel) {\n        let keys = [], defer = this.$q.defer(), schemaActionModel;\n\n        if (actionModel.type === ActionType.form) {\n            _.isString(actionModel.form.dataSchema) && keys.push(actionModel.form.dataSchema);\n            _.isString(actionModel.form.formSchema) && keys.push(actionModel.form.formSchema);\n        }\n\n        if (keys.length) {\n            this.getModel(\"schemaCommonfx-1\").then((model: IActionModel) => {\n                schemaActionModel = model;\n                return this.doAction(model.key, {\n                    limit: keys.length,\n                    where: {\n                        \"key\": {\n                            \"$in\": keys\n                        }\n                    }\n                });\n            }).then((results) => {\n                const data = this.doDealResult(schemaActionModel, results, {});\n                const schemas = _.keyBy(data.rows, \"key\");\n\n                if (actionModel.type === ActionType.form) {\n                    if (_.isString(actionModel.form.dataSchema) && schemas[actionModel.form.dataSchema.toString()]) {\n                        actionModel.form.dataSchema = schemas[actionModel.form.dataSchema.toString()][\"text\"];\n                    }\n                    if (_.isString(actionModel.form.formSchema) && schemas[actionModel.form.formSchema.toString()]) {\n                        actionModel.form.formSchema = schemas[actionModel.form.formSchema.toString()][\"textForm\"];\n                    }\n                }\n            }).finally(() => {\n                defer.resolve(actionModel);\n            });\n        } else {\n            defer.resolve(actionModel);\n        }\n\n        return defer.promise;\n    }\n\n    /**\n     * 查找操作模型数组,如果本地没有,则去服务器中查找\n     * @param keys\n     * @returns {IPromise<T>}\n     */\n    getModels(keys: Array<string | IActionModel>) {\n        const defer = this.$q.defer();\n        const actionModels = {};\n        const notFoundsKeys = [];\n        const promises: { [id: string]: ng.IPromise<any> } = {};\n\n        _.each(keys, (key) => {\n            if (_.isObject(key)) {\n                actionModels[(key as IActionModel).key] = key;\n            }\n            else {\n                promises[key as string] = this.getModel(key as string).then((actionModel) => {\n                    actionModels[key as string] = actionModel;\n                }).catch((key) => {\n                    notFoundsKeys.push(key);\n                });\n            }\n        });\n\n        this.$q.all(promises).then(() => {\n            defer.resolve(actionModels);\n        }).catch(() => {\n            defer.resolve(actionModels);\n        });\n\n        return defer.promise;\n    }\n\n    /**\n     * 执行弹窗表单操作\n     * @param $event\n     * @param actionModel\n     * @param item\n     * @return {Promise<any>}\n     */\n    doActionModel($event: MouseEvent, actionModel: IActionModel, item?: any, callback?: Function): ng.IPromise<any> {\n        // 表单和多级表单操作,弹出dialog\n        // 确认框操作,弹出确认窗口\n        switch (actionModel.type) {\n            case ActionType.wizard:\n            case ActionType.form:\n                const templates = {\n                    [ActionType.form]: require(\"../tpls/form-dialog-action.jade\")(),\n                    [ActionType.wizard]: require(\"../tpls/wizard-dialog-action.jade\")()\n                };\n\n                return this.$mdDialog.show({\n                    targetEvent: $event,\n                    clickOutsideToClose: false,\n                    escapeToClose: false,\n                    fullscreen: true,\n                    preserveScope: false,\n                    autoWrap: false,\n                    locals: {\n                        'item': _.cloneDeep(item || {}),\n                        'key': actionModel.key,\n                        'submit': callback\n                    },\n                    controller: DialogController,\n                    controllerAs: \"dialogCtl\",\n                    template: templates[actionModel.type]\n                }).then(() => {\n                    item = null;\n                    console.log(\"关闭\");\n                });\n            case ActionType.confirm:\n                const confirm = this.$mdDialog.confirm()\n                    .title(actionModel.confirm.confirmTitle)\n                    .textContent(actionModel.confirm.confirmContent)\n                    .ariaLabel(actionModel.confirm.confirmTitle)\n                    .targetEvent($event)\n                    .ok(actionModel.confirm.confirmOk || \"确定\")\n                    .cancel(actionModel.confirm.confirmCancel || \"取消\");\n\n                return this.$mdDialog.show(confirm).then(() => {\n                    return this.doAction(actionModel.key, item).then((results) => {\n                        _.isFunction(callback) && callback(results);\n                    });\n                });\n        }\n\n        return null;\n    }\n\n    /**\n     * 检测表单是否合法\n     * @param $form\n     * @returns {boolean}\n     */\n    doFormCheck($form) {\n        if ($form) {\n            this.$rootScope.$broadcast(\"schemaFormValidate\");\n            if (!$form.$valid) {\n                console.log($form.$error);\n                this.mdUtils.showErrMsg(\"表单没有填写正确!\");\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * 处理接口的数据,数据的互相拷贝\n     * @param actionModel\n     * @param results\n     * @param clientData\n     * @param key\n     * @return {IClientData}\n     */\n    doDealResult(actionModel: IActionModel, results: Object, clientData: IClientData, key: string = 'jpp') {\n        _.forEach(actionModel.interfaces, (iInterface) => {\n            let result = results[iInterface.key];\n            let jpp = iInterface[key];\n\n            if (result && jpp) {\n                // 接口数据拷贝到本地\n                _.each(jpp.set, (val) => {\n                    pointer.has(result, val.from) && pointer.set(clientData, val.to, pointer.get(result, val.from));\n                });\n                // 本地数据的删除\n                _.isArray(jpp.del) && _.each(jpp.del, (val) => {\n                    pointer.has(clientData, val) && pointer.remove(clientData, val);\n                });\n            }\n        });\n\n        return clientData;\n    }\n\n    /**\n     * 设置请求的参数路劲\n     */\n    private doGetField(restAngular: restangular.ICollection, queryDataCline: any, interfaceModel: IInterfaceModel, defaults: Array<string> = []) {\n        let idFieldPaths = (!_.isArray(interfaceModel.idFieldPath) || !interfaceModel.idFieldPath.length) ? defaults : interfaceModel.idFieldPath;\n\n        _.each(idFieldPaths, (field: string) => {\n            if (!pointer.has(queryDataCline, field)) {\n                let err = new Error(`没有找到路径${field}`);\n                console.error(err);\n                throw err;\n            }\n            restAngular = restAngular.all(pointer.get(queryDataCline, field));\n        });\n\n        console.log(restAngular.getRestangularUrl());\n\n        return restAngular;\n    }\n\n    /**\n     * 获取接口列表,使用restangular处理接口地址,最后调用接口\n     * @param key\n     * @param queryData\n     * @param $form\n     * @returns {IPromise<TResult>}\n     */\n    doAction(key: string, queryData: Object | restangular.IElement, $form?: ng.IFormController) {\n        let queryDataCline, actionModel;\n\n        if (!this.doFormCheck($form)) {\n            return;\n        }\n\n        return this.getModel(key).then((aModel: IActionModel) => {\n            let interfacesRest: { [id: string]: ng.IPromise<any>; } = {};\n            let headers = this.restUtils.headers;\n            let params = this.restUtils.params;\n\n            actionModel = aModel;\n            // 获取接口列表,使用restangular处理接口地址,最后调用接口,返回promise\n            _.each(actionModel.interfaces, (interfaceModel: IInterfaceModel) => {\n                // 获取接口的地址\n                let promise: ng.IPromise<any>,\n                    restAngular = interfaceModel.isRestful\n                        ? this.restUtils.getCustomRestful(interfaceModel.address, interfaceModel.port, interfaceModel.path)\n                        : this.restUtils.getCustom(interfaceModel.address, interfaceModel.port, interfaceModel.path);\n\n                queryDataCline = _.cloneDeep(queryData);\n\n                // 处理数据\n                if (interfaceModel.jpp) {\n                    // 数据的删除\n                    _.each(interfaceModel.jpp.del, (val) => {\n                        pointer.has(queryDataCline, val) && pointer.remove(queryDataCline, val);\n                    });\n                }\n\n                // 请求加上额外的参数\n                interfaceModel.config && restAngular.withHttpConfig(interfaceModel.config);\n\n                // 判断接口请求类型,做提交操作\n                switch (interfaceModel.method) {\n                    case MethodType.POST:\n                        promise = restAngular.post(queryDataCline, null, headers);\n                        break;\n                    case MethodType.GET:\n                        // promise = restAngular.customGET(\n                        //     (interfaceModel.params && pointer.has(queryDataCline, idFieldPath)) ? pointer.get(queryDataCline, idFieldPath) : null,\n                        //     queryDataCline, headers);\n                        restAngular = this.doGetField(restAngular, queryDataCline, interfaceModel);\n                        promise = restAngular.customGET(null, queryDataCline, headers);\n                        break;\n                    case MethodType.PUT:\n                        // if (!pointer.has(queryDataCline, idFieldPath)) {\n                        //     return console.error(`没有找到${idFieldPath}`);\n                        // }\n                        // promise = restAngular.customPUT(_.isObject(queryDataCline) ? queryDataCline : null, pointer.get(queryDataCline, idFieldPath), headers);\n                        restAngular = this.doGetField(restAngular, queryDataCline, interfaceModel, [\"/id\"]);\n                        promise = restAngular.customPUT(_.isObject(queryDataCline) ? queryDataCline : null, null, headers);\n                        break;\n                    case MethodType.DELETE:\n                        // if (!pointer.has(queryDataCline, idFieldPath)) {\n                        //     return console.error(`没有找到${idFieldPath}`);\n                        // }\n                        // promise = restAngular.customDELETE(pointer.get(queryDataCline, idFieldPath), headers);\n                        restAngular = this.doGetField(restAngular, queryDataCline, interfaceModel, [\"/id\"]);\n                        promise = restAngular.customDELETE(null, headers);\n                        break;\n                }\n                interfacesRest[interfaceModel.key] = promise;\n            });\n\n            return interfacesRest;\n        }).then((interfacesRest) => {\n            // 返回promise\n            return this.$q.all(interfacesRest);\n        }).then((results: any) => {\n            // 设置全局header的值\n            this.doDealResult(actionModel, results, this.restUtils.headers, 'header');\n\n            results.actionModel = actionModel;\n\n            return results;\n        });\n    }\n}\n\nmdl.module.provider(Provider._name, [Provider]);\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/action/services/action.provider.ts\n **/","import { module } from '../module';\nimport { IActionModel, ActionType } from '../models/action.model';\nimport { MethodType } from '../models/interface.model';\n\nclass ListSchema {\n    static $inject = [\"toolbarUtils\", \"actionUtils\"];\n    static key: string = \"schemaCommonfx-1\";\n\n    constructor(toolbarUtils, actionUtils) {\n        let actionModel: IActionModel = {\n            key: ListSchema.key,\n            type: ActionType.none,\n            interfaces: [{\n                key: \"modulesList\",\n                method: MethodType.GET,\n                address: \"\",\n                port: null,\n                path: \"schemas\",\n                jpp: {\n                    set: [{ \"from\": \"/count\", \"to\": \"/total\" }, { \"from\": \"/rows\", \"to\": \"/rows\" }]\n                },\n                isRestful: true\n            }]\n        };\n\n        return actionModel;\n    }\n}\n\nclass ListAction {\n    static $inject = [\"toolbarUtils\", \"actionUtils\"];\n    static key: string = \"actionCommonfx-1\";\n\n    constructor(toolbarUtils, actionUtils) {\n        let actionModel: IActionModel = {\n            key: ListAction.key,\n            type: ActionType.none,\n            interfaces: [{\n                key: \"actionList\",\n                method: MethodType.GET,\n                address: \"\",\n                port: null,\n                path: \"actions\",\n                jpp: {\n                    set: [{ \"from\": \"/count\", \"to\": \"/total\" }, { \"from\": \"/rows\", \"to\": \"/rows\" }]\n                },\n                isRestful: true\n            }]\n        };\n\n        return actionModel;\n    }\n}\n\nclass ConfigAction {\n    static $inject = [\"toolbarUtils\", \"actionUtils\"];\n    static key: string = \"configAction\";\n\n    constructor(toolbarUtils, actionUtils) {\n        let actionModel: IActionModel = {\n            key: ConfigAction.key,\n            type: ActionType.none,\n            interfaces: [{\n                key: \"configAction\",\n                method: MethodType.GET,\n                address: \"\",\n                port: null,\n                path: \"/home/config\",\n                isRestful: false\n            }]\n        };\n\n        return actionModel;\n    }\n}\n\nconst services: Array<any> = [ListSchema, ListAction, ConfigAction];\n\n_.each(services, (ser) => {\n    module.service(ser.key, ser);\n});\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/action/schemas/local.value.ts\n **/","import { module } from '../module';\nimport { IActionModel, ActionType } from '../models/action.model';\nimport * as pointer from 'json-pointer';\nimport * as _ from 'lodash';\n\ninterface IDirectiveScope extends ng.IScope {\n\n}\n\ninterface IDirectiveAttr extends ng.IAttributes {\n\n}\n\nclass Controller {\n    static $inject = [\"$scope\", \"fxAction\"];\n\n    actionModel: IActionModel;\n    key: string;\n    ngModel: Object;\n    formData: Object;\n    isBusy: boolean;\n\n    constructor(private $scope, private fxAction) {\n        this.$scope.$on(\"$destroy\", () => {\n            this.formData = null;\n            this.actionModel = null;\n            this.ngModel = null;\n        });\n        if (this.actionModel) {\n            this.getModelData(this.actionModel);\n        }\n    }\n\n    getModelData(actionModel: IActionModel) {\n        // 取得数据中的特定部分\n        if (actionModel.type === ActionType.form && actionModel.form) {\n            if (pointer.has(this.ngModel, actionModel.form.path || \"\")) {\n                this.formData = pointer.get(this.ngModel, actionModel.form.path || \"\");\n            }\n        }\n        !this.formData && (this.formData = {});\n    }\n\n    getActionModel() {\n        this.isBusy = true;\n        this.fxAction.getModel(this.key).then((actionModel: IActionModel) => {\n            this.getModelData(actionModel);\n            return this.fxAction.getSchema(actionModel);\n        }).then((model) => {\n            this.actionModel = model;\n        }).finally(() => {\n            this.isBusy = false;\n        });\n    }\n}\n\n/**\n * 操作指令,某个表单操作\n * @returns {{restrict: string, template: any, scope: {}, replace: boolean, link: (($scope:IDirectiveScope))}}\n * @constructor\n */\nfunction Directive(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        template: require(\"../tpls/form.jade\")(),\n        scope: true,\n        require: \"^fxFormAction\",\n        bindToController: {\n            ngModel: \"=ngModel\",\n            actionModel: \"=?\",\n            isBusy: \"=?ngDisabled\",\n            key: \"@?\"\n        },\n        controller: Controller,\n        controllerAs: 'formCtl',\n        replace: true,\n        transclude: true,\n        link: ($scope: IDirectiveScope, $ele: ng.IAugmentedJQuery, $attrs: IDirectiveAttr, $ctl: Controller) => {\n            $scope.$watch(() => {\n                return $ctl.key;\n            }, (newValue) => {\n                newValue && $ctl.getActionModel();\n            });\n        }\n    };\n}\n\nmodule.directive(\"fxFormAction\", Directive);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/action/directives/form.directive.ts\n **/","import { module } from '../module';\nimport { IActionModel, IClientData, IQueryData, ActionType } from '../models/action.model';\nimport * as pointer from 'json-pointer';\nimport * as _ from 'lodash';\n\nclass Controller {\n    static $inject = [\"$rootScope\", \"$scope\", \"$q\", \"$timeout\", \"fxAction\", \"toolbarUtils\", \"materialUtils\"];\n\n    key: string;\n    mdLimitOptions: Array<number> = [1, 10, 30, 50, 100, 300];\n    actionModel: IActionModel;\n    clientData: IClientData;\n    queryData: IQueryData;\n    isBusy: boolean = false;\n    showPage: boolean = true;\n    selected: Array<Object>;\n    promise: ng.IPromise<any>;\n    showToolbar: boolean;\n    _filter: any;\n    multiple: boolean;\n    local: boolean;\n    autoSelect: boolean;\n    itemToolbars: Array<any>;\n    topToolbars: Array<any>;\n\n    onOrderChange: Function;\n    onPageChange: Function;\n    doSearchBind: Function;\n\n    /**\n     * 构造函数\n     * @param $scope\n     * @param $q\n     * @param $timeout\n     * @param fxAction\n     * @param toolbarUtils\n     * @param materialUtils\n     */\n    constructor(private $rootScope: angular.IRootScopeService, private $scope: angular.IScope, private $q, private $timeout, private fxAction, private toolbarUtils, private materialUtils: fx.utils.materialStatic) {\n        !this.clientData && (this.clientData = {});\n        !this.selected && (this.selected = []);\n\n        fxAction.getModel(this.key).then((model) => {\n            this.actionModel = _.cloneDeep(model);\n            this.queryData = _.extend({ offset: 0, limit: 10, page: 1 }, this.actionModel.list.queryData || {}, this.queryData || {});\n            if (!this.local) {\n                this.initToolbar();\n                this.initItemToolbar();\n                this.doSearch();\n            } else {\n                this.actionModel.list.itemToolbars = this.itemToolbars || [];\n                this.actionModel.list.toolbars = this.topToolbars || [];\n            }\n        });\n        this.onOrderChange = this.orderChange.bind(this);\n        this.onPageChange = this.pageChange.bind(this);\n        this.doSearchBind = this.doSearch.bind(this);\n        // 销毁事件\n        this.$scope.$on(\"$destroy\", () => {\n            this.actionModel = null;\n            this.queryData = null;\n            this.onOrderChange = null;\n            this.onPageChange = null;\n            this.doSearchBind = null;\n            this.selected = null;\n            this.itemToolbars = null;\n            this.topToolbars = null;\n        });\n\n        this.$scope.$watch(() => {\n            return this._filter;\n        }, (newValue, oldValue) => {\n            if (newValue && newValue != oldValue) {\n                this.doSearch();\n            }\n        });\n    }\n\n    orderFunc(): string | Array<string> {\n        if (this.queryData && this.queryData.order) {\n            return this.queryData.order.replace(/\\-/ig, '');\n        }\n\n        return [];\n    }\n\n    /**\n     * 按钮的点击事件\n     * @param $event\n     * @param actionModel\n     * @param item\n     */\n    doClickActionMenu($event, actionModel: IActionModel, item) {\n        let itemSource = _.clone(item);\n\n        this.$rootScope.$broadcast(`${this.key}:clickItem`, actionModel);\n        if (actionModel.cancel) {\n            return;\n        }\n        // 取得数据中的特定部分\n        if (actionModel.type === ActionType.form || actionModel.type === ActionType.wizard) {\n            itemSource = {};\n            if (pointer.has(item, actionModel.path || \"\")) {\n                itemSource = pointer.get(item, actionModel.path || \"\");\n            }\n        }\n        // 执行相应的操作\n        this.fxAction.doActionModel($event, actionModel, itemSource).then((result) => {\n            this.materialUtils.showMsg(`${actionModel.successMsg || \"操作成功!\"}`);\n            this.$timeout(() => {\n                if (actionModel.refreshList) {\n                    this.doSearch(this.queryData.where || {});\n                }\n            }, 200);\n        });\n    }\n\n    /**\n     * 初始化顶部toolbar\n     */\n    initToolbar() {\n        this.actionModel.list.toolbars = [];\n        // 获取操作按钮\n        this.fxAction.getModels(this.actionModel.actions).then((actionModels) => {\n            // 添加标题label和icon\n            this.actionModel.list.toolbars.push(this.toolbarUtils.noneBuilder(\"icon\").iconBuilder(this.actionModel.icon, {}).toValue());\n            this.actionModel.list.toolbars.push(this.toolbarUtils.labelBuilder(`${this.actionModel.title}`).attrBuilder({ flex: \"\" }).toValue());\n            // 添加顶部按钮\n            _.forEach(actionModels, (actionModel: IActionModel) => {\n                if (actionModel.type !== ActionType.list) {\n                    this.actionModel.list.toolbars.push(this.toolbarUtils.btnBuilder(actionModel.title, \"md-icon-button\", false).tooltipBuilder(\"\").iconBuilder(actionModel.icon, {}).btnClick(($event, item: any) => {\n                        this.doClickActionMenu($event, actionModel, item || {});\n                    }).toValue());\n                }\n            });\n            // 添加刷新按钮\n            if (this.actionModel.list.showRefreshBtn) {\n                this.actionModel.list.toolbars.push(this.toolbarUtils.btnBuilder(\"刷新\", \"md-icon-button\", false).iconBuilder(\"refresh\", {}).btnClick(($event) => {\n                    this.doSearch(this.queryData.where || {});\n                }).toValue());\n            }\n            // 添加显示/隐藏搜索按钮\n            if (this.actionModel.list.showSearchBtn) {\n                this.actionModel.list.toolbars.push(this.toolbarUtils.btnBuilder(\"{{listCtl.actionModel.list.showSearchPanel?'关闭搜索栏':'打开搜索栏'}}\", \"md-icon-button\", false).iconBuilder(\"{{listCtl.actionModel.list.showSearchPanel?'window-open':'window-closed'}}\", {}).btnClick(($event) => {\n                    this.actionModel.list.showSearchPanel = !this.actionModel.list.showSearchPanel;\n                }).toValue());\n            }\n            this.$rootScope.$broadcast(`${this.key}:toolbarComplete`, this.actionModel.list.toolbars);\n        });\n    }\n\n    /**\n     * 初始化单项的Item的toolbar\n     */\n    initItemToolbar() {\n        const menuTool: any = this.toolbarUtils.menuBuilder(\"\", \"md-icon-button\").tooltipBuilder(\"操作菜单\").iconBuilder(\"expand_more\").menuOptionsBuilder().toValue();\n        const keys = [];\n        let itemActionsObj = _.keyBy(this.actionModel.itemActions, \"key\");\n\n        // 提取所有的keys\n        _.each(this.actionModel.itemActions, (item) => {\n            keys.push(item.key);\n        });\n        // 处理所有提取的keys\n        keys.length && this.fxAction.getModels(keys).then((actionModels) => {\n            _.forEach(actionModels, (actionModel: IActionModel, key) => {\n                let condition = itemActionsObj[key].condition;\n\n                // 添加操作按钮\n                switch (actionModel.type) {\n                    case ActionType.form:\n                    case ActionType.wizard:\n                    case ActionType.confirm:\n                        let menu = this.toolbarUtils.menuItemBuilder(actionModel.title, null, true).tooltipBuilder(\"\").noOptions(true, false).iconBuilder(actionModel.icon).btnClick(($event, item: any) => {\n                            this.doClickActionMenu($event, actionModel, item);\n                        });\n                        // 处理显示/隐藏逻辑\n                        if (condition) {\n                            menu.conditionBuilder(condition);\n                        }\n                        // 添加到操作\n                        // this.tools.push(this.toolbarUtils.btnBuilder(actionModel.title, null, true).tooltipBuilder(\"\").noOptions(true, false).iconBuilder(actionModel.icon).btnClick(($event, item: any) => {\n                        //     this.doClickActionMenu($event, actionModel, item);\n                        // }).toValue());\n                        menuTool.items.push(menu.toValue());\n                        break;\n                }\n            });\n            // 单挑数据的操作按钮数据\n            this.actionModel.list.itemToolbars = [menuTool];\n            this.$rootScope.$broadcast(`${this.key}:itemToolbarComplete`, menuTool.items);\n        });\n    }\n\n    /**\n     * 更改排序回调\n     * @param order\n     */\n    orderChange(order: string) {\n        this.queryData.order = order;\n        this.doSearch(this.queryData.where || {});\n        this.orderFunc();\n    }\n\n    /**\n     * 更改页码或者pageSize回调\n     * @param page\n     * @param limit\n     */\n    pageChange(page: number, limit: number) {\n        if (limit !== this.queryData.limit) {\n            page = 1;\n        }\n        this.queryData.page = page;\n        if (page > 0) {\n            this.queryData.offset = (page - 1) * limit;\n        }\n        this.doSearch(this.queryData.where || {});\n    }\n\n    /**\n     * 搜索数据\n     * @param filterData {Object} 搜索数据\n     */\n    doSearch(filterData?: any) {\n        // 如果是本地模式，则不调用网络请求\n        if (this.local) {\n            return;\n        }\n\n        this.isBusy = true;\n        this.queryData.where = filterData || {};\n\n        if (_.isObject(this._filter) && _.isObject(this.queryData[\"where\"])) {\n            _.extend(this.queryData[\"where\"], this._filter);\n        }\n\n        this.promise = this.fxAction.doAction(this.key, this.queryData);\n\n        if (!this.promise) {\n            return;\n        }\n        this.promise.then((result) => {\n            this.fxAction.doDealResult(this.actionModel, result, this.clientData);\n            this.$rootScope.$broadcast(`${this.key}:searchComplete`, this.clientData);\n        }).finally(() => {\n            this.isBusy = false;\n        });\n    }\n}\n\n/**\n * 操作指令,某个表单操作\n * @returns {{restrict: string, template: any, scope: {}, replace: boolean, link: (($scope:IDirectiveScope))}}\n * @constructor\n */\nfunction Directive(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        template: require(\"../tpls/list.jade\")(),\n        scope: true,\n        bindToController: {\n            key: \"@\",\n            selected: '=?',\n            _filter: '=?filter',\n            clientData: '=?',\n            showToolbar: '=?',\n            multiple: '=?',\n            autoSelect: '=?',\n            local: '=?',\n            itemToolbars: '=?',\n            topToolbars: '=?',\n            qtCtl: '=?'\n        },\n        controller: Controller,\n        controllerAs: 'listCtl',\n        replace: true,\n        transclude: true\n    };\n}\n\nmodule.filter('skip', function () {\n    return (inputArray, skip, isLocal) => {\n        if (!inputArray) return [];\n\n        if (skip && isLocal) {\n            return _.drop(inputArray.concat([]), skip);\n        }\n\n        return inputArray;\n    }\n});\n\nmodule.directive(\"fxListAction\", Directive);\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/action/directives/list.directive.ts\n **/","import { module } from '../module';\nimport { IActionModel } from '../models/action.model';\nimport * as _ from 'lodash';\n\nconst _dirName = 'fxDialogFormAction';\n\nclass Controller {\n    static $inject = [\"$scope\", \"fxAction\", \"materialUtils\", \"toolbarUtils\", \"$mdDialog\"];\n\n    private submitCallBack: Function;\n\n    formData: Object;\n    actionModel: IActionModel;\n    toolbars: Array<any>;\n    key: string;\n    isBusy: boolean;\n\n    constructor(private $scope, private fxAction, private materialUtils: fx.utils.materialStatic, private toolbarUtils, private $mdDialog: ng.material.IDialogService) {\n        // this.formData = this.formData;\n    }\n\n    doSubmit($form) {\n        let promise = this.fxAction.doAction(this.key, this.formData, $form);\n\n        if (promise) {\n            this.isBusy = true;\n            promise.then((result) => {\n                this.actionModel.closeDialog === true && this.$mdDialog.hide(result);\n                if (_.isFunction(this.submitCallBack)) {\n                    this.submitCallBack(result);\n                }\n            }).finally(() => {\n                this.isBusy = false;\n            });\n        }\n\n        return promise;\n    }\n\n    getActionModel() {\n        this.fxAction.getModel(this.key).then((model) => {\n            this.actionModel = model;\n            this.toolbars = [\n                this.toolbarUtils.noneBuilder(\"icon\").iconBuilder(this.actionModel.icon).toValue(),\n                this.toolbarUtils.labelBuilder(this.actionModel.title).attrBuilder({ flex: \"\" }).toValue(),\n                this.toolbarUtils.btnBuilder(\"关闭\", \"md-icon-button\", false).iconBuilder(\"close\").btnClick(($event) => {\n                    this.$mdDialog.cancel();\n                }).toValue()\n            ];\n        });\n    }\n}\n\n/**\n * 操作指令,某个表单操作\n * @returns {{restrict: string, template: any, scope: {}, replace: boolean, link: (($scope:IDirectiveScope))}}\n * @constructor\n */\nfunction Directive(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        template: require(\"../tpls/form-dialog.jade\")(),\n        scope: true,\n        require: `^${_dirName}`,\n        bindToController: {\n            key: \"@\",\n            formData: '=ngModel',\n            submitCallBack: '=?ngSubmit'\n        },\n        controller: Controller,\n        controllerAs: 'dialogFormCtl',\n        replace: false,\n        compile: ($ele) => {\n            $ele.replaceWith(angular.element($ele.html()));\n            return ($scope, $ele: ng.IAugmentedJQuery, $attrs, $ctl: Controller) => {\n                $scope.$watch(() => {\n                    return $ctl.key;\n                }, () => {\n                    $ctl.getActionModel();\n                });\n            };\n        }\n    };\n}\n\nmodule.directive(_dirName, Directive);\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/action/directives/dialog-form.directive.ts\n **/","import { module } from '../module';\nimport { IActionModel } from '../models/action.model';\nimport * as _ from 'lodash';\nimport * as pointer from 'json-pointer';\n\nconst _name = \"fxSearchAction\";\n\nclass Controller {\n    static $inject = [\"fxAction\", \"toolbarUtils\"];\n\n    key: string;\n    formData: any;\n    actionModel: IActionModel;\n    disabled: boolean;\n    toolbars: Array<any>;\n    isShow: boolean;\n    doSearch: Function;\n\n    constructor(private fxAction, private toolbarUtils) {\n        this.initSearchToolbar();\n        this.formData = this.formData || {};\n    }\n\n    /**\n     * 删除搜索字段\n     */\n    clearFilterData() {\n        _.forEach(this.formData, (val, key) => {\n            delete this.formData[key];\n        });\n    }\n\n    /**\n     * 初始化搜索toolbar\n     */\n    initSearchToolbar() {\n        this.toolbars = [\n            this.toolbarUtils.labelBuilder('{{searchCtl.title}}搜索').attrBuilder({ flex: \"\" }).toValue(),\n            this.toolbarUtils.btnBuilder(\"清空搜索条件\", \"md-icon-button\", false).iconBuilder(\"clear_all\").btnClick(($event) => {\n                this.clearFilterData();\n            }).toValue(),\n            this.toolbarUtils.btnBuilder(\"关闭搜索栏\", \"md-icon-button\", false).iconBuilder(\"{{searchCtl.isShow?'window-open':'window-closed'}}\").btnClick(($event) => {\n                this.isShow = !this.isShow;\n            }).toValue()\n        ];\n    }\n\n    /**\n     * 搜索数据\n     * @param $event\n     * @param $form\n     */\n    doPreSearch($event, $form: ng.IFormController) {\n        const searchData = {};\n\n        if (this.fxAction.doFormCheck($form) && _.isFunction(this.doSearch)) {\n            _.forEach(this.formData, (data, key: string) => {\n                if (key.substr(0, 1) === \"/\") {\n                    if (!_.isNull(data) && !_.isUndefined(data) && data != \"\") {\n                        pointer.set(searchData, key, data);\n                    } else {\n                        pointer.has(searchData, key) && pointer.remove(searchData, key);\n                    }\n                }\n            });\n\n            // if (_.isObject(this.filter) && _.isObject(searchData[\"where\"])) {\n            //     _.extend(searchData[\"where\"], this.filter);\n            // }\n\n            this.doSearch(searchData);\n        }\n    }\n}\n\n/**\n * 操作指令,某个表单操作\n * @returns {{restrict: string, template: any, scope: {}, replace: boolean, link: (($scope:IDirectiveScope))}}\n * @constructor\n */\nfunction Directive(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        template: require(\"../tpls/search.jade\")(),\n        bindToController: {\n            formData: \"=ngModel\",\n            key: \"@\",\n            disabled: '=',\n            isShow: '=',\n            doSearch: '=?',\n            title: '=?'\n        },\n        require: `^${_name}`,\n        controller: Controller,\n        controllerAs: 'searchCtl',\n        replace: true\n    };\n}\n\nmodule.directive(_name, Directive);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/action/directives/search.directive.ts\n **/","import { module } from '../module';\nimport { IActionModel, ISchemaForm, ActionType } from '../models/action.model';\n\ninterface IDirectiveScope extends ng.IScope {\n\n}\n\ninterface IDirectiveAttr extends ng.IAttributes {\n\n}\n\nclass Controller {\n    static $inject = [\"$scope\", \"$timeout\", \"fxAction\", \"toolbarUtils\", \"materialUtils\", \"$mdDialog\"];\n\n    isShow: boolean = true;\n    actionModel: IActionModel;\n    key: string;\n    formData: Object;\n    selectedIndex: number = 0;\n    toolbars: Array<any>;\n    $forms: { [id: string]: ng.IFormController };\n    isBusy: boolean;\n    submitCallBack: Function;\n\n    constructor(private $scope, private $timeout, private fxAction, private toolbarUtils, private materialUtils: fx.utils.materialStatic, private $mdDialog) {\n        this.initToolbar();\n\n        this.$scope.$on(\"$destroy\", () => {\n            this.formData = null;\n            this.$forms = null;\n            this.toolbars = null;\n            this.actionModel = null;\n        });\n    }\n\n    /**\n     * 初始化form，因为有多个form，所以需要用一个对象来保存所有的表单对象，用于后期验证表单的$valid\n     * @param action\n     * @param $scope\n     */\n    initForm(action: IActionModel, $scope: ng.IScope) {\n        if (!this.$forms) {\n            this.$forms = {};\n        }\n        this.$forms[action.key] = $scope[`${action.key}Form`];\n    }\n\n    /**\n     * 判断是否需要显示form,默认只有第一页和最后一页首次加载\n     * @param action\n     * @param index\n     * @returns {boolean}\n     */\n    showForm(action: IActionModel, index: number) {\n        return index === 0 || this.$forms.hasOwnProperty(action.key) || index == this.selectedIndex || index == this.actionModel.wizard.actions.length - 1;\n    }\n\n    /**\n     * 验证当前表单是否正确\n     * @returns {boolean}\n     */\n    doCheckCurrentForm(index?: number) {\n        let actionModel = this.actionModel.wizard.actions[_.isUndefined(index) ? this.selectedIndex : index];\n\n        // 验证表单是否正确\n        if (this.$forms) {\n            let formController = this.$forms[`${(actionModel as IActionModel).key}`];\n\n            if (!this.fxAction.doFormCheck(formController)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * 检查所有的表单是否正确\n     * @returns {boolean}\n     */\n    doCheckForms() {\n        let res = true;\n\n        _.each(this.actionModel.wizard.actions, (action, index) => {\n            res = this.doCheckCurrentForm(index);\n\n            if (!res) {\n                this.selectedIndex = index;\n                return false;\n            }\n        });\n\n        return res;\n    }\n\n    /**\n     * 重置表单数据\n     */\n    reset() {\n        this.formData = {};\n        this.$forms = {};\n        this.selectedIndex = 0;\n        this.isShow = false;\n        this.$timeout(() => {\n            this.isShow = true;\n        }, 0);\n    }\n\n    /**\n     * 添加wizard的按钮组,包括上一步,下一步和完成按钮\n     * 每个按钮都需要验证表单的正确性\n     * 每个按钮如果有接口操作,都需要调用接口,接口返回正常才可用\n     */\n    initToolbar() {\n        this.toolbars = [\n            this.toolbarUtils.btnBuilder(\"上一步\", null, true, \"top\").iconBuilder(\"navigate_before\").conditionBuilder(\"wizardCtl.selectedIndex>0\", false).btnClick(($event) => {\n                this.selectedIndex && this.selectedIndex--;\n            }).toValue(),\n            this.toolbarUtils.btnBuilder(\"下一步\", null, true, \"top\").iconBuilder(null, null, \"navigate_next\").conditionBuilder(\"wizardCtl.selectedIndex < wizardCtl.actionModel.wizard.actions.length-1\", false).btnClick(($event) => {\n                if (this.doCheckCurrentForm() && _.isArray(this.actionModel.wizard.actions) && this.actionModel.wizard.actions.length > this.selectedIndex) {\n                    this.selectedIndex++;\n                }\n            }).toValue(),\n            this.toolbarUtils.btnBuilder(\"完成\", \"md-primary\", true, \"top\").iconBuilder(\"done_all\").conditionBuilder(\"!wizardCtl.isBusy && wizardCtl.selectedIndex===wizardCtl.actionModel.wizard.actions.length-1\", false).btnClick(($event) => {\n                if (this.doCheckForms()) {\n                    this.isBusy = true;\n                    this.fxAction.doAction(this.actionModel.key, this.formData).then((result) => {\n                        this.actionModel.closeDialog === true && this.$mdDialog.hide(result);\n\n                        if (_.isFunction(this.submitCallBack)) {\n                            this.submitCallBack(result);\n                        }\n                        // this.materialUtils.showMsg(this.actionModel.successMsg || \"操作成功！\");\n                        // this.reset();\n                    }).finally(() => {\n                        this.isBusy = false;\n                    });\n                }\n            }).toValue()\n        ];\n    }\n\n    /**\n     * 通过key来获取数据\n     */\n    getActionModel() {\n        let actionModel;\n\n        this.fxAction.getModel(this.key).then((model: IActionModel) => {\n            actionModel = _.cloneDeep(model);\n\n            return this.fxAction.getModels(model.wizard.actions);\n        }).then((actionModels: Array<IActionModel>) => {\n            let actions = [];\n\n            _.each(actionModel.wizard.actions, (action) => {\n                if (_.isString(action)) {\n                    action = actionModels[action];\n                }\n                // 如果是form/wizard的话，判断dataSchema是否存在，不存在则使用wizard的defaultSchema\n                if (action && (action.type === ActionType.form || action.type === ActionType.wizard)) {\n                    // if (!action.form.dataSchema && action.type === ActionType.form) {\n                    //     action.form.dataSchema = actionModel.wizard.defaultSchema.dataSchema;\n                    // }\n                    actions.push(action);\n                }\n            });\n            actionModel.wizard.actions = actions;\n            this.actionModel = actionModel;\n        });\n    }\n}\n\n/**\n * 操作指令,某个表单操作\n * @returns {{restrict: string, template: any, scope: {}, replace: boolean, link: (($scope:IDirectiveScope))}}\n * @constructor\n */\nfunction Directive(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        template: require(\"../tpls/wizard.jade\")(),\n        scope: true,\n        require: \"^fxWizardAction\",\n        bindToController: {\n            formData: \"=ngModel\",\n            submitCallBack: \"=?ngSubmit\",\n            key: \"@\"\n        },\n        controller: Controller,\n        controllerAs: 'wizardCtl',\n        replace: true,\n        transclude: true,\n        link: ($scope: IDirectiveScope, $ele: ng.IAugmentedJQuery, $attr: IDirectiveAttr, $ctl: Controller) => {\n            $scope.$watch(() => {\n                return $ctl.key;\n            }, () => {\n                $ctl.getActionModel();\n            });\n        }\n    };\n}\nmodule.directive(\"fxWizardAction\", Directive);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/action/directives/wizard.directive.ts\n **/","import { module } from '../module';\nimport { IActionModel } from '../models/action.model';\n\nconst _dirName = 'fxDialogWizardAction';\n\nclass Controller {\n    static $inject = [\"$scope\", \"fxAction\", \"materialUtils\", \"toolbarUtils\", \"$mdDialog\"];\n\n    formData: Object;\n    actionModel: IActionModel;\n    key: string;\n    toolbars: Array<any>;\n    submitCallBack: Function;\n\n    constructor(private $scope, private fxAction, private materialUtils: fx.utils.materialStatic, private toolbarUtils, private $mdDialog: ng.material.IDialogService) {\n        //this.formData = this.formData ;\n    }\n\n    getActionModel() {\n        this.fxAction.getModel(this.key).then((model) => {\n            this.actionModel = model;\n            this.toolbars = [\n                this.toolbarUtils.noneBuilder(\"icon\").iconBuilder(this.actionModel.icon).toValue(),\n                this.toolbarUtils.labelBuilder(this.actionModel.title).attrBuilder({ flex: \"\" }).toValue(),\n                this.toolbarUtils.btnBuilder(\"关闭\", \"md-icon-button\", false).iconBuilder(\"close\").btnClick(($event) => {\n                    this.$mdDialog.cancel(\"用户关闭\");\n                }).toValue()\n            ];\n        });\n    }\n}\n\n/**\n * 操作指令,某个表单操作\n * @returns {{restrict: string, template: any, scope: {}, replace: boolean, link: (($scope:IDirectiveScope))}}\n * @constructor\n */\nfunction Directive(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        template: require(\"../tpls/wizard-dialog.jade\")(),\n        scope: true,\n        require: `^${_dirName}`,\n        bindToController: {\n            key: \"@\",\n            formData: '=ngModel',\n            submitCallBack: \"=?ngSubmit\",\n        },\n        controller: Controller,\n        controllerAs: 'dialogWizardCtl',\n        replace: false,\n        compile: ($ele) => {\n            $ele.replaceWith(angular.element($ele.html()));\n            return ($scope, $ele: ng.IAugmentedJQuery, $attr, $ctl: Controller) => {\n                $scope.$watch(() => {\n                    return $ctl.key;\n                }, () => {\n                    $ctl.getActionModel();\n                });\n            };\n        }\n    };\n}\nmodule.directive(_dirName, Directive);\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/action/directives/dialog-wizard.directive.ts\n **/","import { module } from '../module';\nimport { IActionModel, ActionType } from '../models/action.model';\nimport * as _ from 'lodash';\n\nconst _name = \"fxBuilderAction\";\n\nclass Controller {\n    static $inject = [\"fxAction\", \"toolbarUtils\"];\n\n    key: string;\n    formData: any;\n    actionModel: IActionModel;\n\n    constructor(private fxAction, private toolbarUtils) {\n        this.formData = this.formData || {};\n    }\n}\n\n/**\n * 操作指令,某个表单操作\n * @returns {{restrict: string, template: any, scope: {}, replace: boolean, link: (($scope:IDirectiveScope))}}\n * @constructor\n */\nfunction Directive(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        template: require(\"../tpls/builder.jade\")(),\n        bindToController: {\n            formData: \"=ngModel\",\n            key: \"@\"\n        },\n        require: `^${_name}`,\n        controller: Controller,\n        controllerAs: 'formBuilderCtl',\n        replace: true\n    };\n\n}\n\nDirective.$inject = [];\n\nmodule.directive(_name, Directive);\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/action/directives/builder.directive.ts\n **/","import { IActionModel, ActionType, IClientData } from '../../directives/action/models/action.model';\nimport * as _ from 'lodash';\nimport { module } from './module';\n\ninterface ICmdClientData extends IClientData {\n    cmdResMap?: any;\n}\n\nexport class PageExecuteCmdResultController {\n    static $inject = [\"$scope\", \"fxAction\", \"sockets\", \"$q\", \"$timeout\", \"toolbarUtils\", \"materialUtils\"];\n\n    jid: string;\n    toolbars: Array<any>;\n    cmdClientData: IClientData = {};\n    cmdResClientData: ICmdClientData = {};\n    deviceSelected: Array<any> = [];\n    command: any;\n    cmdResMap: any = {};\n    isBusy: boolean;\n    isOpen: boolean;\n    realTime: boolean;\n    resFilter: any;\n    listKey: string = 'executeCmdResList';\n\n    constructor(private $scope, private fxAction, private sockets, private $q: angular.IQService, private $timeout, private toolbarUtils, private materialUtils: fx.utils.materialStatic) {\n        if (this.realTime) {\n            this.$scope.$on(\"socket:connect\", () => { });\n            this.$scope.$on(\"socket:events\", (event, msg) => {\n\n                console.log(\"socket\", msg._source.jid, this.jid);\n\n                if (msg._source.jid !== this.jid) {\n                    return;\n                }\n                this.cmdResMap[msg._id] = msg;\n                if (_.isArray(this.cmdResClientData.rows)) {\n                    let devices = _.filter(this.cmdResClientData.rows, (item: any) => {\n                        return item._id == msg._id;\n                    });\n                    if (devices.length == 0) {\n                        this.cmdResClientData.rows.push(msg);\n                    } else {\n                        _.each(devices, (dev, key) => {\n                            _.extend(devices[key], msg);\n                        });\n                    }\n                }\n            });\n        }\n        this.$scope.$on(\"showExecuteCmdResult\", (event, cmdId: string) => {\n            this.cmdClientData = {};\n            this.cmdResClientData = {};\n            this.deviceSelected = [];\n            this.cmdResMap = { len: 0 };\n            this.jid = \"\";\n            this.getCommandResult(cmdId);\n        });\n\n        this.$scope.$on(`${this.listKey}:searchComplete`, (event, data) => {\n            _.each(data.rows, (item, key) => {\n                if (this.cmdResMap.hasOwnProperty(item._id)) {\n                    _.extend(data.rows[key], this.cmdResMap[item._id]);\n                }\n            });\n            console.log(\"searchComplete\", data.rows);\n            // data.rows.length && (this.deviceSelected = [].concat(data.rows));\n        });\n\n        this.cmdResClientData = {};\n        this.toolbars = [\n            this.toolbarUtils.noneBuilder(\"icon\").iconBuilder('apple-keyboard-command', {}).toValue(),\n            this.toolbarUtils.labelBuilder('执行命令').attrBuilder({ flex: \"\" }).toValue()\n        ];\n    }\n\n    getCommandResult(cmdId: string) {\n        this.resFilter = { \"query\": { \"and\": [{ \"match\": { \"jid\": cmdId } }] } };\n        this.cmdResMap = {};\n        this.jid = cmdId;\n        // this.cmdResClientData.rows = _.map(this.cmdResMap);\n        this.realTime = true;\n        // this.$timeout(() => {\n        this.isBusy = true;\n        this.isOpen = true;\n        this.$q.all([\n            this.fxAction.doAction(\"executeCmdList\", { where: { \"query\": { \"and\": [{ \"match\": { \"_id\": cmdId } }] } } })\n            // this.fxAction.doAction(\"executeCmdResList\", { where: { \"query\": { \"and\": [{ \"match\": { \"jid\": cmdId } }] } } })\n        ]).then((results: any) => {\n            this.fxAction.doDealResult(results[0].actionModel, results[0], this.cmdClientData);\n            // this.fxAction.doDealResult(results[1].actionModel, results[1], this.cmdResClientData);\n        }).then(() => {\n            if (this.cmdClientData.rows.length) {\n                this.command = this.cmdClientData.rows[0]._source.command;\n                // this.deviceClientData.rows = this.cmdClientData.rows[0]._source.listip;\n                // this.deviceClientData.rows.length && (this.deviceSelected = [].concat(this.deviceClientData.rows));\n            } else {\n                return this.getCommandResult(cmdId);\n            }\n        }).finally(() => {\n            this.isBusy = false;\n        });\n        // }, 200);\n    }\n}\n\nfunction Directive(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        scope: {},\n        bindToController: {\n            \"realTime\": '@?'\n        },\n        // replace: true,\n        template: require('./tpls/execute.cmd.tmp.jade'),\n        controller: PageExecuteCmdResultController,\n        controllerAs: \"executeCmdCtl\"\n    }\n}\n\nmodule.directive(\"executeCmd\", [Directive]);\n\nmodule.filter('to_trusted', ['$sce', function ($sce) {\n    return function (text) {\n        return $sce.trustAsHtml(text);\n    }\n}]);\n\nmodule.directive('angularTerminal', ['$rootScope', function ($rootScope) {\n    return {\n        restrict: 'A',\n        link: function (scope, element, attrs: any) {\n            var namespace = 'terminal.' + (attrs.angularTerminal || 'default'),\n                t;\n\n            t = element.terminal((input, terminal) => {\n                $rootScope.$emit(namespace, input, terminal);\n            }, {\n                    greetings: attrs.greetings || '',\n                    enabled: false\n                });\n\n            $rootScope.$on(namespace + '.echo', function (e, msg) {\n                t.echo(msg);\n            });\n        }\n    };\n}]);\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/execute/execute.cmd.directive.ts\n **/","/**\n * Created by NICK on 16/8/9.\n * 首页,用于生成页面框架\n */\n\nimport * as ngMaterial from 'angular-material';\nimport 'angular-ui-router';\nimport * as ngMaterialIcons from 'angular-material-icons';\nimport * as _ from 'lodash';\nimport { initRouter } from './router';\nimport materialService from '../../services/material.service';\nimport svgUtilsMod from '../../services/svg.service';\nimport toolbar from '../../directives/toolbar';\nimport sidemenu from '../../directives/sidemenu';\nimport 'expose?SVGMorpheus!exports?SVGMorpheus!svg-morpheus';\nimport { ActionType } from '../../directives/action/models/action.model';\n\nconst module = angular.module(\"homeModule\", [toolbar, sidemenu, svgUtilsMod, materialService, ngMaterial, 'ui.router', ngMaterialIcons]);\n\nmodule.config([\n    \"$stateProvider\",\n    \"$urlRouterProvider\",\n    \"$httpProvider\",\n    \"$mdThemingProvider\",\n    \"$locationProvider\",\n    \"mdSideMenuSectionsProvider\",\n    ($stateProvider, $urlRouterProvider, $httpProvider, $mdThemingProvider, $locationProvider, mdSideMenuSectionsProvider, cfpLoadingBarProvider: angular.loadingBar.ILoadingBarProvider) => {\n        // 定义默认样式\n        // $mdThemingProvider.definePalette('amazingPaletteName', {\n        //     '50': 'E8EAF6',\n        //     '100': 'C5CAE9',\n        //     '200': 'B39DDB',\n        //     '300': 'B39DDB',\n        //     '400': 'BDBDBD',\n        //     '500': '9B26AF',\n        //     '600': '757575',\n        //     '700': '7A1EA1',\n        //     '800': '691A99',\n        //     '900': '263238',\n        //     'A100': 'FFE57F',\n        //     'A200': '68EFAD',\n        //     'A400': 'FF3D00',\n        //     'A700': 'DD2C00',\n        //     'contrastDefaultColor': 'light',    // whether, by default, text (contrast)\n        //     // on this palette should be dark or light\n        //     'contrastDarkColors': ['50', '100', //hues which contrast should be 'dark' by default\n        //         '200', '300', '400', 'A100'],\n        //     'contrastLightColors': ['50', '100', //hues which contrast should be 'dark' by default\n        //         '200', '300', '400', 'A100']    // could also specify this if default was 'dark'\n        // });\n        $mdThemingProvider.theme('default')\n            .dark()\n            .primaryPalette('grey')\n            .accentPalette('blue')\n            .warnPalette('red');\n        // 初始化路由\n        initRouter($urlRouterProvider, $stateProvider);\n        // sideMenu初始化\n        mdSideMenuSectionsProvider.initWithTheme($mdThemingProvider);\n    }])\n    .run([\"$rootScope\", \"$state\", \"$q\", \"svgUtils\", \"fxAction\", \"fxSideMenuFactory\", ($rootScope: ng.IRootScopeService, $state, $q: ng.IQService, svgUtils: fx.utils.svgStatic, fxAction) => {\n        let state: { $$isFinish?: boolean, toState?: ng.ui.IState, toParams?: Object, options?: Object } = {};\n        // 处理路回调\n        let handleResolve = (isComplete) => {\n            state.$$isFinish = true;\n            $state.go(state.toState.name, state.toParams, state.options);\n        };\n        // 注册路由更改事件\n        $rootScope.$on(\"$stateChangeStart\", (evt, toState, toParams, fromState, fromParams) => {\n            console.log(\"$stateChangeStart\", evt, toState, toParams, fromState, fromParams);\n        });\n        // 处理首次加载的时候,加载2个svg文件\n        $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams, options) {\n            if (!state.$$isFinish) {\n                _.extend(state, {\n                    toState: toState,\n                    toParams: toParams,\n                    fromState: fromState,\n                    fromParams: fromParams,\n                    options: options\n                });\n                event.preventDefault();\n                $q.all({\n                    mdi: svgUtils.loadSvgUrl(__dirname + 'svgs/mdi.svg'),\n                    weibo: svgUtils.loadSvgUrl(__dirname + 'svgs/weibo.svg')\n                }).then(() => { handleResolve(true) }, () => { handleResolve(false) });\n            }\n        });\n        // 获取服务器一些配置信息\n        fxAction.doAction(\"configAction\", {}).then((result) => {\n            $rootScope[\"config\"] = result.configAction;\n        });\n    }]);\n\n// 添加一个操作,显示ICON的KEY值表单\nmodule.value(\"iconInfoDetailForm\", {\n    key: \"iconInfoDetailForm\",\n    icon: \"search\",\n    type: ActionType.form,\n    title: \"ICON详情\",\n    form: {\n        dataSchema: {\n            type: \"object\",\n            properties: {\n                key: {\n                    type: \"string\",\n                    title: \"KEY\"\n                }\n            }\n        },\n        formSchema: [{\n            key: \"key\",\n            type: \"string\",\n            placeHolder: \"KEY\",\n            htmlClass: \"md-block\"\n        }]\n    }\n});\n\nexport default `${module.name}`;\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/home/index.ts\n **/","import {IActionModel, ActionType} from '../../../directives/action/models/action.model';\nimport {MethodType} from '../../../directives/action/models/interface.model';\n\n/**\n * 返回用户登录界面的schema\n * @returns {IActionModel}\n * @constructor\n */\nfunction LoginSchemaValue() {\n    let actionModel: IActionModel = {\n        key: \"login\",\n        type: ActionType.form,\n        icon: \"\",\n        form: {\n            dataSchema: {\n                type: \"object\",\n                required: [\"username\", \"password\"],\n                properties: {\n                    username: {\n                        type: \"string\",\n                        minLength: 4,\n                        maxLength: 20,\n                        title: \"用户名\"\n                    },\n                    password: {\n                        type: \"string\",\n                        title: \"密码\",\n                        minLength: 4,\n                        maxLength: 20\n                    }\n                }\n            },\n            formSchema: [{\n                key: \"username\",\n                type: \"string\",\n                placeHolder: \"用户名\",\n                icon: {\n                    leftIcon: \"account\"\n                },\n                htmlClass: \"md-icon-left md-block\"\n            }, {\n                key: \"password\",\n                type: \"password\",\n                icon: {\n                    leftIcon: \"lock\"\n                },\n                htmlClass: \"md-icon-left md-block\"\n            }]\n        },\n        interfaces: [{\n            key: \"loginAction\",\n            method: MethodType.POST,\n            address: \"\",\n            port: null,\n            path: \"/passport/login\",\n            isRestful: false\n        }]\n    };\n\n    return actionModel;\n}\n\nfunction LogoutSchemaValue() {\n    let actionModel: IActionModel = {\n        key: \"logout\",\n        type: ActionType.confirm,\n        icon: \"\",\n        confirm: {\n            confirmTitle: '用户中心',\n            confirmContent: '确定要退出么?',\n            confirmOk: \"果断退出\",\n            confirmCancel: '在看看'\n        },\n        interfaces: [{\n            key: \"logoutAction\",\n            method: MethodType.POST,\n            address: \"\",\n            port: null,\n            path: \"/passport/logout\",\n            isRestful: false\n        }]\n    };\n\n    return actionModel;\n}\n\nexport default (module: ng.IModule)=> {\n    const models = [LoginSchemaValue(), LogoutSchemaValue()];\n\n    _.each(models, (model)=> {\n        module.value(model.key, model);\n    });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/passport/services/login.value.ts\n **/"],"sourceRoot":""}