{"version":3,"sources":["webpack:///./src/directives/action/index.ts?5e33","webpack:///./src/directives/action/schemas/modules.value.ts?16bf"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,6DAA4D,OAAO;AACnE,6DAA4D,OAAO,SAAS,gBAAgB;AAC5F,6DAA4D,OAAO,QAAQ,gBAAgB;AAC3F,6DAA4D,OAAO,aAAa,kBAAkB;AAClG,6DAA4D,OAAO,aAAa,kBAAkB;AAClG,oEAAmE,oBAAoB,GAAG,sBAAsB;AAChH;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,+CAA8C,cAAc;AAC5D;;;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,YAAY;AACnE,wDAAuD,gBAAgB;AACvE,qEAAoE,eAAe;AACnF,wDAAuD,cAAc;AACrE,wDAAuD,cAAc;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,4BAA2B,sBAAsB,GAAG,wBAAwB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB,iCAAgC;AAChC,iCAAgC;AAChC;AACA,sBAAqB;AACrB;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,sBAAqB;AACrB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,sBAAqB;AACrB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,MAAK;AACL","file":"0.ee958d8e4fde15d54c83.hot-update.js","sourcesContent":["\"use strict\";\nvar angular = require('angular');\nvar ngMaterial = require('angular-material');\nrequire('expose?JSONEditor!jsoneditor');\nrequire('ng-jsoneditor');\nvar action_provider_1 = require('./services/action.provider');\nvar utils_service_1 = require('./services/utils.service');\nvar rest_service_1 = require('../../services/rest.service');\nvar login_value_1 = require('./schemas/login.value');\nvar modules_value_1 = require('./schemas/modules.value');\nvar crawler_value_1 = require('./schemas/crawler.value');\nvar common_value_1 = require('./schemas/common.value');\nvar form_directive_1 = require('./directives/form.directive');\nvar list_directive_1 = require('./directives/list.directive');\nvar dialog_form_directive_1 = require('./directives/dialog-form.directive');\nvar search_directive_1 = require('./directives/search.directive');\nvar wizard_directive_1 = require('./directives/wizard.directive');\nvar dialog_wizard_directive_1 = require('./directives/dialog-wizard.directive');\nvar builder_directive_1 = require('./directives/builder.directive');\nvar autocomplete_provider_1 = require('./services/autocomplete.provider');\nvar jsoneditor_provider_1 = require('./services/jsoneditor.provider');\nrequire('angular-schema-form');\nrequire('angular-schema-form-ng-material');\nrequire('./services/validator.custom.value');\nvar _name = \"fxAction\";\nvar module = angular.module(_name + \"Module\", [ngMaterial, rest_service_1.default, \"schemaForm\", \"ng.jsoneditor\"]);\nutils_service_1.default(module);\naction_provider_1.default(module);\nform_directive_1.default(module);\nlist_directive_1.default(module);\nmodules_value_1.default(module);\nlogin_value_1.default(module);\ndialog_form_directive_1.default(module);\nsearch_directive_1.default(module);\nwizard_directive_1.default(module);\ndialog_wizard_directive_1.default(module);\nbuilder_directive_1.default(module);\ncrawler_value_1.default(module);\ncommon_value_1.default(module);\nautocomplete_provider_1.default(module);\njsoneditor_provider_1.default(module);\nfunction sfLayout(args) {\n    var layoutDiv = args.fieldFrag.querySelector('[sf-layout]');\n    if (layoutDiv && args.form.grid) {\n        Object.getOwnPropertyNames(args.form.grid).forEach(function (property, idx, array) {\n            layoutDiv.setAttribute(property, args.form.grid[property]);\n        });\n    }\n}\n;\nmodule\n    .config([\"sfErrorMessageProvider\", function (sfErrorMessageProvider) {\n        sfErrorMessageProvider.setDefaultMessage(\"302\", \"[{{title}}]是必填项\");\n        sfErrorMessageProvider.setDefaultMessage(\"103\", \"[{{title}}]超过了最大值{{schema.maximum}}\");\n        sfErrorMessageProvider.setDefaultMessage(\"101\", \"[{{title}}]小于最小值{{schema.minimum}}\");\n        sfErrorMessageProvider.setDefaultMessage(\"200\", \"[{{title}}]字符长度小于最小值({{schema.minLength}})\");\n        sfErrorMessageProvider.setDefaultMessage(\"201\", \"[{{title}}]字符长度大于最大值({{schema.maxLength}})\");\n        sfErrorMessageProvider.setDefaultMessage(\"400\", \"数组长度不正确，{{schema.minItems||0}}-{{schema.maxItems||'∞'}}\");\n        sfErrorMessageProvider.setDefaultMessage(\"500\", \"格式不正确\");\n    }])\n    .config([\"sfBuilderProvider\", \"schemaFormDecoratorsProvider\", \"jsonEditorBuilderProvider\", \"autoCompleteBuilderProvider\", function (sfBuilderProvider, schemaFormDecoratorsProvider, jsonEditorBuilder, autoCompleteBuilder) {\n        schemaFormDecoratorsProvider.defineAddOn('materialDecorator', 'jeditor', \"./decorators/jsoneditor.jade\", sfBuilderProvider.stdBuilders.concat(jsonEditorBuilder.builder));\n        schemaFormDecoratorsProvider.defineAddOn('materialDecorator', 'card', \"./decorators/card.jade\", [sfBuilderProvider.builders.sfField, sfBuilderProvider.builders.condition, sfBuilderProvider.builders.transclusion]);\n        schemaFormDecoratorsProvider.defineAddOn('materialDecorator', 'autocomplete-1', \"./decorators/autocomplete-1.jade\", [sfBuilderProvider.builders.sfField, sfLayout, sfBuilderProvider.builders.condition, autoCompleteBuilder.builder, sfBuilderProvider.builders.transclusion]);\n        schemaFormDecoratorsProvider.defineAddOn('materialDecorator', 'section-1', \"./decorators/section-1.jade\", [sfBuilderProvider.builders.sfField, sfBuilderProvider.builders.ngModel, sfBuilderProvider.builders.condition, sfBuilderProvider.builders.simpleTransclusion, sfBuilderProvider.builders.array]);\n    }])\n    .run([\"$templateCache\", \"autoCompleteBuilder\", function ($templateCache) {\n        $templateCache.put('./decorators/jsoneditor.jade', require(\"./decorators/jsoneditor.jade\")());\n        $templateCache.put('./decorators/card.jade', require(\"./decorators/card.jade\")());\n        $templateCache.put('./decorators/autocomplete-1.jade', require(\"./decorators/autocomplete-1.jade\")());\n        $templateCache.put('./decorators/section-1.jade', require(\"./decorators/section-1.jade\")());\n    }]);\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = module.name;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/action/index.ts\n ** module id = 36\n ** module chunks = 0\n **/","\"use strict\";\nvar action_model_1 = require('../models/action.model');\nvar interface_model_1 = require('../models/interface.model');\nvar ModuleList = (function () {\n    function ModuleList(toolbarUtils, actionUtils) {\n        var actionModel = {\n            key: ModuleList.key,\n            type: action_model_1.ActionType.list,\n            title: \"模块管理\",\n            icon: \"view-module\",\n            list: {\n                columns: [\n                    actionUtils.columnBuilder(\"<span>{{::item.key}}</span>\", \"KEY\").toValue(),\n                    actionUtils.columnBuilder(\"<span>{{ ::item.title }}</span>\", \"模块名称\").toValue(),\n                    actionUtils.columnBuilder(\"<ng-md-icon icon=\\\"{{ ::item.icon }}\\\"></ng-md-icon>\", \"图标\").toValue(),\n                    actionUtils.columnBuilder(\"<span>{{ ::item.lft }}</span>\", \"lft\", \"lft\").toValue(),\n                    actionUtils.columnBuilder(\"<span>{{ ::item.rgt }}</span>\", \"rgt\", \"rgt\").toValue()\n                ],\n                searchActionKey: ModuleSearch.key,\n                showRefreshBtn: true,\n                showSearchBtn: true,\n                showSearchPanel: false,\n                toolbars: [],\n                itemToolbars: []\n            },\n            itemActions: [{ key: ModuleEdit.key }, { key: ModuleDelete.key }],\n            actions: [ModuleAdd.key, ModuleWizardAdd.key],\n            interfaces: [{\n                    key: \"modulesList\",\n                    method: interface_model_1.MethodType.GET,\n                    address: \"\",\n                    port: null,\n                    path: \"modules\",\n                    jpp: {\n                        set: {\n                            \"/total\": \"/count\",\n                            \"/rows\": \"/rows\"\n                        },\n                        copy: {},\n                        move: {},\n                        del: {}\n                    },\n                    isRestful: true\n                }]\n        };\n        return actionModel;\n    }\n    ModuleList.$inject = [\"toolbarUtils\", \"actionUtils\"];\n    ModuleList.key = \"modulesListAction\";\n    return ModuleList;\n}());\nvar ModuleMenus = (function () {\n    function ModuleMenus(toolbarUtils, actionUtils) {\n        var actionModel = {\n            key: ModuleMenus.key,\n            type: action_model_1.ActionType.list,\n            title: \"模块管理\",\n            icon: \"view-module\",\n            interfaces: [{\n                    key: \"moduleMenu\",\n                    method: interface_model_1.MethodType.GET,\n                    address: \"\",\n                    port: null,\n                    path: \"/modules/menu\",\n                    isRestful: false\n                }]\n        };\n        return actionModel;\n    }\n    ModuleMenus.$inject = [\"toolbarUtils\", \"actionUtils\"];\n    ModuleMenus.key = \"moduleMenuAction\";\n    return ModuleMenus;\n}());\nvar ModuleAdd = (function () {\n    function ModuleAdd(toolbarUtils, actionUtils) {\n        var actionModel = {\n            key: ModuleAdd.key,\n            type: action_model_1.ActionType.form,\n            title: \"新建模块\",\n            icon: \"add\",\n            refreshList: true,\n            form: {\n                dataSchema: {\n                    type: \"object\",\n                    required: [\"key\", \"title\", \"icon\"],\n                    properties: {\n                        key: {\n                            type: \"string\",\n                            title: \"KEY\"\n                        },\n                        title: {\n                            type: \"string\",\n                            title: \"模块名称\"\n                        },\n                        icon: {\n                            type: \"string\",\n                            title: \"图标\"\n                        },\n                        parentKey: {\n                            type: \"string\",\n                            title: \"父亲节点KEY\"\n                        },\n                        description: {\n                            type: \"string\",\n                            title: \"描述\",\n                            maxLength: \"500\"\n                        },\n                        showed: {\n                            type: \"boolean\",\n                            title: \"是否显示\"\n                        }\n                    }\n                },\n                formSchema: [{\n                        key: \"parentKey\",\n                        type: \"text\",\n                        htmlClass: \"md-block\"\n                    }, {\n                        key: \"key\",\n                        type: \"text\",\n                        htmlClass: \"md-block\"\n                    }, {\n                        key: \"title\",\n                        type: \"text\",\n                        htmlClass: \"md-block\"\n                    }, {\n                        key: \"icon\",\n                        type: \"text\",\n                        htmlClass: \"md-block\"\n                    }, {\n                        key: \"description\",\n                        type: \"textarea\",\n                        htmlClass: \"md-block\"\n                    }, {\n                        key: \"showed\",\n                        type: \"checkbox\"\n                    }]\n            },\n            closeDialog: true,\n            interfaces: [{\n                    key: \"modulesAdd\",\n                    method: interface_model_1.MethodType.POST,\n                    address: \"\",\n                    port: null,\n                    path: \"modules\",\n                    isRestful: true\n                }]\n        };\n        return actionModel;\n    }\n    ModuleAdd.$inject = [\"toolbarUtils\", \"actionUtils\"];\n    ModuleAdd.key = \"modulesAddAction\";\n    return ModuleAdd;\n}());\nvar ModuleEdit = (function () {\n    function ModuleEdit(toolbarUtils, actionUtils) {\n        var actionModel = {\n            key: ModuleEdit.key,\n            type: action_model_1.ActionType.form,\n            title: \"修改模块\",\n            icon: \"edit\",\n            refreshList: true,\n            form: {\n                dataSchema: {\n                    type: \"object\",\n                    required: [\"key\", \"title\", \"icon\"],\n                    properties: {\n                        key: {\n                            type: \"string\",\n                            title: \"KEY\"\n                        },\n                        title: {\n                            type: \"string\",\n                            title: \"模块名称\"\n                        },\n                        icon: {\n                            type: \"string\",\n                            title: \"图标\"\n                        },\n                        parentKey: {\n                            type: \"string\",\n                            title: \"父亲节点KEY\"\n                        },\n                        description: {\n                            type: \"string\",\n                            title: \"描述\",\n                            maxLength: \"500\"\n                        },\n                        showed: {\n                            type: \"boolean\",\n                            title: \"是否显示\"\n                        }\n                    }\n                },\n                formSchema: [{\n                        key: \"parentKey\",\n                        type: \"text\",\n                        readonly: true,\n                        htmlClass: \"md-block\"\n                    }, {\n                        key: \"key\",\n                        type: \"text\",\n                        htmlClass: \"md-block\"\n                    }, {\n                        key: \"title\",\n                        type: \"text\",\n                        htmlClass: \"md-block\"\n                    }, {\n                        key: \"icon\",\n                        type: \"text\",\n                        htmlClass: \"md-block\"\n                    }, {\n                        key: \"description\",\n                        type: \"textarea\",\n                        htmlClass: \"md-block\"\n                    }, {\n                        key: \"showed\",\n                        type: \"checkbox\"\n                    }]\n            },\n            closeDialog: true,\n            interfaces: [{\n                    key: \"modulesEdit\",\n                    method: interface_model_1.MethodType.PUT,\n                    idFieldPath: \"/key\",\n                    address: \"\",\n                    port: null,\n                    path: \"modules\",\n                    isRestful: true\n                }]\n        };\n        return actionModel;\n    }\n    ModuleEdit.$inject = [\"toolbarUtils\", \"actionUtils\"];\n    ModuleEdit.key = \"modulesEditAction\";\n    return ModuleEdit;\n}());\nvar ModuleDelete = (function () {\n    function ModuleDelete() {\n        var actionModel = {\n            key: ModuleDelete.key,\n            type: action_model_1.ActionType.confirm,\n            title: \"删除模块\",\n            icon: \"delete\",\n            refreshList: true,\n            confirm: {\n                confirmTitle: \"\",\n                confirmContent: \"确定要删除模块吗!\"\n            },\n            interfaces: [{\n                    key: \"modulesDelete\",\n                    method: interface_model_1.MethodType.DELETE,\n                    idFieldPath: \"/key\",\n                    address: \"\",\n                    port: null,\n                    path: \"modules\",\n                    isRestful: true\n                }]\n        };\n        return actionModel;\n    }\n    ModuleDelete.key = \"modulesDeleteAction\";\n    return ModuleDelete;\n}());\nvar ModuleSearch = (function () {\n    function ModuleSearch() {\n        var actionModel = {\n            key: ModuleSearch.key,\n            icon: \"search\",\n            type: action_model_1.ActionType.form,\n            title: \"模块搜索表单\",\n            form: {\n                dataSchema: {\n                    type: \"object\",\n                    properties: {\n                        key: {\n                            type: \"string\",\n                            title: \"KEY\"\n                        }\n                    }\n                },\n                formSchema: [{\n                        key: \"key\",\n                        type: \"text\",\n                        placeHolder: \"KEY\",\n                        description: \"请输入key来进行搜索,不支持模糊查询\",\n                        showHints: true,\n                        htmlClass: \"md-block\"\n                    }]\n            }\n        };\n        return actionModel;\n    }\n    ModuleSearch.$inject = [\"toolbarUtils\", \"actionUtils\"];\n    ModuleSearch.key = \"modulesSearchAction\";\n    return ModuleSearch;\n}());\nvar ModuleWizardAdd = (function () {\n    function ModuleWizardAdd() {\n        var actionModel = {\n            key: ModuleWizardAdd.key,\n            icon: \"add_circle_outline\",\n            type: action_model_1.ActionType.wizard,\n            title: \"新建模块\",\n            interfaces: [{\n                    key: \"modulesAdd\",\n                    method: interface_model_1.MethodType.POST,\n                    address: \"\",\n                    port: null,\n                    path: \"modules\",\n                    isRestful: true\n                }],\n            wizard: {\n                actions: [ModuleAdd.key, ModuleEdit.key]\n            }\n        };\n        return actionModel;\n    }\n    ModuleWizardAdd.$inject = [\"toolbarUtils\", \"actionUtils\"];\n    ModuleWizardAdd.key = \"ModuleWizardAddAction\";\n    return ModuleWizardAdd;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = function (module) {\n    var services = [ModuleWizardAdd, ModuleDelete, ModuleMenus, ModuleList, ModuleSearch, ModuleAdd, ModuleEdit];\n    _.each(services, function (ser) {\n        module.service(ser.key, ser);\n    });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/action/schemas/modules.value.ts\n ** module id = 49\n ** module chunks = 0\n **/"],"sourceRoot":""}