{"version":3,"sources":["webpack:///./~/angular-loading-bar/index.js","webpack:///./src/pages/index/index.scss?802d","webpack:///./src/directives/loading/index.ts","webpack:///./~/angular-loading-bar/build/loading-bar.js","webpack:///./src/directives/loading/styles/loading.scss","webpack:///./src/pages/index/index.scss","webpack:///./src/directives/loading/tpls/loading.jade","webpack:///./src/directives/loading/styles/loading.scss?50a5","webpack:///./src/pages/index/index.ts"],"names":[],"mappings":";;;;;AAAA;AACA;;;;;;;;ACDA;;AAEA;AACA;AACA;AACA;AACA,iDAAsF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,iCAAgC,UAAU,EAAE;AAC5C,E;;;;;;;;ACpBA,0BAA+B;AAE/B,KAAM,KAAK,GAAG,WAAW,CAAC;AAM1B;KACI,MAAM,CAAC;SACH,QAAQ,EAAE,IAAI;SACd,QAAQ,EAAE,mBAAO,CAAC,GAAqB,CAAC,EAAE;SAC1C,KAAK,EAAE,EAAE;SACT,OAAO,EAAE,KAAK;SACd,IAAI,EAAE,UAAC,MAAuB;SAE9B,CAAC;MACJ;AACL,EAAC;AAED,UAAS,CAAC,OAAO,GAAG,EAAE,CAAC;AAEvB,KAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAI,KAAK,WAAQ,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;;AAEhF,mBAAe,KAAG,MAAM,CAAC,IAAM,CAAC;;;;;;;;ACxBhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB,OAAO;AACzB,mBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,6DAA4D,gBAAgB;AAC5E;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4DAA2D,2CAA2C;AACtG;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4DAA2D,6CAA6C;AACxG;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,MAAK,EAAE;AACP,IAAG,EAAE;AACL,EAAC,IAAI;;;;;;;;ACpVL;AACA;;;AAGA;AACA,wCAAuC,uBAAuB,gBAAgB,iBAAiB,uBAAuB,uBAAuB,mDAAmD,EAAE,0CAA0C,iBAAiB,kBAAkB,4BAA4B,yBAAyB,aAAa,6BAA6B,0BAA0B,kEAAkE,0DAA0D,EAAE,uBAAuB,gBAAgB,kBAAkB,qCAAqC,6BAA6B,EAAE,uCAAuC,UAAU,wCAAwC,EAAE,EAAE,+BAA+B,UAAU,gCAAgC,wCAAwC,EAAE,EAAE,uCAAuC,cAAc,kCAAkC,EAAE,SAAS,kCAAkC,EAAE,EAAE,+BAA+B,cAAc,0BAA0B,kCAAkC,EAAE,SAAS,0BAA0B,kCAAkC,EAAE,EAAE;;AAEjpC;;;;;;;;ACPA;AACA;;;AAGA;AACA,+CAA8C,qBAAqB,EAAE,mBAAmB,6BAA6B,gCAAgC,EAAE,2BAA2B,4BAA4B,EAAE,sBAAsB,sBAAsB,EAAE,0CAA0C,uBAAuB,EAAE,kCAAkC,6BAA6B,EAAE,8DAA8D,gCAAgC,kCAAkC,EAAE,iBAAiB,0BAA0B,6BAA6B,EAAE,iHAAiH,6CAA6C,EAAE,iCAAiC,mBAAmB,EAAE,UAAU,cAAc,EAAE,YAAY,gBAAgB,EAAE;;AAE51B;;;;;;;;ACPA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB,EAAC;AACD;AACA;AACA,E;;;;;;;AChCA;;AAEA;AACA;AACA;AACA;AACA,iDAAyF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,iCAAgC,UAAU,EAAE;AAC5C,E;;;;;;;;ACfA,yBAAiB;AACjB,0CAAkD;AAClD,0BAAsB;AACtB,0BAA6B;AAE7B,KAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,qBAAqB,EAAE,iBAAU,CAAC,CAAC,CAAC;AAE/E,OAAM,CAAC,MAAM,CAAC,CAAC,uBAAuB,EAAE,UAAC,qBAAqB;SAE1D,qBAAqB,CAAC,cAAc,GAAG,IAAI,CAAC;SAC5C,qBAAqB,CAAC,gBAAgB,GAAG,IAAI,CAAC;KAClD,CAAC,CAAC,CAAC,CAAC;AAEJ,EAAC,CAAC;KACE,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,YAAY,EAAE,YAAY,EAAE,gBAAgB,CAAC,CAAC,CAAC;AAC7F,EAAC,CAAC","file":"page/index.bundle.js","sourcesContent":["require('./build/loading-bar');\nmodule.exports = 'angular-loading-bar';\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-loading-bar/index.js\n ** module id = 172\n ** module chunks = 5\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../node_modules/css-loader/index.js!./../../../node_modules/sass-loader/index.js!./index.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js!./../../../node_modules/sass-loader/index.js!./index.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js!./../../../node_modules/sass-loader/index.js!./index.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pages/index/index.scss\n ** module id = 193\n ** module chunks = 5\n **/","import './styles/loading.scss';\n\nconst _name = \"fxLoading\";\n\ninterface IDirectiveScope extends ng.IScope {\n\n}\n\nfunction Directive(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        template: require(\"./tpls/loading.jade\")(),\n        scope: {},\n        replace: false,\n        link: ($scope: IDirectiveScope) => {\n\n        }\n    }\n}\n\nDirective.$inject = [];\n\nconst module = angular.module(`${_name}Module`, []).directive(_name, Directive);\n\nexport default `${module.name}`;\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/loading/index.ts\n **/","/*! \n * angular-loading-bar v0.9.0\n * https://chieffancypants.github.io/angular-loading-bar\n * Copyright (c) 2016 Wes Cruver\n * License: MIT\n */\n/*\n * angular-loading-bar\n *\n * intercepts XHR requests and creates a loading bar.\n * Based on the excellent nprogress work by rstacruz (more info in readme)\n *\n * (c) 2013 Wes Cruver\n * License: MIT\n */\n\n\n(function() {\n\n'use strict';\n\n// Alias the loading bar for various backwards compatibilities since the project has matured:\nangular.module('angular-loading-bar', ['cfp.loadingBarInterceptor']);\nangular.module('chieffancypants.loadingBar', ['cfp.loadingBarInterceptor']);\n\n\n/**\n * loadingBarInterceptor service\n *\n * Registers itself as an Angular interceptor and listens for XHR requests.\n */\nangular.module('cfp.loadingBarInterceptor', ['cfp.loadingBar'])\n  .config(['$httpProvider', function ($httpProvider) {\n\n    var interceptor = ['$q', '$cacheFactory', '$timeout', '$rootScope', '$log', 'cfpLoadingBar', function ($q, $cacheFactory, $timeout, $rootScope, $log, cfpLoadingBar) {\n\n      /**\n       * The total number of requests made\n       */\n      var reqsTotal = 0;\n\n      /**\n       * The number of requests completed (either successfully or not)\n       */\n      var reqsCompleted = 0;\n\n      /**\n       * The amount of time spent fetching before showing the loading bar\n       */\n      var latencyThreshold = cfpLoadingBar.latencyThreshold;\n\n      /**\n       * $timeout handle for latencyThreshold\n       */\n      var startTimeout;\n\n\n      /**\n       * calls cfpLoadingBar.complete() which removes the\n       * loading bar from the DOM.\n       */\n      function setComplete() {\n        $timeout.cancel(startTimeout);\n        cfpLoadingBar.complete();\n        reqsCompleted = 0;\n        reqsTotal = 0;\n      }\n\n      /**\n       * Determine if the response has already been cached\n       * @param  {Object}  config the config option from the request\n       * @return {Boolean} retrns true if cached, otherwise false\n       */\n      function isCached(config) {\n        var cache;\n        var defaultCache = $cacheFactory.get('$http');\n        var defaults = $httpProvider.defaults;\n\n        // Choose the proper cache source. Borrowed from angular: $http service\n        if ((config.cache || defaults.cache) && config.cache !== false &&\n          (config.method === 'GET' || config.method === 'JSONP')) {\n            cache = angular.isObject(config.cache) ? config.cache\n              : angular.isObject(defaults.cache) ? defaults.cache\n              : defaultCache;\n        }\n\n        var cached = cache !== undefined ?\n          cache.get(config.url) !== undefined : false;\n\n        if (config.cached !== undefined && cached !== config.cached) {\n          return config.cached;\n        }\n        config.cached = cached;\n        return cached;\n      }\n\n\n      return {\n        'request': function(config) {\n          // Check to make sure this request hasn't already been cached and that\n          // the requester didn't explicitly ask us to ignore this request:\n          if (!config.ignoreLoadingBar && !isCached(config)) {\n            $rootScope.$broadcast('cfpLoadingBar:loading', {url: config.url});\n            if (reqsTotal === 0) {\n              startTimeout = $timeout(function() {\n                cfpLoadingBar.start();\n              }, latencyThreshold);\n            }\n            reqsTotal++;\n            cfpLoadingBar.set(reqsCompleted / reqsTotal);\n          }\n          return config;\n        },\n\n        'response': function(response) {\n          if (!response || !response.config) {\n            $log.error('Broken interceptor detected: Config object not supplied in response:\\n https://github.com/chieffancypants/angular-loading-bar/pull/50');\n            return response;\n          }\n\n          if (!response.config.ignoreLoadingBar && !isCached(response.config)) {\n            reqsCompleted++;\n            $rootScope.$broadcast('cfpLoadingBar:loaded', {url: response.config.url, result: response});\n            if (reqsCompleted >= reqsTotal) {\n              setComplete();\n            } else {\n              cfpLoadingBar.set(reqsCompleted / reqsTotal);\n            }\n          }\n          return response;\n        },\n\n        'responseError': function(rejection) {\n          if (!rejection || !rejection.config) {\n            $log.error('Broken interceptor detected: Config object not supplied in rejection:\\n https://github.com/chieffancypants/angular-loading-bar/pull/50');\n            return $q.reject(rejection);\n          }\n\n          if (!rejection.config.ignoreLoadingBar && !isCached(rejection.config)) {\n            reqsCompleted++;\n            $rootScope.$broadcast('cfpLoadingBar:loaded', {url: rejection.config.url, result: rejection});\n            if (reqsCompleted >= reqsTotal) {\n              setComplete();\n            } else {\n              cfpLoadingBar.set(reqsCompleted / reqsTotal);\n            }\n          }\n          return $q.reject(rejection);\n        }\n      };\n    }];\n\n    $httpProvider.interceptors.push(interceptor);\n  }]);\n\n\n/**\n * Loading Bar\n *\n * This service handles adding and removing the actual element in the DOM.\n * Generally, best practices for DOM manipulation is to take place in a\n * directive, but because the element itself is injected in the DOM only upon\n * XHR requests, and it's likely needed on every view, the best option is to\n * use a service.\n */\nangular.module('cfp.loadingBar', [])\n  .provider('cfpLoadingBar', function() {\n\n    this.autoIncrement = true;\n    this.includeSpinner = true;\n    this.includeBar = true;\n    this.latencyThreshold = 100;\n    this.startSize = 0.02;\n    this.parentSelector = 'body';\n    this.spinnerTemplate = '<div id=\"loading-bar-spinner\"><div class=\"spinner-icon\"></div></div>';\n    this.loadingBarTemplate = '<div id=\"loading-bar\"><div class=\"bar\"><div class=\"peg\"></div></div></div>';\n\n    this.$get = ['$injector', '$document', '$timeout', '$rootScope', function ($injector, $document, $timeout, $rootScope) {\n      var $animate;\n      var $parentSelector = this.parentSelector,\n        loadingBarContainer = angular.element(this.loadingBarTemplate),\n        loadingBar = loadingBarContainer.find('div').eq(0),\n        spinner = angular.element(this.spinnerTemplate);\n\n      var incTimeout,\n        completeTimeout,\n        started = false,\n        status = 0;\n\n      var autoIncrement = this.autoIncrement;\n      var includeSpinner = this.includeSpinner;\n      var includeBar = this.includeBar;\n      var startSize = this.startSize;\n\n      /**\n       * Inserts the loading bar element into the dom, and sets it to 2%\n       */\n      function _start() {\n        if (!$animate) {\n          $animate = $injector.get('$animate');\n        }\n\n        $timeout.cancel(completeTimeout);\n\n        // do not continually broadcast the started event:\n        if (started) {\n          return;\n        }\n\n        var document = $document[0];\n        var parent = document.querySelector ?\n          document.querySelector($parentSelector)\n          : $document.find($parentSelector)[0]\n        ;\n\n        if (! parent) {\n          parent = document.getElementsByTagName('body')[0];\n        }\n\n        var $parent = angular.element(parent);\n        var $after = parent.lastChild && angular.element(parent.lastChild);\n\n        $rootScope.$broadcast('cfpLoadingBar:started');\n        started = true;\n\n        if (includeBar) {\n          $animate.enter(loadingBarContainer, $parent, $after);\n        }\n\n        if (includeSpinner) {\n          $animate.enter(spinner, $parent, loadingBarContainer);\n        }\n\n        _set(startSize);\n      }\n\n      /**\n       * Set the loading bar's width to a certain percent.\n       *\n       * @param n any value between 0 and 1\n       */\n      function _set(n) {\n        if (!started) {\n          return;\n        }\n        var pct = (n * 100) + '%';\n        loadingBar.css('width', pct);\n        status = n;\n\n        // increment loadingbar to give the illusion that there is always\n        // progress but make sure to cancel the previous timeouts so we don't\n        // have multiple incs running at the same time.\n        if (autoIncrement) {\n          $timeout.cancel(incTimeout);\n          incTimeout = $timeout(function() {\n            _inc();\n          }, 250);\n        }\n      }\n\n      /**\n       * Increments the loading bar by a random amount\n       * but slows down as it progresses\n       */\n      function _inc() {\n        if (_status() >= 1) {\n          return;\n        }\n\n        var rnd = 0;\n\n        // TODO: do this mathmatically instead of through conditions\n\n        var stat = _status();\n        if (stat >= 0 && stat < 0.25) {\n          // Start out between 3 - 6% increments\n          rnd = (Math.random() * (5 - 3 + 1) + 3) / 100;\n        } else if (stat >= 0.25 && stat < 0.65) {\n          // increment between 0 - 3%\n          rnd = (Math.random() * 3) / 100;\n        } else if (stat >= 0.65 && stat < 0.9) {\n          // increment between 0 - 2%\n          rnd = (Math.random() * 2) / 100;\n        } else if (stat >= 0.9 && stat < 0.99) {\n          // finally, increment it .5 %\n          rnd = 0.005;\n        } else {\n          // after 99%, don't increment:\n          rnd = 0;\n        }\n\n        var pct = _status() + rnd;\n        _set(pct);\n      }\n\n      function _status() {\n        return status;\n      }\n\n      function _completeAnimation() {\n        status = 0;\n        started = false;\n      }\n\n      function _complete() {\n        if (!$animate) {\n          $animate = $injector.get('$animate');\n        }\n\n        $rootScope.$broadcast('cfpLoadingBar:completed');\n        _set(1);\n\n        $timeout.cancel(completeTimeout);\n\n        // Attempt to aggregate any start/complete calls within 500ms:\n        completeTimeout = $timeout(function() {\n          var promise = $animate.leave(loadingBarContainer, _completeAnimation);\n          if (promise && promise.then) {\n            promise.then(_completeAnimation);\n          }\n          $animate.leave(spinner);\n        }, 500);\n      }\n\n      return {\n        start            : _start,\n        set              : _set,\n        status           : _status,\n        inc              : _inc,\n        complete         : _complete,\n        autoIncrement    : this.autoIncrement,\n        includeSpinner   : this.includeSpinner,\n        latencyThreshold : this.latencyThreshold,\n        parentSelector   : this.parentSelector,\n        startSize        : this.startSize\n      };\n\n\n    }];     //\n  });       // wtf javascript. srsly\n})();       //\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-loading-bar/build/loading-bar.js\n ** module id = 213\n ** module chunks = 5\n **/","exports = module.exports = require(\"./../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".fx-loading {\\n  margin: 100px auto;\\n  width: 90px;\\n  height: 90px;\\n  position: relative;\\n  text-align: center;\\n  animation: lodding-rotate 2.0s infinite linear; }\\n  .fx-loading .dot1, .fx-loading .dot2 {\\n    width: 60%;\\n    height: 60%;\\n    display: inline-block;\\n    position: absolute;\\n    top: 0;\\n    background-color: #000;\\n    border-radius: 100%;\\n    -webkit-animation: lodding-bounce 2.0s infinite ease-in-out;\\n    animation: lodding-bounce 2.0s infinite ease-in-out; }\\n  .fx-loading .dot2 {\\n    top: auto;\\n    bottom: 0px;\\n    -webkit-animation-delay: -1.0s;\\n    animation-delay: -1.0s; }\\n\\n@-webkit-keyframes lodding-rotate {\\n  100% {\\n    -webkit-transform: rotate(360deg); } }\\n\\n@keyframes lodding-rotate {\\n  100% {\\n    transform: rotate(360deg);\\n    -webkit-transform: rotate(360deg); } }\\n\\n@-webkit-keyframes lodding-bounce {\\n  0%, 100% {\\n    -webkit-transform: scale(0); }\\n  50% {\\n    -webkit-transform: scale(1); } }\\n\\n@keyframes lodding-bounce {\\n  0%, 100% {\\n    transform: scale(0);\\n    -webkit-transform: scale(0); }\\n  50% {\\n    transform: scale(1);\\n    -webkit-transform: scale(1); } }\\n\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/sass-loader!./src/directives/loading/styles/loading.scss\n ** module id = 228\n ** module chunks = 5\n **/","exports = module.exports = require(\"./../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".over-hidden, body {\\n  overflow: hidden; }\\n\\n.no-tb-margin {\\n  margin-top: 0 !important;\\n  margin-bottom: 0 !important; }\\n\\n.no-borders .md-input {\\n  border: none !important; }\\n\\n.fx-autocomplete {\\n  margin-top: -20px; }\\n  .fx-autocomplete .md-input-container {\\n    margin-bottom: 0; }\\n\\n.no-errors .md-errors-spacer {\\n  display: none !important; }\\n\\nmd-tabs.scroll.md-dynamic-height md-tabs-content-wrapper {\\n  overflow-y: auto !important;\\n  overflow-x: hidden !important; }\\n\\n.fx-invalid {\\n  opacity: 1 !important;\\n  margin-top: 0 !important; }\\n\\n.schema-form-chips > label:not(.md-no-float):not(.md-container-ignore),\\n.schema-form-chips .md-placeholder {\\n  transform: translate3d(0, 0, 0) scale(1); }\\n\\ntable.md-table th.md-column {\\n  color: inherit; }\\n\\n.red {\\n  fill: red; }\\n\\n.green {\\n  fill: green; }\\n\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/sass-loader!./src/pages/index/index.scss\n ** module id = 231\n ** module chunks = 5\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/loading/tpls/loading.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/loading/tpls/loading.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/loading/tpls/loading.jade\" ));\nbuf.push(\"<div class=\\\"fx-loading\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/loading/tpls/loading.jade\" ));\nbuf.push(\"<div class=\\\"dot1\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/directives/loading/tpls/loading.jade\" ));\nbuf.push(\"<div class=\\\"dot2\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"div.fx-loading\\n    div.dot1\\n    div.dot2\\n\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/loading/tpls/loading.jade\n ** module id = 267\n ** module chunks = 5\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/sass-loader/index.js!./loading.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/sass-loader/index.js!./loading.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/sass-loader/index.js!./loading.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/loading/styles/loading.scss\n ** module id = 307\n ** module chunks = 5\n **/","/**\n * Created by NICK on 16/8/10.\n * 链接所有的页面\n */\n\nimport 'angular';\nimport loadingDir from '../../directives/loading';\nimport './index.scss';\nimport 'angular-loading-bar';\n\nconst module = angular.module(\"indexApp\", [\"angular-loading-bar\", loadingDir]);\n\nmodule.config([\"cfpLoadingBarProvider\", (cfpLoadingBarProvider) => {\n    // ng-loading-bar设置\n    cfpLoadingBarProvider.includeSpinner = true;\n    cfpLoadingBarProvider.latencyThreshold = 1000;\n}]);\n\n$(() => {\n    angular.bootstrap(document, [module.name, 'homeModule', 'pageModule', 'passportModule']);\n})\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/index/index.ts\n **/"],"sourceRoot":""}