{"version":3,"sources":["webpack:///page/home.bundle.js","webpack:///./src/directives/sidemenu/module.ts","webpack:///./~/nvd3/build/nv.d3.js","webpack:///./src/directives/toolbar/module.ts","webpack:///./~/angular-nvd3/index.js","webpack:///./~/angular-tree-control/angular-tree-control.js","webpack:///./~/angular-ui-router/release/angular-ui-router.js","webpack:///./~/svg-morpheus/compile/unminified/svg-morpheus.js?6f3d","webpack:///./src/pages/home/index.scss?7f53","webpack:///./src/directives/sidemenu/index.ts","webpack:///./src/directives/toolbar/index.ts","webpack:///./src/pages/home/router.ts","webpack:///./src/services/svg.service.ts","webpack:///./~/angular-nvd3/dist/angular-nvd3.js","webpack:///./src/directives/sidemenu/styles/sidemenu.scss","webpack:///./src/pages/home/index.scss","webpack:///./~/svg-morpheus/compile/unminified/svg-morpheus.js","webpack:///./src/directives/sidemenu/tpls/search.jade","webpack:///./src/directives/sidemenu/tpls/sidemenu.jade","webpack:///./src/directives/toolbar/tpls/btn.jade","webpack:///./src/directives/toolbar/tpls/icon.jade","webpack:///./src/directives/toolbar/tpls/label.jade","webpack:///./src/directives/toolbar/tpls/layout.jade","webpack:///./src/directives/toolbar/tpls/menu-divider.jade","webpack:///./src/directives/toolbar/tpls/menu-item.jade","webpack:///./src/directives/toolbar/tpls/menu.jade","webpack:///./src/directives/toolbar/tpls/menubar.jade","webpack:///./src/pages/home/tpls/content.template.jade","webpack:///./src/pages/home/tpls/home.template.jade","webpack:///./src/pages/home/tpls/sidenavl.template.jade","webpack:///./src/directives/sidemenu/styles/sidemenu.scss?eb19","webpack:///./src/directives/sidemenu/child.directive.ts","webpack:///./src/directives/sidemenu/content.directive.ts","webpack:///./src/directives/sidemenu/mdcolor.directive.ts","webpack:///./src/directives/sidemenu/search.directive.ts","webpack:///./src/directives/sidemenu/section.provider.ts","webpack:///./src/directives/sidemenu/status.factory.ts","webpack:///./src/directives/toolbar/toolbar.service.ts","webpack:///./src/pages/home/ctls/content.controller.ts","webpack:///./src/pages/home/ctls/home.controller.ts","webpack:///./src/pages/home/ctls/sidenavl.controller.ts","webpack:///./src/pages/home/index.ts","webpack:///./src/pages/home/logo.jpg"],"names":["webpackJsonp","12","module","exports","__webpack_require__","Directive","mdSideMenuSections","restrict","replace","require","_name","transclude","controllerAs","scope","modules","bindToController","selectedNodes","doLink","controller","Controller","compile","$ele","$attr","childTranscludeFn","$scope","$element","attrs","$ctrl","$watch","newValue","opts","options","_","isArray","angular","isDefined","node","equals","children","clone","html","append","$sideMenuTransclude","_module","$compile","$interpolate","this","template","prototype","doLinkPre","$event","isFunction","console","log","showChildren","hasOwnProperty","key","length","isShowChildren","isLeaf","rgt","lft","isSelected","selectedNode","$inject","directive","Object","defineProperty","value","name","35","nv","dev","tooltip","utils","models","charts","logs","dom","d3","dispatch","Function","bind","oThis","TypeError","aArgs","Array","slice","call","arguments","fToBind","fNOP","fBound","apply","concat","on","e","startTime","Date","endTime","totalTime","window","deprecated","info","warn","render","step","active","render_start","renderLoop","chart","graph","i","queue","generate","callback","splice","setTimeout","render_end","addGraph","obj","push","write","undefined","fastdom","mutate","read","measure","interactiveGuideline","layer","selection","each","data","mouseHandler","d3mouse","mouse","mouseX","mouseY","subtractMargin","mouseOutAnyReason","isMSIE","event","offsetX","offsetY","target","tagName","className","baseVal","match","margin","left","top","type","availableWidth","availableHeight","relatedTarget","ownerSVGElement","nvPointerEventsClass","elementMouseout","renderGuideLine","hidden","scaleIsOrdinal","xScale","rangeBands","pointXValue","elementIndex","bisect","range","rangeBand","domain","invert","elementMousemove","elementDblclick","elementClick","elementMouseDown","elementMouseUp","container","select","width","height","wrap","selectAll","wrapEnter","enter","attr","svgContainer","guideLine","x","showGuideLine","line","NaNtoZero","String","d","exit","remove","scale","linear","ActiveXObject","duration","hideDelay","interactiveBisect","values","searchVal","xAccessor","_xAccessor","_cmp","v","bisector","index","max","currentValue","nextIndex","min","nextValue","Math","abs","nearestValueIndex","threshold","yDistMax","Infinity","indexToHighlight","forEach","delta","initTooltip","document","body","id","classes","style","classed","nvtooltip","enabled","dataSeriesExists","newContent","contentGenerator","innerHTML","positionTooltip","floor","random","gravity","distance","snapDistance","lastPosition","headerEnabled","valueFormatter","headerFormatter","keyFormatter","table","createElement","theadEnter","tbodyEnter","trowEnter","p","series","highlight","color","total","filter","percent","format","opacityScale","opacity","outerHTML","footer","position","pos","clientX","clientY","getComputedStyle","transform","client","getBoundingClientRect","isObject","calcGravityOffset","tmp","offsetHeight","offsetWidth","clientWidth","documentElement","clientHeight","gravityOffset","interrupt","transition","delay","old_translate","new_translate","round","translateInterpolator","interpolateString","is_hidden","styleTween","optionsFunc","_options","create","get","set","chartContainer","fixedTop","offset","point","y","initOptions","windowSize","size","innerWidth","innerHeight","compatMode","a","isDate","toString","isNumber","isNaN","windowResize","handler","addEventListener","clear","removeEventListener","getColor","defaultColor","color_scale","ordinal","category20","customTheme","dictionary","getKey","defaultColors","defIndex","pjax","links","content","load","href","fragment","parentNode","replaceChild","history","pushState","textContent","preventDefault","state","calcApproxTextWidth","svgTextElem","text","fontSize","parseInt","textLength","n","watchTransition","renderWatch","args","_duration","renderStack","self","model","__rendered","m","arg","renderEnd","indexOf","reset","pop","every","deepExtend","dst","sources","source","srcObj","_setState","_getState","init","changed","getter","fn","setter","update","_set","settings","JSON","stringify","change","map","calcTicksX","numTicks","numValues","stream_len","calcTicksY","initOption","_calls","_overrides","ops","getOwnPropertyNames","calls","inheritOptionsD3","d3_source","oplist","_d3options","unshift","rebind","arrayUnique","sort","item","symbolMap","symbol","t","s","svg","symbolTypes","functor","inheritOptions","inherited","_inherited","d3ops","initSVG","nvd3-svg","sanitizeHeight","sanitizeWidth","bottom","right","noData","opt","noDataText","wrapTicks","word","words","split","reverse","lineNumber","lineHeight","dy","parseFloat","tspan","join","getComputedTextLength","arrayEquals","array1","array2","l","axis","g","ticks","orient","scale0","fmt","tickFormat","axisLabel","axisLabelText","xLabelMargin","axisMaxMin","w","isOrdinal","showMaxMin","tickPadding","axisLabelDistance","maxTextWidth","textHeight","xTicks","rotateLabelsRule","rotateLabels","box","sin","PI","staggerLabels","rotateYLabel","maxMinRange","err","copy","boxPlot","xDomain","getX","xRange","yData","yDomain","yMin","yMax","q1","getQ1","q3","getQ3","wl","getWl","wh","getWh","olItems","getOlItems","getOlValue","yScale","yRange","xScale0","yScale0","boxplots","boxEnter","j","hover","f","box_width","maxBoxWidth","box_left","box_right","endpoint","elementMouseover","getQ2","outliers","getOlColor","getOlLabel","label","Q1","Q2","Q3","whisker_low","whisker_high","q2","itemColor","outlierValue","outlierLabel","outlierColor","boxPlotChart","boxplot","showXAxis","xAxis","showYAxis","yAxis","beforeUpdate","clamp","gEnter","defsEnter","rightAlignYAxis","barsWrap","datum","disabled","tickSize","evt","tooltipContent","bullet","sortLabels","labels","lz","b","iA","iB","descending","rangez","ranges","markerz","markers","markerLinez","markerLines","measurez","measures","rangeLabelz","rangeLabels","markerLabelz","markerLabels","markerLineLabelz","markerLineLabels","measureLabelz","measureLabels","x1","extent","merge","forceX","__chart__","il","rangeClassNames","legacyRangeClassNames","w1","xp1","h3","markerData","marker","markerLinesData","defaultRangeLabels","bulletChart","x0","title","subtitle","bulletWrap","tick","tickEnter","tickUpdate","timer","flush","candlestickBar","barWidth","padData","getLow","forceY","getHigh","chartClick","clipEdge","tickGroups","getOpen","getClose","getY","open","close","high","low","interactive","highlightPoint","pointIndex","isHoverOver","clearHighlights","cumulativeLineChart","lines","dragStart","dragMove","dx","updateZero","dragEnd","stateChange","indexLine","oldDuration","stateSetter","stateGetter","defaultState","indexDrag","behavior","drag","rescaleY","seriesDomains","initialDomain","completeDomain","indexify","interactivePointerEvents","showLegend","legend","marginTop","showControls","controlsData","controls","rightAlign","tempDisabled","useInteractiveGuideline","interactiveLayer","display","linesWrap","seriesIndex","avgLineData","average","avgLines","getAvgLineY","yVal","_ticks","newState","singlePoint","pointXLocation","allData","yValue","domainExtent","xValue","idx","indexifyYGetter","indexValue","noErrorCheck","updateState","useVoronoi","discreteBar","seriesData","y0","showValues","groups","bars","barsEnter","element","stopPropagation","elementDblClick","valueFormat","rectClass","discreteBarChart","discretebar","wrapLabels","distribution","naxis","distWrap","dist","getData","focus","resizePath","updateBrushBG","brush","empty","brushExtent","brushBG","leftWidth","rightWidth","onBrush","shouldDispatch","contentWrap","syncBrushing","brushBGenter","gBrush","pointActive","interpolate","xTickFormat","yTickFormat","forceDirectedGraph","nodes","nodeFieldSet","Set","keys","add","force","layout","linkStrength","friction","linkDistance","linkDist","charge","theta","alpha","start","link","sqrt","radius","py","px","nodeColor","field","linkExtras","nodeExtras","furiousLegend","setTextColor","vers","expanded","disengaged","setBGColor","seriesShape","seriesEnter","property","seriesCheckbox","seriesText","legendMouseover","legendMouseout","legendClick","radioButtonMode","userDisabled","engaged","legendDblclick","versPadding","align","seriesWidths","legendText","maxKeyLength","trimmedKey","substring","nodeTextLength","Error","padding","seriesPerRow","legendWidth","columnWidths","k","reduce","prev","cur","array","xPositions","curX","ceil","xpos","ypos","newxpos","maxwidth","historicalBar","rval","historicalBarChart","bar_model","transitionDuration","tooltipHide","ohlcBarChart","ohlcBar","candlestickBarChart","setBGOpacity","insert","seriesBG","scatter","scatterWrap","strokeWidth","fillOpacity","areaPaths","isArea","area","defined","y1","linePaths","pointSize","pointDomain","lineChart","updateXAxis","updateYAxis","focusLinesWrap","disableTooltip","focusEnable","focusEnter","legendPosition","currentValues","pointYValue","defaultValueFormatter","yPos","x2Axis","y2Axis","focusHeight","focusShowAxisX","focusShowAxisY","focusMargin","lineWithFocusChart","linePlusBarChart","availableHeight2","x2","availableHeight1","bar","focusBarsWrap","dataBars","allDisabled","dataLines","dataLine","switchYAxisOrder","y1Axis","y2","barsOpacity","linesOpacity","y1Opacity","y2Opacity","margin2","y3","lines2","bars2","y4","series1","series2","contextEnter","legendXPosition","originalKey","legendRightAxisHint","legendLeftAxisHint","bars2Wrap","lines2Wrap","y3Axis","y4Axis","getBarsAxis","main","getLinesAxis","multiBar","nonStackableCount","hideable","stacked","parsed","stack","stackOffset","nonStackable","nonStackableSeries","posBase","negBase","groupSpacing","exitTransition","last_datalength","barColor","rgb","darker","barSelection","multiBarChart","multibar","controlWidth","controlLabels","grouped","getTranslate","staggerUp","staggerDown","totalInBetweenTicks","reduceXTicks","multiBarHorizontal","valuePadding","getYerr","xerr","mid","path","yerr","showBarLabels","yErr","multiBarHorizontalChart","multiChart","mouseover_line","yaxis","yAxis2","yAxis1","mouseover_scatter","mouseover_stack","stack1","mouseover_bar","bars1","serieIndex","dataLines1","dataLines2","dataScatters1","dataScatters2","dataBars1","dataBars2","dataStack1","dataStack2","color_array","lines1","scatters1","scatters2","stack2","lines1Wrap","scatters1Wrap","bars1Wrap","stack1Wrap","scatters2Wrap","stack2Wrap","extraValue1","aVal","extraValue2","yScale1","yDomain1","yScale2","yDomain2","stackedArea","parallelCoordinates","enabledDimensions","displayMissingValuesline","axisWithUndefinedValues","newscale","missingValuesline","missingValueslineText","restoreBrush","visible","filters","brushDomain","dimension","hasOnlyNaN","oldDomainMaxValue","hasNaN","dimensions","updateTicks","brushstart","displayBrush","actives","dimensionNames","extents","foreground","isActive","brushend","hasActiveBrush","brushEnd","currentTicks","tickValues","dragging","__origin__","background","dimensionPosition","currentPosition","dimensionsOrder","newData","val","dataValues","dimensionData","rangePoints","onlyUndefinedValues","tension","lineTension","axisDrag","lineData","undefinedValuesLabel","dimensionsEnter","formerActive","activeChanged","dimensionFormats","parallelCoordinatesChart","originalPosition","parallelCoordinatesWrap","isSorted","nanValue","str","tp","dim","dd","pie","arcTween","endAngle","startAngle","donut","innerRadius","_current","arcs","arcsRadiusOuter","arcsRadiusInner","arcsRadius","outer","inner","donutRatio","growOnHover","g_pie","arcsOver","arc","outerRadius","arcOver","cornerRadius","padAngle","titleOffset","slices","pieLabels","ae","attrTween","showLabels","labelsArc","labelsOutside","group","labelSunbeamLayout","rotateAngle","centroid","labelLocationHash","avgHeight","avgWidth","createHashKey","coordinates","getSlicePercentage","center","labelThreshold","hashKey","labelType","pieLabelsOutside","donutLabelsOutside","labelFormat","pieChart","pieWrap","showTooltipPercent","sankey","computeNodeLinks","sourceLinks","targetLinks","computeNodeValues","sum","computeNodeBreadths","nextNodes","remainingNodes","nodeWidth","sinksRight","moveSinksRight","scaleNodeBreadths","kx","computeNodeDepths","iterations","initializeNodeDepth","ky","nodesByBreadth","nodePadding","relaxLeftToRight","weightedSource","sy","breadth","relaxRightToLeft","weightedTarget","ty","resolveCollisions","ascendingDepth","nest","sortKeys","ascending","entries","computeLinkDepths","ascendingSourceDepth","ascendingTargetDepth","relayout","xi","interpolateNumber","curvature","x3","linkPath","sankeyChart","dragmove","testData","isDataValid","dataAvailable","error","showError","linkTitle","origin","appendChild","nodeFillColor","nodeStrokeColor","nodeTitle","units","formatNumber","message","nodeStyle","fillColor","strokeColor","getCache","_cache","delCache","getDiffs","cache","diffs","updateInteractiveLayer","needsUpdate","vertices","groupIndex","pX","pY","pointArray","bounds","geom","polygon","voronoi","clip","pointPaths","vPointPaths","showVoronoi","clipVoronoi","pointClips","clipRadius","mouseEventCallback","el","mDispatch","scrollTop","pageYOffset","scrollLeft","pageXOffset","relativePos","logScale","sizeDomain","getSize","padDataOuter","z","forceSize","sizeRange","_sizeRange_def","z0","scaleDiff","width0","height0","sizeDiff","pointBorderColor","points","getShape","titles","interactiveUpdateDelay","clearTimeout","timeoutID","shape","notActive","pointScale","pointRange","forcePoint","pointShape","scatterChart","showDistX","distX","showDistY","distY","regWrap","regLine","intercept","slope","sparkline","paths","result","yValues","maxPoint","lastIndexOf","minPoint","currentPoint","showMinMaxPoints","showCurrentPoint","animate","sparklinePlus","updateValueLine","paused","hoverValue","hoverEnter","sparklineHover","getClosestIndex","closestIndex","sparklineWrap","showLastValue","valueWrap","rightAlignValue","alignValue","dataRaw","aseries","dataFiltered","order","out","zeroArea","areaMouseover","pageX","pageY","areaMouseout","areaClick","d3_stackedOffset_stackPercent","stackData","o","stackedAreaChart","currentFormat","oldYTickFormat","percentFormatter","stackedWrap","xAxisHeight","legendTop","metaKey","stream","stack_percent","controlOptions","requiredTop","valueSum","allNullValues","tooltipValue","showTotalInTooltip","stackedY0","stackedY","totalLabel","oldValueFormatter","stackedAreaWithFocusChart","sunburst","rotationToAvoidUpsideDown","centerAngle","computeCenterAngle","computeNodePercentage","labelThresholdMatched","arcTweenZoom","xd","yd","yr","arcTweenUpdate","ipo","dx0","dy0","updatePrevPosition","prevPositions","pP","storeRetrievePrevPositions","zoomClick","depth","arcText","getBBox","rotation","partition","modes","mode","cG","cGE","groupColorByParent","parent","count","d1","d2","sunburstChart","version","158","ctls","ngDisabled","items","ngModel","$ctl","$watchCollection","dig","Strategy","tools","register","strategy","$rootScope","materialUtils","openMenu","$mdOpenMenu","ev","_this","$newEle","$newScope","$new","cloneDeep","conditionInfo","condition","prefix","useDisabled","$parent","oldValue","attributes","175","177","createPath","startScope","prevNode","_path","synteticRoot","ensureDefault","prop","defaultIsLeaf","nodeChildren","shallowCopy","src","charAt","defaultEquality","defaultIsSelectable","ensureAllDefaultOptions","injectClasses","constant","templateUrl","classIfDefined","cssClass","addClassProperty","treeModel","expandedNodes","onSelection","onNodeToggle","orderBy","reverseOrder","filterExpression","filterComparator","$templateCache","treeConfig","isSelectedNode","multiSelection","equality","expandedNodesMap","parentScopeOfTree","headClass","liSelectionClass","liSelected","injectSelectionClass","$id","iBranchClass","iExpanded","iCollapsed","nodeExpanded","selectNodeHead","transcludedScope","expanding","$parentNode","$path","$index","$first","$middle","$last","$odd","$even","selectNodeLabel","dirSelectable","isSelectable","selected","allowDeselect","selectedClass","isThisNodeSelected","labelSelectionClass","labelSelected","unselectableClass","isThisNodeUnselectable","labelUnselectableClass","labelUnselectable","isReverse","orderByFunc","templateOptions","ulClass","ul","liClass","li","iLeafClass","iLeaf","labelClass","treemodelCntr","notFoundIds","newExpandedNodesMap","$liElements","find","existingScopes","liElement","$liElement","liScope","newExNode","found","existingScope","$treeTransclude","$parse","$attrs","newSelectedNodes","transcludeScope","$on","$destroy","178","inherit","extra","extend","ancestors","first","second","objectKeys","object","Number","len","from","inheritParams","currentParams","newParams","$current","$to","parentParams","parents","inheritList","params","equalForKeys","filterByKeys","filtered","pick","omit","collection","silenceUncaughtInPromise","promise","then","$Resolve","$q","$injector","VISIT_IN_PROGRESS","VISIT_DONE","NOTHING","NO_DEPENDENCIES","NO_LOCALS","NO_PARENT","when","$$promises","$$values","study","invocables","visit","visited","cycle","isString","plan","annotate","param","isResolve","invocableKeys","locals","done","wait","merged","$$inheritedValues","resolution","resolve","fail","reason","$$failure","reject","invoke","invocable","onfailure","invocation","proceed","defer","waitParams","dep","promises","ii","$TemplateFactory","$http","fromConfig","config","fromString","fromUrl","templateProvider","fromProvider","url","headers","Accept","response","provider","UrlMatcher","pattern","parentMatcher","addParameter","location","paramNames","test","$$UMFP","Param","quoteRegExp","string","squash","optional","surroundPattern","matchDetails","isSearch","regexp","segment","cfg","last","RegExp","caseInsensitive","placeholder","searchPlaceholder","compiled","segments","$$new","ParamSet","exec","isOptional","lastIndex","search","sourceSearch","sourcePath","strict","$$paramNames","Type","$UrlMatcherFactory","valToString","~","/","valFromString","~~","~2F","getDefaultConfig","isStrictMode","isCaseInsensitive","isInjectable","flushTypeQueue","typeQueue","shift","$types","injector","def","defaultSquashPolicy","enqueue","defaultTypes","encode","decode","is","int","bool","date","getFullYear","getMonth","getDate","capture","valueOf","toISOString","json","toJson","fromJson","any","identity","$$getDefaultValue","strictMode","isMatcher","definition","definitionFn","$get","unwrapShorthand","isShorthand","$$fn","getType","urlType","getArrayMode","arrayDefaults","arrayParamNomenclature","getSquashPolicy","getReplace","arrayMode","configuredKeys","defaultPolicy","to","defaultValue","$value","hasReplaceVal","$replace","replacement","$normalize","$asArray","dynamic","$$parent","$$keys","chain","ignore","paramset","paramValues","$$equals","paramValues1","paramValues2","equal","$$validates","rawVal","normalized","encoded","$UrlRouterProvider","$locationProvider","$urlMatcherFactory","regExpPrefix","re","what","handleIfMatch","$match","$location","$browser","$sniffer","appendBasePath","isHtml5","absolute","baseHref","check","rule","handled","defaultPrevented","lastPushedUrl","rules","otherwise","listen","listener","interceptDeferred","sync","urlMatcher","$$avoidResync","validates","html5Mode","hashPrefix","slash","port","protocol","host","redirect","handlerIsString","strategies","matcher","regex","global","sticky","deferIntercept","$StateProvider","$urlRouterProvider","isRelative","stateName","findState","stateOrName","base","isStr","rel","pathLength","current","states","queueState","parentName","flushQueuedChildren","queued","registerState","stateBuilder","$delegates","abstractKey","$stateParams","$state","navigable","transitionTo","isGlob","doesStateMatchGlob","glob","globSegments","MAX_VALUE","decorator","func","$view","$resolve","$urlRouter","handleRedirect","$broadcast","TransitionAborted","retry","$retry","TransitionFailed","retryTransition","toParams","TransitionSuperseded","resolveState","paramsAreFiltered","resolveViews","viewsPromises","views","view","injectables","$template","globals","notify","controllerProvider","injectLocals","$$controller","$$state","$$controllerAs","$$resolveAs","resolveAs","all","TransitionSupersededError","TransitionPrevented","root","reload","go","relative","fromParams","fromPath","toState","hash","redirectResult","toPath","keep","toLocals","reloadState","ownParams","shouldSkipReload","resolved","entering","exiting","onExit","onEnter","includes","paramDef","lossy","nav","context","nonSearchParamsEqual","fromAndToState","notSearchParam","nonQueryParamKeys","nonQueryParams","nonQueryParamSet","reloadOnSearch","compositeName","","abstract","$ViewProvider","$templateFactory","defaults","async","$ViewScrollProvider","useAnchorScroll","$anchorScroll","$timeout","scrollIntoView","$ViewDirective","$uiViewScroll","getService","service","has","getRenderer","statics","cb","after","leave","$animate","minor","$animator","terminal","priority","tElement","tAttrs","$transclude","cleanupLastView","previousEl","currentScope","currentEl","$uiViewData","renderer","$$animLeave","updateView","firstTime","newScope","getUiViewName","previousLocals","latestLocals","$emit","animEnter","animLeave","viewAnimData","$animEnter","$animLeave","autoScrollExp","$eval","onloadExp","onload","autoscroll","inheritedData","$ViewDirectiveFill","$controller","initial","resolveData","contents","$onInit","uiView","uiViewCreatedBy","parseStateRef","ref","preparsed","paramExpr","stateContext","stateData","getTypeInfo","isSvg","isForm","nodeName","isAnchor","toUpperCase","clickable","clickHook","button","which","ctrlKey","shiftKey","ignorePreventDefaultCount","cancel","defaultOpts","$StateRefDirective","uiSrefActive","hookFn","uiSref","unlinkInfoFn","uiSrefOpts","$$addStateInfo","$set","off","$StateRefDynamicDirective","runStateRefLink","uiState","uiStateParams","uiStateOpts","watch","$StateRefActiveDirective","addState","stateParams","activeClass","stateHash","createStateHash","stateInfo","activeClasses","anyMatch","addClass","removeClass","exactMatch","activeEqClass","uiSrefActiveEq","deregister","$IsStateFilter","isFilter","$stateful","$IncludedByStateFilter","includesFilter","defaultConfig","searchParams","decodePathArray","reverseString","unquoteDashes","allReversed","paramName","parameters","nTotal","nPath","paramVal","encodeDashes","encodeURIComponent","c","charCodeAt","isPathParam","isDefaultValue","nextSegment","isFinalPathParam","$subPattern","sub","substr","ArrayType","bindTo","callbackName","arrayWrap","arrayUnwrap","falsey","arrayHandler","allTruthyMode","arrayEqualsHandler","val1","val2","$arrayMode","run","factory","autoinject","179","193","202","module_1","203","204","home_controller_1","sidenavl_controller_1","content_controller_1","initRouter","$stateProvider","permissions","except","only","HomeController","sidenavLeft@home","SidenavLeftController","content@home","ContentController","208","ngMaterialIcons","ngMaterial","Service","$templateRequest","ngMdIconService","getAllIcons","getShapes","loadSvgUrl","viewBox","querySelectorAll","addShape","addViewBox","218","nvd3Utils","api","events","onReady","configure","chartType","_config","extended","configureEvents","configureWrapper","defaultWrapper","wrapElement","removeAttr","css","enable","prepend","querySelector","configureStyles","defaultStyles","textAlign","with-3d-shadow","with-transitions","gallery","dataWatchFn","oldData","refreshDataOnly","refresh","deepWatchOptions","deepWatchData","deepWatchDataDepth","debounce","debounceImmediate","isReady","updateWithOptions","refreshWithTimeout","updateWithTimeout","clearElement","updateWithData","resizeHandler","zoom","h","zoomRender","graphs","cleanup","getScope","getElement","newOptions","newConfig","oldConfig","eventHandler","immediate","timeout","later","callNow","me","constructor","fixDomain","d3zoom","zoomed","unzoomed","zoomend","x_boundary","y_boundary","translate","scaleExtent","useFixedDomain","useNiceScale","horizontalOff","verticalOff","unzoomEventType","nice","boundary","domains","231","232","243","SVGMorpheus","styleNormCalc","styleNormFrom","styleNormTo","progress","styleNorm","r","styleNormToString","rgbToString","styleToNorm","styleFrom","styleTo","getRGB","transCalc","transFrom","transTo","res","trans2string","trans","rotate","curveCalc","curveFrom","curveTo","curve","len1","len2","that","_icons","_curIconId","iconId","_toIconId","_curIconItems","_fromIconItems","_toIconItems","_morphNodes","_morphG","_startTime","_defDuration","_defEasing","easing","_defRotation","_defCallback","_easing","_rotation","_callback","_rafid","_fnTick","timePassed","_updateAnimationProgress","_reqAnimFrame","_animationEnd","_svgDoc","getSVGDocument","_init","easings","asin","pow","cos","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","oRequestAnimationFrame","_cancelAnimFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","oCancelAnimationFrame","spaces","pathCommand","pathValues","parsePathString","pathString","paramCounts","q","u","toLowerCase","catmullRom2bezier","crp","iLen","ellipsePath","rx","ry","rad","pathToAbsolute","pathArray","pa0","mx","my","pa","crz","dots","jj","kk","l2c","q2c","ax","ay","_13","_23","a2c","angle","large_arc_flag","sweep_flag","recursive","xy","_120","X","Y","f1","f2","cx","cy","rx2","ry2","toFixed","df","f2old","x2old","y2old","c1","s1","c2","s2","tan","hx","hy","m1","m2","m3","m4","newres","path2curve","path2","p2","bx","by","qx","qy","attrs2","processPath","pcom","nx","ny","T","Q","fixArc","pp","pi","pcoms1","pcoms2","fixM","path1","a1","a2","pfirst","seg","seg2","seglen","seg2len","curveDim","t1","t2","b2ac","sqrtb2ac","tvalues","mt","jlen","curvePathBBox","xmin","ymin","xmax","ymax","bb","p2s","path2string","hsrg","hs","rg","colourRegExp","commaSpaces","toHex","getElementsByTagName","red","defaultView","getPropertyValue","packageRGB","isFinite","hsb2rgb","R","G","B","C","hsl2rgb","colour","green","blue","icon","lastIconId","childNodes","nodeIcon","getAttribute","nodeItem","len3","attrib","specified","len4","styleName","removeChild","createElementNS","defaultIcon","_setupAnimation","toIconId","morphNode","fromIconItemIdx","toIconItemIdx","toBB","maxNum","fromIconItem","toIconItem","curves","attrsNorm","degAdd","transStr","setAttribute","registerEasing","271","jade","jade_debug","DebugItem","buf","filename","rethrow","lineno","272","273","274","275","276","277","278","279","280","281","282","283","310","336","337","338","mdStyleColor","themeColors","hueR","colorR","colorA","hueA","colorValue","_apply_color","theme","colors","hues","palettes","oldVal","newVal","339","searchText","timeID","340","Provider","_theme","_palettes","_sections","initWithSections","initWithTheme","_PALETTES","MdSideMenuSections","sections","searchStr","341","Factory","onStateChangeStart","digest","currentSection","section","showed","342","__extends","__","Base","conditionBuilder","noOptions","tooltipBuilder","removeTooltip","iconBuilder","ricon","attrBuilder","toolsBuilder","btnClick","onClick","menuOptionsBuilder","toValue","_super","btnBuilder","showTitle","tooltipPosition","menuBuilder","menuItemBuilder","labelBuilder","cls","layoutBuilder","flex","layoutAlign","menuBarBuilder","noneBuilder","343","svgUtils","fxAction","iconInfoDetailForm","icons","standardItems","sizeX","sizeY","row","col","class","gridsterOpts","draggable","widget","stop","getDetaitInfo","getChartInfo","doOpenIconInfo","iconInfo","doActionModel","doAction","results","nodesGroupByDepth","groupBy","keyBy","_loop_1","nodesIsDepth","parentIsDepth","state_1","departs","treeOptions","departChartOptions","dataMap","types","deviceChart","aggregations","type_aggs","buckets","depart_aggs","doc_count","departChartData","344","toolbarUtils","toolbars","md-position-mode","doExit","getModel","345","fxSideMenuFactory","initModules","initToolbar","doLinkBind","toolbar","getModules","filterField","toolbarBottom","346","__dirname","action_1","router_1","material_service_1","svg_service_1","toolbar_1","sidemenu_1","action_model_1","$httpProvider","$mdThemingProvider","$mdAriaProvider","mdSideMenuSectionsProvider","cfpLoadingBarProvider","alwaysWatchTheme","disableWarnings","primaryPalette","accentPalette","warnPalette","handleResolve","isComplete","$$isFinish","fromState","mdi","weibo","configConfig","configAction","userinfoAction","userinfo","ActionType","form","dataSchema","properties","formSchema","placeHolder","htmlClass","359"],"mappings":"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","file":"page/home.bundle.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 12:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar _ = __webpack_require__(3);\n\t__webpack_require__(310);\n\tvar _name = \"fxSideMenu\", _module = _name + \"Module\";\n\tvar Controller = (function () {\n\t    function Controller($scope, $compile, $interpolate, mdSideMenuSections) {\n\t        this.$scope = $scope;\n\t        this.$compile = $compile;\n\t        this.$interpolate = $interpolate;\n\t        this.mdSideMenuSections = mdSideMenuSections;\n\t        this.options = {};\n\t        this.template = $compile($interpolate(__webpack_require__(272)())({\n\t            opts: mdSideMenuSections.options\n\t        }));\n\t        this.options = this.mdSideMenuSections.options;\n\t    }\n\t    Controller.prototype.doLinkPre = function ($event, node) {\n\t        if (_.isFunction(this.doLink)) {\n\t            this.doLink($event, node);\n\t        }\n\t        console.log(node);\n\t    };\n\t    Controller.prototype.showChildren = function (node) {\n\t        var opts = this.mdSideMenuSections.options;\n\t        if (this.selectedNodes.hasOwnProperty(node[opts.key])) {\n\t            delete this.selectedNodes[node[opts.key]];\n\t        }\n\t        else {\n\t            if (node[opts.children] && node[opts.children].length) {\n\t                this.selectedNodes[node[opts.key]] = node;\n\t            }\n\t        }\n\t    };\n\t    Controller.prototype.isShowChildren = function (node) {\n\t        var opts = this.mdSideMenuSections.options;\n\t        return !!this.selectedNodes[node[opts.key]];\n\t    };\n\t    Controller.prototype.isLeaf = function (node) {\n\t        var opts = this.mdSideMenuSections.options;\n\t        return node.rgt - node.lft == 1 || !node[opts.children] || node[opts.children].length == 0;\n\t    };\n\t    Controller.prototype.isSelected = function (node) {\n\t        var opts = this.mdSideMenuSections.options;\n\t        return !!this.mdSideMenuSections.selectedNode && this.mdSideMenuSections.selectedNode[opts.key] == node[opts.key];\n\t    };\n\t    return Controller;\n\t}());\n\tController.$inject = [\"$scope\", \"$compile\", \"$interpolate\", \"mdSideMenuSections\"];\n\tfunction Directive(mdSideMenuSections) {\n\t    return {\n\t        restrict: 'EA',\n\t        replace: false,\n\t        require: _name,\n\t        transclude: true,\n\t        controllerAs: \"sideCtl\",\n\t        scope: {\n\t            modules: '='\n\t        },\n\t        bindToController: {\n\t            selectedNodes: '=',\n\t            doLink: '=?ngClick'\n\t        },\n\t        controller: Controller,\n\t        compile: function ($ele, $attr, childTranscludeFn) {\n\t            return function ($scope, $element, attrs, $ctrl) {\n\t                $scope.$watch(\"modules\", function updateNodeOnRootScope(newValue) {\n\t                    var opts = mdSideMenuSections.options;\n\t                    if (_.isArray(newValue)) {\n\t                        if (angular.isDefined($scope.node) && angular.equals($scope.node[opts.children], newValue)) {\n\t                            return;\n\t                        }\n\t                        $scope.node = {};\n\t                        $scope.node[opts.children] = newValue;\n\t                    }\n\t                    else {\n\t                        if (angular.equals($scope.node, newValue)) {\n\t                            return;\n\t                        }\n\t                        $scope.node = newValue;\n\t                    }\n\t                });\n\t                $ctrl[\"template\"]($scope, function (clone) {\n\t                    $element.html('').append(clone);\n\t                });\n\t                $scope.$sideMenuTransclude = childTranscludeFn;\n\t            };\n\t        }\n\t    };\n\t}\n\texports.module = angular.module(_module, [\"ngAnimate\", \"ngMaterial\"]).directive(_name, [\"mdSideMenuSections\", Directive]);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = \"\" + exports.module.name;\n\n\n/***/ },\n\n/***/ 35:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* nvd3 version 1.8.5 (https://github.com/novus/nvd3) 2016-12-01 */\n\t(function(){\n\t\n\t// set up main nv object\n\tvar nv = {};\n\t\n\t// the major global objects under the nv namespace\n\tnv.dev = false; //set false when in production\n\tnv.tooltip = nv.tooltip || {}; // For the tooltip system\n\tnv.utils = nv.utils || {}; // Utility subsystem\n\tnv.models = nv.models || {}; //stores all the possible models/components\n\tnv.charts = {}; //stores all the ready to use charts\n\tnv.logs = {}; //stores some statistics and potential error messages\n\tnv.dom = {}; //DOM manipulation functions\n\t\n\t// Node/CommonJS - require D3\n\tif (typeof(module) !== 'undefined' && typeof(exports) !== 'undefined' && typeof(d3) == 'undefined') {\n\t    d3 = __webpack_require__(24);\n\t}\n\t\n\tnv.dispatch = d3.dispatch('render_start', 'render_end');\n\t\n\t// Function bind polyfill\n\t// Needed ONLY for phantomJS as it's missing until version 2.0 which is unreleased as of this comment\n\t// https://github.com/ariya/phantomjs/issues/10522\n\t// http://kangax.github.io/compat-table/es5/#Function.prototype.bind\n\t// phantomJS is used for running the test suite\n\tif (!Function.prototype.bind) {\n\t    Function.prototype.bind = function (oThis) {\n\t        if (typeof this !== \"function\") {\n\t            // closest thing possible to the ECMAScript 5 internal IsCallable function\n\t            throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n\t        }\n\t\n\t        var aArgs = Array.prototype.slice.call(arguments, 1),\n\t            fToBind = this,\n\t            fNOP = function () {},\n\t            fBound = function () {\n\t                return fToBind.apply(this instanceof fNOP && oThis\n\t                        ? this\n\t                        : oThis,\n\t                    aArgs.concat(Array.prototype.slice.call(arguments)));\n\t            };\n\t\n\t        fNOP.prototype = this.prototype;\n\t        fBound.prototype = new fNOP();\n\t        return fBound;\n\t    };\n\t}\n\t\n\t//  Development render timers - disabled if dev = false\n\tif (nv.dev) {\n\t    nv.dispatch.on('render_start', function(e) {\n\t        nv.logs.startTime = +new Date();\n\t    });\n\t\n\t    nv.dispatch.on('render_end', function(e) {\n\t        nv.logs.endTime = +new Date();\n\t        nv.logs.totalTime = nv.logs.endTime - nv.logs.startTime;\n\t        nv.log('total', nv.logs.totalTime); // used for development, to keep track of graph generation times\n\t    });\n\t}\n\t\n\t// Logs all arguments, and returns the last so you can test things in place\n\t// Note: in IE8 console.log is an object not a function, and if modernizr is used\n\t// then calling Function.prototype.bind with with anything other than a function\n\t// causes a TypeError to be thrown.\n\tnv.log = function() {\n\t    if (nv.dev && window.console && console.log && console.log.apply)\n\t        console.log.apply(console, arguments);\n\t    else if (nv.dev && window.console && typeof console.log == \"function\" && Function.prototype.bind) {\n\t        var log = Function.prototype.bind.call(console.log, console);\n\t        log.apply(console, arguments);\n\t    }\n\t    return arguments[arguments.length - 1];\n\t};\n\t\n\t// print console warning, should be used by deprecated functions\n\tnv.deprecated = function(name, info) {\n\t    if (console && console.warn) {\n\t        console.warn('nvd3 warning: `' + name + '` has been deprecated. ', info || '');\n\t    }\n\t};\n\t\n\t// The nv.render function is used to queue up chart rendering\n\t// in non-blocking async functions.\n\t// When all queued charts are done rendering, nv.dispatch.render_end is invoked.\n\tnv.render = function render(step) {\n\t    // number of graphs to generate in each timeout loop\n\t    step = step || 1;\n\t\n\t    nv.render.active = true;\n\t    nv.dispatch.render_start();\n\t\n\t    var renderLoop = function() {\n\t        var chart, graph;\n\t\n\t        for (var i = 0; i < step && (graph = nv.render.queue[i]); i++) {\n\t            chart = graph.generate();\n\t            if (typeof graph.callback == typeof(Function)) graph.callback(chart);\n\t        }\n\t\n\t        nv.render.queue.splice(0, i);\n\t\n\t        if (nv.render.queue.length) {\n\t            setTimeout(renderLoop);\n\t        }\n\t        else {\n\t            nv.dispatch.render_end();\n\t            nv.render.active = false;\n\t        }\n\t    };\n\t\n\t    setTimeout(renderLoop);\n\t};\n\t\n\tnv.render.active = false;\n\tnv.render.queue = [];\n\t\n\t/*\n\tAdds a chart to the async rendering queue. This method can take arguments in two forms:\n\tnv.addGraph({\n\t    generate: <Function>\n\t    callback: <Function>\n\t})\n\t\n\tor\n\t\n\tnv.addGraph(<generate Function>, <callback Function>)\n\t\n\tThe generate function should contain code that creates the NVD3 model, sets options\n\ton it, adds data to an SVG element, and invokes the chart model. The generate function\n\tshould return the chart model.  See examples/lineChart.html for a usage example.\n\t\n\tThe callback function is optional, and it is called when the generate function completes.\n\t*/\n\tnv.addGraph = function(obj) {\n\t    if (typeof arguments[0] === typeof(Function)) {\n\t        obj = {generate: arguments[0], callback: arguments[1]};\n\t    }\n\t\n\t    nv.render.queue.push(obj);\n\t\n\t    if (!nv.render.active) {\n\t        nv.render();\n\t    }\n\t};\n\t\n\t// Node/CommonJS exports\n\tif (true) {\n\t  module.exports = nv;\n\t}\n\t\n\tif (typeof(window) !== 'undefined') {\n\t  window.nv = nv;\n\t}\n\t/* Facade for queueing DOM write operations\r\n\t * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n\t * if available.\r\n\t * This could easily be extended to support alternate\r\n\t * implementations in the future.\r\n\t */\r\n\tnv.dom.write = function(callback) {\r\n\t\tif (window.fastdom !== undefined) {\r\n\t\t\treturn fastdom.mutate(callback);\r\n\t\t}\r\n\t\treturn callback();\r\n\t};\r\n\t\r\n\t/* Facade for queueing DOM read operations\r\n\t * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n\t * if available.\r\n\t * This could easily be extended to support alternate\r\n\t * implementations in the future.\r\n\t */\r\n\tnv.dom.read = function(callback) {\r\n\t\tif (window.fastdom !== undefined) {\r\n\t\t\treturn fastdom.measure(callback);\r\n\t\t}\r\n\t\treturn callback();\r\n\t};\r\n\t/* Utility class to handle creation of an interactive layer.\n\t This places a rectangle on top of the chart. When you mouse move over it, it sends a dispatch\n\t containing the X-coordinate. It can also render a vertical line where the mouse is located.\n\t\n\t dispatch.elementMousemove is the important event to latch onto.  It is fired whenever the mouse moves over\n\t the rectangle. The dispatch is given one object which contains the mouseX/Y location.\n\t It also has 'pointXValue', which is the conversion of mouseX to the x-axis scale.\n\t */\n\tnv.interactiveGuideline = function() {\n\t    \"use strict\";\n\t\n\t    var margin = { left: 0, top: 0 } //Pass the chart's top and left magins. Used to calculate the mouseX/Y.\n\t        ,   width = null\n\t        ,   height = null\n\t        ,   xScale = d3.scale.linear()\n\t        ,   dispatch = d3.dispatch('elementMousemove', 'elementMouseout', 'elementClick', 'elementDblclick', 'elementMouseDown', 'elementMouseUp')\n\t        ,   showGuideLine = true\n\t        ,   svgContainer = null // Must pass the chart's svg, we'll use its mousemove event.\n\t        ,   tooltip = nv.models.tooltip()\n\t        ,   isMSIE =  window.ActiveXObject// Checkt if IE by looking for activeX. (excludes IE11)\n\t    ;\n\t\n\t    tooltip\n\t        .duration(0)\n\t        .hideDelay(0)\n\t        .hidden(false);\n\t\n\t    function layer(selection) {\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            var availableWidth = (width || 960), availableHeight = (height || 400);\n\t            var wrap = container.selectAll(\"g.nv-wrap.nv-interactiveLineLayer\")\n\t                .data([data]);\n\t            var wrapEnter = wrap.enter()\n\t                .append(\"g\").attr(\"class\", \" nv-wrap nv-interactiveLineLayer\");\n\t            wrapEnter.append(\"g\").attr(\"class\",\"nv-interactiveGuideLine\");\n\t\n\t            if (!svgContainer) {\n\t                return;\n\t            }\n\t\n\t            function mouseHandler() {\n\t                var d3mouse = d3.mouse(this);\n\t                var mouseX = d3mouse[0];\n\t                var mouseY = d3mouse[1];\n\t                var subtractMargin = true;\n\t                var mouseOutAnyReason = false;\n\t                if (isMSIE) {\n\t                    /*\n\t                     D3.js (or maybe SVG.getScreenCTM) has a nasty bug in Internet Explorer 10.\n\t                     d3.mouse() returns incorrect X,Y mouse coordinates when mouse moving\n\t                     over a rect in IE 10.\n\t                     However, d3.event.offsetX/Y also returns the mouse coordinates\n\t                     relative to the triggering <rect>. So we use offsetX/Y on IE.\n\t                     */\n\t                    mouseX = d3.event.offsetX;\n\t                    mouseY = d3.event.offsetY;\n\t\n\t                    /*\n\t                     On IE, if you attach a mouse event listener to the <svg> container,\n\t                     it will actually trigger it for all the child elements (like <path>, <circle>, etc).\n\t                     When this happens on IE, the offsetX/Y is set to where ever the child element\n\t                     is located.\n\t                     As a result, we do NOT need to subtract margins to figure out the mouse X/Y\n\t                     position under this scenario. Removing the line below *will* cause\n\t                     the interactive layer to not work right on IE.\n\t                     */\n\t                    if(d3.event.target.tagName !== \"svg\") {\n\t                        subtractMargin = false;\n\t                    }\n\t\n\t                    if (d3.event.target.className.baseVal.match(\"nv-legend\")) {\n\t                        mouseOutAnyReason = true;\n\t                    }\n\t\n\t                }\n\t\n\t                if(subtractMargin) {\n\t                    mouseX -= margin.left;\n\t                    mouseY -= margin.top;\n\t                }\n\t\n\t                /* If mouseX/Y is outside of the chart's bounds,\n\t                 trigger a mouseOut event.\n\t                 */\n\t                if (d3.event.type === 'mouseout'\n\t                    || mouseX < 0 || mouseY < 0\n\t                    || mouseX > availableWidth || mouseY > availableHeight\n\t                    || (d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined)\n\t                    || mouseOutAnyReason\n\t                    ) {\n\t\n\t                    if (isMSIE) {\n\t                        if (d3.event.relatedTarget\n\t                            && d3.event.relatedTarget.ownerSVGElement === undefined\n\t                            && (d3.event.relatedTarget.className === undefined\n\t                                || d3.event.relatedTarget.className.match(tooltip.nvPointerEventsClass))) {\n\t\n\t                            return;\n\t                        }\n\t                    }\n\t                    dispatch.elementMouseout({\n\t                        mouseX: mouseX,\n\t                        mouseY: mouseY\n\t                    });\n\t                    layer.renderGuideLine(null); //hide the guideline\n\t                    tooltip.hidden(true);\n\t                    return;\n\t                } else {\n\t                    tooltip.hidden(false);\n\t                }\n\t\n\t\n\t                var scaleIsOrdinal = typeof xScale.rangeBands === 'function';\n\t                var pointXValue = undefined;\n\t\n\t                // Ordinal scale has no invert method\n\t                if (scaleIsOrdinal) {\n\t                    var elementIndex = d3.bisect(xScale.range(), mouseX) - 1;\n\t                    // Check if mouseX is in the range band\n\t                    if (xScale.range()[elementIndex] + xScale.rangeBand() >= mouseX) {\n\t                        pointXValue = xScale.domain()[d3.bisect(xScale.range(), mouseX) - 1];\n\t                    }\n\t                    else {\n\t                        dispatch.elementMouseout({\n\t                            mouseX: mouseX,\n\t                            mouseY: mouseY\n\t                        });\n\t                        layer.renderGuideLine(null); //hide the guideline\n\t                        tooltip.hidden(true);\n\t                        return;\n\t                    }\n\t                }\n\t                else {\n\t                    pointXValue = xScale.invert(mouseX);\n\t                }\n\t\n\t                dispatch.elementMousemove({\n\t                    mouseX: mouseX,\n\t                    mouseY: mouseY,\n\t                    pointXValue: pointXValue\n\t                });\n\t\n\t                //If user double clicks the layer, fire a elementDblclick\n\t                if (d3.event.type === \"dblclick\") {\n\t                    dispatch.elementDblclick({\n\t                        mouseX: mouseX,\n\t                        mouseY: mouseY,\n\t                        pointXValue: pointXValue\n\t                    });\n\t                }\n\t\n\t                // if user single clicks the layer, fire elementClick\n\t                if (d3.event.type === 'click') {\n\t                    dispatch.elementClick({\n\t                        mouseX: mouseX,\n\t                        mouseY: mouseY,\n\t                        pointXValue: pointXValue\n\t                    });\n\t                }\n\t\n\t                // if user presses mouse down the layer, fire elementMouseDown\n\t                if (d3.event.type === 'mousedown') {\n\t                \tdispatch.elementMouseDown({\n\t                \t\tmouseX: mouseX,\n\t                \t\tmouseY: mouseY,\n\t                \t\tpointXValue: pointXValue\n\t                \t});\n\t                }\n\t\n\t                // if user presses mouse down the layer, fire elementMouseUp\n\t                if (d3.event.type === 'mouseup') {\n\t                \tdispatch.elementMouseUp({\n\t                \t\tmouseX: mouseX,\n\t                \t\tmouseY: mouseY,\n\t                \t\tpointXValue: pointXValue\n\t                \t});\n\t                }\n\t            }\n\t\n\t            svgContainer\n\t                .on(\"touchmove\",mouseHandler)\n\t                .on(\"mousemove\",mouseHandler, true)\n\t                .on(\"mouseout\" ,mouseHandler,true)\n\t                .on(\"mousedown\" ,mouseHandler,true)\n\t                .on(\"mouseup\" ,mouseHandler,true)\n\t                .on(\"dblclick\" ,mouseHandler)\n\t                .on(\"click\", mouseHandler)\n\t            ;\n\t\n\t            layer.guideLine = null;\n\t            //Draws a vertical guideline at the given X postion.\n\t            layer.renderGuideLine = function(x) {\n\t                if (!showGuideLine) return;\n\t                if (layer.guideLine && layer.guideLine.attr(\"x1\") === x) return;\n\t                nv.dom.write(function() {\n\t                    var line = wrap.select(\".nv-interactiveGuideLine\")\n\t                        .selectAll(\"line\")\n\t                        .data((x != null) ? [nv.utils.NaNtoZero(x)] : [], String);\n\t                    line.enter()\n\t                        .append(\"line\")\n\t                        .attr(\"class\", \"nv-guideline\")\n\t                        .attr(\"x1\", function(d) { return d;})\n\t                        .attr(\"x2\", function(d) { return d;})\n\t                        .attr(\"y1\", availableHeight)\n\t                        .attr(\"y2\",0);\n\t                    line.exit().remove();\n\t                });\n\t            }\n\t        });\n\t    }\n\t\n\t    layer.dispatch = dispatch;\n\t    layer.tooltip = tooltip;\n\t\n\t    layer.margin = function(_) {\n\t        if (!arguments.length) return margin;\n\t        margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;\n\t        margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;\n\t        return layer;\n\t    };\n\t\n\t    layer.width = function(_) {\n\t        if (!arguments.length) return width;\n\t        width = _;\n\t        return layer;\n\t    };\n\t\n\t    layer.height = function(_) {\n\t        if (!arguments.length) return height;\n\t        height = _;\n\t        return layer;\n\t    };\n\t\n\t    layer.xScale = function(_) {\n\t        if (!arguments.length) return xScale;\n\t        xScale = _;\n\t        return layer;\n\t    };\n\t\n\t    layer.showGuideLine = function(_) {\n\t        if (!arguments.length) return showGuideLine;\n\t        showGuideLine = _;\n\t        return layer;\n\t    };\n\t\n\t    layer.svgContainer = function(_) {\n\t        if (!arguments.length) return svgContainer;\n\t        svgContainer = _;\n\t        return layer;\n\t    };\n\t\n\t    return layer;\n\t};\n\t\n\t/* Utility class that uses d3.bisect to find the index in a given array, where a search value can be inserted.\n\t This is different from normal bisectLeft; this function finds the nearest index to insert the search value.\n\t\n\t For instance, lets say your array is [1,2,3,5,10,30], and you search for 28.\n\t Normal d3.bisectLeft will return 4, because 28 is inserted after the number 10.  But interactiveBisect will return 5\n\t because 28 is closer to 30 than 10.\n\t\n\t Unit tests can be found in: interactiveBisectTest.html\n\t\n\t Has the following known issues:\n\t * Will not work if the data points move backwards (ie, 10,9,8,7, etc) or if the data points are in random order.\n\t * Won't work if there are duplicate x coordinate values.\n\t */\n\tnv.interactiveBisect = function (values, searchVal, xAccessor) {\n\t    \"use strict\";\n\t    if (! (values instanceof Array)) {\n\t        return null;\n\t    }\n\t    var _xAccessor;\n\t    if (typeof xAccessor !== 'function') {\n\t        _xAccessor = function(d) {\n\t            return d.x;\n\t        }\n\t    } else {\n\t        _xAccessor = xAccessor;\n\t    }\n\t    var _cmp = function(d, v) {\n\t        // Accessors are no longer passed the index of the element along with\n\t        // the element itself when invoked by d3.bisector.\n\t        //\n\t        // Starting at D3 v3.4.4, d3.bisector() started inspecting the\n\t        // function passed to determine if it should consider it an accessor\n\t        // or a comparator. This meant that accessors that take two arguments\n\t        // (expecting an index as the second parameter) are treated as\n\t        // comparators where the second argument is the search value against\n\t        // which the first argument is compared.\n\t        return _xAccessor(d) - v;\n\t    };\n\t\n\t    var bisect = d3.bisector(_cmp).left;\n\t    var index = d3.max([0, bisect(values,searchVal) - 1]);\n\t    var currentValue = _xAccessor(values[index]);\n\t\n\t    if (typeof currentValue === 'undefined') {\n\t        currentValue = index;\n\t    }\n\t\n\t    if (currentValue === searchVal) {\n\t        return index; //found exact match\n\t    }\n\t\n\t    var nextIndex = d3.min([index+1, values.length - 1]);\n\t    var nextValue = _xAccessor(values[nextIndex]);\n\t\n\t    if (typeof nextValue === 'undefined') {\n\t        nextValue = nextIndex;\n\t    }\n\t\n\t    if (Math.abs(nextValue - searchVal) >= Math.abs(currentValue - searchVal)) {\n\t        return index;\n\t    } else {\n\t        return nextIndex\n\t    }\n\t};\n\t\n\t/*\n\t Returns the index in the array \"values\" that is closest to searchVal.\n\t Only returns an index if searchVal is within some \"threshold\".\n\t Otherwise, returns null.\n\t */\n\tnv.nearestValueIndex = function (values, searchVal, threshold) {\n\t    \"use strict\";\n\t    var yDistMax = Infinity, indexToHighlight = null;\n\t    values.forEach(function(d,i) {\n\t        var delta = Math.abs(searchVal - d);\n\t        if ( d != null && delta <= yDistMax && delta < threshold) {\n\t            yDistMax = delta;\n\t            indexToHighlight = i;\n\t        }\n\t    });\n\t    return indexToHighlight;\n\t};\n\t\n\t/* Model which can be instantiated to handle tooltip rendering.\n\t Example usage:\n\t var tip = nv.models.tooltip().gravity('w').distance(23)\n\t .data(myDataObject);\n\t\n\t tip();    //just invoke the returned function to render tooltip.\n\t */\n\tnv.models.tooltip = function() {\n\t    \"use strict\";\n\t\n\t    /*\n\t    Tooltip data. If data is given in the proper format, a consistent tooltip is generated.\n\t    Example Format of data:\n\t    {\n\t        key: \"Date\",\n\t        value: \"August 2009\",\n\t        series: [\n\t            {key: \"Series 1\", value: \"Value 1\", color: \"#000\"},\n\t            {key: \"Series 2\", value: \"Value 2\", color: \"#00f\"}\n\t        ]\n\t    }\n\t    */\n\t    var id = \"nvtooltip-\" + Math.floor(Math.random() * 100000) // Generates a unique id when you create a new tooltip() object.\n\t        ,   data = null\n\t        ,   gravity = 'w'   // Can be 'n','s','e','w'. Determines how tooltip is positioned.\n\t        ,   distance = 25 // Distance to offset tooltip from the mouse location.\n\t        ,   snapDistance = 0   // Tolerance allowed before tooltip is moved from its current position (creates 'snapping' effect)\n\t        ,   classes = null  // Attaches additional CSS classes to the tooltip DIV that is created.\n\t        ,   hidden = true  // Start off hidden, toggle with hide/show functions below.\n\t        ,   hideDelay = 200  // Delay (in ms) before the tooltip hides after calling hide().\n\t        ,   tooltip = null // d3 select of the tooltip div.\n\t        ,   lastPosition = { left: null, top: null } // Last position the tooltip was in.\n\t        ,   enabled = true  // True -> tooltips are rendered. False -> don't render tooltips.\n\t        ,   duration = 100 // Tooltip movement duration, in ms.\n\t        ,   headerEnabled = true // If is to show the tooltip header.\n\t        ,   nvPointerEventsClass = \"nv-pointer-events-none\" // CSS class to specify whether element should not have mouse events.\n\t    ;\n\t\n\t    // Format function for the tooltip values column.\n\t    var valueFormatter = function(d, i) {\n\t        return d;\n\t    };\n\t\n\t    // Format function for the tooltip header value.\n\t    var headerFormatter = function(d) {\n\t        return d;\n\t    };\n\t\n\t    var keyFormatter = function(d, i) {\n\t        return d;\n\t    };\n\t\n\t    // By default, the tooltip model renders a beautiful table inside a DIV.\n\t    // You can override this function if a custom tooltip is desired.\n\t    var contentGenerator = function(d) {\n\t        if (d === null) {\n\t            return '';\n\t        }\n\t\n\t        var table = d3.select(document.createElement(\"table\"));\n\t        if (headerEnabled) {\n\t            var theadEnter = table.selectAll(\"thead\")\n\t                .data([d])\n\t                .enter().append(\"thead\");\n\t\n\t            theadEnter.append(\"tr\")\n\t                .append(\"td\")\n\t                .attr(\"colspan\", 3)\n\t                .append(\"strong\")\n\t                .classed(\"x-value\", true)\n\t                .html(headerFormatter(d.value));\n\t        }\n\t\n\t        var tbodyEnter = table.selectAll(\"tbody\")\n\t            .data([d])\n\t            .enter().append(\"tbody\");\n\t\n\t        var trowEnter = tbodyEnter.selectAll(\"tr\")\n\t                .data(function(p) { return p.series})\n\t                .enter()\n\t                .append(\"tr\")\n\t                .classed(\"highlight\", function(p) { return p.highlight});\n\t\n\t        trowEnter.append(\"td\")\n\t            .classed(\"legend-color-guide\",true)\n\t            .append(\"div\")\n\t            .style(\"background-color\", function(p) { return p.color});\n\t\n\t        trowEnter.append(\"td\")\n\t            .classed(\"key\",true)\n\t            .classed(\"total\",function(p) { return !!p.total})\n\t            .html(function(p, i) { return keyFormatter(p.key, i)});\n\t\n\t        trowEnter.append(\"td\")\n\t            .classed(\"value\",true)\n\t            .html(function(p, i) { return valueFormatter(p.value, i) });\n\t\n\t        trowEnter.filter(function (p,i) { return p.percent !== undefined }).append(\"td\")\n\t            .classed(\"percent\", true)\n\t            .html(function(p, i) { return \"(\" + d3.format('%')(p.percent) + \")\" });\n\t\n\t        trowEnter.selectAll(\"td\").each(function(p) {\n\t            if (p.highlight) {\n\t                var opacityScale = d3.scale.linear().domain([0,1]).range([\"#fff\",p.color]);\n\t                var opacity = 0.6;\n\t                d3.select(this)\n\t                    .style(\"border-bottom-color\", opacityScale(opacity))\n\t                    .style(\"border-top-color\", opacityScale(opacity))\n\t                ;\n\t            }\n\t        });\n\t\n\t        var html = table.node().outerHTML;\n\t        if (d.footer !== undefined)\n\t            html += \"<div class='footer'>\" + d.footer + \"</div>\";\n\t        return html;\n\t\n\t    };\n\t\n\t    /*\n\t     Function that returns the position (relative to the viewport/document.body)\n\t     the tooltip should be placed in.\n\t     Should return: {\n\t        left: <leftPos>,\n\t        top: <topPos>\n\t     }\n\t     */\n\t    var position = function() {\n\t        var pos = {\n\t            left: d3.event !== null ? d3.event.clientX : 0,\n\t            top: d3.event !== null ? d3.event.clientY : 0\n\t        };\n\t\n\t        if(getComputedStyle(document.body).transform != 'none') {\n\t            // Take the offset into account, as now the tooltip is relative\n\t            // to document.body.\n\t            var client = document.body.getBoundingClientRect();\n\t            pos.left -= client.left;\n\t            pos.top -= client.top;\n\t        }\n\t\n\t        return pos;\n\t    };\n\t\n\t    var dataSeriesExists = function(d) {\n\t        if (d && d.series) {\n\t            if (nv.utils.isArray(d.series)) {\n\t                return true;\n\t            }\n\t            // if object, it's okay just convert to array of the object\n\t            if (nv.utils.isObject(d.series)) {\n\t                d.series = [d.series];\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    };\n\t\n\t    // Calculates the gravity offset of the tooltip. Parameter is position of tooltip\n\t    // relative to the viewport.\n\t    var calcGravityOffset = function(pos) {\n\t        var height = tooltip.node().offsetHeight,\n\t            width = tooltip.node().offsetWidth,\n\t            clientWidth = document.documentElement.clientWidth, // Don't want scrollbars.\n\t            clientHeight = document.documentElement.clientHeight, // Don't want scrollbars.\n\t            left, top, tmp;\n\t\n\t        // calculate position based on gravity\n\t        switch (gravity) {\n\t            case 'e':\n\t                left = - width - distance;\n\t                top = - (height / 2);\n\t                if(pos.left + left < 0) left = distance;\n\t                if((tmp = pos.top + top) < 0) top -= tmp;\n\t                if((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n\t                break;\n\t            case 'w':\n\t                left = distance;\n\t                top = - (height / 2);\n\t                if (pos.left + left + width > clientWidth) left = - width - distance;\n\t                if ((tmp = pos.top + top) < 0) top -= tmp;\n\t                if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n\t                break;\n\t            case 'n':\n\t                left = - (width / 2) - 5; // - 5 is an approximation of the mouse's height.\n\t                top = distance;\n\t                if (pos.top + top + height > clientHeight) top = - height - distance;\n\t                if ((tmp = pos.left + left) < 0) left -= tmp;\n\t                if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n\t                break;\n\t            case 's':\n\t                left = - (width / 2);\n\t                top = - height - distance;\n\t                if (pos.top + top < 0) top = distance;\n\t                if ((tmp = pos.left + left) < 0) left -= tmp;\n\t                if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n\t                break;\n\t            case 'center':\n\t                left = - (width / 2);\n\t                top = - (height / 2);\n\t                break;\n\t            default:\n\t                left = 0;\n\t                top = 0;\n\t                break;\n\t        }\n\t\n\t        return { 'left': left, 'top': top };\n\t    };\n\t\n\t    /*\n\t     Positions the tooltip in the correct place, as given by the position() function.\n\t     */\n\t    var positionTooltip = function() {\n\t        nv.dom.read(function() {\n\t            var pos = position(),\n\t                gravityOffset = calcGravityOffset(pos),\n\t                left = pos.left + gravityOffset.left,\n\t                top = pos.top + gravityOffset.top;\n\t\n\t            // delay hiding a bit to avoid flickering\n\t            if (hidden) {\n\t                tooltip\n\t                    .interrupt()\n\t                    .transition()\n\t                    .delay(hideDelay)\n\t                    .duration(0)\n\t                    .style('opacity', 0);\n\t            } else {\n\t                // using tooltip.style('transform') returns values un-usable for tween\n\t                var old_translate = 'translate(' + lastPosition.left + 'px, ' + lastPosition.top + 'px)';\n\t                var new_translate = 'translate(' + Math.round(left) + 'px, ' + Math.round(top) + 'px)';\n\t                var translateInterpolator = d3.interpolateString(old_translate, new_translate);\n\t                var is_hidden = tooltip.style('opacity') < 0.1;\n\t\n\t                tooltip\n\t                    .interrupt() // cancel running transitions\n\t                    .transition()\n\t                    .duration(is_hidden ? 0 : duration)\n\t                    // using tween since some versions of d3 can't auto-tween a translate on a div\n\t                    .styleTween('transform', function (d) {\n\t                        return translateInterpolator;\n\t                    }, 'important')\n\t                    // Safari has its own `-webkit-transform` and does not support `transform`\n\t                    .styleTween('-webkit-transform', function (d) {\n\t                        return translateInterpolator;\n\t                    })\n\t                    .style('-ms-transform', new_translate)\n\t                    .style('opacity', 1);\n\t            }\n\t\n\t            lastPosition.left = left;\n\t            lastPosition.top = top;\n\t        });\n\t    };\n\t\n\t    // Creates new tooltip container, or uses existing one on DOM.\n\t    function initTooltip() {\n\t        if (!tooltip || !tooltip.node()) {\n\t            // Create new tooltip div if it doesn't exist on DOM.\n\t\n\t            var data = [1];\n\t            tooltip = d3.select(document.body).select('#'+id).data(data);\n\t\n\t            tooltip.enter().append('div')\n\t                   .attr(\"class\", \"nvtooltip \" + (classes ? classes : \"xy-tooltip\"))\n\t                   .attr(\"id\", id)\n\t                   .style(\"top\", 0).style(\"left\", 0)\n\t                   .style('opacity', 0)\n\t                   .style('position', 'fixed')\n\t                   .selectAll(\"div, table, td, tr\").classed(nvPointerEventsClass, true)\n\t                   .classed(nvPointerEventsClass, true);\n\t\n\t            tooltip.exit().remove()\n\t        }\n\t    }\n\t\n\t    // Draw the tooltip onto the DOM.\n\t    function nvtooltip() {\n\t        if (!enabled) return;\n\t        if (!dataSeriesExists(data)) return;\n\t\n\t        nv.dom.write(function () {\n\t            initTooltip();\n\t            // Generate data and set it into tooltip.\n\t            // Bonus - If you override contentGenerator and return falsey you can use something like\n\t            //         React or Knockout to bind the data for your tooltip.\n\t            var newContent = contentGenerator(data);\n\t            if (newContent) {\n\t                tooltip.node().innerHTML = newContent;\n\t            }\n\t\n\t            positionTooltip();\n\t        });\n\t\n\t        return nvtooltip;\n\t    }\n\t\n\t    nvtooltip.nvPointerEventsClass = nvPointerEventsClass;\n\t    nvtooltip.options = nv.utils.optionsFunc.bind(nvtooltip);\n\t\n\t    nvtooltip._options = Object.create({}, {\n\t        // simple read/write options\n\t        duration: {get: function(){return duration;}, set: function(_){duration=_;}},\n\t        gravity: {get: function(){return gravity;}, set: function(_){gravity=_;}},\n\t        distance: {get: function(){return distance;}, set: function(_){distance=_;}},\n\t        snapDistance: {get: function(){return snapDistance;}, set: function(_){snapDistance=_;}},\n\t        classes: {get: function(){return classes;}, set: function(_){classes=_;}},\n\t        enabled: {get: function(){return enabled;}, set: function(_){enabled=_;}},\n\t        hideDelay: {get: function(){return hideDelay;}, set: function(_){hideDelay=_;}},\n\t        contentGenerator: {get: function(){return contentGenerator;}, set: function(_){contentGenerator=_;}},\n\t        valueFormatter: {get: function(){return valueFormatter;}, set: function(_){valueFormatter=_;}},\n\t        headerFormatter: {get: function(){return headerFormatter;}, set: function(_){headerFormatter=_;}},\n\t        keyFormatter: {get: function(){return keyFormatter;}, set: function(_){keyFormatter=_;}},\n\t        headerEnabled: {get: function(){return headerEnabled;}, set: function(_){headerEnabled=_;}},\n\t        position: {get: function(){return position;}, set: function(_){position=_;}},\n\t\n\t        // Deprecated options\n\t        chartContainer: {get: function(){return document.body;}, set: function(_){\n\t            // deprecated after 1.8.3\n\t            nv.deprecated('chartContainer', 'feature removed after 1.8.3');\n\t        }},\n\t        fixedTop: {get: function(){return null;}, set: function(_){\n\t            // deprecated after 1.8.1\n\t            nv.deprecated('fixedTop', 'feature removed after 1.8.1');\n\t        }},\n\t        offset: {get: function(){return {left: 0, top: 0};}, set: function(_){\n\t            // deprecated after 1.8.1\n\t            nv.deprecated('offset', 'use chart.tooltip.distance() instead');\n\t        }},\n\t\n\t        // options with extra logic\n\t        hidden: {get: function(){return hidden;}, set: function(_){\n\t            if (hidden != _) {\n\t                hidden = !!_;\n\t                nvtooltip();\n\t            }\n\t        }},\n\t        data: {get: function(){return data;}, set: function(_){\n\t            // if showing a single data point, adjust data format with that\n\t            if (_.point) {\n\t                _.value = _.point.x;\n\t                _.series = _.series || {};\n\t                _.series.value = _.point.y;\n\t                _.series.color = _.point.color || _.series.color;\n\t            }\n\t            data = _;\n\t        }},\n\t\n\t        // read only properties\n\t        node: {get: function(){return tooltip.node();}, set: function(_){}},\n\t        id: {get: function(){return id;}, set: function(_){}}\n\t    });\n\t\n\t    nv.utils.initOptions(nvtooltip);\n\t    return nvtooltip;\n\t};\n\t\n\t\n\t/*\n\tGets the browser window size\n\t\n\tReturns object with height and width properties\n\t */\n\tnv.utils.windowSize = function() {\n\t    // Sane defaults\n\t    var size = {width: 640, height: 480};\n\t\n\t    // Most recent browsers use\n\t    if (window.innerWidth && window.innerHeight) {\n\t        size.width = window.innerWidth;\n\t        size.height = window.innerHeight;\n\t        return (size);\n\t    }\n\t\n\t    // IE can use depending on mode it is in\n\t    if (document.compatMode=='CSS1Compat' &&\n\t        document.documentElement &&\n\t        document.documentElement.offsetWidth ) {\n\t\n\t        size.width = document.documentElement.offsetWidth;\n\t        size.height = document.documentElement.offsetHeight;\n\t        return (size);\n\t    }\n\t\n\t    // Earlier IE uses Doc.body\n\t    if (document.body && document.body.offsetWidth) {\n\t        size.width = document.body.offsetWidth;\n\t        size.height = document.body.offsetHeight;\n\t        return (size);\n\t    }\n\t\n\t    return (size);\n\t};\n\t\n\t\n\t/* handle dumb browser quirks...  isinstance breaks if you use frames\n\ttypeof returns 'object' for null, NaN is a number, etc.\n\t */\n\tnv.utils.isArray = Array.isArray;\n\tnv.utils.isObject = function(a) {\n\t    return a !== null && typeof a === 'object';\n\t};\n\tnv.utils.isFunction = function(a) {\n\t    return typeof a === 'function';\n\t};\n\tnv.utils.isDate = function(a) {\n\t    return toString.call(a) === '[object Date]';\n\t};\n\tnv.utils.isNumber = function(a) {\n\t    return !isNaN(a) && typeof a === 'number';\n\t};\n\t\n\t\n\t/*\n\tBinds callback function to run when window is resized\n\t */\n\tnv.utils.windowResize = function(handler) {\n\t    if (window.addEventListener) {\n\t        window.addEventListener('resize', handler);\n\t    } else {\n\t        nv.log(\"ERROR: Failed to bind to window.resize with: \", handler);\n\t    }\n\t    // return object with clear function to remove the single added callback.\n\t    return {\n\t        callback: handler,\n\t        clear: function() {\n\t            window.removeEventListener('resize', handler);\n\t        }\n\t    }\n\t};\n\t\n\t\n\t/*\n\tBackwards compatible way to implement more d3-like coloring of graphs.\n\tCan take in nothing, an array, or a function/scale\n\tTo use a normal scale, get the range and pass that because we must be able\n\tto take two arguments and use the index to keep backward compatibility\n\t*/\n\tnv.utils.getColor = function(color) {\n\t    //if you pass in nothing, get default colors back\n\t    if (color === undefined) {\n\t        return nv.utils.defaultColor();\n\t\n\t    //if passed an array, turn it into a color scale\n\t    } else if(nv.utils.isArray(color)) {\n\t        var color_scale = d3.scale.ordinal().range(color);\n\t        return function(d, i) {\n\t            var key = i === undefined ? d : i;\n\t            return d.color || color_scale(key);\n\t        };\n\t\n\t    //if passed a function or scale, return it, or whatever it may be\n\t    //external libs, such as angularjs-nvd3-directives use this\n\t    } else {\n\t        //can't really help it if someone passes rubbish as color\n\t        return color;\n\t    }\n\t};\n\t\n\t\n\t/*\n\tDefault color chooser uses a color scale of 20 colors from D3\n\t https://github.com/mbostock/d3/wiki/Ordinal-Scales#categorical-colors\n\t */\n\tnv.utils.defaultColor = function() {\n\t    // get range of the scale so we'll turn it into our own function.\n\t    return nv.utils.getColor(d3.scale.category20().range());\n\t};\n\t\n\t\n\t/*\n\tReturns a color function that takes the result of 'getKey' for each series and\n\tlooks for a corresponding color from the dictionary\n\t*/\n\tnv.utils.customTheme = function(dictionary, getKey, defaultColors) {\n\t    // use default series.key if getKey is undefined\n\t    getKey = getKey || function(series) { return series.key };\n\t    defaultColors = defaultColors || d3.scale.category20().range();\n\t\n\t    // start at end of default color list and walk back to index 0\n\t    var defIndex = defaultColors.length;\n\t\n\t    return function(series, index) {\n\t        var key = getKey(series);\n\t        if (nv.utils.isFunction(dictionary[key])) {\n\t            return dictionary[key]();\n\t        } else if (dictionary[key] !== undefined) {\n\t            return dictionary[key];\n\t        } else {\n\t            // no match in dictionary, use a default color\n\t            if (!defIndex) {\n\t                // used all the default colors, start over\n\t                defIndex = defaultColors.length;\n\t            }\n\t            defIndex = defIndex - 1;\n\t            return defaultColors[defIndex];\n\t        }\n\t    };\n\t};\n\t\n\t\n\t/*\n\tFrom the PJAX example on d3js.org, while this is not really directly needed\n\tit's a very cool method for doing pjax, I may expand upon it a little bit,\n\topen to suggestions on anything that may be useful\n\t*/\n\tnv.utils.pjax = function(links, content) {\n\t\n\t    var load = function(href) {\n\t        d3.html(href, function(fragment) {\n\t            var target = d3.select(content).node();\n\t            target.parentNode.replaceChild(\n\t                d3.select(fragment).select(content).node(),\n\t                target);\n\t            nv.utils.pjax(links, content);\n\t        });\n\t    };\n\t\n\t    d3.selectAll(links).on(\"click\", function() {\n\t        history.pushState(this.href, this.textContent, this.href);\n\t        load(this.href);\n\t        d3.event.preventDefault();\n\t    });\n\t\n\t    d3.select(window).on(\"popstate\", function() {\n\t        if (d3.event.state) {\n\t            load(d3.event.state);\n\t        }\n\t    });\n\t};\n\t\n\t\n\t/*\n\tFor when we want to approximate the width in pixels for an SVG:text element.\n\tMost common instance is when the element is in a display:none; container.\n\tForumla is : text.length * font-size * constant_factor\n\t*/\n\tnv.utils.calcApproxTextWidth = function (svgTextElem) {\n\t    if (nv.utils.isFunction(svgTextElem.style) && nv.utils.isFunction(svgTextElem.text)) {\n\t        var fontSize = parseInt(svgTextElem.style(\"font-size\").replace(\"px\",\"\"), 10);\n\t        var textLength = svgTextElem.text().length;\n\t        return nv.utils.NaNtoZero(textLength * fontSize * 0.5);\n\t    }\n\t    return 0;\n\t};\n\t\n\t\n\t/*\n\tNumbers that are undefined, null or NaN, convert them to zeros.\n\t*/\n\tnv.utils.NaNtoZero = function(n) {\n\t    if (!nv.utils.isNumber(n)\n\t        || isNaN(n)\n\t        || n === null\n\t        || n === Infinity\n\t        || n === -Infinity) {\n\t\n\t        return 0;\n\t    }\n\t    return n;\n\t};\n\t\n\t/*\n\tAdd a way to watch for d3 transition ends to d3\n\t*/\n\td3.selection.prototype.watchTransition = function(renderWatch){\n\t    var args = [this].concat([].slice.call(arguments, 1));\n\t    return renderWatch.transition.apply(renderWatch, args);\n\t};\n\t\n\t\n\t/*\n\tHelper object to watch when d3 has rendered something\n\t*/\n\tnv.utils.renderWatch = function(dispatch, duration) {\n\t    if (!(this instanceof nv.utils.renderWatch)) {\n\t        return new nv.utils.renderWatch(dispatch, duration);\n\t    }\n\t\n\t    var _duration = duration !== undefined ? duration : 250;\n\t    var renderStack = [];\n\t    var self = this;\n\t\n\t    this.models = function(models) {\n\t        models = [].slice.call(arguments, 0);\n\t        models.forEach(function(model){\n\t            model.__rendered = false;\n\t            (function(m){\n\t                m.dispatch.on('renderEnd', function(arg){\n\t                    m.__rendered = true;\n\t                    self.renderEnd('model');\n\t                });\n\t            })(model);\n\t\n\t            if (renderStack.indexOf(model) < 0) {\n\t                renderStack.push(model);\n\t            }\n\t        });\n\t    return this;\n\t    };\n\t\n\t    this.reset = function(duration) {\n\t        if (duration !== undefined) {\n\t            _duration = duration;\n\t        }\n\t        renderStack = [];\n\t    };\n\t\n\t    this.transition = function(selection, args, duration) {\n\t        args = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n\t\n\t        if (args.length > 1) {\n\t            duration = args.pop();\n\t        } else {\n\t            duration = _duration !== undefined ? _duration : 250;\n\t        }\n\t        selection.__rendered = false;\n\t\n\t        if (renderStack.indexOf(selection) < 0) {\n\t            renderStack.push(selection);\n\t        }\n\t\n\t        if (duration === 0) {\n\t            selection.__rendered = true;\n\t            selection.delay = function() { return this; };\n\t            selection.duration = function() { return this; };\n\t            return selection;\n\t        } else {\n\t            if (selection.length === 0) {\n\t                selection.__rendered = true;\n\t            } else if (selection.every( function(d){ return !d.length; } )) {\n\t                selection.__rendered = true;\n\t            } else {\n\t                selection.__rendered = false;\n\t            }\n\t\n\t            var n = 0;\n\t            return selection\n\t                .transition()\n\t                .duration(duration)\n\t                .each(function(){ ++n; })\n\t                .each('end', function(d, i) {\n\t                    if (--n === 0) {\n\t                        selection.__rendered = true;\n\t                        self.renderEnd.apply(this, args);\n\t                    }\n\t                });\n\t        }\n\t    };\n\t\n\t    this.renderEnd = function() {\n\t        if (renderStack.every( function(d){ return d.__rendered; } )) {\n\t            renderStack.forEach( function(d){ d.__rendered = false; });\n\t            dispatch.renderEnd.apply(this, arguments);\n\t        }\n\t    }\n\t\n\t};\n\t\n\t\n\t/*\n\tTakes multiple objects and combines them into the first one (dst)\n\texample:  nv.utils.deepExtend({a: 1}, {a: 2, b: 3}, {c: 4});\n\tgives:  {a: 2, b: 3, c: 4}\n\t*/\n\tnv.utils.deepExtend = function(dst){\n\t    var sources = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n\t    sources.forEach(function(source) {\n\t        for (var key in source) {\n\t            var isArray = nv.utils.isArray(dst[key]);\n\t            var isObject = nv.utils.isObject(dst[key]);\n\t            var srcObj = nv.utils.isObject(source[key]);\n\t\n\t            if (isObject && !isArray && srcObj) {\n\t                nv.utils.deepExtend(dst[key], source[key]);\n\t            } else {\n\t                dst[key] = source[key];\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\t\n\t/*\n\tstate utility object, used to track d3 states in the models\n\t*/\n\tnv.utils.state = function(){\n\t    if (!(this instanceof nv.utils.state)) {\n\t        return new nv.utils.state();\n\t    }\n\t    var state = {};\n\t    var _self = this;\n\t    var _setState = function(){};\n\t    var _getState = function(){ return {}; };\n\t    var init = null;\n\t    var changed = null;\n\t\n\t    this.dispatch = d3.dispatch('change', 'set');\n\t\n\t    this.dispatch.on('set', function(state){\n\t        _setState(state, true);\n\t    });\n\t\n\t    this.getter = function(fn){\n\t        _getState = fn;\n\t        return this;\n\t    };\n\t\n\t    this.setter = function(fn, callback) {\n\t        if (!callback) {\n\t            callback = function(){};\n\t        }\n\t        _setState = function(state, update){\n\t            fn(state);\n\t            if (update) {\n\t                callback();\n\t            }\n\t        };\n\t        return this;\n\t    };\n\t\n\t    this.init = function(state){\n\t        init = init || {};\n\t        nv.utils.deepExtend(init, state);\n\t    };\n\t\n\t    var _set = function(){\n\t        var settings = _getState();\n\t\n\t        if (JSON.stringify(settings) === JSON.stringify(state)) {\n\t            return false;\n\t        }\n\t\n\t        for (var key in settings) {\n\t            if (state[key] === undefined) {\n\t                state[key] = {};\n\t            }\n\t            state[key] = settings[key];\n\t            changed = true;\n\t        }\n\t        return true;\n\t    };\n\t\n\t    this.update = function(){\n\t        if (init) {\n\t            _setState(init, false);\n\t            init = null;\n\t        }\n\t        if (_set.call(this)) {\n\t            this.dispatch.change(state);\n\t        }\n\t    };\n\t\n\t};\n\t\n\t\n\t/*\n\tSnippet of code you can insert into each nv.models.* to give you the ability to\n\tdo things like:\n\tchart.options({\n\t  showXAxis: true,\n\t  tooltips: true\n\t});\n\t\n\tTo enable in the chart:\n\tchart.options = nv.utils.optionsFunc.bind(chart);\n\t*/\n\tnv.utils.optionsFunc = function(args) {\n\t    if (args) {\n\t        d3.map(args).forEach((function(key,value) {\n\t            if (nv.utils.isFunction(this[key])) {\n\t                this[key](value);\n\t            }\n\t        }).bind(this));\n\t    }\n\t    return this;\n\t};\n\t\n\t\n\t/*\n\tnumTicks:  requested number of ticks\n\tdata:  the chart data\n\t\n\treturns the number of ticks to actually use on X axis, based on chart data\n\tto avoid duplicate ticks with the same value\n\t*/\n\tnv.utils.calcTicksX = function(numTicks, data) {\n\t    // find max number of values from all data streams\n\t    var numValues = 1;\n\t    var i = 0;\n\t    for (i; i < data.length; i += 1) {\n\t        var stream_len = data[i] && data[i].values ? data[i].values.length : 0;\n\t        numValues = stream_len > numValues ? stream_len : numValues;\n\t    }\n\t    nv.log(\"Requested number of ticks: \", numTicks);\n\t    nv.log(\"Calculated max values to be: \", numValues);\n\t    // make sure we don't have more ticks than values to avoid duplicates\n\t    numTicks = numTicks > numValues ? numTicks = numValues - 1 : numTicks;\n\t    // make sure we have at least one tick\n\t    numTicks = numTicks < 1 ? 1 : numTicks;\n\t    // make sure it's an integer\n\t    numTicks = Math.floor(numTicks);\n\t    nv.log(\"Calculating tick count as: \", numTicks);\n\t    return numTicks;\n\t};\n\t\n\t\n\t/*\n\treturns number of ticks to actually use on Y axis, based on chart data\n\t*/\n\tnv.utils.calcTicksY = function(numTicks, data) {\n\t    // currently uses the same logic but we can adjust here if needed later\n\t    return nv.utils.calcTicksX(numTicks, data);\n\t};\n\t\n\t\n\t/*\n\tAdd a particular option from an options object onto chart\n\tOptions exposed on a chart are a getter/setter function that returns chart\n\ton set to mimic typical d3 option chaining, e.g. svg.option1('a').option2('b');\n\t\n\toption objects should be generated via Object.create() to provide\n\tthe option of manipulating data via get/set functions.\n\t*/\n\tnv.utils.initOption = function(chart, name) {\n\t    // if it's a call option, just call it directly, otherwise do get/set\n\t    if (chart._calls && chart._calls[name]) {\n\t        chart[name] = chart._calls[name];\n\t    } else {\n\t        chart[name] = function (_) {\n\t            if (!arguments.length) return chart._options[name];\n\t            chart._overrides[name] = true;\n\t            chart._options[name] = _;\n\t            return chart;\n\t        };\n\t        // calling the option as _option will ignore if set by option already\n\t        // so nvd3 can set options internally but the stop if set manually\n\t        chart['_' + name] = function(_) {\n\t            if (!arguments.length) return chart._options[name];\n\t            if (!chart._overrides[name]) {\n\t                chart._options[name] = _;\n\t            }\n\t            return chart;\n\t        }\n\t    }\n\t};\n\t\n\t\n\t/*\n\tAdd all options in an options object to the chart\n\t*/\n\tnv.utils.initOptions = function(chart) {\n\t    chart._overrides = chart._overrides || {};\n\t    var ops = Object.getOwnPropertyNames(chart._options || {});\n\t    var calls = Object.getOwnPropertyNames(chart._calls || {});\n\t    ops = ops.concat(calls);\n\t    for (var i in ops) {\n\t        nv.utils.initOption(chart, ops[i]);\n\t    }\n\t};\n\t\n\t\n\t/*\n\tInherit options from a D3 object\n\td3.rebind makes calling the function on target actually call it on source\n\tAlso use _d3options so we can track what we inherit for documentation and chained inheritance\n\t*/\n\tnv.utils.inheritOptionsD3 = function(target, d3_source, oplist) {\n\t    target._d3options = oplist.concat(target._d3options || []);\n\t    oplist.unshift(d3_source);\n\t    oplist.unshift(target);\n\t    d3.rebind.apply(this, oplist);\n\t};\n\t\n\t\n\t/*\n\tRemove duplicates from an array\n\t*/\n\tnv.utils.arrayUnique = function(a) {\n\t    return a.sort().filter(function(item, pos) {\n\t        return !pos || item != a[pos - 1];\n\t    });\n\t};\n\t\n\t\n\t/*\n\tKeeps a list of custom symbols to draw from in addition to d3.svg.symbol\n\tNecessary since d3 doesn't let you extend its list -_-\n\tAdd new symbols by doing nv.utils.symbols.set('name', function(size){...});\n\t*/\n\tnv.utils.symbolMap = d3.map();\n\t\n\t\n\t/*\n\tReplaces d3.svg.symbol so that we can look both there and our own map\n\t */\n\tnv.utils.symbol = function() {\n\t    var type,\n\t        size = 64;\n\t    function symbol(d,i) {\n\t        var t = type.call(this,d,i);\n\t        var s = size.call(this,d,i);\n\t        if (d3.svg.symbolTypes.indexOf(t) !== -1) {\n\t            return d3.svg.symbol().type(t).size(s)();\n\t        } else {\n\t            return nv.utils.symbolMap.get(t)(s);\n\t        }\n\t    }\n\t    symbol.type = function(_) {\n\t        if (!arguments.length) return type;\n\t        type = d3.functor(_);\n\t        return symbol;\n\t    };\n\t    symbol.size = function(_) {\n\t        if (!arguments.length) return size;\n\t        size = d3.functor(_);\n\t        return symbol;\n\t    };\n\t    return symbol;\n\t};\n\t\n\t\n\t/*\n\tInherit option getter/setter functions from source to target\n\td3.rebind makes calling the function on target actually call it on source\n\tAlso track via _inherited and _d3options so we can track what we inherit\n\tfor documentation generation purposes and chained inheritance\n\t*/\n\tnv.utils.inheritOptions = function(target, source) {\n\t    // inherit all the things\n\t    var ops = Object.getOwnPropertyNames(source._options || {});\n\t    var calls = Object.getOwnPropertyNames(source._calls || {});\n\t    var inherited = source._inherited || [];\n\t    var d3ops = source._d3options || [];\n\t    var args = ops.concat(calls).concat(inherited).concat(d3ops);\n\t    args.unshift(source);\n\t    args.unshift(target);\n\t    d3.rebind.apply(this, args);\n\t    // pass along the lists to keep track of them, don't allow duplicates\n\t    target._inherited = nv.utils.arrayUnique(ops.concat(calls).concat(inherited).concat(ops).concat(target._inherited || []));\n\t    target._d3options = nv.utils.arrayUnique(d3ops.concat(target._d3options || []));\n\t};\n\t\n\t\n\t/*\n\tRuns common initialize code on the svg before the chart builds\n\t*/\n\tnv.utils.initSVG = function(svg) {\n\t    svg.classed({'nvd3-svg':true});\n\t};\n\t\n\t\n\t/*\n\tSanitize and provide default for the container height.\n\t*/\n\tnv.utils.sanitizeHeight = function(height, container) {\n\t    return (height || parseInt(container.style('height'), 10) || 400);\n\t};\n\t\n\t\n\t/*\n\tSanitize and provide default for the container width.\n\t*/\n\tnv.utils.sanitizeWidth = function(width, container) {\n\t    return (width || parseInt(container.style('width'), 10) || 960);\n\t};\n\t\n\t\n\t/*\n\tCalculate the available height for a chart.\n\t*/\n\tnv.utils.availableHeight = function(height, container, margin) {\n\t    return Math.max(0,nv.utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n\t};\n\t\n\t/*\n\tCalculate the available width for a chart.\n\t*/\n\tnv.utils.availableWidth = function(width, container, margin) {\n\t    return Math.max(0,nv.utils.sanitizeWidth(width, container) - margin.left - margin.right);\n\t};\n\t\n\t/*\n\tClear any rendered chart components and display a chart's 'noData' message\n\t*/\n\tnv.utils.noData = function(chart, container) {\n\t    var opt = chart.options(),\n\t        margin = opt.margin(),\n\t        noData = opt.noData(),\n\t        data = (noData == null) ? [\"No Data Available.\"] : [noData],\n\t        height = nv.utils.availableHeight(null, container, margin),\n\t        width = nv.utils.availableWidth(null, container, margin),\n\t        x = margin.left + width/2,\n\t        y = margin.top + height/2;\n\t\n\t    //Remove any previously created chart components\n\t    container.selectAll('g').remove();\n\t\n\t    var noDataText = container.selectAll('.nv-noData').data(data);\n\t\n\t    noDataText.enter().append('text')\n\t        .attr('class', 'nvd3 nv-noData')\n\t        .attr('dy', '-.7em')\n\t        .style('text-anchor', 'middle');\n\t\n\t    noDataText\n\t        .attr('x', x)\n\t        .attr('y', y)\n\t        .text(function(t){ return t; });\n\t};\n\t\n\t/*\n\t Wrap long labels.\n\t */\n\tnv.utils.wrapTicks = function (text, width) {\n\t    text.each(function() {\n\t        var text = d3.select(this),\n\t            words = text.text().split(/\\s+/).reverse(),\n\t            word,\n\t            line = [],\n\t            lineNumber = 0,\n\t            lineHeight = 1.1,\n\t            y = text.attr(\"y\"),\n\t            dy = parseFloat(text.attr(\"dy\")),\n\t            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\t        while (word = words.pop()) {\n\t            line.push(word);\n\t            tspan.text(line.join(\" \"));\n\t            if (tspan.node().getComputedTextLength() > width) {\n\t                line.pop();\n\t                tspan.text(line.join(\" \"));\n\t                line = [word];\n\t                tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\t/*\n\tCheck equality of 2 array\n\t*/\n\tnv.utils.arrayEquals = function (array1, array2) {\n\t    if (array1 === array2)\n\t        return true;\n\t\n\t    if (!array1 || !array2)\n\t        return false;\n\t\n\t    // compare lengths - can save a lot of time\n\t    if (array1.length != array2.length)\n\t        return false;\n\t\n\t    for (var i = 0,\n\t        l = array1.length; i < l; i++) {\n\t        // Check if we have nested arrays\n\t        if (array1[i] instanceof Array && array2[i] instanceof Array) {\n\t            // recurse into the nested arrays\n\t            if (!nv.arrayEquals(array1[i], array2[i]))\n\t                return false;\n\t        } else if (array1[i] != array2[i]) {\n\t            // Warning - two different object instances will never be equal: {x:20} != {x:20}\n\t            return false;\n\t        }\n\t    }\n\t    return true;\n\t};\n\tnv.models.axis = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var axis = d3.svg.axis();\n\t    var scale = d3.scale.linear();\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 75 //only used for tickLabel currently\n\t        , height = 60 //only used for tickLabel currently\n\t        , axisLabelText = null\n\t        , showMaxMin = true //TODO: showMaxMin should be disabled on all ordinal scaled axes\n\t        , rotateLabels = 0\n\t        , rotateYLabel = true\n\t        , staggerLabels = false\n\t        , isOrdinal = false\n\t        , ticks = null\n\t        , axisLabelDistance = 0\n\t        , fontSize = undefined\n\t        , duration = 250\n\t        , dispatch = d3.dispatch('renderEnd')\n\t        ;\n\t    axis\n\t        .scale(scale)\n\t        .orient('bottom')\n\t        .tickFormat(function(d) { return d })\n\t    ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var scale0;\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-axis').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-axis');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            if (ticks !== null)\n\t                axis.ticks(ticks);\n\t            else if (axis.orient() == 'top' || axis.orient() == 'bottom')\n\t                axis.ticks(Math.abs(scale.range()[1] - scale.range()[0]) / 100);\n\t\n\t            //TODO: consider calculating width/height based on whether or not label is added, for reference in charts using this component\n\t            g.watchTransition(renderWatch, 'axis').call(axis);\n\t\n\t            scale0 = scale0 || axis.scale();\n\t\n\t            var fmt = axis.tickFormat();\n\t            if (fmt == null) {\n\t                fmt = scale0.tickFormat();\n\t            }\n\t\n\t            var axisLabel = g.selectAll('text.nv-axislabel')\n\t                .data([axisLabelText || null]);\n\t            axisLabel.exit().remove();\n\t\n\t            //only skip when fontSize is undefined so it can be cleared with a null or blank string\n\t            if (fontSize !== undefined) {\n\t                g.selectAll('g').select(\"text\").style('font-size', fontSize);\n\t            }\n\t\n\t            var xLabelMargin;\n\t            var axisMaxMin;\n\t            var w;\n\t            switch (axis.orient()) {\n\t                case 'top':\n\t                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n\t                  w = 0;\n\t                  if (scale.range().length === 1) {\n\t                    w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n\t                  } else if (scale.range().length === 2) {\n\t                    w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n\t                  } else if ( scale.range().length > 2){\n\t                    w = scale.range()[scale.range().length-1]+(scale.range()[1]-scale.range()[0]);\n\t                  };\n\t                    axisLabel\n\t                        .attr('text-anchor', 'middle')\n\t                        .attr('y', 0)\n\t                        .attr('x', w/2);\n\t                    if (showMaxMin) {\n\t                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n\t                            .data(scale.domain());\n\t                        axisMaxMin.enter().append('g').attr('class',function(d,i){\n\t                                return ['nv-axisMaxMin','nv-axisMaxMin-x',(i == 0 ? 'nv-axisMin-x':'nv-axisMax-x')].join(' ')\n\t                        }).append('text');\n\t                        axisMaxMin.exit().remove();\n\t                        axisMaxMin\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(' + nv.utils.NaNtoZero(scale(d)) + ',0)'\n\t                            })\n\t                            .select('text')\n\t                            .attr('dy', '-0.5em')\n\t                            .attr('y', -axis.tickPadding())\n\t                            .attr('text-anchor', 'middle')\n\t                            .text(function(d,i) {\n\t                                var v = fmt(d);\n\t                                return ('' + v).match('NaN') ? '' : v;\n\t                            });\n\t                        axisMaxMin.watchTransition(renderWatch, 'min-max top')\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(' + nv.utils.NaNtoZero(scale.range()[i]) + ',0)'\n\t                            });\n\t                    }\n\t                    break;\n\t                case 'bottom':\n\t                    xLabelMargin = axisLabelDistance + 36;\n\t                    var maxTextWidth = 30;\n\t                    var textHeight = 0;\n\t                    var xTicks = g.selectAll('g').select(\"text\");\n\t                    var rotateLabelsRule = '';\n\t                    if (rotateLabels%360) {\n\t                        //Reset transform on ticks so textHeight can be calculated correctly\n\t                        xTicks.attr('transform', ''); \n\t                        //Calculate the longest xTick width\n\t                        xTicks.each(function(d,i){\n\t                            var box = this.getBoundingClientRect();\n\t                            var width = box.width;\n\t                            textHeight = box.height;\n\t                            if(width > maxTextWidth) maxTextWidth = width;\n\t                        });\n\t                        rotateLabelsRule = 'rotate(' + rotateLabels + ' 0,' + (textHeight/2 + axis.tickPadding()) + ')';\n\t                        //Convert to radians before calculating sin. Add 30 to margin for healthy padding.\n\t                        var sin = Math.abs(Math.sin(rotateLabels*Math.PI/180));\n\t                        xLabelMargin = (sin ? sin*maxTextWidth : maxTextWidth)+30;\n\t                        //Rotate all xTicks\n\t                        xTicks\n\t                            .attr('transform', rotateLabelsRule)\n\t                            .style('text-anchor', rotateLabels%360 > 0 ? 'start' : 'end');\n\t                    } else {\n\t                        if (staggerLabels) {\n\t                            xTicks\n\t                                .attr('transform', function(d,i) {\n\t                                    return 'translate(0,' + (i % 2 == 0 ? '0' : '12') + ')'\n\t                                });\n\t                        } else {\n\t                            xTicks.attr('transform', \"translate(0,0)\");\n\t                        }\n\t                    }\n\t                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n\t                    w = 0;\n\t                    if (scale.range().length === 1) {\n\t                        w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n\t                    } else if (scale.range().length === 2) {\n\t                        w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n\t                    } else if ( scale.range().length > 2){\n\t                        w = scale.range()[scale.range().length-1]+(scale.range()[1]-scale.range()[0]);\n\t                    };\n\t                    axisLabel\n\t                        .attr('text-anchor', 'middle')\n\t                        .attr('y', xLabelMargin)\n\t                        .attr('x', w/2);\n\t                    if (showMaxMin) {\n\t                        //if (showMaxMin && !isOrdinal) {\n\t                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n\t                            //.data(scale.domain())\n\t                            .data([scale.domain()[0], scale.domain()[scale.domain().length - 1]]);\n\t                        axisMaxMin.enter().append('g').attr('class',function(d,i){\n\t                                return ['nv-axisMaxMin','nv-axisMaxMin-x',(i == 0 ? 'nv-axisMin-x':'nv-axisMax-x')].join(' ')\n\t                        }).append('text');\n\t                        axisMaxMin.exit().remove();\n\t                        axisMaxMin\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(' + nv.utils.NaNtoZero((scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0))) + ',0)'\n\t                            })\n\t                            .select('text')\n\t                            .attr('dy', '.71em')\n\t                            .attr('y', axis.tickPadding())\n\t                            .attr('transform', rotateLabelsRule)\n\t                            .style('text-anchor', rotateLabels ? (rotateLabels%360 > 0 ? 'start' : 'end') : 'middle')\n\t                            .text(function(d,i) {\n\t                                var v = fmt(d);\n\t                                return ('' + v).match('NaN') ? '' : v;\n\t                            });\n\t                        axisMaxMin.watchTransition(renderWatch, 'min-max bottom')\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(' + nv.utils.NaNtoZero((scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0))) + ',0)'\n\t                            });\n\t                    }\n\t\n\t                    break;\n\t                case 'right':\n\t                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n\t                    axisLabel\n\t                        .style('text-anchor', rotateYLabel ? 'middle' : 'begin')\n\t                        .attr('transform', rotateYLabel ? 'rotate(90)' : '')\n\t                        .attr('y', rotateYLabel ? (-Math.max(margin.right, width) + 12 - (axisLabelDistance || 0)) : -10) //TODO: consider calculating this based on largest tick width... OR at least expose this on chart\n\t                        .attr('x', rotateYLabel ? (d3.max(scale.range()) / 2) : axis.tickPadding());\n\t                    if (showMaxMin) {\n\t                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n\t                            .data(scale.domain());\n\t                       \taxisMaxMin.enter().append('g').attr('class',function(d,i){\n\t                                return ['nv-axisMaxMin','nv-axisMaxMin-y',(i == 0 ? 'nv-axisMin-y':'nv-axisMax-y')].join(' ')\n\t                        }).append('text')\n\t                            .style('opacity', 0);\n\t                        axisMaxMin.exit().remove();\n\t                        axisMaxMin\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(0,' + nv.utils.NaNtoZero(scale(d)) + ')'\n\t                            })\n\t                            .select('text')\n\t                            .attr('dy', '.32em')\n\t                            .attr('y', 0)\n\t                            .attr('x', axis.tickPadding())\n\t                            .style('text-anchor', 'start')\n\t                            .text(function(d, i) {\n\t                                var v = fmt(d);\n\t                                return ('' + v).match('NaN') ? '' : v;\n\t                            });\n\t                        axisMaxMin.watchTransition(renderWatch, 'min-max right')\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')'\n\t                            })\n\t                            .select('text')\n\t                            .style('opacity', 1);\n\t                    }\n\t                    break;\n\t                case 'left':\n\t                    /*\n\t                     //For dynamically placing the label. Can be used with dynamically-sized chart axis margins\n\t                     var yTicks = g.selectAll('g').select(\"text\");\n\t                     yTicks.each(function(d,i){\n\t                     var labelPadding = this.getBoundingClientRect().width + axis.tickPadding() + 16;\n\t                     if(labelPadding > width) width = labelPadding;\n\t                     });\n\t                     */\n\t                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n\t                    axisLabel\n\t                        .style('text-anchor', rotateYLabel ? 'middle' : 'end')\n\t                        .attr('transform', rotateYLabel ? 'rotate(-90)' : '')\n\t                        .attr('y', rotateYLabel ? (-Math.max(margin.left, width) + 25 - (axisLabelDistance || 0)) : -10)\n\t                        .attr('x', rotateYLabel ? (-d3.max(scale.range()) / 2) : -axis.tickPadding());\n\t                    if (showMaxMin) {\n\t                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n\t                            .data(scale.domain());\n\t                        axisMaxMin.enter().append('g').attr('class',function(d,i){\n\t                                return ['nv-axisMaxMin','nv-axisMaxMin-y',(i == 0 ? 'nv-axisMin-y':'nv-axisMax-y')].join(' ')\n\t                        }).append('text')\n\t                            .style('opacity', 0);\n\t                        axisMaxMin.exit().remove();\n\t                        axisMaxMin\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(0,' + nv.utils.NaNtoZero(scale0(d)) + ')'\n\t                            })\n\t                            .select('text')\n\t                            .attr('dy', '.32em')\n\t                            .attr('y', 0)\n\t                            .attr('x', -axis.tickPadding())\n\t                            .attr('text-anchor', 'end')\n\t                            .text(function(d,i) {\n\t                                var v = fmt(d);\n\t                                return ('' + v).match('NaN') ? '' : v;\n\t                            });\n\t                        axisMaxMin.watchTransition(renderWatch, 'min-max right')\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')'\n\t                            })\n\t                            .select('text')\n\t                            .style('opacity', 1);\n\t                    }\n\t                    break;\n\t            }\n\t            axisLabel.text(function(d) { return d });\n\t\n\t            if (showMaxMin && (axis.orient() === 'left' || axis.orient() === 'right')) {\n\t                //check if max and min overlap other values, if so, hide the values that overlap\n\t                g.selectAll('g') // the g's wrapping each tick\n\t                    .each(function(d,i) {\n\t                        d3.select(this).select('text').attr('opacity', 1);\n\t                        if (scale(d) < scale.range()[1] + 10 || scale(d) > scale.range()[0] - 10) { // 10 is assuming text height is 16... if d is 0, leave it!\n\t                            if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n\t                                d3.select(this).attr('opacity', 0);\n\t\n\t                            d3.select(this).select('text').attr('opacity', 0); // Don't remove the ZERO line!!\n\t                        }\n\t                    });\n\t\n\t                //if Max and Min = 0 only show min, Issue #281\n\t                if (scale.domain()[0] == scale.domain()[1] && scale.domain()[0] == 0) {\n\t                    wrap.selectAll('g.nv-axisMaxMin').style('opacity', function (d, i) {\n\t                        return !i ? 1 : 0\n\t                    });\n\t                }\n\t            }\n\t\n\t            if (showMaxMin && (axis.orient() === 'top' || axis.orient() === 'bottom')) {\n\t                var maxMinRange = [];\n\t                wrap.selectAll('g.nv-axisMaxMin')\n\t                    .each(function(d,i) {\n\t                        try {\n\t                            if (i) // i== 1, max position\n\t                                maxMinRange.push(scale(d) - this.getBoundingClientRect().width - 4);  //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n\t                            else // i==0, min position\n\t                                maxMinRange.push(scale(d) + this.getBoundingClientRect().width + 4)\n\t                        }catch (err) {\n\t                            if (i) // i== 1, max position\n\t                                maxMinRange.push(scale(d) - 4);  //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n\t                            else // i==0, min position\n\t                                maxMinRange.push(scale(d) + 4);\n\t                        }\n\t                    });\n\t                // the g's wrapping each tick\n\t                g.selectAll('g').each(function(d, i) {\n\t                    if (scale(d) < maxMinRange[0] || scale(d) > maxMinRange[1]) {\n\t                        if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n\t                            d3.select(this).remove();\n\t                        else\n\t                            d3.select(this).select('text').remove(); // Don't remove the ZERO line!!\n\t                    }\n\t                });\n\t            }\n\t\n\t            //Highlight zero tick line\n\t            g.selectAll('.tick')\n\t                .filter(function (d) {\n\t                    /*\n\t                    The filter needs to return only ticks at or near zero.\n\t                    Numbers like 0.00001 need to count as zero as well,\n\t                    and the arithmetic trick below solves that.\n\t                    */\n\t                    return !parseFloat(Math.round(d * 100000) / 1000000) && (d !== undefined)\n\t                }) \n\t                .classed('zero', true);\n\t            \n\t            //store old scales for use in transitions on update\n\t            scale0 = scale.copy();\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('axis immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.axis = axis;\n\t    chart.dispatch = dispatch;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        axisLabelDistance: {get: function(){return axisLabelDistance;}, set: function(_){axisLabelDistance=_;}},\n\t        staggerLabels:     {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n\t        rotateLabels:      {get: function(){return rotateLabels;}, set: function(_){rotateLabels=_;}},\n\t        rotateYLabel:      {get: function(){return rotateYLabel;}, set: function(_){rotateYLabel=_;}},\n\t        showMaxMin:        {get: function(){return showMaxMin;}, set: function(_){showMaxMin=_;}},\n\t        axisLabel:         {get: function(){return axisLabelText;}, set: function(_){axisLabelText=_;}},\n\t        height:            {get: function(){return height;}, set: function(_){height=_;}},\n\t        ticks:             {get: function(){return ticks;}, set: function(_){ticks=_;}},\n\t        width:             {get: function(){return width;}, set: function(_){width=_;}},\n\t        fontSize:          {get: function(){return fontSize;}, set: function(_){fontSize=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top !== undefined    ? _.top    : margin.top;\n\t            margin.right  = _.right !== undefined  ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left !== undefined   ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration=_;\n\t            renderWatch.reset(duration);\n\t        }},\n\t        scale: {get: function(){return scale;}, set: function(_){\n\t            scale = _;\n\t            axis.scale(scale);\n\t            isOrdinal = typeof scale.rangeBands === 'function';\n\t            nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t    nv.utils.inheritOptionsD3(chart, axis, ['orient', 'tickValues', 'tickSubdivide', 'tickSize', 'tickPadding', 'tickFormat']);\n\t    nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n\t\n\t    return chart;\n\t};\n\tnv.models.boxPlot = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0},\n\t        width = 960,\n\t        height = 500,\n\t        id = Math.floor(Math.random() * 10000), // Create semi-unique ID in case user doesn't select one\n\t        xScale = d3.scale.ordinal(),\n\t        yScale = d3.scale.linear(),\n\t        getX  = function(d) { return d.label }, // Default data model selectors.\n\t        getQ1 = function(d) { return d.values.Q1 },\n\t        getQ2 = function(d) { return d.values.Q2 },\n\t        getQ3 = function(d) { return d.values.Q3 },\n\t        getWl = function(d) { return d.values.whisker_low },\n\t        getWh = function(d) { return d.values.whisker_high },\n\t        getColor = function(d) { return d.color },\n\t        getOlItems  = function(d) { return d.values.outliers },\n\t        getOlValue = function(d, i, j) { return d },\n\t        getOlLabel = function(d, i, j) { return d },\n\t        getOlColor = function(d, i, j) { return undefined },\n\t        color = nv.utils.defaultColor(),\n\t        container = null,\n\t        xDomain, xRange,\n\t        yDomain, yRange,\n\t        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n\t        duration = 250,\n\t        maxBoxWidth = null;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var xScale0, yScale0;\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup Scales\n\t            xScale.domain(xDomain || data.map(function(d,i) { return getX(d,i); }))\n\t                .rangeBands(xRange || [0, availableWidth], 0.1);\n\t\n\t            // if we know yDomain, no need to calculate\n\t            var yData = []\n\t            if (!yDomain) {\n\t                // (y-range is based on quartiles, whiskers and outliers)\n\t                var values = [], yMin, yMax;\n\t                data.forEach(function (d, i) {\n\t                    var q1 = getQ1(d), q3 = getQ3(d), wl = getWl(d), wh = getWh(d);\n\t                    var olItems = getOlItems(d);\n\t                    if (olItems) {\n\t                        olItems.forEach(function (e, i) {\n\t                            values.push(getOlValue(e, i, undefined));\n\t                        });\n\t                    }\n\t                    if (wl) { values.push(wl) }\n\t                    if (q1) { values.push(q1) }\n\t                    if (q3) { values.push(q3) }\n\t                    if (wh) { values.push(wh) }\n\t                });\n\t                yMin = d3.min(values);\n\t                yMax = d3.max(values);\n\t                yData = [ yMin, yMax ] ;\n\t            }\n\t\n\t            yScale.domain(yDomain || yData);\n\t            yScale.range(yRange || [availableHeight, 0]);\n\t\n\t            //store old scales if they exist\n\t            xScale0 = xScale0 || xScale;\n\t            yScale0 = yScale0 || yScale.copy().range([yScale(0),yScale(0)]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap');\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            var boxplots = wrap.selectAll('.nv-boxplot').data(function(d) { return d });\n\t            var boxEnter = boxplots.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n\t            boxplots\n\t                .attr('class', 'nv-boxplot')\n\t                .attr('transform', function(d,i,j) { return 'translate(' + (xScale(getX(d,i)) + xScale.rangeBand() * 0.05) + ', 0)'; })\n\t                .classed('hover', function(d) { return d.hover });\n\t            boxplots\n\t                .watchTransition(renderWatch, 'nv-boxplot: boxplots')\n\t                .style('stroke-opacity', 1)\n\t                .style('fill-opacity', 0.75)\n\t                .delay(function(d,i) { return i * duration / data.length })\n\t                .attr('transform', function(d,i) {\n\t                    return 'translate(' + (xScale(getX(d,i)) + xScale.rangeBand() * 0.05) + ', 0)';\n\t                });\n\t            boxplots.exit().remove();\n\t\n\t            // ----- add the SVG elements for each boxPlot -----\n\t\n\t            // conditionally append whisker lines\n\t            boxEnter.each(function(d,i) {\n\t                var box = d3.select(this);\n\t                [getWl, getWh].forEach(function (f) {\n\t                    if (f(d) !== undefined && f(d) !== null) {\n\t                        var key = (f === getWl) ? 'low' : 'high';\n\t                        box.append('line')\n\t                          .style('stroke', getColor(d) || color(d,i))\n\t                          .attr('class', 'nv-boxplot-whisker nv-boxplot-' + key);\n\t                        box.append('line')\n\t                          .style('stroke', getColor(d) || color(d,i))\n\t                          .attr('class', 'nv-boxplot-tick nv-boxplot-' + key);\n\t                    }\n\t                });\n\t            });\n\t\n\t            var box_width = function() { return (maxBoxWidth === null ? xScale.rangeBand() * 0.9 : Math.min(75, xScale.rangeBand() * 0.9)); };\n\t            var box_left  = function() { return xScale.rangeBand() * 0.45 - box_width()/2; };\n\t            var box_right = function() { return xScale.rangeBand() * 0.45 + box_width()/2; };\n\t\n\t            // update whisker lines and ticks\n\t            [getWl, getWh].forEach(function (f) {\n\t                var key = (f === getWl) ? 'low' : 'high';\n\t                var endpoint = (f === getWl) ? getQ1 : getQ3;\n\t                boxplots.select('line.nv-boxplot-whisker.nv-boxplot-' + key)\n\t                  .watchTransition(renderWatch, 'nv-boxplot: boxplots')\n\t                    .attr('x1', xScale.rangeBand() * 0.45 )\n\t                    .attr('y1', function(d,i) { return yScale(f(d)); })\n\t                    .attr('x2', xScale.rangeBand() * 0.45 )\n\t                    .attr('y2', function(d,i) { return yScale(endpoint(d)); });\n\t                boxplots.select('line.nv-boxplot-tick.nv-boxplot-' + key)\n\t                  .watchTransition(renderWatch, 'nv-boxplot: boxplots')\n\t                    .attr('x1', box_left )\n\t                    .attr('y1', function(d,i) { return yScale(f(d)); })\n\t                    .attr('x2', box_right )\n\t                    .attr('y2', function(d,i) { return yScale(f(d)); });\n\t            });\n\t\n\t            [getWl, getWh].forEach(function (f) {\n\t                var key = (f === getWl) ? 'low' : 'high';\n\t                boxEnter.selectAll('.nv-boxplot-' + key)\n\t                  .on('mouseover', function(d,i,j) {\n\t                      d3.select(this).classed('hover', true);\n\t                      dispatch.elementMouseover({\n\t                          series: { key: f(d), color: getColor(d) || color(d,j) },\n\t                          e: d3.event\n\t                      });\n\t                  })\n\t                  .on('mouseout', function(d,i,j) {\n\t                      d3.select(this).classed('hover', false);\n\t                      dispatch.elementMouseout({\n\t                          series: { key: f(d), color: getColor(d) || color(d,j) },\n\t                          e: d3.event\n\t                      });\n\t                  })\n\t                  .on('mousemove', function(d,i) {\n\t                      dispatch.elementMousemove({e: d3.event});\n\t                  });\n\t            });\n\t\n\t            // boxes\n\t            boxEnter.append('rect')\n\t                .attr('class', 'nv-boxplot-box')\n\t                // tooltip events\n\t                .on('mouseover', function(d,i) {\n\t                    d3.select(this).classed('hover', true);\n\t                    dispatch.elementMouseover({\n\t                        key: getX(d),\n\t                        value: getX(d),\n\t                        series: [\n\t                            { key: 'Q3', value: getQ3(d), color: getColor(d) || color(d,i) },\n\t                            { key: 'Q2', value: getQ2(d), color: getColor(d) || color(d,i) },\n\t                            { key: 'Q1', value: getQ1(d), color: getColor(d) || color(d,i) }\n\t                        ],\n\t                        data: d,\n\t                        index: i,\n\t                        e: d3.event\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.elementMouseout({\n\t                        key: getX(d),\n\t                        value: getX(d),\n\t                        series: [\n\t                            { key: 'Q3', value: getQ3(d), color: getColor(d) || color(d,i) },\n\t                            { key: 'Q2', value: getQ2(d), color: getColor(d) || color(d,i) },\n\t                            { key: 'Q1', value: getQ1(d), color: getColor(d) || color(d,i) }\n\t                        ],\n\t                        data: d,\n\t                        index: i,\n\t                        e: d3.event\n\t                    });\n\t                })\n\t                .on('mousemove', function(d,i) {\n\t                    dispatch.elementMousemove({e: d3.event});\n\t                });\n\t\n\t            // box transitions\n\t            boxplots.select('rect.nv-boxplot-box')\n\t              .watchTransition(renderWatch, 'nv-boxplot: boxes')\n\t                .attr('y', function(d,i) { return yScale(getQ3(d)); })\n\t                .attr('width', box_width)\n\t                .attr('x', box_left )\n\t                .attr('height', function(d,i) { return Math.abs(yScale(getQ3(d)) - yScale(getQ1(d))) || 1 })\n\t                .style('fill', function(d,i) { return getColor(d) || color(d,i) })\n\t                .style('stroke', function(d,i) { return getColor(d) || color(d,i) });\n\t\n\t            // median line\n\t            boxEnter.append('line').attr('class', 'nv-boxplot-median');\n\t\n\t            boxplots.select('line.nv-boxplot-median')\n\t              .watchTransition(renderWatch, 'nv-boxplot: boxplots line')\n\t                .attr('x1', box_left)\n\t                .attr('y1', function(d,i) { return yScale(getQ2(d)); })\n\t                .attr('x2', box_right)\n\t                .attr('y2', function(d,i) { return yScale(getQ2(d)); });\n\t\n\t            // outliers\n\t            var outliers = boxplots.selectAll('.nv-boxplot-outlier').data(function(d) {\n\t                return getOlItems(d) || [];\n\t            });\n\t            outliers.enter().append('circle')\n\t                .style('fill', function(d,i,j) { return getOlColor(d,i,j) || color(d,j) })\n\t                .style('stroke', function(d,i,j) { return getOlColor(d,i,j) || color(d,j) })\n\t                .style('z-index', 9000)\n\t                .on('mouseover', function(d,i,j) {\n\t                    d3.select(this).classed('hover', true);\n\t                    dispatch.elementMouseover({\n\t                        series: { key: getOlLabel(d,i,j), color: getOlColor(d,i,j) || color(d,j) },\n\t                        e: d3.event\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i,j) {\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.elementMouseout({\n\t                        series: { key: getOlLabel(d,i,j), color: getOlColor(d,i,j) || color(d,j) },\n\t                        e: d3.event\n\t                    });\n\t                })\n\t                .on('mousemove', function(d,i) {\n\t                    dispatch.elementMousemove({e: d3.event});\n\t                });\n\t            outliers.attr('class', 'nv-boxplot-outlier');\n\t            outliers\n\t              .watchTransition(renderWatch, 'nv-boxplot: nv-boxplot-outlier')\n\t                .attr('cx', xScale.rangeBand() * 0.45)\n\t                .attr('cy', function(d,i,j) { return yScale(getOlValue(d,i,j)); })\n\t                .attr('r', '3');\n\t            outliers.exit().remove();\n\t\n\t            //store old scales for use in transitions on update\n\t            xScale0 = xScale.copy();\n\t            yScale0 = yScale.copy();\n\t        });\n\t\n\t        renderWatch.renderEnd('nv-boxplot immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:       {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:      {get: function(){return height;}, set: function(_){height=_;}},\n\t        maxBoxWidth: {get: function(){return maxBoxWidth;}, set: function(_){maxBoxWidth=_;}},\n\t        x:           {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        q1: {get: function(){return getQ1;}, set: function(_){getQ1=_;}},\n\t        q2: {get: function(){return getQ2;}, set: function(_){getQ2=_;}},\n\t        q3: {get: function(){return getQ3;}, set: function(_){getQ3=_;}},\n\t        wl: {get: function(){return getWl;}, set: function(_){getWl=_;}},\n\t        wh: {get: function(){return getWh;}, set: function(_){getWh=_;}},\n\t        itemColor:    {get: function(){return getColor;}, set: function(_){getColor=_;}},\n\t        outliers:     {get: function(){return getOlItems;}, set: function(_){getOlItems=_;}},\n\t        outlierValue: {get: function(){return getOlValue;}, set: function(_){getOlValue=_;}},\n\t        outlierLabel: {get: function(){return getOlLabel;}, set: function(_){getOlLabel=_;}},\n\t        outlierColor: {get: function(){return getOlColor;}, set: function(_){getOlColor=_;}},\n\t        xScale:  {get: function(){return xScale;}, set: function(_){xScale=_;}},\n\t        yScale:  {get: function(){return yScale;}, set: function(_){yScale=_;}},\n\t        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        id:          {get: function(){return id;}, set: function(_){id=_;}},\n\t        // rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n\t        y: {\n\t            get: function() {\n\t                console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n\t                return {};\n\t            },\n\t            set: function(_) {\n\t                console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n\t            }\n\t        },\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\tnv.models.boxPlotChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var boxplot = nv.models.boxPlot(),\n\t        xAxis = nv.models.axis(),\n\t        yAxis = nv.models.axis();\n\t\n\t    var margin = {top: 15, right: 10, bottom: 50, left: 60},\n\t        width = null,\n\t        height = null,\n\t        color = nv.utils.getColor(),\n\t        showXAxis = true,\n\t        showYAxis = true,\n\t        rightAlignYAxis = false,\n\t        staggerLabels = false,\n\t        tooltip = nv.models.tooltip(),\n\t        x, y,\n\t        noData = 'No Data Available.',\n\t        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n\t        duration = 250;\n\t\n\t    xAxis\n\t        .orient('bottom')\n\t        .showMaxMin(false)\n\t        .tickFormat(function(d) { return d })\n\t    ;\n\t    yAxis\n\t        .orient((rightAlignYAxis) ? 'right' : 'left')\n\t        .tickFormat(d3.format(',.1f'))\n\t    ;\n\t\n\t    tooltip.duration(0);\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(boxplot);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this), that = this;\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = (width  || parseInt(container.style('width')) || 960) - margin.left - margin.right;\n\t            var availableHeight = (height || parseInt(container.style('height')) || 400) - margin.top - margin.bottom;\n\t\n\t            chart.update = function() {\n\t                dispatch.beforeUpdate();\n\t                container.transition().duration(duration).call(chart);\n\t            };\n\t            chart.container = this;\n\t\n\t            // TODO still need to find a way to validate quartile data presence using boxPlot callbacks.\n\t            // Display No Data message if there's nothing to show. (quartiles required at minimum).\n\t            if (!data || !data.length) {\n\t                var noDataText = container.selectAll('.nv-noData').data([noData]);\n\t\n\t                noDataText.enter().append('text')\n\t                    .attr('class', 'nvd3 nv-noData')\n\t                    .attr('dy', '-.7em')\n\t                    .style('text-anchor', 'middle');\n\t\n\t                noDataText\n\t                    .attr('x', margin.left + availableWidth / 2)\n\t                    .attr('y', margin.top + availableHeight / 2)\n\t                    .text(function(d) { return d });\n\t\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            x = boxplot.xScale();\n\t            y = boxplot.yScale().clamp(true);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-boxPlotWithAxes').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-boxPlotWithAxes').append('g');\n\t            var defsEnter = gEnter.append('defs');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis')\n\t                .append('g').attr('class', 'nv-zeroLine')\n\t                .append('line');\n\t\n\t            gEnter.append('g').attr('class', 'nv-barsWrap');\n\t            g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select('.nv-y.nv-axis')\n\t                    .attr('transform', 'translate(' + availableWidth + ',0)');\n\t            }\n\t\n\t            // Main Chart Component(s)\n\t            boxplot.width(availableWidth).height(availableHeight);\n\t\n\t            var barsWrap = g.select('.nv-barsWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled }))\n\t\n\t            barsWrap.transition().call(boxplot);\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-x-label-clip-' + boxplot.id())\n\t                .append('rect');\n\t\n\t            g.select('#nv-x-label-clip-' + boxplot.id() + ' rect')\n\t                .attr('width', x.rangeBand() * (staggerLabels ? 2 : 1))\n\t                .attr('height', 16)\n\t                .attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2 ));\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    .ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize(-availableHeight, 0);\n\t\n\t                g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n\t                g.select('.nv-x.nv-axis').call(xAxis);\n\t\n\t                var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\t                if (staggerLabels) {\n\t                    xTicks\n\t                        .selectAll('text')\n\t                        .attr('transform', function(d,i,j) { return 'translate(0,' + (j % 2 === 0 ? '5' : '17') + ')' })\n\t                }\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    .ticks( Math.floor(availableHeight/36) ) // can't use nv.utils.calcTicksY with Object data\n\t                    .tickSize( -availableWidth, 0);\n\t\n\t                g.select('.nv-y.nv-axis').call(yAxis);\n\t            }\n\t\n\t            // Zero line\n\t            g.select('.nv-zeroLine line')\n\t                .attr('x1',0)\n\t                .attr('x2',availableWidth)\n\t                .attr('y1', y(0))\n\t                .attr('y2', y(0))\n\t            ;\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t        });\n\t\n\t        renderWatch.renderEnd('nv-boxplot chart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    boxplot.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    boxplot.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.data(evt).hidden(true);\n\t    });\n\t\n\t    boxplot.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.boxplot = boxplot;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        staggerLabels: {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n\t        showXAxis: {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis: {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        tooltipContent:    {get: function(){return tooltip;}, set: function(_){tooltip=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            boxplot.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            boxplot.color(color);\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( (_) ? 'right' : 'left');\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, boxplot);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t}\n\t\n\t// Chart design based on the recommendations of Stephen Few. Implementation\n\t// based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n\t// http://projects.instantcognition.com/protovis/bulletchart/\n\t\n\tnv.models.bullet = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , orient = 'left' // TODO top & bottom\n\t        , reverse = false\n\t        , ranges = function(d) { return d.ranges }\n\t        , markers = function(d) { return d.markers ? d.markers : [] }\n\t        , markerLines = function(d) { return d.markerLines ? d.markerLines : [0] }\n\t        , measures = function(d) { return d.measures }\n\t        , rangeLabels = function(d) { return d.rangeLabels ? d.rangeLabels : [] }\n\t        , markerLabels = function(d) { return d.markerLabels ? d.markerLabels : []  }\n\t        , markerLineLabels = function(d) { return d.markerLineLabels ? d.markerLineLabels : []  }\n\t        , measureLabels = function(d) { return d.measureLabels ? d.measureLabels : []  }\n\t        , forceX = [0] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n\t        , width = 380\n\t        , height = 30\n\t        , container = null\n\t        , tickFormat = null\n\t        , color = nv.utils.getColor(['#1f77b4'])\n\t        , dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove')\n\t        , defaultRangeLabels = [\"Maximum\", \"Mean\", \"Minimum\"]\n\t        , legacyRangeClassNames = [\"Max\", \"Avg\", \"Min\"]\n\t        , duration = 1000\n\t        ;\n\t\n\t    function sortLabels(labels, values){\n\t        var lz = labels.slice();\n\t        labels.sort(function(a, b){\n\t            var iA = lz.indexOf(a);\n\t            var iB = lz.indexOf(b);\n\t            return d3.descending(values[iA], values[iB]);\n\t        });\n\t    };\n\t\n\t    function chart(selection) {\n\t        selection.each(function(d, i) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            var rangez = ranges.call(this, d, i).slice(),\n\t                markerz = markers.call(this, d, i).slice(),\n\t                markerLinez = markerLines.call(this, d, i).slice(),\n\t                measurez = measures.call(this, d, i).slice(),\n\t                rangeLabelz = rangeLabels.call(this, d, i).slice(),\n\t                markerLabelz = markerLabels.call(this, d, i).slice(),\n\t                markerLineLabelz = markerLineLabels.call(this, d, i).slice(),\n\t                measureLabelz = measureLabels.call(this, d, i).slice();\n\t\n\t            // Sort labels according to their sorted values\n\t            sortLabels(rangeLabelz, rangez);\n\t            sortLabels(markerLabelz, markerz);\n\t            sortLabels(markerLineLabelz, markerLinez);\n\t            sortLabels(measureLabelz, measurez);\n\t\n\t            // sort values descending\n\t            rangez.sort(d3.descending);\n\t            markerz.sort(d3.descending);\n\t            markerLinez.sort(d3.descending);\n\t            measurez.sort(d3.descending);\n\t\n\t            // Setup Scales\n\t            // Compute the new x-scale.\n\t            var x1 = d3.scale.linear()\n\t                .domain( d3.extent(d3.merge([forceX, rangez])) )\n\t                .range(reverse ? [availableWidth, 0] : [0, availableWidth]);\n\t\n\t            // Retrieve the old x-scale, if this is an update.\n\t            var x0 = this.__chart__ || d3.scale.linear()\n\t                .domain([0, Infinity])\n\t                .range(x1.range());\n\t\n\t            // Stash the new scale.\n\t            this.__chart__ = x1;\n\t\n\t            var rangeMin = d3.min(rangez), //rangez[2]\n\t                rangeMax = d3.max(rangez), //rangez[0]\n\t                rangeAvg = rangez[1];\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-bullet').data([d]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bullet');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            for(var i=0,il=rangez.length; i<il; i++){\n\t                var rangeClassNames = 'nv-range nv-range'+i;\n\t                if(i <= 2){\n\t                    rangeClassNames = rangeClassNames + ' nv-range'+legacyRangeClassNames[i];\n\t                }\n\t                gEnter.append('rect').attr('class', rangeClassNames);\n\t            }\n\t\n\t            gEnter.append('rect').attr('class', 'nv-measure');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            var w0 = function(d) { return Math.abs(x0(d) - x0(0)) }, // TODO: could optimize by precalculating x0(0) and x1(0)\n\t                w1 = function(d) { return Math.abs(x1(d) - x1(0)) };\n\t            var xp0 = function(d) { return d < 0 ? x0(d) : x0(0) },\n\t                xp1 = function(d) { return d < 0 ? x1(d) : x1(0) };\n\t\n\t            for(var i=0,il=rangez.length; i<il; i++){\n\t                var range = rangez[i];\n\t                g.select('rect.nv-range'+i)\n\t                    .datum(range)\n\t                    .attr('height', availableHeight)\n\t                    .transition()\n\t                    .duration(duration)\n\t                    .attr('width', w1(range))\n\t                    .attr('x', xp1(range))\n\t            }\n\t\n\t            g.select('rect.nv-measure')\n\t                .style('fill', color)\n\t                .attr('height', availableHeight / 3)\n\t                .attr('y', availableHeight / 3)\n\t                .on('mouseover', function() {\n\t                    dispatch.elementMouseover({\n\t                        value: measurez[0],\n\t                        label: measureLabelz[0] || 'Current',\n\t                        color: d3.select(this).style(\"fill\")\n\t                    })\n\t                })\n\t                .on('mousemove', function() {\n\t                    dispatch.elementMousemove({\n\t                        value: measurez[0],\n\t                        label: measureLabelz[0] || 'Current',\n\t                        color: d3.select(this).style(\"fill\")\n\t                    })\n\t                })\n\t                .on('mouseout', function() {\n\t                    dispatch.elementMouseout({\n\t                        value: measurez[0],\n\t                        label: measureLabelz[0] || 'Current',\n\t                        color: d3.select(this).style(\"fill\")\n\t                    })\n\t                })\n\t                .transition()\n\t                .duration(duration)\n\t                .attr('width', measurez < 0 ?\n\t                    x1(0) - x1(measurez[0])\n\t                    : x1(measurez[0]) - x1(0))\n\t                .attr('x', xp1(measurez));\n\t\n\t            var h3 =  availableHeight / 6;\n\t\n\t            var markerData = markerz.map( function(marker, index) {\n\t                return {value: marker, label: markerLabelz[index]}\n\t            });\n\t            gEnter\n\t              .selectAll(\"path.nv-markerTriangle\")\n\t              .data(markerData)\n\t              .enter()\n\t              .append('path')\n\t              .attr('class', 'nv-markerTriangle')\n\t              .attr('d', 'M0,' + h3 + 'L' + h3 + ',' + (-h3) + ' ' + (-h3) + ',' + (-h3) + 'Z')\n\t              .on('mouseover', function(d) {\n\t                dispatch.elementMouseover({\n\t                  value: d.value,\n\t                  label: d.label || 'Previous',\n\t                  color: d3.select(this).style(\"fill\"),\n\t                  pos: [x1(d.value), availableHeight/2]\n\t                })\n\t\n\t              })\n\t              .on('mousemove', function(d) {\n\t                  dispatch.elementMousemove({\n\t                      value: d.value,\n\t                      label: d.label || 'Previous',\n\t                      color: d3.select(this).style(\"fill\")\n\t                  })\n\t              })\n\t              .on('mouseout', function(d, i) {\n\t                  dispatch.elementMouseout({\n\t                      value: d.value,\n\t                      label: d.label || 'Previous',\n\t                      color: d3.select(this).style(\"fill\")\n\t                  })\n\t              });\n\t\n\t            g.selectAll(\"path.nv-markerTriangle\")\n\t              .data(markerData)\n\t              .transition()\n\t              .duration(duration)\n\t              .attr('transform', function(d) { return 'translate(' + x1(d.value) + ',' + (availableHeight / 2) + ')' });\n\t\n\t            var markerLinesData = markerLinez.map( function(marker, index) {\n\t                return {value: marker, label: markerLineLabelz[index]}\n\t            });\n\t            gEnter\n\t              .selectAll(\"line.nv-markerLine\")\n\t              .data(markerLinesData)\n\t              .enter()\n\t              .append('line')\n\t              .attr('cursor', '')\n\t              .attr('class', 'nv-markerLine')\n\t              .attr('x1', function(d) { return x1(d.value) })\n\t              .attr('y1', '2')\n\t              .attr('x2', function(d) { return x1(d.value) })\n\t              .attr('y2', availableHeight - 2)\n\t              .on('mouseover', function(d) {\n\t                dispatch.elementMouseover({\n\t                  value: d.value,\n\t                  label: d.label || 'Previous',\n\t                  color: d3.select(this).style(\"fill\"),\n\t                  pos: [x1(d.value), availableHeight/2]\n\t                })\n\t\n\t              })\n\t              .on('mousemove', function(d) {\n\t                  dispatch.elementMousemove({\n\t                      value: d.value,\n\t                      label: d.label || 'Previous',\n\t                      color: d3.select(this).style(\"fill\")\n\t                  })\n\t              })\n\t              .on('mouseout', function(d, i) {\n\t                  dispatch.elementMouseout({\n\t                      value: d.value,\n\t                      label: d.label || 'Previous',\n\t                      color: d3.select(this).style(\"fill\")\n\t                  })\n\t              });\n\t\n\t            g.selectAll(\"line.nv-markerLine\")\n\t              .data(markerLinesData)\n\t              .transition()\n\t              .duration(duration)\n\t              .attr('x1', function(d) { return x1(d.value) })\n\t              .attr('x2', function(d) { return x1(d.value) });\n\t\n\t            wrap.selectAll('.nv-range')\n\t                .on('mouseover', function(d,i) {\n\t                    var label = rangeLabelz[i] || defaultRangeLabels[i];\n\t                    dispatch.elementMouseover({\n\t                        value: d,\n\t                        label: label,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    })\n\t                })\n\t                .on('mousemove', function() {\n\t                    dispatch.elementMousemove({\n\t                        value: measurez[0],\n\t                        label: measureLabelz[0] || 'Previous',\n\t                        color: d3.select(this).style(\"fill\")\n\t                    })\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    var label = rangeLabelz[i] || defaultRangeLabels[i];\n\t                    dispatch.elementMouseout({\n\t                        value: d,\n\t                        label: label,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    })\n\t                });\n\t        });\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        ranges:      {get: function(){return ranges;}, set: function(_){ranges=_;}}, // ranges (bad, satisfactory, good)\n\t        markers:     {get: function(){return markers;}, set: function(_){markers=_;}}, // markers (previous, goal)\n\t        measures: {get: function(){return measures;}, set: function(_){measures=_;}}, // measures (actual, forecast)\n\t        forceX:      {get: function(){return forceX;}, set: function(_){forceX=_;}},\n\t        width:    {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:    {get: function(){return height;}, set: function(_){height=_;}},\n\t        tickFormat:    {get: function(){return tickFormat;}, set: function(_){tickFormat=_;}},\n\t        duration:    {get: function(){return duration;}, set: function(_){duration=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        orient: {get: function(){return orient;}, set: function(_){ // left, right, top, bottom\n\t            orient = _;\n\t            reverse = orient == 'right' || orient == 'bottom';\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\t\n\t\n\t\n\t// Chart design based on the recommendations of Stephen Few. Implementation\n\t// based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n\t// http://projects.instantcognition.com/protovis/bulletchart/\n\tnv.models.bulletChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var bullet = nv.models.bullet();\n\t    var tooltip = nv.models.tooltip();\n\t\n\t    var orient = 'left' // TODO top & bottom\n\t        , reverse = false\n\t        , margin = {top: 5, right: 40, bottom: 20, left: 120}\n\t        , ranges = function(d) { return d.ranges }\n\t        , markers = function(d) { return d.markers ? d.markers : [] }\n\t        , measures = function(d) { return d.measures }\n\t        , width = null\n\t        , height = 55\n\t        , tickFormat = null\n\t        , ticks = null\n\t        , noData = null\n\t        , dispatch = d3.dispatch()\n\t        ;\n\t\n\t    tooltip\n\t        .duration(0)\n\t        .headerEnabled(false);\n\t\n\t    function chart(selection) {\n\t        selection.each(function(d, i) {\n\t            var container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = height - margin.top - margin.bottom,\n\t                that = this;\n\t\n\t            chart.update = function() { chart(selection) };\n\t            chart.container = this;\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!d || !ranges.call(this, d, i)) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            var rangez = ranges.call(this, d, i).slice().sort(d3.descending),\n\t                markerz = markers.call(this, d, i).slice().sort(d3.descending),\n\t                measurez = measures.call(this, d, i).slice().sort(d3.descending);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-bulletChart').data([d]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bulletChart');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-bulletWrap');\n\t            gEnter.append('g').attr('class', 'nv-titles');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            // Compute the new x-scale.\n\t            var x1 = d3.scale.linear()\n\t                .domain([0, Math.max(rangez[0], (markerz[0] || 0), measurez[0])])  // TODO: need to allow forceX and forceY, and xDomain, yDomain\n\t                .range(reverse ? [availableWidth, 0] : [0, availableWidth]);\n\t\n\t            // Retrieve the old x-scale, if this is an update.\n\t            var x0 = this.__chart__ || d3.scale.linear()\n\t                .domain([0, Infinity])\n\t                .range(x1.range());\n\t\n\t            // Stash the new scale.\n\t            this.__chart__ = x1;\n\t\n\t            var w0 = function(d) { return Math.abs(x0(d) - x0(0)) }, // TODO: could optimize by precalculating x0(0) and x1(0)\n\t                w1 = function(d) { return Math.abs(x1(d) - x1(0)) };\n\t\n\t            var title = gEnter.select('.nv-titles').append('g')\n\t                .attr('text-anchor', 'end')\n\t                .attr('transform', 'translate(-6,' + (height - margin.top - margin.bottom) / 2 + ')');\n\t            title.append('text')\n\t                .attr('class', 'nv-title')\n\t                .text(function(d) { return d.title; });\n\t\n\t            title.append('text')\n\t                .attr('class', 'nv-subtitle')\n\t                .attr('dy', '1em')\n\t                .text(function(d) { return d.subtitle; });\n\t\n\t            bullet\n\t                .width(availableWidth)\n\t                .height(availableHeight);\n\t\n\t            var bulletWrap = g.select('.nv-bulletWrap');\n\t            d3.transition(bulletWrap).call(bullet);\n\t\n\t            // Compute the tick format.\n\t            var format = tickFormat || x1.tickFormat( availableWidth / 100 );\n\t\n\t            // Update the tick groups.\n\t            var tick = g.selectAll('g.nv-tick')\n\t                .data(x1.ticks( ticks ? ticks : (availableWidth / 50) ), function(d) {\n\t                    return this.textContent || format(d);\n\t                });\n\t\n\t            // Initialize the ticks with the old scale, x0.\n\t            var tickEnter = tick.enter().append('g')\n\t                .attr('class', 'nv-tick')\n\t                .attr('transform', function(d) { return 'translate(' + x0(d) + ',0)' })\n\t                .style('opacity', 1e-6);\n\t\n\t            tickEnter.append('line')\n\t                .attr('y1', availableHeight)\n\t                .attr('y2', availableHeight * 7 / 6);\n\t\n\t            tickEnter.append('text')\n\t                .attr('text-anchor', 'middle')\n\t                .attr('dy', '1em')\n\t                .attr('y', availableHeight * 7 / 6)\n\t                .text(format);\n\t\n\t            // Transition the updating ticks to the new scale, x1.\n\t            var tickUpdate = d3.transition(tick)\n\t                .transition()\n\t                .duration(bullet.duration())\n\t                .attr('transform', function(d) { return 'translate(' + x1(d) + ',0)' })\n\t                .style('opacity', 1);\n\t\n\t            tickUpdate.select('line')\n\t                .attr('y1', availableHeight)\n\t                .attr('y2', availableHeight * 7 / 6);\n\t\n\t            tickUpdate.select('text')\n\t                .attr('y', availableHeight * 7 / 6);\n\t\n\t            // Transition the exiting ticks to the new scale, x1.\n\t            d3.transition(tick.exit())\n\t                .transition()\n\t                .duration(bullet.duration())\n\t                .attr('transform', function(d) { return 'translate(' + x1(d) + ',0)' })\n\t                .style('opacity', 1e-6)\n\t                .remove();\n\t        });\n\t\n\t        d3.timer.flush();\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    bullet.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt['series'] = {\n\t            key: evt.label,\n\t            value: evt.value,\n\t            color: evt.color\n\t        };\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    bullet.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    bullet.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.bullet = bullet;\n\t    chart.dispatch = dispatch;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        ranges:      {get: function(){return ranges;}, set: function(_){ranges=_;}}, // ranges (bad, satisfactory, good)\n\t        markers:     {get: function(){return markers;}, set: function(_){markers=_;}}, // markers (previous, goal)\n\t        measures: {get: function(){return measures;}, set: function(_){measures=_;}}, // measures (actual, forecast)\n\t        width:    {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:    {get: function(){return height;}, set: function(_){height=_;}},\n\t        tickFormat:    {get: function(){return tickFormat;}, set: function(_){tickFormat=_;}},\n\t        ticks:    {get: function(){return ticks;}, set: function(_){ticks=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        orient: {get: function(){return orient;}, set: function(_){ // left, right, top, bottom\n\t            orient = _;\n\t            reverse = orient == 'right' || orient == 'bottom';\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, bullet);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\t\n\t\n\tnv.models.candlestickBar = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = null\n\t        , height = null\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container\n\t        , x = d3.scale.linear()\n\t        , y = d3.scale.linear()\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , getOpen = function(d) { return d.open }\n\t        , getClose = function(d) { return d.close }\n\t        , getHigh = function(d) { return d.high }\n\t        , getLow = function(d) { return d.low }\n\t        , forceX = []\n\t        , forceY = []\n\t        , padData     = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n\t        , clipEdge = true\n\t        , color = nv.utils.defaultColor()\n\t        , interactive = false\n\t        , xDomain\n\t        , yDomain\n\t        , xRange\n\t        , yRange\n\t        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove')\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            container = d3.select(this);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            nv.utils.initSVG(container);\n\t\n\t            // Width of the candlestick bars.\n\t            var barWidth = (availableWidth / data[0].values.length) * .45;\n\t\n\t            // Setup Scales\n\t            x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX) ));\n\t\n\t            if (padData)\n\t                x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n\t            else\n\t                x.range(xRange || [5 + barWidth / 2, availableWidth - barWidth / 2 - 5]);\n\t\n\t            y.domain(yDomain || [\n\t                    d3.min(data[0].values.map(getLow).concat(forceY)),\n\t                    d3.max(data[0].values.map(getHigh).concat(forceY))\n\t                ]\n\t            ).range(yRange || [availableHeight, 0]);\n\t\n\t            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\t            if (x.domain()[0] === x.domain()[1])\n\t                x.domain()[0] ?\n\t                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n\t                    : x.domain([-1,1]);\n\t\n\t            if (y.domain()[0] === y.domain()[1])\n\t                y.domain()[0] ?\n\t                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n\t                    : y.domain([-1,1]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = d3.select(this).selectAll('g.nv-wrap.nv-candlestickBar').data([data[0].values]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-candlestickBar');\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-ticks');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container\n\t                .on('click', function(d,i) {\n\t                    dispatch.chartClick({\n\t                        data: d,\n\t                        index: i,\n\t                        pos: d3.event,\n\t                        id: id\n\t                    });\n\t                });\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-chart-clip-path-' + id)\n\t                .append('rect');\n\t\n\t            wrap.select('#nv-chart-clip-path-' + id + ' rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            g   .attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n\t\n\t            var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick')\n\t                .data(function(d) { return d });\n\t            ticks.exit().remove();\n\t\n\t            var tickGroups = ticks.enter().append('g');\n\t\n\t            // The colors are currently controlled by CSS.\n\t            ticks\n\t                .attr('class', function(d, i, j) { return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i});\n\t\n\t            var lines = tickGroups.append('line')\n\t                .attr('class', 'nv-candlestick-lines')\n\t                .attr('transform', function(d, i) { return 'translate(' + x(getX(d, i)) + ',0)'; })\n\t                .attr('x1', 0)\n\t                .attr('y1', function(d, i) { return y(getHigh(d, i)); })\n\t                .attr('x2', 0)\n\t                .attr('y2', function(d, i) { return y(getLow(d, i)); });\n\t\n\t            var rects = tickGroups.append('rect')\n\t                .attr('class', 'nv-candlestick-rects nv-bars')\n\t                .attr('transform', function(d, i) {\n\t                    return 'translate(' + (x(getX(d, i)) - barWidth/2) + ','\n\t                    + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? (y(getClose(d, i)) - y(getOpen(d, i))) : 0))\n\t                    + ')';\n\t                })\n\t                .attr('x', 0)\n\t                .attr('y', 0)\n\t                .attr('width', barWidth)\n\t                .attr('height', function(d, i) {\n\t                    var open = getOpen(d, i);\n\t                    var close = getClose(d, i);\n\t                    return open > close ? y(close) - y(open) : y(open) - y(close);\n\t                });\n\t\n\t            ticks.select('.nv-candlestick-lines').transition()\n\t                .attr('transform', function(d, i) { return 'translate(' + x(getX(d, i)) + ',0)'; })\n\t                .attr('x1', 0)\n\t                .attr('y1', function(d, i) { return y(getHigh(d, i)); })\n\t                .attr('x2', 0)\n\t                .attr('y2', function(d, i) { return y(getLow(d, i)); });\n\t\n\t            ticks.select('.nv-candlestick-rects').transition()\n\t                .attr('transform', function(d, i) {\n\t                    return 'translate(' + (x(getX(d, i)) - barWidth/2) + ','\n\t                    + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? (y(getClose(d, i)) - y(getOpen(d, i))) : 0))\n\t                    + ')';\n\t                })\n\t                .attr('x', 0)\n\t                .attr('y', 0)\n\t                .attr('width', barWidth)\n\t                .attr('height', function(d, i) {\n\t                    var open = getOpen(d, i);\n\t                    var close = getClose(d, i);\n\t                    return open > close ? y(close) - y(open) : y(open) - y(close);\n\t                });\n\t        });\n\t\n\t        return chart;\n\t    }\n\t\n\t\n\t    //Create methods to allow outside functions to highlight a specific bar.\n\t    chart.highlightPoint = function(pointIndex, isHoverOver) {\n\t        chart.clearHighlights();\n\t        container.select(\".nv-candlestickBar .nv-tick-0-\" + pointIndex)\n\t            .classed(\"hover\", isHoverOver)\n\t        ;\n\t    };\n\t\n\t    chart.clearHighlights = function() {\n\t        container.select(\".nv-candlestickBar .nv-tick.hover\")\n\t            .classed(\"hover\", false)\n\t        ;\n\t    };\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:    {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:   {get: function(){return height;}, set: function(_){height=_;}},\n\t        xScale:   {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:   {get: function(){return y;}, set: function(_){y=_;}},\n\t        xDomain:  {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain:  {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:   {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:   {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        forceX:   {get: function(){return forceX;}, set: function(_){forceX=_;}},\n\t        forceY:   {get: function(){return forceY;}, set: function(_){forceY=_;}},\n\t        padData:  {get: function(){return padData;}, set: function(_){padData=_;}},\n\t        clipEdge: {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\t        id:       {get: function(){return id;}, set: function(_){id=_;}},\n\t        interactive: {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\t\n\t        x:     {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        y:     {get: function(){return getY;}, set: function(_){getY=_;}},\n\t        open:  {get: function(){return getOpen();}, set: function(_){getOpen=_;}},\n\t        close: {get: function(){return getClose();}, set: function(_){getClose=_;}},\n\t        high:  {get: function(){return getHigh;}, set: function(_){getHigh=_;}},\n\t        low:   {get: function(){return getLow;}, set: function(_){getLow=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    != undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  != undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   != undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\t\n\tnv.models.cumulativeLineChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var lines = nv.models.line()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t        , legend = nv.models.legend()\n\t        , controls = nv.models.legend()\n\t        , interactiveLayer = nv.interactiveGuideline()\n\t        , tooltip = nv.models.tooltip()\n\t        ;\n\t\n\t    var margin = {top: 30, right: 30, bottom: 50, left: 60}\n\t        , marginTop = null\n\t        , color = nv.utils.defaultColor()\n\t        , width = null\n\t        , height = null\n\t        , showLegend = true\n\t        , showXAxis = true\n\t        , showYAxis = true\n\t        , rightAlignYAxis = false\n\t        , showControls = true\n\t        , useInteractiveGuideline = false\n\t        , rescaleY = true\n\t        , x //can be accessed via chart.xScale()\n\t        , y //can be accessed via chart.yScale()\n\t        , id = lines.id()\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , noData = null\n\t        , average = function(d) { return d.average }\n\t        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n\t        , transitionDuration = 250\n\t        , duration = 250\n\t        , noErrorCheck = false  //if set to TRUE, will bypass an error check in the indexify function.\n\t        ;\n\t\n\t    state.index = 0;\n\t    state.rescaleY = rescaleY;\n\t\n\t    xAxis.orient('bottom').tickPadding(7);\n\t    yAxis.orient((rightAlignYAxis) ? 'right' : 'left');\n\t\n\t    tooltip.valueFormatter(function(d, i) {\n\t        return yAxis.tickFormat()(d, i);\n\t    }).headerFormatter(function(d, i) {\n\t        return xAxis.tickFormat()(d, i);\n\t    });\n\t\n\t    controls.updateState(false);\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var dx = d3.scale.linear()\n\t        , index = {i: 0, x: 0}\n\t        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n\t        ;\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled }),\n\t                index: index.i,\n\t                rescaleY: rescaleY\n\t            };\n\t        }\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.index !== undefined)\n\t                index.i = state.index;\n\t            if (state.rescaleY !== undefined)\n\t                rescaleY = state.rescaleY;\n\t            if (state.active !== undefined)\n\t                data.forEach(function(series,i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t        }\n\t    };\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(lines);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t            container.classed('nv-chart-' + id, true);\n\t            var that = this;\n\t\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() {\n\t                if (duration === 0)\n\t                    container.call(chart);\n\t                else\n\t                    container.transition().duration(duration).call(chart)\n\t            };\n\t            chart.container = this;\n\t\n\t            state\n\t                .setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            // DEPRECATED set state.disableddisabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            var indexDrag = d3.behavior.drag()\n\t                .on('dragstart', dragStart)\n\t                .on('drag', dragMove)\n\t                .on('dragend', dragEnd);\n\t\n\t\n\t            function dragStart(d,i) {\n\t                d3.select(chart.container)\n\t                    .style('cursor', 'ew-resize');\n\t            }\n\t\n\t            function dragMove(d,i) {\n\t                index.x = d3.event.x;\n\t                index.i = Math.round(dx.invert(index.x));\n\t                updateZero();\n\t            }\n\t\n\t            function dragEnd(d,i) {\n\t                d3.select(chart.container)\n\t                    .style('cursor', 'auto');\n\t\n\t                // update state and send stateChange with new index\n\t                state.index = index.i;\n\t                dispatch.stateChange(state);\n\t            }\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            x = lines.xScale();\n\t            y = lines.yScale();\n\t\n\t            if (!rescaleY) {\n\t                var seriesDomains = data\n\t                    .filter(function(series) { return !series.disabled })\n\t                    .map(function(series,i) {\n\t                        var initialDomain = d3.extent(series.values, lines.y());\n\t\n\t                        //account for series being disabled when losing 95% or more\n\t                        if (initialDomain[0] < -.95) initialDomain[0] = -.95;\n\t\n\t                        return [\n\t                                (initialDomain[0] - initialDomain[1]) / (1 + initialDomain[1]),\n\t                                (initialDomain[1] - initialDomain[0]) / (1 + initialDomain[0])\n\t                        ];\n\t                    });\n\t\n\t                var completeDomain = [\n\t                    d3.min(seriesDomains, function(d) { return d[0] }),\n\t                    d3.max(seriesDomains, function(d) { return d[1] })\n\t                ];\n\t\n\t                lines.yDomain(completeDomain);\n\t            } else {\n\t                lines.yDomain(null);\n\t            }\n\t\n\t            dx.domain([0, data[0].values.length - 1]) //Assumes all series have same length\n\t                .range([0, availableWidth])\n\t                .clamp(true);\n\t\n\t            var data = indexify(index.i, data);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var interactivePointerEvents = (useInteractiveGuideline) ? \"none\" : \"all\";\n\t            var wrap = container.selectAll('g.nv-wrap.nv-cumulativeLine').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-cumulativeLine').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-interactive');\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis').style(\"pointer-events\",\"none\");\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-background');\n\t            gEnter.append('g').attr('class', 'nv-linesWrap').style(\"pointer-events\",interactivePointerEvents);\n\t            gEnter.append('g').attr('class', 'nv-avgLinesWrap').style(\"pointer-events\",\"none\");\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                legend.width(availableWidth);\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .datum(data)\n\t                    .call(legend);\n\t\n\t                if (!marginTop && legend.height() !== margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n\t            }\n\t\n\t            // Controls\n\t            if (!showControls) {\n\t                 g.select('.nv-controlsWrap').selectAll('*').remove();\n\t            } else {\n\t                var controlsData = [\n\t                    { key: 'Re-scale y-axis', disabled: !rescaleY }\n\t                ];\n\t\n\t                controls\n\t                    .width(140)\n\t                    .color(['#444', '#444', '#444'])\n\t                    .rightAlign(false)\n\t                    .margin({top: 5, right: 0, bottom: 5, left: 20})\n\t                ;\n\t\n\t                g.select('.nv-controlsWrap')\n\t                    .datum(controlsData)\n\t                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n\t                    .call(controls);\n\t            }\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            // Show error if series goes below 100%\n\t            var tempDisabled = data.filter(function(d) { return d.tempDisabled });\n\t\n\t            wrap.select('.tempDisabled').remove(); //clean-up and prevent duplicates\n\t            if (tempDisabled.length) {\n\t                wrap.append('text').attr('class', 'tempDisabled')\n\t                    .attr('x', availableWidth / 2)\n\t                    .attr('y', '-.71em')\n\t                    .style('text-anchor', 'end')\n\t                    .text(tempDisabled.map(function(d) { return d.key }).join(', ') + ' values cannot be calculated for this time period.');\n\t            }\n\t\n\t            //Set up interactive layer\n\t            if (useInteractiveGuideline) {\n\t                interactiveLayer\n\t                    .width(availableWidth)\n\t                    .height(availableHeight)\n\t                    .margin({left:margin.left,top:margin.top})\n\t                    .svgContainer(container)\n\t                    .xScale(x);\n\t                wrap.select(\".nv-interactive\").call(interactiveLayer);\n\t            }\n\t\n\t            gEnter.select('.nv-background')\n\t                .append('rect');\n\t\n\t            g.select('.nv-background rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            lines\n\t                //.x(function(d) { return d.x })\n\t                .y(function(d) { return d.display.y })\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function(d,i) { return !data[i].disabled && !data[i].tempDisabled; }));\n\t\n\t            var linesWrap = g.select('.nv-linesWrap')\n\t                .datum(data.filter(function(d) { return  !d.disabled && !d.tempDisabled }));\n\t\n\t            linesWrap.call(lines);\n\t\n\t            //Store a series index number in the data array.\n\t            data.forEach(function(d,i) {\n\t                d.seriesIndex = i;\n\t            });\n\t\n\t            var avgLineData = data.filter(function(d) {\n\t                return !d.disabled && !!average(d);\n\t            });\n\t\n\t            var avgLines = g.select(\".nv-avgLinesWrap\").selectAll(\"line\")\n\t                .data(avgLineData, function(d) { return d.key; });\n\t\n\t            var getAvgLineY = function(d) {\n\t                //If average lines go off the svg element, clamp them to the svg bounds.\n\t                var yVal = y(average(d));\n\t                if (yVal < 0) return 0;\n\t                if (yVal > availableHeight) return availableHeight;\n\t                return yVal;\n\t            };\n\t\n\t            avgLines.enter()\n\t                .append('line')\n\t                .style('stroke-width',2)\n\t                .style('stroke-dasharray','10,10')\n\t                .style('stroke',function (d,i) {\n\t                    return lines.color()(d,d.seriesIndex);\n\t                })\n\t                .attr('x1',0)\n\t                .attr('x2',availableWidth)\n\t                .attr('y1', getAvgLineY)\n\t                .attr('y2', getAvgLineY);\n\t\n\t            avgLines\n\t                .style('stroke-opacity',function(d){\n\t                    //If average lines go offscreen, make them transparent\n\t                    var yVal = y(average(d));\n\t                    if (yVal < 0 || yVal > availableHeight) return 0;\n\t                    return 1;\n\t                })\n\t                .attr('x1',0)\n\t                .attr('x2',availableWidth)\n\t                .attr('y1', getAvgLineY)\n\t                .attr('y2', getAvgLineY);\n\t\n\t            avgLines.exit().remove();\n\t\n\t            //Create index line\n\t            var indexLine = linesWrap.selectAll('.nv-indexLine')\n\t                .data([index]);\n\t            indexLine.enter().append('rect').attr('class', 'nv-indexLine')\n\t                .attr('width', 3)\n\t                .attr('x', -2)\n\t                .attr('fill', 'red')\n\t                .attr('fill-opacity', .5)\n\t                .style(\"pointer-events\",\"all\")\n\t                .call(indexDrag);\n\t\n\t            indexLine\n\t                .attr('transform', function(d) { return 'translate(' + dx(d.i) + ',0)' })\n\t                .attr('height', availableHeight);\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/70, data) )\n\t                    .tickSize(-availableHeight, 0);\n\t\n\t                g.select('.nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n\t                g.select('.nv-x.nv-axis')\n\t                    .call(xAxis);\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                    .tickSize( -availableWidth, 0);\n\t\n\t                g.select('.nv-y.nv-axis')\n\t                    .call(yAxis);\n\t            }\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            function updateZero() {\n\t                indexLine\n\t                    .data([index]);\n\t\n\t                //When dragging the index line, turn off line transitions.\n\t                // Then turn them back on when done dragging.\n\t                var oldDuration = chart.duration();\n\t                chart.duration(0);\n\t                chart.update();\n\t                chart.duration(oldDuration);\n\t            }\n\t\n\t            g.select('.nv-background rect')\n\t                .on('click', function() {\n\t                    index.x = d3.mouse(this)[0];\n\t                    index.i = Math.round(dx.invert(index.x));\n\t\n\t                    // update state and send stateChange with new index\n\t                    state.index = index.i;\n\t                    dispatch.stateChange(state);\n\t\n\t                    updateZero();\n\t                });\n\t\n\t            lines.dispatch.on('elementClick', function(e) {\n\t                index.i = e.pointIndex;\n\t                index.x = dx(index.i);\n\t\n\t                // update state and send stateChange with new index\n\t                state.index = index.i;\n\t                dispatch.stateChange(state);\n\t\n\t                updateZero();\n\t            });\n\t\n\t            controls.dispatch.on('legendClick', function(d,i) {\n\t                d.disabled = !d.disabled;\n\t                rescaleY = !d.disabled;\n\t\n\t                state.rescaleY = rescaleY;\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState)\n\t                    state[key] = newState[key];\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n\t                lines.clearHighlights();\n\t                var singlePoint, pointIndex, pointXLocation, allData = [];\n\t\n\t                data\n\t                    .filter(function(series, i) {\n\t                        series.seriesIndex = i;\n\t                        return !series.disabled;\n\t                    })\n\t                    .forEach(function(series,i) {\n\t                        pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n\t                        lines.highlightPoint(i, pointIndex, true);\n\t                        var point = series.values[pointIndex];\n\t                        if (typeof point === 'undefined') return;\n\t                        if (typeof singlePoint === 'undefined') singlePoint = point;\n\t                        if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n\t                        allData.push({\n\t                            key: series.key,\n\t                            value: chart.y()(point, pointIndex),\n\t                            color: color(series,series.seriesIndex)\n\t                        });\n\t                    });\n\t\n\t                //Highlight the tooltip entry based on which point the mouse is closest to.\n\t                if (allData.length > 2) {\n\t                    var yValue = chart.yScale().invert(e.mouseY);\n\t                    var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n\t                    var threshold = 0.03 * domainExtent;\n\t                    var indexToHighlight = nv.nearestValueIndex(allData.map(function(d){return d.value}),yValue,threshold);\n\t                    if (indexToHighlight !== null)\n\t                        allData[indexToHighlight].highlight = true;\n\t                }\n\t\n\t                var xValue = xAxis.tickFormat()(chart.x()(singlePoint,pointIndex), pointIndex);\n\t                interactiveLayer.tooltip\n\t                    .valueFormatter(function(d,i) {\n\t                        return yAxis.tickFormat()(d);\n\t                    })\n\t                    .data(\n\t                    {\n\t                        value: xValue,\n\t                        series: allData\n\t                    }\n\t                )();\n\t\n\t                interactiveLayer.renderGuideLine(pointXLocation);\n\t            });\n\t\n\t            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n\t                lines.clearHighlights();\n\t            });\n\t\n\t            // Update chart from a state object passed to event handler\n\t            dispatch.on('changeState', function(e) {\n\t                if (typeof e.disabled !== 'undefined') {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t\n\t                    state.disabled = e.disabled;\n\t                }\n\t\n\t                if (typeof e.index !== 'undefined') {\n\t                    index.i = e.index;\n\t                    index.x = dx(index.i);\n\t\n\t                    state.index = e.index;\n\t\n\t                    indexLine\n\t                        .data([index]);\n\t                }\n\t\n\t                if (typeof e.rescaleY !== 'undefined') {\n\t                    rescaleY = e.rescaleY;\n\t                }\n\t\n\t                chart.update();\n\t            });\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('cumulativeLineChart immediate');\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    lines.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        var point = {\n\t            x: chart.x()(evt.point),\n\t            y: chart.y()(evt.point),\n\t            color: evt.point.color\n\t        };\n\t        evt.point = point;\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    lines.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true)\n\t    });\n\t\n\t    //============================================================\n\t    // Functions\n\t    //------------------------------------------------------------\n\t\n\t    var indexifyYGetter = null;\n\t    /* Normalize the data according to an index point. */\n\t    function indexify(idx, data) {\n\t        if (!indexifyYGetter) indexifyYGetter = lines.y();\n\t        return data.map(function(line, i) {\n\t            if (!line.values) {\n\t                return line;\n\t            }\n\t            var indexValue = line.values[idx];\n\t            if (indexValue == null) {\n\t                return line;\n\t            }\n\t            var v = indexifyYGetter(indexValue, idx);\n\t\n\t            //TODO: implement check below, and disable series if series loses 100% or more cause divide by 0 issue\n\t            if (v < -.95 && !noErrorCheck) {\n\t                //if a series loses more than 100%, calculations fail.. anything close can cause major distortion (but is mathematically correct till it hits 100)\n\t\n\t                line.tempDisabled = true;\n\t                return line;\n\t            }\n\t\n\t            line.tempDisabled = false;\n\t\n\t            line.values = line.values.map(function(point, pointIndex) {\n\t                point.display = {'y': (indexifyYGetter(point, pointIndex) - v) / (1 + v) };\n\t                return point;\n\t            });\n\t\n\t            return line;\n\t        })\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.lines = lines;\n\t    chart.legend = legend;\n\t    chart.controls = controls;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.interactiveLayer = interactiveLayer;\n\t    chart.state = state;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        rescaleY:     {get: function(){return rescaleY;}, set: function(_){rescaleY=_;}},\n\t        showControls:     {get: function(){return showControls;}, set: function(_){showControls=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        average: {get: function(){return average;}, set: function(_){average=_;}},\n\t        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        showXAxis:    {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        noErrorCheck:    {get: function(){return noErrorCheck;}, set: function(_){noErrorCheck=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t        }},\n\t        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n\t            useInteractiveGuideline = _;\n\t            if (_ === true) {\n\t                chart.interactive(false);\n\t                chart.useVoronoi(false);\n\t            }\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( (_) ? 'right' : 'left');\n\t        }},\n\t        duration:    {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            lines.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t            renderWatch.reset(duration);\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, lines);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t//TODO: consider deprecating by adding necessary features to multiBar model\n\tnv.models.discreteBar = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 960\n\t        , height = 500\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container\n\t        , x = d3.scale.ordinal()\n\t        , y = d3.scale.linear()\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n\t        , color = nv.utils.defaultColor()\n\t        , showValues = false\n\t        , valueFormat = d3.format(',.2f')\n\t        , xDomain\n\t        , yDomain\n\t        , xRange\n\t        , yRange\n\t        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n\t        , rectClass = 'discreteBar'\n\t        , duration = 250\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var x0, y0;\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            //add series index to each data point for reference\n\t            data.forEach(function(series, i) {\n\t                series.values.forEach(function(point) {\n\t                    point.series = i;\n\t                });\n\t            });\n\t\n\t            // Setup Scales\n\t            // remap and flatten the data for use in calculating the scales' domains\n\t            var seriesData = (xDomain && yDomain) ? [] : // if we know xDomain and yDomain, no need to calculate\n\t                data.map(function(d) {\n\t                    return d.values.map(function(d,i) {\n\t                        return { x: getX(d,i), y: getY(d,i), y0: d.y0 }\n\t                    })\n\t                });\n\t\n\t            x   .domain(xDomain || d3.merge(seriesData).map(function(d) { return d.x }))\n\t                .rangeBands(xRange || [0, availableWidth], .1);\n\t            y   .domain(yDomain || d3.extent(d3.merge(seriesData).map(function(d) { return d.y }).concat(forceY)));\n\t\n\t            // If showValues, pad the Y axis range to account for label height\n\t            if (showValues) y.range(yRange || [availableHeight - (y.domain()[0] < 0 ? 12 : 0), y.domain()[1] > 0 ? 12 : 0]);\n\t            else y.range(yRange || [availableHeight, 0]);\n\t\n\t            //store old scales if they exist\n\t            x0 = x0 || x;\n\t            y0 = y0 || y.copy().range([y(0),y(0)]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-discretebar').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discretebar');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-groups');\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            //TODO: by definition, the discrete bar should not have multiple groups, will modify/remove later\n\t            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n\t                .data(function(d) { return d }, function(d) { return d.key });\n\t            groups.enter().append('g')\n\t                .style('stroke-opacity', 1e-6)\n\t                .style('fill-opacity', 1e-6);\n\t            groups.exit()\n\t                .watchTransition(renderWatch, 'discreteBar: exit groups')\n\t                .style('stroke-opacity', 1e-6)\n\t                .style('fill-opacity', 1e-6)\n\t                .remove();\n\t            groups\n\t                .attr('class', function(d,i) { return 'nv-group nv-series-' + i })\n\t                .classed('hover', function(d) { return d.hover });\n\t            groups\n\t                .watchTransition(renderWatch, 'discreteBar: groups')\n\t                .style('stroke-opacity', 1)\n\t                .style('fill-opacity', .75);\n\t\n\t            var bars = groups.selectAll('g.nv-bar')\n\t                .data(function(d) { return d.values });\n\t            bars.exit().remove();\n\t\n\t            var barsEnter = bars.enter().append('g')\n\t                .attr('transform', function(d,i,j) {\n\t                    return 'translate(' + (x(getX(d,i)) + x.rangeBand() * .05 ) + ', ' + y(0) + ')'\n\t                })\n\t                .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here\n\t                    d3.select(this).classed('hover', true);\n\t                    dispatch.elementMouseover({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.elementMouseout({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mousemove', function(d,i) {\n\t                    dispatch.elementMousemove({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('click', function(d,i) {\n\t                    var element = this;\n\t                    dispatch.elementClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\"),\n\t                        event: d3.event,\n\t                        element: element\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                })\n\t                .on('dblclick', function(d,i) {\n\t                    dispatch.elementDblClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                });\n\t\n\t            barsEnter.append('rect')\n\t                .attr('height', 0)\n\t                .attr('width', x.rangeBand() * .9 / data.length )\n\t\n\t            if (showValues) {\n\t                barsEnter.append('text')\n\t                    .attr('text-anchor', 'middle')\n\t                ;\n\t\n\t                bars.select('text')\n\t                    .text(function(d,i) { return valueFormat(getY(d,i)) })\n\t                    .watchTransition(renderWatch, 'discreteBar: bars text')\n\t                    .attr('x', x.rangeBand() * .9 / 2)\n\t                    .attr('y', function(d,i) { return getY(d,i) < 0 ? y(getY(d,i)) - y(0) + 12 : -4 })\n\t\n\t                ;\n\t            } else {\n\t                bars.selectAll('text').remove();\n\t            }\n\t\n\t            bars\n\t                .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive' })\n\t                .style('fill', function(d,i) { return d.color || color(d,i) })\n\t                .style('stroke', function(d,i) { return d.color || color(d,i) })\n\t                .select('rect')\n\t                .attr('class', rectClass)\n\t                .watchTransition(renderWatch, 'discreteBar: bars rect')\n\t                .attr('width', x.rangeBand() * .9 / data.length);\n\t            bars.watchTransition(renderWatch, 'discreteBar: bars')\n\t                //.delay(function(d,i) { return i * 1200 / data[0].values.length })\n\t                .attr('transform', function(d,i) {\n\t                    var left = x(getX(d,i)) + x.rangeBand() * .05,\n\t                        top = getY(d,i) < 0 ?\n\t                            y(0) :\n\t                                y(0) - y(getY(d,i)) < 1 ?\n\t                            y(0) - 1 : //make 1 px positive bars show up above y=0\n\t                            y(getY(d,i));\n\t\n\t                    return 'translate(' + left + ', ' + top + ')'\n\t                })\n\t                .select('rect')\n\t                .attr('height', function(d,i) {\n\t                    return  Math.max(Math.abs(y(getY(d,i)) - y(0)), 1)\n\t                });\n\t\n\t\n\t            //store old scales for use in transitions on update\n\t            x0 = x.copy();\n\t            y0 = y.copy();\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('discreteBar immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:   {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:  {get: function(){return height;}, set: function(_){height=_;}},\n\t        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n\t        showValues: {get: function(){return showValues;}, set: function(_){showValues=_;}},\n\t        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n\t        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n\t        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        valueFormat:    {get: function(){return valueFormat;}, set: function(_){valueFormat=_;}},\n\t        id:          {get: function(){return id;}, set: function(_){id=_;}},\n\t        rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.discreteBarChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var discretebar = nv.models.discreteBar()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t\t, legend = nv.models.legend()\n\t        , tooltip = nv.models.tooltip()\n\t        ;\n\t\n\t    var margin = {top: 15, right: 10, bottom: 50, left: 60}\n\t        , marginTop = null\n\t        , width = null\n\t        , height = null\n\t        , color = nv.utils.getColor()\n\t\t, showLegend = false\n\t        , showXAxis = true\n\t        , showYAxis = true\n\t        , rightAlignYAxis = false\n\t        , staggerLabels = false\n\t        , wrapLabels = false\n\t        , rotateLabels = 0\n\t        , x\n\t        , y\n\t        , noData = null\n\t        , dispatch = d3.dispatch('beforeUpdate','renderEnd')\n\t        , duration = 250\n\t        ;\n\t\n\t    xAxis\n\t        .orient('bottom')\n\t        .showMaxMin(false)\n\t        .tickFormat(function(d) { return d })\n\t    ;\n\t    yAxis\n\t        .orient((rightAlignYAxis) ? 'right' : 'left')\n\t        .tickFormat(d3.format(',.1f'))\n\t    ;\n\t\n\t    tooltip\n\t        .duration(0)\n\t        .headerEnabled(false)\n\t        .valueFormatter(function(d, i) {\n\t            return yAxis.tickFormat()(d, i);\n\t        })\n\t        .keyFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(discretebar);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this),\n\t                that = this;\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() {\n\t                dispatch.beforeUpdate();\n\t                container.transition().duration(duration).call(chart);\n\t            };\n\t            chart.container = this;\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container);\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            x = discretebar.xScale();\n\t            y = discretebar.yScale().clamp(true);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-discreteBarWithAxes').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discreteBarWithAxes').append('g');\n\t            var defsEnter = gEnter.append('defs');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis')\n\t                .append('g').attr('class', 'nv-zeroLine')\n\t                .append('line');\n\t\n\t            gEnter.append('g').attr('class', 'nv-barsWrap');\n\t\t    gEnter.append('g').attr('class', 'nv-legendWrap');\n\t\n\t            g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                legend.width(availableWidth);\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .datum(data)\n\t                    .call(legend);\n\t\n\t                if (!marginTop && legend.height() !== margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                wrap.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n\t            }\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            // Main Chart Component(s)\n\t            discretebar\n\t                .width(availableWidth)\n\t                .height(availableHeight);\n\t\n\t            var barsWrap = g.select('.nv-barsWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled }));\n\t\n\t            barsWrap.transition().call(discretebar);\n\t\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-x-label-clip-' + discretebar.id())\n\t                .append('rect');\n\t\n\t            g.select('#nv-x-label-clip-' + discretebar.id() + ' rect')\n\t                .attr('width', x.rangeBand() * (staggerLabels ? 2 : 1))\n\t                .attr('height', 16)\n\t                .attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2 ));\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize(-availableHeight, 0);\n\t\n\t                g.select('.nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + (y.range()[0] + ((discretebar.showValues() && y.domain()[0] < 0) ? 16 : 0)) + ')');\n\t                g.select('.nv-x.nv-axis').call(xAxis);\n\t\n\t                var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\t                if (staggerLabels) {\n\t                    xTicks\n\t                        .selectAll('text')\n\t                        .attr('transform', function(d,i,j) { return 'translate(0,' + (j % 2 == 0 ? '5' : '17') + ')' })\n\t                }\n\t\n\t                if (rotateLabels) {\n\t                    xTicks\n\t                        .selectAll('.tick text')\n\t                        .attr('transform', 'rotate(' + rotateLabels + ' 0,0)')\n\t                        .style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n\t                }\n\t\n\t                if (wrapLabels) {\n\t                    g.selectAll('.tick text')\n\t                        .call(nv.utils.wrapTicks, chart.xAxis.rangeBand())\n\t                }\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                    .tickSize( -availableWidth, 0);\n\t\n\t                g.select('.nv-y.nv-axis').call(yAxis);\n\t            }\n\t\n\t            // Zero line\n\t            g.select(\".nv-zeroLine line\")\n\t                .attr(\"x1\",0)\n\t                .attr(\"x2\",(rightAlignYAxis) ? -availableWidth : availableWidth)\n\t                .attr(\"y1\", y(0))\n\t                .attr(\"y2\", y(0))\n\t            ;\n\t        });\n\t\n\t        renderWatch.renderEnd('discreteBar chart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    discretebar.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt['series'] = {\n\t            key: chart.x()(evt.data),\n\t            value: chart.y()(evt.data),\n\t            color: evt.color\n\t        };\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    discretebar.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    discretebar.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.discretebar = discretebar;\n\t    chart.legend = legend;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t\tshowLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        staggerLabels: {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n\t        rotateLabels:  {get: function(){return rotateLabels;}, set: function(_){rotateLabels=_;}},\n\t        wrapLabels:  {get: function(){return wrapLabels;}, set: function(_){wrapLabels=!!_;}},\n\t        showXAxis: {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis: {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            discretebar.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            discretebar.color(color);\n\t\t    legend.color(color);\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( (_) ? 'right' : 'left');\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, discretebar);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t}\n\t\n\tnv.models.distribution = function() {\n\t    \"use strict\";\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 400 //technically width or height depending on x or y....\n\t        , size = 8\n\t        , axis = 'x' // 'x' or 'y'... horizontal or vertical\n\t        , getData = function(d) { return d[axis] }  // defaults d.x or d.y\n\t        , color = nv.utils.defaultColor()\n\t        , scale = d3.scale.linear()\n\t        , domain\n\t        , duration = 250\n\t        , dispatch = d3.dispatch('renderEnd')\n\t        ;\n\t\n\t    //============================================================\n\t\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var scale0;\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    //============================================================\n\t\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var availableLength = width - (axis === 'x' ? margin.left + margin.right : margin.top + margin.bottom),\n\t                naxis = axis == 'x' ? 'y' : 'x',\n\t                container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            //------------------------------------------------------------\n\t            // Setup Scales\n\t\n\t            scale0 = scale0 || scale;\n\t\n\t            //------------------------------------------------------------\n\t\n\t\n\t            //------------------------------------------------------------\n\t            // Setup containers and skeleton of chart\n\t\n\t            var wrap = container.selectAll('g.nv-distribution').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-distribution');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\t\n\t            //------------------------------------------------------------\n\t\n\t\n\t            var distWrap = g.selectAll('g.nv-dist')\n\t                .data(function(d) { return d }, function(d) { return d.key });\n\t\n\t            distWrap.enter().append('g');\n\t            distWrap\n\t                .attr('class', function(d,i) { return 'nv-dist nv-series-' + i })\n\t                .style('stroke', function(d,i) { return color(d, i) });\n\t\n\t            var dist = distWrap.selectAll('line.nv-dist' + axis)\n\t                .data(function(d) { return d.values })\n\t            dist.enter().append('line')\n\t                .attr(axis + '1', function(d,i) { return scale0(getData(d,i)) })\n\t                .attr(axis + '2', function(d,i) { return scale0(getData(d,i)) })\n\t            renderWatch.transition(distWrap.exit().selectAll('line.nv-dist' + axis), 'dist exit')\n\t                // .transition()\n\t                .attr(axis + '1', function(d,i) { return scale(getData(d,i)) })\n\t                .attr(axis + '2', function(d,i) { return scale(getData(d,i)) })\n\t                .style('stroke-opacity', 0)\n\t                .remove();\n\t            dist\n\t                .attr('class', function(d,i) { return 'nv-dist' + axis + ' nv-dist' + axis + '-' + i })\n\t                .attr(naxis + '1', 0)\n\t                .attr(naxis + '2', size);\n\t            renderWatch.transition(dist, 'dist')\n\t                // .transition()\n\t                .attr(axis + '1', function(d,i) { return scale(getData(d,i)) })\n\t                .attr(axis + '2', function(d,i) { return scale(getData(d,i)) })\n\t\n\t\n\t            scale0 = scale.copy();\n\t\n\t        });\n\t        renderWatch.renderEnd('distribution immediate');\n\t        return chart;\n\t    }\n\t\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t    chart.dispatch = dispatch;\n\t\n\t    chart.margin = function(_) {\n\t        if (!arguments.length) return margin;\n\t        margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;\n\t        margin.right  = typeof _.right  != 'undefined' ? _.right  : margin.right;\n\t        margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n\t        margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;\n\t        return chart;\n\t    };\n\t\n\t    chart.width = function(_) {\n\t        if (!arguments.length) return width;\n\t        width = _;\n\t        return chart;\n\t    };\n\t\n\t    chart.axis = function(_) {\n\t        if (!arguments.length) return axis;\n\t        axis = _;\n\t        return chart;\n\t    };\n\t\n\t    chart.size = function(_) {\n\t        if (!arguments.length) return size;\n\t        size = _;\n\t        return chart;\n\t    };\n\t\n\t    chart.getData = function(_) {\n\t        if (!arguments.length) return getData;\n\t        getData = d3.functor(_);\n\t        return chart;\n\t    };\n\t\n\t    chart.scale = function(_) {\n\t        if (!arguments.length) return scale;\n\t        scale = _;\n\t        return chart;\n\t    };\n\t\n\t    chart.color = function(_) {\n\t        if (!arguments.length) return color;\n\t        color = nv.utils.getColor(_);\n\t        return chart;\n\t    };\n\t\n\t    chart.duration = function(_) {\n\t        if (!arguments.length) return duration;\n\t        duration = _;\n\t        renderWatch.reset(duration);\n\t        return chart;\n\t    };\n\t    //============================================================\n\t\n\t\n\t    return chart;\n\t}\n\tnv.models.focus = function(content) {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var content = content || nv.models.line()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t        , brush = d3.svg.brush()\n\t        ;\n\t\n\t    var margin = {top: 10, right: 0, bottom: 30, left: 0}\n\t        , color = nv.utils.defaultColor()\n\t        , width = null\n\t        , height = 70\n\t        , showXAxis = true\n\t        , showYAxis = false\n\t        , rightAlignYAxis = false\n\t        , ticks = null\n\t        , x\n\t        , y\n\t        , brushExtent = null\n\t        , duration = 250\n\t        , dispatch = d3.dispatch('brush', 'onBrush', 'renderEnd')\n\t        , syncBrushing = true\n\t        ;\n\t\n\t    content.interactive(false);\n\t    content.pointActive(function(d) { return false; });\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(content);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            chart.update = function() { \n\t                if( duration === 0 ) {\n\t                    container.call( chart );\n\t                } else {\n\t                    container.transition().duration(duration).call(chart);\n\t                }\n\t            };\n\t            chart.container = this;\n\t\n\t            // Setup Scales\n\t            x = content.xScale();\n\t            y = content.yScale();\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-focus').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-focus').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            gEnter.append('g').attr('class', 'nv-background').append('rect');\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-contentWrap');\n\t            gEnter.append('g').attr('class', 'nv-brushBackground');\n\t            gEnter.append('g').attr('class', 'nv-x nv-brush');\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            g.select('.nv-background rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t                \n\t            content\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function(d,i) { return !data[i].disabled; }));\n\t\n\t            var contentWrap = g.select('.nv-contentWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled; }));\n\t\n\t            d3.transition(contentWrap).call(content);\n\t            \n\t            // Setup Brush\n\t            brush\n\t                .x(x)\n\t                .on('brush', function() {\n\t                    onBrush(syncBrushing);\n\t                });\n\t\n\t            brush.on('brushend', function () {\n\t                if (!syncBrushing) {\n\t                    dispatch.onBrush(brush.empty() ? x.domain() : brush.extent());\n\t                }\n\t            });\n\t\n\t            if (brushExtent) brush.extent(brushExtent);\n\t\n\t            var brushBG = g.select('.nv-brushBackground').selectAll('g')\n\t                .data([brushExtent || brush.extent()]);\n\t    \n\t            var brushBGenter = brushBG.enter()\n\t                .append('g');\n\t\n\t            brushBGenter.append('rect')\n\t                .attr('class', 'left')\n\t                .attr('x', 0)\n\t                .attr('y', 0)\n\t                .attr('height', availableHeight);\n\t\n\t            brushBGenter.append('rect')\n\t                .attr('class', 'right')\n\t                .attr('x', 0)\n\t                .attr('y', 0)\n\t                .attr('height', availableHeight);\n\t\n\t            var gBrush = g.select('.nv-x.nv-brush')\n\t                .call(brush);\n\t            gBrush.selectAll('rect')\n\t                .attr('height', availableHeight);\n\t            gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n\t\n\t            onBrush(true);\n\t\n\t            g.select('.nv-background rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            if (showXAxis) {\n\t                xAxis.scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize(-availableHeight, 0);\n\t  \n\t                g.select('.nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n\t                d3.transition(g.select('.nv-x.nv-axis'))\n\t                    .call(xAxis);\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                    .tickSize( -availableWidth, 0);\n\t\n\t                d3.transition(g.select('.nv-y.nv-axis'))\n\t                    .call(yAxis);\n\t            }\n\t            \n\t            g.select('.nv-x.nv-axis')\n\t                .attr('transform', 'translate(0,' + y.range()[0] + ')');\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            //============================================================\n\t            // Functions\n\t            //------------------------------------------------------------\n\t    \n\t            // Taken from crossfilter (http://square.github.com/crossfilter/)\n\t            function resizePath(d) {\n\t                var e = +(d == 'e'),\n\t                    x = e ? 1 : -1,\n\t                    y = availableHeight / 3;\n\t                return 'M' + (0.5 * x) + ',' + y\n\t                    + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6)\n\t                    + 'V' + (2 * y - 6)\n\t                    + 'A6,6 0 0 ' + e + ' ' + (0.5 * x) + ',' + (2 * y)\n\t                    + 'Z'\n\t                    + 'M' + (2.5 * x) + ',' + (y + 8)\n\t                    + 'V' + (2 * y - 8)\n\t                    + 'M' + (4.5 * x) + ',' + (y + 8)\n\t                    + 'V' + (2 * y - 8);\n\t            }\n\t    \n\t    \n\t            function updateBrushBG() {\n\t                if (!brush.empty()) brush.extent(brushExtent);\n\t                brushBG\n\t                    .data([brush.empty() ? x.domain() : brushExtent])\n\t                    .each(function(d,i) {\n\t                        var leftWidth = x(d[0]) - x.range()[0],\n\t                            rightWidth = availableWidth - x(d[1]);\n\t                        d3.select(this).select('.left')\n\t                            .attr('width',  leftWidth < 0 ? 0 : leftWidth);\n\t    \n\t                        d3.select(this).select('.right')\n\t                            .attr('x', x(d[1]))\n\t                            .attr('width', rightWidth < 0 ? 0 : rightWidth);\n\t                    });\n\t            }\n\t\n\t\n\t            function onBrush(shouldDispatch) {\n\t                brushExtent = brush.empty() ? null : brush.extent();\n\t                var extent = brush.empty() ? x.domain() : brush.extent();\n\t                dispatch.brush({extent: extent, brush: brush});\n\t                updateBrushBG();\n\t                if (shouldDispatch) {\n\t                    dispatch.onBrush(extent);\n\t                }\n\t            }\n\t        });\n\t\n\t        renderWatch.renderEnd('focus immediate');\n\t        return chart;\n\t    }\n\t\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.content = content;\n\t    chart.brush = brush;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        brushExtent: {get: function(){return brushExtent;}, set: function(_){brushExtent=_;}},\n\t        syncBrushing: {get: function(){return syncBrushing;}, set: function(_){syncBrushing=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            content.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            content.color(color);\n\t        }},\n\t        interpolate: {get: function(){return content.interpolate();}, set: function(_){\n\t            content.interpolate(_);\n\t        }},\n\t        xTickFormat: {get: function(){return xAxis.tickFormat();}, set: function(_){\n\t            xAxis.tickFormat(_);\n\t        }},\n\t        yTickFormat: {get: function(){return yAxis.tickFormat();}, set: function(_){\n\t            yAxis.tickFormat(_);\n\t        }},\n\t        x: {get: function(){return content.x();}, set: function(_){\n\t            content.x(_);\n\t        }},\n\t        y: {get: function(){return content.y();}, set: function(_){\n\t            content.y(_);\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, content);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\tnv.models.forceDirectedGraph = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t    var margin = {top: 2, right: 0, bottom: 2, left: 0}\n\t        , width = 400\n\t        , height = 32\n\t        , container = null\n\t        , dispatch = d3.dispatch('renderEnd')\n\t        , color = nv.utils.getColor(['#000'])\n\t        , tooltip      = nv.models.tooltip()\n\t        , noData = null\n\t        // Force directed graph specific parameters [default values]\n\t        , linkStrength = 0.1\n\t        , friction = 0.9\n\t        , linkDist = 30\n\t        , charge = -120\n\t        , gravity = 0.1\n\t        , theta = 0.8\n\t        , alpha = 0.1\n\t        , radius = 5\n\t        // These functions allow to add extra attributes to ndes and links\n\t        ,nodeExtras = function(nodes) { /* Do nothing */ }\n\t        ,linkExtras = function(links) { /* Do nothing */ }\n\t        ;\n\t\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t\n\t        selection.each(function(data) {\n\t          container = d3.select(this);\n\t          nv.utils.initSVG(container);\n\t\n\t          var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t              availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t          container\n\t                  .attr(\"width\", availableWidth)\n\t                  .attr(\"height\", availableHeight);\n\t\n\t          // Display No Data message if there's nothing to show.\n\t          if (!data || !data.links || !data.nodes) {\n\t              nv.utils.noData(chart, container)\n\t              return chart;\n\t          } else {\n\t              container.selectAll('.nv-noData').remove();\n\t          }\n\t          container.selectAll('*').remove();\n\t\n\t          // Collect names of all fields in the nodes\n\t          var nodeFieldSet = new Set();\n\t          data.nodes.forEach(function(node) {\n\t            var keys = Object.keys(node);\n\t            keys.forEach(function(key) {\n\t              nodeFieldSet.add(key);\n\t            });\n\t          });\n\t\n\t          var force = d3.layout.force()\n\t                .nodes(data.nodes)\n\t                .links(data.links)\n\t                .size([availableWidth, availableHeight])\n\t                .linkStrength(linkStrength)\n\t                .friction(friction)\n\t                .linkDistance(linkDist)\n\t                .charge(charge)\n\t                .gravity(gravity)\n\t                .theta(theta)\n\t                .alpha(alpha)\n\t                .start();\n\t\n\t          var link = container.selectAll(\".link\")\n\t                .data(data.links)\n\t                .enter().append(\"line\")\n\t                .attr(\"class\", \"nv-force-link\")\n\t                .style(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n\t\n\t          var node = container.selectAll(\".node\")\n\t                .data(data.nodes)\n\t                .enter()\n\t                .append(\"g\")\n\t                .attr(\"class\", \"nv-force-node\")\n\t                .call(force.drag);\n\t\n\t          node\n\t            .append(\"circle\")\n\t            .attr(\"r\", radius)\n\t            .style(\"fill\", function(d) { return color(d) } )\n\t            .on(\"mouseover\", function(evt) {\n\t              container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex)\n\t                  .attr('y1', evt.py);\n\t              container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex)\n\t                  .attr('x2', evt.px);\n\t\n\t              // Add 'series' object to\n\t              var nodeColor = color(evt);\n\t              evt.series = [];\n\t              nodeFieldSet.forEach(function(field) {\n\t                evt.series.push({\n\t                  color: nodeColor,\n\t                  key:   field,\n\t                  value: evt[field]\n\t                });\n\t              });\n\t              tooltip.data(evt).hidden(false);\n\t            })\n\t            .on(\"mouseout\",  function(d) {\n\t              tooltip.hidden(true);\n\t            });\n\t\n\t          tooltip.headerFormatter(function(d) {return \"Node\";});\n\t\n\t          // Apply extra attributes to nodes and links (if any)\n\t          linkExtras(link);\n\t          nodeExtras(node);\n\t\n\t          force.on(\"tick\", function() {\n\t              link.attr(\"x1\", function(d) { return d.source.x; })\n\t                  .attr(\"y1\", function(d) { return d.source.y; })\n\t                  .attr(\"x2\", function(d) { return d.target.x; })\n\t                  .attr(\"y2\", function(d) { return d.target.y; });\n\t\n\t              node.attr(\"transform\", function(d) {\n\t                return \"translate(\" + d.x + \", \" + d.y + \")\";\n\t              });\n\t            });\n\t        });\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:     {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:    {get: function(){return height;}, set: function(_){height=_;}},\n\t\n\t        // Force directed graph specific parameters\n\t        linkStrength:{get: function(){return linkStrength;}, set: function(_){linkStrength=_;}},\n\t        friction:    {get: function(){return friction;}, set: function(_){friction=_;}},\n\t        linkDist:    {get: function(){return linkDist;}, set: function(_){linkDist=_;}},\n\t        charge:      {get: function(){return charge;}, set: function(_){charge=_;}},\n\t        gravity:     {get: function(){return gravity;}, set: function(_){gravity=_;}},\n\t        theta:       {get: function(){return theta;}, set: function(_){theta=_;}},\n\t        alpha:       {get: function(){return alpha;}, set: function(_){alpha=_;}},\n\t        radius:      {get: function(){return radius;}, set: function(_){radius=_;}},\n\t\n\t        //functor options\n\t        x: {get: function(){return getX;}, set: function(_){getX=d3.functor(_);}},\n\t        y: {get: function(){return getY;}, set: function(_){getY=d3.functor(_);}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        nodeExtras: {get: function(){return nodeExtras;}, set: function(_){\n\t            nodeExtras = _;\n\t        }},\n\t        linkExtras: {get: function(){return linkExtras;}, set: function(_){\n\t            linkExtras = _;\n\t        }}\n\t    });\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.tooltip = tooltip;\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\tnv.models.furiousLegend = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 5, right: 0, bottom: 5, left: 0}\n\t        , width = 400\n\t        , height = 20\n\t        , getKey = function(d) { return d.key }\n\t        , keyFormatter = function (d) { return d }\n\t        , color = nv.utils.getColor()\n\t        , maxKeyLength = 20 //default value for key lengths\n\t        , align = true\n\t        , padding = 28 //define how much space between legend items. - recommend 32 for furious version\n\t        , rightAlign = true\n\t        , updateState = true   //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n\t        , radioButtonMode = false   //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n\t        , expanded = false\n\t        , dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange')\n\t        , vers = 'classic' //Options are \"classic\" and \"furious\"\n\t        ;\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-legend').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            var series = g.selectAll('.nv-series')\n\t                .data(function(d) {\n\t                    if(vers != 'furious') return d;\n\t\n\t                    return d.filter(function(n) {\n\t                        return expanded ? true : !n.disengaged;\n\t                    });\n\t                });\n\t            var seriesEnter = series.enter().append('g').attr('class', 'nv-series')\n\t\n\t            var seriesShape;\n\t\n\t            if(vers == 'classic') {\n\t                seriesEnter.append('circle')\n\t                    .style('stroke-width', 2)\n\t                    .attr('class','nv-legend-symbol')\n\t                    .attr('r', 5);\n\t\n\t                seriesShape = series.select('circle');\n\t            } else if (vers == 'furious') {\n\t                seriesEnter.append('rect')\n\t                    .style('stroke-width', 2)\n\t                    .attr('class','nv-legend-symbol')\n\t                    .attr('rx', 3)\n\t                    .attr('ry', 3);\n\t\n\t                seriesShape = series.select('rect');\n\t\n\t                seriesEnter.append('g')\n\t                    .attr('class', 'nv-check-box')\n\t                    .property('innerHTML','<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>')\n\t                    .attr('transform', 'translate(-10,-8)scale(0.5)');\n\t\n\t                var seriesCheckbox = series.select('.nv-check-box');\n\t\n\t                seriesCheckbox.each(function(d,i) {\n\t                    d3.select(this).selectAll('path')\n\t                        .attr('stroke', setTextColor(d,i));\n\t                });\n\t            }\n\t\n\t            seriesEnter.append('text')\n\t                .attr('text-anchor', 'start')\n\t                .attr('class','nv-legend-text')\n\t                .attr('dy', '.32em')\n\t                .attr('dx', '8');\n\t\n\t            var seriesText = series.select('text.nv-legend-text');\n\t\n\t            series\n\t                .on('mouseover', function(d,i) {\n\t                    dispatch.legendMouseover(d,i);  //TODO: Make consistent with other event objects\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    dispatch.legendMouseout(d,i);\n\t                })\n\t                .on('click', function(d,i) {\n\t                    dispatch.legendClick(d,i);\n\t                    // make sure we re-get data in case it was modified\n\t                    var data = series.data();\n\t                    if (updateState) {\n\t                        if(vers =='classic') {\n\t                            if (radioButtonMode) {\n\t                                //Radio button mode: set every series to disabled,\n\t                                //  and enable the clicked series.\n\t                                data.forEach(function(series) { series.disabled = true});\n\t                                d.disabled = false;\n\t                            }\n\t                            else {\n\t                                d.disabled = !d.disabled;\n\t                                if (data.every(function(series) { return series.disabled})) {\n\t                                    //the default behavior of NVD3 legends is, if every single series\n\t                                    // is disabled, turn all series' back on.\n\t                                    data.forEach(function(series) { series.disabled = false});\n\t                                }\n\t                            }\n\t                        } else if(vers == 'furious') {\n\t                            if(expanded) {\n\t                                d.disengaged = !d.disengaged;\n\t                                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n\t                                d.disabled = d.disengaged || d.userDisabled;\n\t                            } else if (!expanded) {\n\t                                d.disabled = !d.disabled;\n\t                                d.userDisabled = d.disabled;\n\t                                var engaged = data.filter(function(d) { return !d.disengaged; });\n\t                                if (engaged.every(function(series) { return series.userDisabled })) {\n\t                                    //the default behavior of NVD3 legends is, if every single series\n\t                                    // is disabled, turn all series' back on.\n\t                                    data.forEach(function(series) {\n\t                                        series.disabled = series.userDisabled = false;\n\t                                    });\n\t                                }\n\t                            }\n\t                        }\n\t                        dispatch.stateChange({\n\t                            disabled: data.map(function(d) { return !!d.disabled }),\n\t                            disengaged: data.map(function(d) { return !!d.disengaged })\n\t                        });\n\t\n\t                    }\n\t                })\n\t                .on('dblclick', function(d,i) {\n\t                    if(vers == 'furious' && expanded) return;\n\t                    dispatch.legendDblclick(d,i);\n\t                    if (updateState) {\n\t                        // make sure we re-get data in case it was modified\n\t                        var data = series.data();\n\t                        //the default behavior of NVD3 legends, when double clicking one,\n\t                        // is to set all other series' to false, and make the double clicked series enabled.\n\t                        data.forEach(function(series) {\n\t                            series.disabled = true;\n\t                            if(vers == 'furious') series.userDisabled = series.disabled;\n\t                        });\n\t                        d.disabled = false;\n\t                        if(vers == 'furious') d.userDisabled = d.disabled;\n\t                        dispatch.stateChange({\n\t                            disabled: data.map(function(d) { return !!d.disabled })\n\t                        });\n\t                    }\n\t                });\n\t\n\t            series.classed('nv-disabled', function(d) { return d.userDisabled });\n\t            series.exit().remove();\n\t\n\t            seriesText\n\t                .attr('fill', setTextColor)\n\t                .text(function (d) { return keyFormatter(getKey(d)) });\n\t\n\t            //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n\t            // NEW ALIGNING CODE, TODO: clean up\n\t\n\t            var versPadding;\n\t            switch(vers) {\n\t                case 'furious' :\n\t                    versPadding = 23;\n\t                    break;\n\t                case 'classic' :\n\t                    versPadding = 20;\n\t            }\n\t\n\t            if (align) {\n\t\n\t                var seriesWidths = [];\n\t                series.each(function(d,i) {\n\t                    var legendText;\n\t                    if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n\t                        var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n\t                        legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n\t                        d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n\t                    } else {\n\t                        legendText = d3.select(this).select('text');\n\t                    }\n\t                    var nodeTextLength;\n\t                    try {\n\t                        nodeTextLength = legendText.node().getComputedTextLength();\n\t                        // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\t                        if(nodeTextLength <= 0) throw Error();\n\t                    }\n\t                    catch(e) {\n\t                        nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n\t                    }\n\t\n\t                    seriesWidths.push(nodeTextLength + padding);\n\t                });\n\t\n\t                var seriesPerRow = 0;\n\t                var legendWidth = 0;\n\t                var columnWidths = [];\n\t\n\t                while ( legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n\t                    columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n\t                    legendWidth += seriesWidths[seriesPerRow++];\n\t                }\n\t                if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\t\n\t                while ( legendWidth > availableWidth && seriesPerRow > 1 ) {\n\t                    columnWidths = [];\n\t                    seriesPerRow--;\n\t\n\t                    for (var k = 0; k < seriesWidths.length; k++) {\n\t                        if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0) )\n\t                            columnWidths[k % seriesPerRow] = seriesWidths[k];\n\t                    }\n\t\n\t                    legendWidth = columnWidths.reduce(function(prev, cur, index, array) {\n\t                        return prev + cur;\n\t                    });\n\t                }\n\t\n\t                var xPositions = [];\n\t                for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n\t                    xPositions[i] = curX;\n\t                    curX += columnWidths[i];\n\t                }\n\t\n\t                series\n\t                    .attr('transform', function(d, i) {\n\t                        return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n\t                    });\n\t\n\t                //position legend as far right as possible within the total width\n\t                if (rightAlign) {\n\t                    g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n\t                }\n\t                else {\n\t                    g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n\t                }\n\t\n\t                height = margin.top + margin.bottom + (Math.ceil(seriesWidths.length / seriesPerRow) * versPadding);\n\t\n\t            } else {\n\t\n\t                var ypos = 5,\n\t                    newxpos = 5,\n\t                    maxwidth = 0,\n\t                    xpos;\n\t                series\n\t                    .attr('transform', function(d, i) {\n\t                        var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n\t                        xpos = newxpos;\n\t\n\t                        if (width < margin.left + margin.right + xpos + length) {\n\t                            newxpos = xpos = 5;\n\t                            ypos += versPadding;\n\t                        }\n\t\n\t                        newxpos += length;\n\t                        if (newxpos > maxwidth) maxwidth = newxpos;\n\t\n\t                        return 'translate(' + xpos + ',' + ypos + ')';\n\t                    });\n\t\n\t                //position legend as far right as possible within the total width\n\t                g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n\t\n\t                height = margin.top + margin.bottom + ypos + 15;\n\t            }\n\t\n\t            if(vers == 'furious') {\n\t                // Size rectangles after text is placed\n\t                seriesShape\n\t                    .attr('width', function(d,i) {\n\t                        return seriesText[0][i].getComputedTextLength() + 27;\n\t                    })\n\t                    .attr('height', 18)\n\t                    .attr('y', -9)\n\t                    .attr('x', -15)\n\t            }\n\t\n\t            seriesShape\n\t                .style('fill', setBGColor)\n\t                .style('stroke', function(d,i) { return d.color || color(d, i) });\n\t        });\n\t\n\t        function setTextColor(d,i) {\n\t            if(vers != 'furious') return '#000';\n\t            if(expanded) {\n\t                return d.disengaged ? color(d,i) : '#fff';\n\t            } else if (!expanded) {\n\t                return !!d.disabled ? color(d,i) : '#fff';\n\t            }\n\t        }\n\t\n\t        function setBGColor(d,i) {\n\t            if(expanded && vers == 'furious') {\n\t                return d.disengaged ? '#fff' : color(d,i);\n\t            } else {\n\t                return !!d.disabled ? '#fff' : color(d,i);\n\t            }\n\t        }\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:          {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:         {get: function(){return height;}, set: function(_){height=_;}},\n\t        key:            {get: function(){return getKey;}, set: function(_){getKey=_;}},\n\t        keyFormatter:   {get: function(){return keyFormatter;}, set: function(_){keyFormatter=_;}},\n\t        align:          {get: function(){return align;}, set: function(_){align=_;}},\n\t        rightAlign:     {get: function(){return rightAlign;}, set: function(_){rightAlign=_;}},\n\t        maxKeyLength:   {get: function(){return maxKeyLength;}, set: function(_){maxKeyLength=_;}},\n\t        padding:        {get: function(){return padding;}, set: function(_){padding=_;}},\n\t        updateState:    {get: function(){return updateState;}, set: function(_){updateState=_;}},\n\t        radioButtonMode:{get: function(){return radioButtonMode;}, set: function(_){radioButtonMode=_;}},\n\t        expanded:       {get: function(){return expanded;}, set: function(_){expanded=_;}},\n\t        vers:           {get: function(){return vers;}, set: function(_){vers=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t//TODO: consider deprecating and using multibar with single series for this\n\tnv.models.historicalBar = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = null\n\t        , height = null\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container = null\n\t        , x = d3.scale.linear()\n\t        , y = d3.scale.linear()\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , forceX = []\n\t        , forceY = [0]\n\t        , padData = false\n\t        , clipEdge = true\n\t        , color = nv.utils.defaultColor()\n\t        , xDomain\n\t        , yDomain\n\t        , xRange\n\t        , yRange\n\t        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n\t        , interactive = true\n\t        ;\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            renderWatch.reset();\n\t\n\t            container = d3.select(this);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup Scales\n\t            x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX) ));\n\t\n\t            if (padData)\n\t                x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n\t            else\n\t                x.range(xRange || [0, availableWidth]);\n\t\n\t            y.domain(yDomain || d3.extent(data[0].values.map(getY).concat(forceY) ))\n\t                .range(yRange || [availableHeight, 0]);\n\t\n\t            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\t            if (x.domain()[0] === x.domain()[1])\n\t                x.domain()[0] ?\n\t                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n\t                    : x.domain([-1,1]);\n\t\n\t            if (y.domain()[0] === y.domain()[1])\n\t                y.domain()[0] ?\n\t                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n\t                    : y.domain([-1,1]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-historicalBar-' + id).data([data[0].values]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBar-' + id);\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-bars');\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container\n\t                .on('click', function(d,i) {\n\t                    dispatch.chartClick({\n\t                        data: d,\n\t                        index: i,\n\t                        pos: d3.event,\n\t                        id: id\n\t                    });\n\t                });\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-chart-clip-path-' + id)\n\t                .append('rect');\n\t\n\t            wrap.select('#nv-chart-clip-path-' + id + ' rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n\t\n\t            var bars = wrap.select('.nv-bars').selectAll('.nv-bar')\n\t                .data(function(d) { return d }, function(d,i) {return getX(d,i)});\n\t            bars.exit().remove();\n\t\n\t            bars.enter().append('rect')\n\t                .attr('x', 0 )\n\t                .attr('y', function(d,i) {  return nv.utils.NaNtoZero(y(Math.max(0, getY(d,i)))) })\n\t                .attr('height', function(d,i) { return nv.utils.NaNtoZero(Math.abs(y(getY(d,i)) - y(0))) })\n\t                .attr('transform', function(d,i) { return 'translate(' + (x(getX(d,i)) - availableWidth / data[0].values.length * .45) + ',0)'; })\n\t                .on('mouseover', function(d,i) {\n\t                    if (!interactive) return;\n\t                    d3.select(this).classed('hover', true);\n\t                    dispatch.elementMouseover({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    if (!interactive) return;\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.elementMouseout({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mousemove', function(d,i) {\n\t                    if (!interactive) return;\n\t                    dispatch.elementMousemove({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('click', function(d,i) {\n\t                    if (!interactive) return;\n\t                    var element = this;\n\t                    dispatch.elementClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\"),\n\t                        event: d3.event,\n\t                        element: element\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                })\n\t                .on('dblclick', function(d,i) {\n\t                    if (!interactive) return;\n\t                    dispatch.elementDblClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                });\n\t\n\t            bars\n\t                .attr('fill', function(d,i) { return color(d, i); })\n\t                .attr('class', function(d,i,j) { return (getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive') + ' nv-bar-' + j + '-' + i })\n\t                .watchTransition(renderWatch, 'bars')\n\t                .attr('transform', function(d,i) { return 'translate(' + (x(getX(d,i)) - availableWidth / data[0].values.length * .45) + ',0)'; })\n\t                //TODO: better width calculations that don't assume always uniform data spacing;w\n\t                .attr('width', (availableWidth / data[0].values.length) * .9 );\n\t\n\t            bars.watchTransition(renderWatch, 'bars')\n\t                .attr('y', function(d,i) {\n\t                    var rval = getY(d,i) < 0 ?\n\t                        y(0) :\n\t                            y(0) - y(getY(d,i)) < 1 ?\n\t                        y(0) - 1 :\n\t                        y(getY(d,i));\n\t                    return nv.utils.NaNtoZero(rval);\n\t                })\n\t                .attr('height', function(d,i) { return nv.utils.NaNtoZero(Math.max(Math.abs(y(getY(d,i)) - y(0)),1)) });\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('historicalBar immediate');\n\t        return chart;\n\t    }\n\t\n\t    //Create methods to allow outside functions to highlight a specific bar.\n\t    chart.highlightPoint = function(pointIndex, isHoverOver) {\n\t        container\n\t            .select(\".nv-bars .nv-bar-0-\" + pointIndex)\n\t            .classed(\"hover\", isHoverOver)\n\t        ;\n\t    };\n\t\n\t    chart.clearHighlights = function() {\n\t        container\n\t            .select(\".nv-bars .nv-bar.hover\")\n\t            .classed(\"hover\", false)\n\t        ;\n\t    };\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:   {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:  {get: function(){return height;}, set: function(_){height=_;}},\n\t        forceX:  {get: function(){return forceX;}, set: function(_){forceX=_;}},\n\t        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n\t        padData: {get: function(){return padData;}, set: function(_){padData=_;}},\n\t        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n\t        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n\t        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        clipEdge:    {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\t        id:          {get: function(){return id;}, set: function(_){id=_;}},\n\t        interactive: {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.historicalBarChart = function(bar_model) {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var bars = bar_model || nv.models.historicalBar()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t        , legend = nv.models.legend()\n\t        , interactiveLayer = nv.interactiveGuideline()\n\t        , tooltip = nv.models.tooltip()\n\t        ;\n\t\n\t\n\t    var margin = {top: 30, right: 90, bottom: 50, left: 90}\n\t        , marginTop = null\n\t        , color = nv.utils.defaultColor()\n\t        , width = null\n\t        , height = null\n\t        , showLegend = false\n\t        , showXAxis = true\n\t        , showYAxis = true\n\t        , rightAlignYAxis = false\n\t        , useInteractiveGuideline = false\n\t        , x\n\t        , y\n\t        , state = {}\n\t        , defaultState = null\n\t        , noData = null\n\t        , dispatch = d3.dispatch('tooltipHide', 'stateChange', 'changeState', 'renderEnd')\n\t        , transitionDuration = 250\n\t        ;\n\t\n\t    xAxis.orient('bottom').tickPadding(7);\n\t    yAxis.orient( (rightAlignYAxis) ? 'right' : 'left');\n\t    tooltip\n\t        .duration(0)\n\t        .headerEnabled(false)\n\t        .valueFormatter(function(d, i) {\n\t            return yAxis.tickFormat()(d, i);\n\t        })\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        });\n\t\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            renderWatch.reset();\n\t            renderWatch.models(bars);\n\t            if (showXAxis) renderWatch.models(xAxis);\n\t            if (showYAxis) renderWatch.models(yAxis);\n\t\n\t            var container = d3.select(this),\n\t                that = this;\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() { container.transition().duration(transitionDuration).call(chart) };\n\t            chart.container = this;\n\t\n\t            //set state.disabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display noData message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            x = bars.xScale();\n\t            y = bars.yScale();\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-historicalBarChart').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBarChart').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-barsWrap');\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t            gEnter.append('g').attr('class', 'nv-interactive');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                legend.width(availableWidth);\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .datum(data)\n\t                    .call(legend);\n\t\n\t                if (!marginTop && legend.height() !== margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                wrap.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n\t            }\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            //Set up interactive layer\n\t            if (useInteractiveGuideline) {\n\t                interactiveLayer\n\t                    .width(availableWidth)\n\t                    .height(availableHeight)\n\t                    .margin({left:margin.left, top:margin.top})\n\t                    .svgContainer(container)\n\t                    .xScale(x);\n\t                wrap.select(\".nv-interactive\").call(interactiveLayer);\n\t            }\n\t            bars\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function(d,i) { return !data[i].disabled }));\n\t\n\t            var barsWrap = g.select('.nv-barsWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled }));\n\t            barsWrap.transition().call(bars);\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize(-availableHeight, 0);\n\t\n\t                g.select('.nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n\t                g.select('.nv-x.nv-axis')\n\t                    .transition()\n\t                    .call(xAxis);\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                    .tickSize( -availableWidth, 0);\n\t\n\t                g.select('.nv-y.nv-axis')\n\t                    .transition()\n\t                    .call(yAxis);\n\t            }\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n\t                bars.clearHighlights();\n\t\n\t                var singlePoint, pointIndex, pointXLocation, allData = [];\n\t                data\n\t                    .filter(function(series, i) {\n\t                        series.seriesIndex = i;\n\t                        return !series.disabled;\n\t                    })\n\t                    .forEach(function(series,i) {\n\t                        pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n\t                        bars.highlightPoint(pointIndex,true);\n\t                        var point = series.values[pointIndex];\n\t                        if (point === undefined) return;\n\t                        if (singlePoint === undefined) singlePoint = point;\n\t                        if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n\t                        allData.push({\n\t                            key: series.key,\n\t                            value: chart.y()(point, pointIndex),\n\t                            color: color(series,series.seriesIndex),\n\t                            data: series.values[pointIndex]\n\t                        });\n\t                    });\n\t\n\t                var xValue = xAxis.tickFormat()(chart.x()(singlePoint,pointIndex));\n\t                interactiveLayer.tooltip\n\t                    .valueFormatter(function(d,i) {\n\t                        return yAxis.tickFormat()(d);\n\t                    })\n\t                    .data({\n\t                        value: xValue,\n\t                        index: pointIndex,\n\t                        series: allData\n\t                    })();\n\t\n\t                interactiveLayer.renderGuideLine(pointXLocation);\n\t\n\t            });\n\t\n\t            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n\t                dispatch.tooltipHide();\n\t                bars.clearHighlights();\n\t            });\n\t\n\t            legend.dispatch.on('legendClick', function(d,i) {\n\t                d.disabled = !d.disabled;\n\t\n\t                if (!data.filter(function(d) { return !d.disabled }).length) {\n\t                    data.map(function(d) {\n\t                        d.disabled = false;\n\t                        wrap.selectAll('.nv-series').classed('disabled', false);\n\t                        return d;\n\t                    });\n\t                }\n\t\n\t                state.disabled = data.map(function(d) { return !!d.disabled });\n\t                dispatch.stateChange(state);\n\t\n\t                selection.transition().call(chart);\n\t            });\n\t\n\t            legend.dispatch.on('legendDblclick', function(d) {\n\t                //Double clicking should always enable current series, and disabled all others.\n\t                data.forEach(function(d) {\n\t                    d.disabled = true;\n\t                });\n\t                d.disabled = false;\n\t\n\t                state.disabled = data.map(function(d) { return !!d.disabled });\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            dispatch.on('changeState', function(e) {\n\t                if (typeof e.disabled !== 'undefined') {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t\n\t                    state.disabled = e.disabled;\n\t                }\n\t\n\t                chart.update();\n\t            });\n\t        });\n\t\n\t        renderWatch.renderEnd('historicalBarChart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    bars.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt['series'] = {\n\t            key: chart.x()(evt.data),\n\t            value: chart.y()(evt.data),\n\t            color: evt.color\n\t        };\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    bars.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    bars.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.bars = bars;\n\t    chart.legend = legend;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.interactiveLayer = interactiveLayer;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        showXAxis: {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis: {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t            bars.color(color);\n\t        }},\n\t        duration:    {get: function(){return transitionDuration;}, set: function(_){\n\t            transitionDuration=_;\n\t            renderWatch.reset(transitionDuration);\n\t            yAxis.duration(transitionDuration);\n\t            xAxis.duration(transitionDuration);\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( (_) ? 'right' : 'left');\n\t        }},\n\t        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n\t            useInteractiveGuideline = _;\n\t            if (_ === true) {\n\t                chart.interactive(false);\n\t            }\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, bars);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\t\n\t// ohlcChart is just a historical chart with ohlc bars and some tweaks\n\tnv.models.ohlcBarChart = function() {\n\t    var chart = nv.models.historicalBarChart(nv.models.ohlcBar());\n\t\n\t    // special default tooltip since we show multiple values per x\n\t    chart.useInteractiveGuideline(true);\n\t    chart.interactiveLayer.tooltip.contentGenerator(function(data) {\n\t        // we assume only one series exists for this chart\n\t        var d = data.series[0].data;\n\t        // match line colors as defined in nv.d3.css\n\t        var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n\t        return '' +\n\t            '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' +\n\t            '<table>' +\n\t            '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' +\n\t            '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' +\n\t            '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' +\n\t            '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' +\n\t            '</table>';\n\t    });\n\t    return chart;\n\t};\n\t\n\t// candlestickChart is just a historical chart with candlestick bars and some tweaks\n\tnv.models.candlestickBarChart = function() {\n\t    var chart = nv.models.historicalBarChart(nv.models.candlestickBar());\n\t\n\t    // special default tooltip since we show multiple values per x\n\t    chart.useInteractiveGuideline(true);\n\t    chart.interactiveLayer.tooltip.contentGenerator(function(data) {\n\t        // we assume only one series exists for this chart\n\t        var d = data.series[0].data;\n\t        // match line colors as defined in nv.d3.css\n\t        var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n\t        return '' +\n\t            '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' +\n\t            '<table>' +\n\t            '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' +\n\t            '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' +\n\t            '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' +\n\t            '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' +\n\t            '</table>';\n\t    });\n\t    return chart;\n\t};\n\tnv.models.legend = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 5, right: 0, bottom: 5, left: 0}\n\t        , width = 400\n\t        , height = 20\n\t        , getKey = function(d) { return d.key }\n\t        , keyFormatter = function (d) { return d }\n\t        , color = nv.utils.getColor()\n\t        , maxKeyLength = 20 //default value for key lengths\n\t        , align = true\n\t        , padding = 32 //define how much space between legend items. - recommend 32 for furious version\n\t        , rightAlign = true\n\t        , updateState = true   //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n\t        , radioButtonMode = false   //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n\t        , expanded = false\n\t        , dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange')\n\t        , vers = 'classic' //Options are \"classic\" and \"furious\"\n\t        ;\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-legend').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            if (rightAlign)\n\t                wrap.attr('transform', 'translate(' + (- margin.right) + ',' + margin.top + ')');\n\t            else\n\t                wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            var series = g.selectAll('.nv-series')\n\t                .data(function(d) {\n\t                    if(vers != 'furious') return d;\n\t\n\t                    return d.filter(function(n) {\n\t                        return expanded ? true : !n.disengaged;\n\t                    });\n\t                });\n\t\n\t            var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n\t            var seriesShape;\n\t\n\t            var versPadding;\n\t            switch(vers) {\n\t                case 'furious' :\n\t                    versPadding = 23;\n\t                    break;\n\t                case 'classic' :\n\t                    versPadding = 20;\n\t            }\n\t\n\t            if(vers == 'classic') {\n\t                seriesEnter.append('circle')\n\t                    .style('stroke-width', 2)\n\t                    .attr('class','nv-legend-symbol')\n\t                    .attr('r', 5);\n\t\n\t                seriesShape = series.select('.nv-legend-symbol');\n\t            } else if (vers == 'furious') {\n\t                seriesEnter.append('rect')\n\t                    .style('stroke-width', 2)\n\t                    .attr('class','nv-legend-symbol')\n\t                    .attr('rx', 3)\n\t                    .attr('ry', 3);\n\t                seriesShape = series.select('.nv-legend-symbol');\n\t\n\t                seriesEnter.append('g')\n\t                    .attr('class', 'nv-check-box')\n\t                    .property('innerHTML','<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>')\n\t                    .attr('transform', 'translate(-10,-8)scale(0.5)');\n\t\n\t                var seriesCheckbox = series.select('.nv-check-box');\n\t\n\t                seriesCheckbox.each(function(d,i) {\n\t                    d3.select(this).selectAll('path')\n\t                        .attr('stroke', setTextColor(d,i));\n\t                });\n\t            }\n\t\n\t            seriesEnter.append('text')\n\t                .attr('text-anchor', 'start')\n\t                .attr('class','nv-legend-text')\n\t                .attr('dy', '.32em')\n\t                .attr('dx', '8');\n\t\n\t            var seriesText = series.select('text.nv-legend-text');\n\t\n\t            series\n\t                .on('mouseover', function(d,i) {\n\t                    dispatch.legendMouseover(d,i);  //TODO: Make consistent with other event objects\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    dispatch.legendMouseout(d,i);\n\t                })\n\t                .on('click', function(d,i) {\n\t                    dispatch.legendClick(d,i);\n\t                    // make sure we re-get data in case it was modified\n\t                    var data = series.data();\n\t                    if (updateState) {\n\t                        if(vers =='classic') {\n\t                            if (radioButtonMode) {\n\t                                //Radio button mode: set every series to disabled,\n\t                                //  and enable the clicked series.\n\t                                data.forEach(function(series) { series.disabled = true});\n\t                                d.disabled = false;\n\t                            }\n\t                            else {\n\t                                d.disabled = !d.disabled;\n\t                                if (data.every(function(series) { return series.disabled})) {\n\t                                    //the default behavior of NVD3 legends is, if every single series\n\t                                    // is disabled, turn all series' back on.\n\t                                    data.forEach(function(series) { series.disabled = false});\n\t                                }\n\t                            }\n\t                        } else if(vers == 'furious') {\n\t                            if(expanded) {\n\t                                d.disengaged = !d.disengaged;\n\t                                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n\t                                d.disabled = d.disengaged || d.userDisabled;\n\t                            } else if (!expanded) {\n\t                                d.disabled = !d.disabled;\n\t                                d.userDisabled = d.disabled;\n\t                                var engaged = data.filter(function(d) { return !d.disengaged; });\n\t                                if (engaged.every(function(series) { return series.userDisabled })) {\n\t                                    //the default behavior of NVD3 legends is, if every single series\n\t                                    // is disabled, turn all series' back on.\n\t                                    data.forEach(function(series) {\n\t                                        series.disabled = series.userDisabled = false;\n\t                                    });\n\t                                }\n\t                            }\n\t                        }\n\t                        dispatch.stateChange({\n\t                            disabled: data.map(function(d) { return !!d.disabled }),\n\t                            disengaged: data.map(function(d) { return !!d.disengaged })\n\t                        });\n\t\n\t                    }\n\t                })\n\t                .on('dblclick', function(d,i) {\n\t                    if(vers == 'furious' && expanded) return;\n\t                    dispatch.legendDblclick(d,i);\n\t                    if (updateState) {\n\t                        // make sure we re-get data in case it was modified\n\t                        var data = series.data();\n\t                        //the default behavior of NVD3 legends, when double clicking one,\n\t                        // is to set all other series' to false, and make the double clicked series enabled.\n\t                        data.forEach(function(series) {\n\t                            series.disabled = true;\n\t                            if(vers == 'furious') series.userDisabled = series.disabled;\n\t                        });\n\t                        d.disabled = false;\n\t                        if(vers == 'furious') d.userDisabled = d.disabled;\n\t                        dispatch.stateChange({\n\t                            disabled: data.map(function(d) { return !!d.disabled })\n\t                        });\n\t                    }\n\t                });\n\t\n\t            series.classed('nv-disabled', function(d) { return d.userDisabled });\n\t            series.exit().remove();\n\t\n\t            seriesText\n\t                .attr('fill', setTextColor)\n\t                .text(function (d) { return keyFormatter(getKey(d)) });\n\t\n\t            //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n\t            // NEW ALIGNING CODE, TODO: clean up\n\t            var legendWidth = 0;\n\t            if (align) {\n\t\n\t                var seriesWidths = [];\n\t                series.each(function(d,i) {\n\t                    var legendText;\n\t                    if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n\t                        var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n\t                        legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n\t                        d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n\t                    } else {\n\t                        legendText = d3.select(this).select('text');\n\t                    }\n\t                    var nodeTextLength;\n\t                    try {\n\t                        nodeTextLength = legendText.node().getComputedTextLength();\n\t                        // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\t                        if(nodeTextLength <= 0) throw Error();\n\t                    }\n\t                    catch(e) {\n\t                        nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n\t                    }\n\t\n\t                    seriesWidths.push(nodeTextLength + padding);\n\t                });\n\t\n\t                var seriesPerRow = 0;\n\t                var columnWidths = [];\n\t                legendWidth = 0;\n\t\n\t                while ( legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n\t                    columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n\t                    legendWidth += seriesWidths[seriesPerRow++];\n\t                }\n\t                if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\t\n\t                while ( legendWidth > availableWidth && seriesPerRow > 1 ) {\n\t                    columnWidths = [];\n\t                    seriesPerRow--;\n\t\n\t                    for (var k = 0; k < seriesWidths.length; k++) {\n\t                        if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0) )\n\t                            columnWidths[k % seriesPerRow] = seriesWidths[k];\n\t                    }\n\t\n\t                    legendWidth = columnWidths.reduce(function(prev, cur, index, array) {\n\t                        return prev + cur;\n\t                    });\n\t                }\n\t\n\t                var xPositions = [];\n\t                for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n\t                    xPositions[i] = curX;\n\t                    curX += columnWidths[i];\n\t                }\n\t\n\t                series\n\t                    .attr('transform', function(d, i) {\n\t                        return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n\t                    });\n\t\n\t                //position legend as far right as possible within the total width\n\t                if (rightAlign) {\n\t                    g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n\t                }\n\t                else {\n\t                    g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n\t                }\n\t\n\t                height = margin.top + margin.bottom + (Math.ceil(seriesWidths.length / seriesPerRow) * versPadding);\n\t\n\t            } else {\n\t\n\t                var ypos = 5,\n\t                    newxpos = 5,\n\t                    maxwidth = 0,\n\t                    xpos;\n\t                series\n\t                    .attr('transform', function(d, i) {\n\t                        var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n\t                        xpos = newxpos;\n\t\n\t                        if (width < margin.left + margin.right + xpos + length) {\n\t                            newxpos = xpos = 5;\n\t                            ypos += versPadding;\n\t                        }\n\t\n\t                        newxpos += length;\n\t                        if (newxpos > maxwidth) maxwidth = newxpos;\n\t\n\t                        if(legendWidth < xpos + maxwidth) {\n\t                            legendWidth = xpos + maxwidth;\n\t                        }\n\t                        return 'translate(' + xpos + ',' + ypos + ')';\n\t                    });\n\t\n\t                //position legend as far right as possible within the total width\n\t                g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n\t\n\t                height = margin.top + margin.bottom + ypos + 15;\n\t            }\n\t\n\t            if(vers == 'furious') {\n\t                // Size rectangles after text is placed\n\t                seriesShape\n\t                    .attr('width', function(d,i) {\n\t                        return seriesText[0][i].getComputedTextLength() + 27;\n\t                    })\n\t                    .attr('height', 18)\n\t                    .attr('y', -9)\n\t                    .attr('x', -15);\n\t\n\t                // The background for the expanded legend (UI)\n\t                gEnter.insert('rect',':first-child')\n\t                    .attr('class', 'nv-legend-bg')\n\t                    .attr('fill', '#eee')\n\t                    // .attr('stroke', '#444')\n\t                    .attr('opacity',0);\n\t\n\t                var seriesBG = g.select('.nv-legend-bg');\n\t\n\t                seriesBG\n\t                .transition().duration(300)\n\t                    .attr('x', -versPadding )\n\t                    .attr('width', legendWidth + versPadding - 12)\n\t                    .attr('height', height + 10)\n\t                    .attr('y', -margin.top - 10)\n\t                    .attr('opacity', expanded ? 1 : 0);\n\t\n\t\n\t            }\n\t\n\t            seriesShape\n\t                .style('fill', setBGColor)\n\t                .style('fill-opacity', setBGOpacity)\n\t                .style('stroke', setBGColor);\n\t        });\n\t\n\t        function setTextColor(d,i) {\n\t            if(vers != 'furious') return '#000';\n\t            if(expanded) {\n\t                return d.disengaged ? '#000' : '#fff';\n\t            } else if (!expanded) {\n\t                if(!d.color) d.color = color(d,i);\n\t                return !!d.disabled ? d.color : '#fff';\n\t            }\n\t        }\n\t\n\t        function setBGColor(d,i) {\n\t            if(expanded && vers == 'furious') {\n\t                return d.disengaged ? '#eee' : d.color || color(d,i);\n\t            } else {\n\t                return d.color || color(d,i);\n\t            }\n\t        }\n\t\n\t\n\t        function setBGOpacity(d,i) {\n\t            if(expanded && vers == 'furious') {\n\t                return 1;\n\t            } else {\n\t                return !!d.disabled ? 0 : 1;\n\t            }\n\t        }\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:          {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:         {get: function(){return height;}, set: function(_){height=_;}},\n\t        key:            {get: function(){return getKey;}, set: function(_){getKey=_;}},\n\t        keyFormatter:   {get: function(){return keyFormatter;}, set: function(_){keyFormatter=_;}},\n\t        align:          {get: function(){return align;}, set: function(_){align=_;}},\n\t        maxKeyLength:   {get: function(){return maxKeyLength;}, set: function(_){maxKeyLength=_;}},\n\t        rightAlign:     {get: function(){return rightAlign;}, set: function(_){rightAlign=_;}},\n\t        padding:        {get: function(){return padding;}, set: function(_){padding=_;}},\n\t        updateState:    {get: function(){return updateState;}, set: function(_){updateState=_;}},\n\t        radioButtonMode:{get: function(){return radioButtonMode;}, set: function(_){radioButtonMode=_;}},\n\t        expanded:       {get: function(){return expanded;}, set: function(_){expanded=_;}},\n\t        vers:           {get: function(){return vers;}, set: function(_){vers=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.line = function() {\n\t    \"use strict\";\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var  scatter = nv.models.scatter()\n\t        ;\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 960\n\t        , height = 500\n\t        , container = null\n\t        , strokeWidth = 1.5\n\t        , color = nv.utils.defaultColor() // a function that returns a color\n\t        , getX = function(d) { return d.x } // accessor to get the x value from a data point\n\t        , getY = function(d) { return d.y } // accessor to get the y value from a data point\n\t        , defined = function(d,i) { return !isNaN(getY(d,i)) && getY(d,i) !== null } // allows a line to be not continuous when it is not defined\n\t        , isArea = function(d) { return d.area } // decides if a line is an area or just a line\n\t        , clipEdge = false // if true, masks lines within x and y scale\n\t        , x //can be accessed via chart.xScale()\n\t        , y //can be accessed via chart.yScale()\n\t        , interpolate = \"linear\" // controls the line interpolation\n\t        , duration = 250\n\t        , dispatch = d3.dispatch('elementClick', 'elementMouseover', 'elementMouseout', 'renderEnd')\n\t        ;\n\t\n\t    scatter\n\t        .pointSize(16) // default size\n\t        .pointDomain([16,256]) //set to speed up calculation, needs to be unset if there is a custom size accessor\n\t    ;\n\t\n\t    //============================================================\n\t\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var x0, y0 //used to store previous scales\n\t        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n\t        ;\n\t\n\t    //============================================================\n\t\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(scatter);\n\t        selection.each(function(data) {\n\t            container = d3.select(this);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup Scales\n\t            x = scatter.xScale();\n\t            y = scatter.yScale();\n\t\n\t            x0 = x0 || x;\n\t            y0 = y0 || y;\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-line').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-line');\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-groups');\n\t            gEnter.append('g').attr('class', 'nv-scatterWrap');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            scatter\n\t                .width(availableWidth)\n\t                .height(availableHeight);\n\t\n\t            var scatterWrap = wrap.select('.nv-scatterWrap');\n\t            scatterWrap.call(scatter);\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-edge-clip-' + scatter.id())\n\t                .append('rect');\n\t\n\t            wrap.select('#nv-edge-clip-' + scatter.id() + ' rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', (availableHeight > 0) ? availableHeight : 0);\n\t\n\t            g   .attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n\t            scatterWrap\n\t                .attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n\t\n\t            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n\t                .data(function(d) { return d }, function(d) { return d.key });\n\t            groups.enter().append('g')\n\t                .style('stroke-opacity', 1e-6)\n\t                .style('stroke-width', function(d) { return d.strokeWidth || strokeWidth })\n\t                .style('fill-opacity', 1e-6);\n\t\n\t            groups.exit().remove();\n\t\n\t            groups\n\t                .attr('class', function(d,i) {\n\t                    return (d.classed || '') + ' nv-group nv-series-' + i;\n\t                })\n\t                .classed('hover', function(d) { return d.hover })\n\t                .style('fill', function(d,i){ return color(d, i) })\n\t                .style('stroke', function(d,i){ return color(d, i)});\n\t            groups.watchTransition(renderWatch, 'line: groups')\n\t                .style('stroke-opacity', 1)\n\t                .style('fill-opacity', function(d) { return d.fillOpacity || .5});\n\t\n\t            var areaPaths = groups.selectAll('path.nv-area')\n\t                .data(function(d) { return isArea(d) ? [d] : [] }); // this is done differently than lines because I need to check if series is an area\n\t            areaPaths.enter().append('path')\n\t                .attr('class', 'nv-area')\n\t                .attr('d', function(d) {\n\t                    return d3.svg.area()\n\t                        .interpolate(interpolate)\n\t                        .defined(defined)\n\t                        .x(function(d,i) { return nv.utils.NaNtoZero(x0(getX(d,i))) })\n\t                        .y0(function(d,i) { return nv.utils.NaNtoZero(y0(getY(d,i))) })\n\t                        .y1(function(d,i) { return y0( y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0] ) })\n\t                        //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n\t                        .apply(this, [d.values])\n\t                });\n\t            groups.exit().selectAll('path.nv-area')\n\t                .remove();\n\t\n\t            areaPaths.watchTransition(renderWatch, 'line: areaPaths')\n\t                .attr('d', function(d) {\n\t                    return d3.svg.area()\n\t                        .interpolate(interpolate)\n\t                        .defined(defined)\n\t                        .x(function(d,i) { return nv.utils.NaNtoZero(x(getX(d,i))) })\n\t                        .y0(function(d,i) { return nv.utils.NaNtoZero(y(getY(d,i))) })\n\t                        .y1(function(d,i) { return y( y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0] ) })\n\t                        //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n\t                        .apply(this, [d.values])\n\t                });\n\t\n\t            var linePaths = groups.selectAll('path.nv-line')\n\t                .data(function(d) { return [d.values] });\n\t\n\t            linePaths.enter().append('path')\n\t                .attr('class', 'nv-line')\n\t                .attr('d',\n\t                    d3.svg.line()\n\t                    .interpolate(interpolate)\n\t                    .defined(defined)\n\t                    .x(function(d,i) { return nv.utils.NaNtoZero(x0(getX(d,i))) })\n\t                    .y(function(d,i) { return nv.utils.NaNtoZero(y0(getY(d,i))) })\n\t            );\n\t\n\t            linePaths.watchTransition(renderWatch, 'line: linePaths')\n\t                .attr('d',\n\t                    d3.svg.line()\n\t                    .interpolate(interpolate)\n\t                    .defined(defined)\n\t                    .x(function(d,i) { return nv.utils.NaNtoZero(x(getX(d,i))) })\n\t                    .y(function(d,i) { return nv.utils.NaNtoZero(y(getY(d,i))) })\n\t            );\n\t\n\t            //store old scales for use in transitions on update\n\t            x0 = x.copy();\n\t            y0 = y.copy();\n\t        });\n\t        renderWatch.renderEnd('line immediate');\n\t        return chart;\n\t    }\n\t\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.scatter = scatter;\n\t    // Pass through events\n\t    scatter.dispatch.on('elementClick', function(){ dispatch.elementClick.apply(this, arguments); });\n\t    scatter.dispatch.on('elementMouseover', function(){ dispatch.elementMouseover.apply(this, arguments); });\n\t    scatter.dispatch.on('elementMouseout', function(){ dispatch.elementMouseout.apply(this, arguments); });\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        defined: {get: function(){return defined;}, set: function(_){defined=_;}},\n\t        interpolate:      {get: function(){return interpolate;}, set: function(_){interpolate=_;}},\n\t        clipEdge:    {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            scatter.duration(duration);\n\t        }},\n\t        isArea: {get: function(){return isArea;}, set: function(_){\n\t            isArea = d3.functor(_);\n\t        }},\n\t        x: {get: function(){return getX;}, set: function(_){\n\t            getX = _;\n\t            scatter.x(_);\n\t        }},\n\t        y: {get: function(){return getY;}, set: function(_){\n\t            getY = _;\n\t            scatter.y(_);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            scatter.color(color);\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, scatter);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\tnv.models.lineChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var lines = nv.models.line()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t        , legend = nv.models.legend()\n\t        , interactiveLayer = nv.interactiveGuideline()\n\t        , tooltip = nv.models.tooltip()\n\t        , focus = nv.models.focus(nv.models.line())\n\t        ;\n\t\n\t    var margin = {top: 30, right: 20, bottom: 50, left: 60}\n\t        , marginTop = null\n\t        , color = nv.utils.defaultColor()\n\t        , width = null\n\t        , height = null\n\t        , showLegend = true\n\t        , legendPosition = 'top'\n\t        , showXAxis = true\n\t        , showYAxis = true\n\t        , rightAlignYAxis = false\n\t        , useInteractiveGuideline = false\n\t        , x\n\t        , y\n\t        , focusEnable = false\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , noData = null\n\t        , dispatch = d3.dispatch('tooltipShow', 'tooltipHide', 'stateChange', 'changeState', 'renderEnd')\n\t        , duration = 250\n\t        ;\n\t\n\t    // set options on sub-objects for this chart\n\t    xAxis.orient('bottom').tickPadding(7);\n\t    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n\t\n\t    lines.clipEdge(true).duration(0);\n\t\n\t    tooltip.valueFormatter(function(d, i) {\n\t        return yAxis.tickFormat()(d, i);\n\t    }).headerFormatter(function(d, i) {\n\t        return xAxis.tickFormat()(d, i);\n\t    });\n\t\n\t    interactiveLayer.tooltip.valueFormatter(function(d, i) {\n\t        return yAxis.tickFormat()(d, i);\n\t    }).headerFormatter(function(d, i) {\n\t        return xAxis.tickFormat()(d, i);\n\t    });\n\t\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled; })\n\t            };\n\t        };\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.active !== undefined)\n\t                data.forEach(function(series,i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t        };\n\t    };\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(lines);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\t            chart.update = function() {\n\t                if( duration === 0 ) {\n\t                    container.call( chart );\n\t                } else {\n\t                    container.transition().duration(duration).call(chart);\n\t                }\n\t            };\n\t            chart.container = this;\n\t\n\t            state\n\t                .setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            // DEPRECATED set state.disabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled; });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display noData message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length; }).length) {\n\t                nv.utils.noData(chart, container);\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            /* Update `main' graph on brush update. */\n\t            focus.dispatch.on(\"onBrush\", function(extent) {\n\t                onBrush(extent);\n\t            });\n\t\n\t            // Setup Scales\n\t            x = lines.xScale();\n\t            y = lines.yScale();\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-lineChart').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-lineChart').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t\n\t            var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n\t            focusEnter.append('g').attr('class', 'nv-background').append('rect');\n\t            focusEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            focusEnter.append('g').attr('class', 'nv-y nv-axis');\n\t            focusEnter.append('g').attr('class', 'nv-linesWrap');\n\t            focusEnter.append('g').attr('class', 'nv-interactive');\n\t\n\t            var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                legend.width(availableWidth);\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .datum(data)\n\t                    .call(legend);\n\t\n\t                if (legendPosition === 'bottom') {\n\t                    wrap.select('.nv-legendWrap')\n\t                        .attr('transform', 'translate(0,' + availableHeight +')');\n\t                } else if (legendPosition === 'top') {\n\t                    if (!marginTop && legend.height() !== margin.top) {\n\t                        margin.top = legend.height();\n\t                        availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\t                    }\n\t\n\t                    wrap.select('.nv-legendWrap')\n\t                        .attr('transform', 'translate(0,' + (-margin.top) +')');\n\t                }\n\t            }\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            //Set up interactive layer\n\t            if (useInteractiveGuideline) {\n\t                interactiveLayer\n\t                    .width(availableWidth)\n\t                    .height(availableHeight)\n\t                    .margin({left:margin.left, top:margin.top})\n\t                    .svgContainer(container)\n\t                    .xScale(x);\n\t                wrap.select(\".nv-interactive\").call(interactiveLayer);\n\t            }\n\t\n\t            g.select('.nv-focus .nv-background rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            lines\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function(d,i) { return !data[i].disabled; }));\n\t\n\t            var linesWrap = g.select('.nv-linesWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled; }));\n\t\n\t\n\t            // Setup Main (Focus) Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks(nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize(-availableHeight, 0);\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                    .tickSize( -availableWidth, 0);\n\t            }\n\t\n\t            //============================================================\n\t            // Update Axes\n\t            //============================================================\n\t            function updateXAxis() {\n\t              if(showXAxis) {\n\t                g.select('.nv-focus .nv-x.nv-axis')\n\t                  .transition()\n\t                  .duration(duration)\n\t                  .call(xAxis)\n\t                ;\n\t              }\n\t            }\n\t\n\t            function updateYAxis() {\n\t              if(showYAxis) {\n\t                g.select('.nv-focus .nv-y.nv-axis')\n\t                  .transition()\n\t                  .duration(duration)\n\t                  .call(yAxis)\n\t                ;\n\t              }\n\t            }\n\t\n\t            g.select('.nv-focus .nv-x.nv-axis')\n\t                .attr('transform', 'translate(0,' + availableHeight + ')');\n\t\n\t            //============================================================\n\t            // Update Focus\n\t            //============================================================\n\t            if(!focusEnable) {\n\t                linesWrap.call(lines);\n\t                updateXAxis();\n\t                updateYAxis();\n\t            } else {\n\t                focus.width(availableWidth);\n\t                g.select('.nv-focusWrap')\n\t                    .attr('transform', 'translate(0,' + ( availableHeight + margin.bottom + focus.margin().top) + ')')\n\t                    .datum(data.filter(function(d) { return !d.disabled; }))\n\t                    .call(focus);\n\t                var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\t                if(extent !== null){\n\t                    onBrush(extent);\n\t                }\n\t            }\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState)\n\t                    state[key] = newState[key];\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n\t                lines.clearHighlights();\n\t                var singlePoint, pointIndex, pointXLocation, allData = [];\n\t                data\n\t                    .filter(function(series, i) {\n\t                        series.seriesIndex = i;\n\t                        return !series.disabled && !series.disableTooltip;\n\t                    })\n\t                    .forEach(function(series,i) {\n\t                        var extent = focusEnable ? (focus.brush.empty() ? focus.xScale().domain() : focus.brush.extent()) : x.domain();\n\t                        var currentValues = series.values.filter(function(d,i) {\n\t                            // Checks if the x point is between the extents, handling case where extent[0] is greater than extent[1]\n\t                            // (e.g. x domain is manually set to reverse the x-axis)\n\t                            if(extent[0] <= extent[1]) {\n\t                                return lines.x()(d,i) >= extent[0] && lines.x()(d,i) <= extent[1];\n\t                            } else {\n\t                                return lines.x()(d,i) >= extent[1] && lines.x()(d,i) <= extent[0];\n\t                            }\n\t                        });\n\t\n\t                        pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, lines.x());\n\t                        var point = currentValues[pointIndex];\n\t                        var pointYValue = chart.y()(point, pointIndex);\n\t                        if (pointYValue !== null) {\n\t                            lines.highlightPoint(i, pointIndex, true);\n\t                        }\n\t                        if (point === undefined) return;\n\t                        if (singlePoint === undefined) singlePoint = point;\n\t                        if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n\t                        allData.push({\n\t                            key: series.key,\n\t                            value: pointYValue,\n\t                            color: color(series,series.seriesIndex),\n\t                            data: point\n\t                        });\n\t                    });\n\t                //Highlight the tooltip entry based on which point the mouse is closest to.\n\t                if (allData.length > 2) {\n\t                    var yValue = chart.yScale().invert(e.mouseY);\n\t                    var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n\t                    var threshold = 0.03 * domainExtent;\n\t                    var indexToHighlight = nv.nearestValueIndex(allData.map(function(d){return d.value;}),yValue,threshold);\n\t                    if (indexToHighlight !== null)\n\t                        allData[indexToHighlight].highlight = true;\n\t                }\n\t\n\t                var defaultValueFormatter = function(d,i) {\n\t                    return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n\t                };\n\t\n\t                interactiveLayer.tooltip\n\t                    .valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter)\n\t                    .data({\n\t                        value: chart.x()( singlePoint,pointIndex ),\n\t                        index: pointIndex,\n\t                        series: allData\n\t                    })();\n\t\n\t                interactiveLayer.renderGuideLine(pointXLocation);\n\t\n\t            });\n\t\n\t            interactiveLayer.dispatch.on('elementClick', function(e) {\n\t                var pointXLocation, allData = [];\n\t\n\t                data.filter(function(series, i) {\n\t                    series.seriesIndex = i;\n\t                    return !series.disabled;\n\t                }).forEach(function(series) {\n\t                    var pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n\t                    var point = series.values[pointIndex];\n\t                    if (typeof point === 'undefined') return;\n\t                    if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n\t                    var yPos = chart.yScale()(chart.y()(point,pointIndex));\n\t                    allData.push({\n\t                        point: point,\n\t                        pointIndex: pointIndex,\n\t                        pos: [pointXLocation, yPos],\n\t                        seriesIndex: series.seriesIndex,\n\t                        series: series\n\t                    });\n\t                });\n\t\n\t                lines.dispatch.elementClick(allData);\n\t            });\n\t\n\t            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n\t                lines.clearHighlights();\n\t            });\n\t\n\t            dispatch.on('changeState', function(e) {\n\t                if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t\n\t                    state.disabled = e.disabled;\n\t                }\n\t                chart.update();\n\t            });\n\t\n\t            //============================================================\n\t            // Functions\n\t            //------------------------------------------------------------\n\t\n\t            // Taken from crossfilter (http://square.github.com/crossfilter/)\n\t            function resizePath(d) {\n\t                var e = +(d == 'e'),\n\t                    x = e ? 1 : -1,\n\t                    y = availableHeight / 3;\n\t                return 'M' + (0.5 * x) + ',' + y\n\t                    + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6)\n\t                    + 'V' + (2 * y - 6)\n\t                    + 'A6,6 0 0 ' + e + ' ' + (0.5 * x) + ',' + (2 * y)\n\t                    + 'Z'\n\t                    + 'M' + (2.5 * x) + ',' + (y + 8)\n\t                    + 'V' + (2 * y - 8)\n\t                    + 'M' + (4.5 * x) + ',' + (y + 8)\n\t                    + 'V' + (2 * y - 8);\n\t            }\n\t\n\t            function onBrush(extent) {\n\t                // Update Main (Focus)\n\t                var focusLinesWrap = g.select('.nv-focus .nv-linesWrap')\n\t                    .datum(\n\t                    data.filter(function(d) { return !d.disabled; })\n\t                        .map(function(d,i) {\n\t                            return {\n\t                                key: d.key,\n\t                                area: d.area,\n\t                                classed: d.classed,\n\t                                values: d.values.filter(function(d,i) {\n\t                                    return lines.x()(d,i) >= extent[0] && lines.x()(d,i) <= extent[1];\n\t                                }),\n\t                                disableTooltip: d.disableTooltip\n\t                            };\n\t                        })\n\t                );\n\t                focusLinesWrap.transition().duration(duration).call(lines);\n\t\n\t                // Update Main (Focus) Axes\n\t                updateXAxis();\n\t                updateYAxis();\n\t            }\n\t        });\n\t\n\t        renderWatch.renderEnd('lineChart immediate');\n\t        return chart;\n\t    }\n\t\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    lines.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        if(!evt.series.disableTooltip){\n\t            tooltip.data(evt).hidden(false);\n\t        }\n\t    });\n\t\n\t    lines.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.lines = lines;\n\t    chart.legend = legend;\n\t    chart.focus = focus;\n\t    chart.xAxis = xAxis;\n\t    chart.x2Axis = focus.xAxis\n\t    chart.yAxis = yAxis;\n\t    chart.y2Axis = focus.yAxis\n\t    chart.interactiveLayer = interactiveLayer;\n\t    chart.tooltip = tooltip;\n\t    chart.state = state;\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        legendPosition: {get: function(){return legendPosition;}, set: function(_){legendPosition=_;}},\n\t        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        // Focus options, mostly passed onto focus model.\n\t        focusEnable:    {get: function(){return focusEnable;}, set: function(_){focusEnable=_;}},\n\t        focusHeight:     {get: function(){return focus.height();}, set: function(_){focus.height(_);}},\n\t        focusShowAxisX:    {get: function(){return focus.showXAxis();}, set: function(_){focus.showXAxis(_);}},\n\t        focusShowAxisY:    {get: function(){return focus.showYAxis();}, set: function(_){focus.showYAxis(_);}},\n\t        brushExtent: {get: function(){return focus.brushExtent();}, set: function(_){focus.brushExtent(_);}},\n\t\n\t        // options that require extra logic in the setter\n\t        focusMargin: {get: function(){return focus.margin}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            focus.margin.right  = _.right  !== undefined ? _.right  : focus.margin.right;\n\t            focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n\t            focus.margin.left   = _.left   !== undefined ? _.left   : focus.margin.left;\n\t        }},\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            lines.duration(duration);\n\t            focus.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t            lines.color(color);\n\t            focus.color(color);\n\t        }},\n\t        interpolate: {get: function(){return lines.interpolate();}, set: function(_){\n\t            lines.interpolate(_);\n\t            focus.interpolate(_);\n\t        }},\n\t        xTickFormat: {get: function(){return xAxis.tickFormat();}, set: function(_){\n\t            xAxis.tickFormat(_);\n\t            focus.xTickFormat(_);\n\t        }},\n\t        yTickFormat: {get: function(){return yAxis.tickFormat();}, set: function(_){\n\t            yAxis.tickFormat(_);\n\t            focus.yTickFormat(_);\n\t        }},\n\t        x: {get: function(){return lines.x();}, set: function(_){\n\t            lines.x(_);\n\t            focus.x(_);\n\t        }},\n\t        y: {get: function(){return lines.y();}, set: function(_){\n\t            lines.y(_);\n\t            focus.y(_);\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n\t        }},\n\t        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n\t            useInteractiveGuideline = _;\n\t            if (useInteractiveGuideline) {\n\t                lines.interactive(false);\n\t                lines.useVoronoi(false);\n\t            }\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, lines);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.lineWithFocusChart = function() {\n\t  return nv.models.lineChart()\n\t    .margin({ bottom: 30 })\n\t    .focusEnable( true );\n\t};\n\tnv.models.linePlusBarChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var lines = nv.models.line()\n\t        , lines2 = nv.models.line()\n\t        , bars = nv.models.historicalBar()\n\t        , bars2 = nv.models.historicalBar()\n\t        , xAxis = nv.models.axis()\n\t        , x2Axis = nv.models.axis()\n\t        , y1Axis = nv.models.axis()\n\t        , y2Axis = nv.models.axis()\n\t        , y3Axis = nv.models.axis()\n\t        , y4Axis = nv.models.axis()\n\t        , legend = nv.models.legend()\n\t        , brush = d3.svg.brush()\n\t        , tooltip = nv.models.tooltip()\n\t        ;\n\t\n\t    var margin = {top: 30, right: 30, bottom: 30, left: 60}\n\t        , marginTop = null\n\t        , margin2 = {top: 0, right: 30, bottom: 20, left: 60}\n\t        , width = null\n\t        , height = null\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , color = nv.utils.defaultColor()\n\t        , showLegend = true\n\t        , focusEnable = true\n\t        , focusShowAxisY = false\n\t        , focusShowAxisX = true\n\t        , focusHeight = 50\n\t        , extent\n\t        , brushExtent = null\n\t        , x\n\t        , x2\n\t        , y1\n\t        , y2\n\t        , y3\n\t        , y4\n\t        , noData = null\n\t        , dispatch = d3.dispatch('brush', 'stateChange', 'changeState')\n\t        , transitionDuration = 0\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , legendLeftAxisHint = ' (left axis)'\n\t        , legendRightAxisHint = ' (right axis)'\n\t        , switchYAxisOrder = false\n\t        ;\n\t\n\t    lines.clipEdge(true);\n\t    lines2.interactive(false);\n\t    // We don't want any points emitted for the focus chart's scatter graph.\n\t    lines2.pointActive(function(d) { return false });\n\t    xAxis.orient('bottom').tickPadding(5);\n\t    y1Axis.orient('left');\n\t    y2Axis.orient('right');\n\t    x2Axis.orient('bottom').tickPadding(5);\n\t    y3Axis.orient('left');\n\t    y4Axis.orient('right');\n\t\n\t    tooltip.headerEnabled(true).headerFormatter(function(d, i) {\n\t        return xAxis.tickFormat()(d, i);\n\t    });\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var getBarsAxis = function() {\n\t        return switchYAxisOrder\n\t            ? { main: y2Axis, focus: y4Axis }\n\t            : { main: y1Axis, focus: y3Axis }\n\t    }\n\t\n\t    var getLinesAxis = function() {\n\t        return switchYAxisOrder\n\t            ? { main: y1Axis, focus: y3Axis }\n\t            : { main: y2Axis, focus: y4Axis }\n\t    }\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled })\n\t            };\n\t        }\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.active !== undefined)\n\t                data.forEach(function(series,i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t        }\n\t    };\n\t\n\t    var allDisabled = function(data) {\n\t      return data.every(function(series) {\n\t        return series.disabled;\n\t      });\n\t    }\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            var container = d3.select(this),\n\t                that = this;\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight1 = nv.utils.availableHeight(height, container, margin)\n\t                    - (focusEnable ? focusHeight : 0),\n\t                availableHeight2 = focusHeight - margin2.top - margin2.bottom;\n\t\n\t            chart.update = function() { container.transition().duration(transitionDuration).call(chart); };\n\t            chart.container = this;\n\t\n\t            state\n\t                .setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            // DEPRECATED set state.disableddisabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            var dataBars = data.filter(function(d) { return !d.disabled && d.bar });\n\t            var dataLines = data.filter(function(d) { return !d.bar }); // removed the !d.disabled clause here to fix Issue #240\n\t\n\t            if (dataBars.length && !switchYAxisOrder) {\n\t                x = bars.xScale();\n\t            } else {\n\t                x = lines.xScale();\n\t            }\n\t\n\t            x2 = x2Axis.scale();\n\t\n\t            // select the scales and series based on the position of the yAxis\n\t            y1 = switchYAxisOrder ? lines.yScale() : bars.yScale();\n\t            y2 = switchYAxisOrder ? bars.yScale() : lines.yScale();\n\t            y3 = switchYAxisOrder ? lines2.yScale() : bars2.yScale();\n\t            y4 = switchYAxisOrder ? bars2.yScale() : lines2.yScale();\n\t\n\t            var series1 = data\n\t                .filter(function(d) { return !d.disabled && (switchYAxisOrder ? !d.bar : d.bar) })\n\t                .map(function(d) {\n\t                    return d.values.map(function(d,i) {\n\t                        return { x: getX(d,i), y: getY(d,i) }\n\t                    })\n\t                });\n\t\n\t            var series2 = data\n\t                .filter(function(d) { return !d.disabled && (switchYAxisOrder ? d.bar : !d.bar) })\n\t                .map(function(d) {\n\t                    return d.values.map(function(d,i) {\n\t                        return { x: getX(d,i), y: getY(d,i) }\n\t                    })\n\t                });\n\t\n\t            x.range([0, availableWidth]);\n\t\n\t            x2  .domain(d3.extent(d3.merge(series1.concat(series2)), function(d) { return d.x } ))\n\t                .range([0, availableWidth]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-linePlusBar').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-linePlusBar').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t\n\t            // this is the main chart\n\t            var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n\t            focusEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            focusEnter.append('g').attr('class', 'nv-y1 nv-axis');\n\t            focusEnter.append('g').attr('class', 'nv-y2 nv-axis');\n\t            focusEnter.append('g').attr('class', 'nv-barsWrap');\n\t            focusEnter.append('g').attr('class', 'nv-linesWrap');\n\t\n\t            // context chart is where you can focus in\n\t            var contextEnter = gEnter.append('g').attr('class', 'nv-context');\n\t            contextEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            contextEnter.append('g').attr('class', 'nv-y1 nv-axis');\n\t            contextEnter.append('g').attr('class', 'nv-y2 nv-axis');\n\t            contextEnter.append('g').attr('class', 'nv-barsWrap');\n\t            contextEnter.append('g').attr('class', 'nv-linesWrap');\n\t            contextEnter.append('g').attr('class', 'nv-brushBackground');\n\t            contextEnter.append('g').attr('class', 'nv-x nv-brush');\n\t\n\t            //============================================================\n\t            // Legend\n\t            //------------------------------------------------------------\n\t\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n\t                var legendXPosition = legend.align() ? legendWidth : 0;\n\t\n\t                legend.width(legendWidth);\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .datum(data.map(function(series) {\n\t                        series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n\t                        if(switchYAxisOrder) {\n\t                            series.key = series.originalKey + (series.bar ? legendRightAxisHint : legendLeftAxisHint);\n\t                        } else {\n\t                            series.key = series.originalKey + (series.bar ? legendLeftAxisHint : legendRightAxisHint);\n\t                        }\n\t                        return series;\n\t                    }))\n\t                    .call(legend);\n\t\n\t                if (!marginTop && legend.height() !== margin.top) {\n\t                    margin.top = legend.height();\n\t                    // FIXME: shouldn't this be \"- (focusEnabled ? focusHeight : 0)\"?\n\t                    availableHeight1 = nv.utils.availableHeight(height, container, margin) - focusHeight;\n\t                }\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(' + legendXPosition + ',' + (-margin.top) +')');\n\t            }\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            //============================================================\n\t            // Context chart (focus chart) components\n\t            //------------------------------------------------------------\n\t\n\t            // hide or show the focus context chart\n\t            g.select('.nv-context').style('display', focusEnable ? 'initial' : 'none');\n\t\n\t            bars2\n\t                .width(availableWidth)\n\t                .height(availableHeight2)\n\t                .color(data.map(function (d, i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function (d, i) {\n\t                    return !data[i].disabled && data[i].bar\n\t                }));\n\t            lines2\n\t                .width(availableWidth)\n\t                .height(availableHeight2)\n\t                .color(data.map(function (d, i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function (d, i) {\n\t                    return !data[i].disabled && !data[i].bar\n\t                }));\n\t\n\t            var bars2Wrap = g.select('.nv-context .nv-barsWrap')\n\t                .datum(dataBars.length ? dataBars : [\n\t                    {values: []}\n\t                ]);\n\t            var lines2Wrap = g.select('.nv-context .nv-linesWrap')\n\t                .datum(allDisabled(dataLines) ?\n\t                       [{values: []}] :\n\t                       dataLines.filter(function(dataLine) {\n\t                         return !dataLine.disabled;\n\t                       }));\n\t\n\t            g.select('.nv-context')\n\t                .attr('transform', 'translate(0,' + ( availableHeight1 + margin.bottom + margin2.top) + ')');\n\t\n\t            bars2Wrap.transition().call(bars2);\n\t            lines2Wrap.transition().call(lines2);\n\t\n\t            // context (focus chart) axis controls\n\t            if (focusShowAxisX) {\n\t                x2Axis\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth / 100, data))\n\t                    .tickSize(-availableHeight2, 0);\n\t                g.select('.nv-context .nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + y3.range()[0] + ')');\n\t                g.select('.nv-context .nv-x.nv-axis').transition()\n\t                    .call(x2Axis);\n\t            }\n\t\n\t            if (focusShowAxisY) {\n\t                y3Axis\n\t                    .scale(y3)\n\t                    ._ticks( availableHeight2 / 36 )\n\t                    .tickSize( -availableWidth, 0);\n\t                y4Axis\n\t                    .scale(y4)\n\t                    ._ticks( availableHeight2 / 36 )\n\t                    .tickSize(dataBars.length ? 0 : -availableWidth, 0); // Show the y2 rules only if y1 has none\n\t\n\t                g.select('.nv-context .nv-y3.nv-axis')\n\t                    .style('opacity', dataBars.length ? 1 : 0)\n\t                    .attr('transform', 'translate(0,' + x2.range()[0] + ')');\n\t                g.select('.nv-context .nv-y2.nv-axis')\n\t                    .style('opacity', dataLines.length ? 1 : 0)\n\t                    .attr('transform', 'translate(' + x2.range()[1] + ',0)');\n\t\n\t                g.select('.nv-context .nv-y1.nv-axis').transition()\n\t                    .call(y3Axis);\n\t                g.select('.nv-context .nv-y2.nv-axis').transition()\n\t                    .call(y4Axis);\n\t            }\n\t\n\t            // Setup Brush\n\t            brush.x(x2).on('brush', onBrush);\n\t\n\t            if (brushExtent) brush.extent(brushExtent);\n\t\n\t            var brushBG = g.select('.nv-brushBackground').selectAll('g')\n\t                .data([brushExtent || brush.extent()]);\n\t\n\t            var brushBGenter = brushBG.enter()\n\t                .append('g');\n\t\n\t            brushBGenter.append('rect')\n\t                .attr('class', 'left')\n\t                .attr('x', 0)\n\t                .attr('y', 0)\n\t                .attr('height', availableHeight2);\n\t\n\t            brushBGenter.append('rect')\n\t                .attr('class', 'right')\n\t                .attr('x', 0)\n\t                .attr('y', 0)\n\t                .attr('height', availableHeight2);\n\t\n\t            var gBrush = g.select('.nv-x.nv-brush')\n\t                .call(brush);\n\t            gBrush.selectAll('rect')\n\t                //.attr('y', -5)\n\t                .attr('height', availableHeight2);\n\t            gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState)\n\t                    state[key] = newState[key];\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            // Update chart from a state object passed to event handler\n\t            dispatch.on('changeState', function(e) {\n\t                if (typeof e.disabled !== 'undefined') {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t                    state.disabled = e.disabled;\n\t                }\n\t                chart.update();\n\t            });\n\t\n\t            //============================================================\n\t            // Functions\n\t            //------------------------------------------------------------\n\t\n\t            // Taken from crossfilter (http://square.github.com/crossfilter/)\n\t            function resizePath(d) {\n\t                var e = +(d == 'e'),\n\t                    x = e ? 1 : -1,\n\t                    y = availableHeight2 / 3;\n\t                return 'M' + (.5 * x) + ',' + y\n\t                    + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6)\n\t                    + 'V' + (2 * y - 6)\n\t                    + 'A6,6 0 0 ' + e + ' ' + (.5 * x) + ',' + (2 * y)\n\t                    + 'Z'\n\t                    + 'M' + (2.5 * x) + ',' + (y + 8)\n\t                    + 'V' + (2 * y - 8)\n\t                    + 'M' + (4.5 * x) + ',' + (y + 8)\n\t                    + 'V' + (2 * y - 8);\n\t            }\n\t\n\t\n\t            function updateBrushBG() {\n\t                if (!brush.empty()) brush.extent(brushExtent);\n\t                brushBG\n\t                    .data([brush.empty() ? x2.domain() : brushExtent])\n\t                    .each(function(d,i) {\n\t                        var leftWidth = x2(d[0]) - x2.range()[0],\n\t                            rightWidth = x2.range()[1] - x2(d[1]);\n\t                        d3.select(this).select('.left')\n\t                            .attr('width',  leftWidth < 0 ? 0 : leftWidth);\n\t\n\t                        d3.select(this).select('.right')\n\t                            .attr('x', x2(d[1]))\n\t                            .attr('width', rightWidth < 0 ? 0 : rightWidth);\n\t                    });\n\t            }\n\t\n\t            function onBrush() {\n\t                brushExtent = brush.empty() ? null : brush.extent();\n\t                extent = brush.empty() ? x2.domain() : brush.extent();\n\t                dispatch.brush({extent: extent, brush: brush});\n\t                updateBrushBG();\n\t\n\t                // Prepare Main (Focus) Bars and Lines\n\t                bars\n\t                    .width(availableWidth)\n\t                    .height(availableHeight1)\n\t                    .color(data.map(function(d,i) {\n\t                        return d.color || color(d, i);\n\t                    }).filter(function(d,i) { return !data[i].disabled && data[i].bar }));\n\t\n\t                lines\n\t                    .width(availableWidth)\n\t                    .height(availableHeight1)\n\t                    .color(data.map(function(d,i) {\n\t                        return d.color || color(d, i);\n\t                    }).filter(function(d,i) { return !data[i].disabled && !data[i].bar }));\n\t\n\t                var focusBarsWrap = g.select('.nv-focus .nv-barsWrap')\n\t                    .datum(!dataBars.length ? [{values:[]}] :\n\t                        dataBars\n\t                            .map(function(d,i) {\n\t                                return {\n\t                                    key: d.key,\n\t                                    values: d.values.filter(function(d,i) {\n\t                                        return bars.x()(d,i) >= extent[0] && bars.x()(d,i) <= extent[1];\n\t                                    })\n\t                                }\n\t                            })\n\t                );\n\t\n\t                var focusLinesWrap = g.select('.nv-focus .nv-linesWrap')\n\t                    .datum(allDisabled(dataLines) ? [{values:[]}] :\n\t                           dataLines\n\t                           .filter(function(dataLine) { return !dataLine.disabled; })\n\t                           .map(function(d,i) {\n\t                                return {\n\t                                    area: d.area,\n\t                                    fillOpacity: d.fillOpacity,\n\t                                    strokeWidth: d.strokeWidth,\n\t                                    key: d.key,\n\t                                    values: d.values.filter(function(d,i) {\n\t                                        return lines.x()(d,i) >= extent[0] && lines.x()(d,i) <= extent[1];\n\t                                    })\n\t                                }\n\t                            })\n\t                );\n\t\n\t                // Update Main (Focus) X Axis\n\t                if (dataBars.length && !switchYAxisOrder) {\n\t                    x = bars.xScale();\n\t                } else {\n\t                    x = lines.xScale();\n\t                }\n\t\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize(-availableHeight1, 0);\n\t\n\t                xAxis.domain([Math.ceil(extent[0]), Math.floor(extent[1])]);\n\t\n\t                g.select('.nv-x.nv-axis').transition().duration(transitionDuration)\n\t                    .call(xAxis);\n\t\n\t                // Update Main (Focus) Bars and Lines\n\t                focusBarsWrap.transition().duration(transitionDuration).call(bars);\n\t                focusLinesWrap.transition().duration(transitionDuration).call(lines);\n\t\n\t                // Setup and Update Main (Focus) Y Axes\n\t                g.select('.nv-focus .nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + y1.range()[0] + ')');\n\t\n\t                y1Axis\n\t                    .scale(y1)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight1/36, data) )\n\t                    .tickSize(-availableWidth, 0);\n\t                y2Axis\n\t                    .scale(y2)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight1/36, data) );\n\t\n\t                // Show the y2 rules only if y1 has none\n\t                if(!switchYAxisOrder) {\n\t                    y2Axis.tickSize(dataBars.length ? 0 : -availableWidth, 0);\n\t                } else {\n\t                    y2Axis.tickSize(dataLines.length ? 0 : -availableWidth, 0);\n\t                }\n\t\n\t                // Calculate opacity of the axis\n\t                var barsOpacity = dataBars.length ? 1 : 0;\n\t                var linesOpacity = dataLines.length && !allDisabled(dataLines) ? 1 : 0;\n\t\n\t                var y1Opacity = switchYAxisOrder ? linesOpacity : barsOpacity;\n\t                var y2Opacity = switchYAxisOrder ? barsOpacity : linesOpacity;\n\t\n\t                g.select('.nv-focus .nv-y1.nv-axis')\n\t                    .style('opacity', y1Opacity);\n\t                g.select('.nv-focus .nv-y2.nv-axis')\n\t                    .style('opacity', y2Opacity)\n\t                    .attr('transform', 'translate(' + x.range()[1] + ',0)');\n\t\n\t                g.select('.nv-focus .nv-y1.nv-axis').transition().duration(transitionDuration)\n\t                    .call(y1Axis);\n\t                g.select('.nv-focus .nv-y2.nv-axis').transition().duration(transitionDuration)\n\t                    .call(y2Axis);\n\t            }\n\t\n\t            onBrush();\n\t\n\t        });\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    lines.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        tooltip\n\t            .duration(100)\n\t            .valueFormatter(function(d, i) {\n\t                return getLinesAxis().main.tickFormat()(d, i);\n\t            })\n\t            .data(evt)\n\t            .hidden(false);\n\t    });\n\t\n\t    lines.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true)\n\t    });\n\t\n\t    bars.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt.value = chart.x()(evt.data);\n\t        evt['series'] = {\n\t            value: chart.y()(evt.data),\n\t            color: evt.color\n\t        };\n\t        tooltip\n\t            .duration(0)\n\t            .valueFormatter(function(d, i) {\n\t                return getBarsAxis().main.tickFormat()(d, i);\n\t            })\n\t            .data(evt)\n\t            .hidden(false);\n\t    });\n\t\n\t    bars.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    bars.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.legend = legend;\n\t    chart.lines = lines;\n\t    chart.lines2 = lines2;\n\t    chart.bars = bars;\n\t    chart.bars2 = bars2;\n\t    chart.xAxis = xAxis;\n\t    chart.x2Axis = x2Axis;\n\t    chart.y1Axis = y1Axis;\n\t    chart.y2Axis = y2Axis;\n\t    chart.y3Axis = y3Axis;\n\t    chart.y4Axis = y4Axis;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        brushExtent:    {get: function(){return brushExtent;}, set: function(_){brushExtent=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        focusEnable:    {get: function(){return focusEnable;}, set: function(_){focusEnable=_;}},\n\t        focusHeight:    {get: function(){return focusHeight;}, set: function(_){focusHeight=_;}},\n\t        focusShowAxisX:    {get: function(){return focusShowAxisX;}, set: function(_){focusShowAxisX=_;}},\n\t        focusShowAxisY:    {get: function(){return focusShowAxisY;}, set: function(_){focusShowAxisY=_;}},\n\t        legendLeftAxisHint:    {get: function(){return legendLeftAxisHint;}, set: function(_){legendLeftAxisHint=_;}},\n\t        legendRightAxisHint:    {get: function(){return legendRightAxisHint;}, set: function(_){legendRightAxisHint=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        focusMargin: {get: function(){return margin2;}, set: function(_){\n\t            margin2.top    = _.top    !== undefined ? _.top    : margin2.top;\n\t            margin2.right  = _.right  !== undefined ? _.right  : margin2.right;\n\t            margin2.bottom = _.bottom !== undefined ? _.bottom : margin2.bottom;\n\t            margin2.left   = _.left   !== undefined ? _.left   : margin2.left;\n\t        }},\n\t        duration: {get: function(){return transitionDuration;}, set: function(_){\n\t            transitionDuration = _;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t        }},\n\t        x: {get: function(){return getX;}, set: function(_){\n\t            getX = _;\n\t            lines.x(_);\n\t            lines2.x(_);\n\t            bars.x(_);\n\t            bars2.x(_);\n\t        }},\n\t        y: {get: function(){return getY;}, set: function(_){\n\t            getY = _;\n\t            lines.y(_);\n\t            lines2.y(_);\n\t            bars.y(_);\n\t            bars2.y(_);\n\t        }},\n\t        switchYAxisOrder:    {get: function(){return switchYAxisOrder;}, set: function(_){\n\t            // Switch the tick format for the yAxis\n\t            if(switchYAxisOrder !== _) {\n\t                var y1 = y1Axis;\n\t                y1Axis = y2Axis;\n\t                y2Axis = y1;\n\t\n\t                var y3 = y3Axis;\n\t                y3Axis = y4Axis;\n\t                y4Axis = y3;\n\t            }\n\t            switchYAxisOrder=_;\n\t\n\t            y1Axis.orient('left');\n\t            y2Axis.orient('right');\n\t            y3Axis.orient('left');\n\t            y4Axis.orient('right');\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, lines);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.multiBar = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 960\n\t        , height = 500\n\t        , x = d3.scale.ordinal()\n\t        , y = d3.scale.linear()\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container = null\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n\t        , clipEdge = true\n\t        , stacked = false\n\t        , stackOffset = 'zero' // options include 'silhouette', 'wiggle', 'expand', 'zero', or a custom function\n\t        , color = nv.utils.defaultColor()\n\t        , hideable = false\n\t        , barColor = null // adding the ability to set the color for each rather than the whole group\n\t        , disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n\t        , duration = 500\n\t        , xDomain\n\t        , yDomain\n\t        , xRange\n\t        , yRange\n\t        , groupSpacing = 0.1\n\t        , fillOpacity = 0.75\n\t        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var x0, y0 //used to store previous scales\n\t        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n\t        ;\n\t\n\t    var last_datalength = 0;\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t            var nonStackableCount = 0;\n\t            // This function defines the requirements for render complete\n\t            var endFn = function(d, i) {\n\t                if (d.series === data.length - 1 && i === data[0].values.length - 1)\n\t                    return true;\n\t                return false;\n\t            };\n\t\n\t            if(hideable && data.length) hideable = [{\n\t                values: data[0].values.map(function(d) {\n\t                        return {\n\t                            x: d.x,\n\t                            y: 0,\n\t                            series: d.series,\n\t                            size: 0.01\n\t                        };}\n\t                )}];\n\t\n\t            if (stacked) {\n\t                var parsed = d3.layout.stack()\n\t                    .offset(stackOffset)\n\t                    .values(function(d){ return d.values })\n\t                    .y(getY)\n\t                (!data.length && hideable ? hideable : data);\n\t\n\t                parsed.forEach(function(series, i){\n\t                    // if series is non-stackable, use un-parsed data\n\t                    if (series.nonStackable) {\n\t                        data[i].nonStackableSeries = nonStackableCount++;\n\t                        parsed[i] = data[i];\n\t                    } else {\n\t                        // don't stack this seires on top of the nonStackable seriees\n\t                        if (i > 0 && parsed[i - 1].nonStackable){\n\t                            parsed[i].values.map(function(d,j){\n\t                                d.y0 -= parsed[i - 1].values[j].y;\n\t                                d.y1 = d.y0 + d.y;\n\t                            });\n\t                        }\n\t                    }\n\t                });\n\t                data = parsed;\n\t            }\n\t            //add series index and key to each data point for reference\n\t            data.forEach(function(series, i) {\n\t                series.values.forEach(function(point) {\n\t                    point.series = i;\n\t                    point.key = series.key;\n\t                });\n\t            });\n\t\n\t            // HACK for negative value stacking\n\t            if (stacked && data.length > 0) {\n\t                data[0].values.map(function(d,i) {\n\t                    var posBase = 0, negBase = 0;\n\t                    data.map(function(d, idx) {\n\t                        if (!data[idx].nonStackable) {\n\t                            var f = d.values[i]\n\t                            f.size = Math.abs(f.y);\n\t                            if (f.y<0)  {\n\t                                f.y1 = negBase;\n\t                                negBase = negBase - f.size;\n\t                            } else\n\t                            {\n\t                                f.y1 = f.size + posBase;\n\t                                posBase = posBase + f.size;\n\t                            }\n\t                        }\n\t\n\t                    });\n\t                });\n\t            }\n\t            // Setup Scales\n\t            // remap and flatten the data for use in calculating the scales' domains\n\t            var seriesData = (xDomain && yDomain) ? [] : // if we know xDomain and yDomain, no need to calculate\n\t                data.map(function(d, idx) {\n\t                    return d.values.map(function(d,i) {\n\t                        return { x: getX(d,i), y: getY(d,i), y0: d.y0, y1: d.y1, idx:idx }\n\t                    })\n\t                });\n\t\n\t            x.domain(xDomain || d3.merge(seriesData).map(function(d) { return d.x }))\n\t                .rangeBands(xRange || [0, availableWidth], groupSpacing);\n\t\n\t            y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function(d) {\n\t                var domain = d.y;\n\t                // increase the domain range if this series is stackable\n\t                if (stacked && !data[d.idx].nonStackable) {\n\t                    if (d.y > 0){\n\t                        domain = d.y1\n\t                    } else {\n\t                        domain = d.y1 + d.y\n\t                    }\n\t                }\n\t                return domain;\n\t            }).concat(forceY)))\n\t            .range(yRange || [availableHeight, 0]);\n\t\n\t            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\t            if (x.domain()[0] === x.domain()[1])\n\t                x.domain()[0] ?\n\t                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n\t                    : x.domain([-1,1]);\n\t\n\t            if (y.domain()[0] === y.domain()[1])\n\t                y.domain()[0] ?\n\t                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n\t                    : y.domain([-1,1]);\n\t\n\t            x0 = x0 || x;\n\t            y0 = y0 || y;\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-multibar').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibar');\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-groups');\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-edge-clip-' + id)\n\t                .append('rect');\n\t            wrap.select('#nv-edge-clip-' + id + ' rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\t\n\t            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n\t                .data(function(d) { return d }, function(d,i) { return i });\n\t            groups.enter().append('g')\n\t                .style('stroke-opacity', 1e-6)\n\t                .style('fill-opacity', 1e-6);\n\t\n\t            var exitTransition = renderWatch\n\t                .transition(groups.exit().selectAll('rect.nv-bar'), 'multibarExit', Math.min(100, duration))\n\t                .attr('y', function(d, i, j) {\n\t                    var yVal = y0(0) || 0;\n\t                    if (stacked) {\n\t                        if (data[d.series] && !data[d.series].nonStackable) {\n\t                            yVal = y0(d.y0);\n\t                        }\n\t                    }\n\t                    return yVal;\n\t                })\n\t                .attr('height', 0)\n\t                .remove();\n\t            if (exitTransition.delay)\n\t                exitTransition.delay(function(d,i) {\n\t                    var delay = i * (duration / (last_datalength + 1)) - i;\n\t                    return delay;\n\t                });\n\t            groups\n\t                .attr('class', function(d,i) { return 'nv-group nv-series-' + i })\n\t                .classed('hover', function(d) { return d.hover })\n\t                .style('fill', function(d,i){ return color(d, i) })\n\t                .style('stroke', function(d,i){ return color(d, i) });\n\t            groups\n\t                .style('stroke-opacity', 1)\n\t                .style('fill-opacity', fillOpacity);\n\t\n\t            var bars = groups.selectAll('rect.nv-bar')\n\t                .data(function(d) { return (hideable && !data.length) ? hideable.values : d.values });\n\t            bars.exit().remove();\n\t\n\t            var barsEnter = bars.enter().append('rect')\n\t                    .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive'})\n\t                    .attr('x', function(d,i,j) {\n\t                        return stacked && !data[j].nonStackable ? 0 : (j * x.rangeBand() / data.length )\n\t                    })\n\t                    .attr('y', function(d,i,j) { return y0(stacked && !data[j].nonStackable ? d.y0 : 0) || 0 })\n\t                    .attr('height', 0)\n\t                    .attr('width', function(d,i,j) { return x.rangeBand() / (stacked && !data[j].nonStackable ? 1 : data.length) })\n\t                    .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',0)'; })\n\t                ;\n\t            bars\n\t                .style('fill', function(d,i,j){ return color(d, j, i);  })\n\t                .style('stroke', function(d,i,j){ return color(d, j, i); })\n\t                .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here\n\t                    d3.select(this).classed('hover', true);\n\t                    dispatch.elementMouseover({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.elementMouseout({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mousemove', function(d,i) {\n\t                    dispatch.elementMousemove({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('click', function(d,i) {\n\t                    var element = this;\n\t                    dispatch.elementClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\"),\n\t                        event: d3.event,\n\t                        element: element\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                })\n\t                .on('dblclick', function(d,i) {\n\t                    dispatch.elementDblClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                });\n\t            bars\n\t                .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive'})\n\t                .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',0)'; })\n\t\n\t            if (barColor) {\n\t                if (!disabled) disabled = data.map(function() { return true });\n\t                bars\n\t                    .style('fill', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); })\n\t                    .style('stroke', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); });\n\t            }\n\t\n\t            var barSelection =\n\t                bars.watchTransition(renderWatch, 'multibar', Math.min(250, duration))\n\t                    .delay(function(d,i) {\n\t                        return i * duration / data[0].values.length;\n\t                    });\n\t            if (stacked){\n\t                barSelection\n\t                    .attr('y', function(d,i,j) {\n\t                        var yVal = 0;\n\t                        // if stackable, stack it on top of the previous series\n\t                        if (!data[j].nonStackable) {\n\t                            yVal = y(d.y1);\n\t                        } else {\n\t                            if (getY(d,i) < 0){\n\t                                yVal = y(0);\n\t                            } else {\n\t                                if (y(0) - y(getY(d,i)) < -1){\n\t                                    yVal = y(0) - 1;\n\t                                } else {\n\t                                    yVal = y(getY(d, i)) || 0;\n\t                                }\n\t                            }\n\t                        }\n\t                        return yVal;\n\t                    })\n\t                    .attr('height', function(d,i,j) {\n\t                        if (!data[j].nonStackable) {\n\t                            return Math.max(Math.abs(y(d.y+d.y0) - y(d.y0)), 0);\n\t                        } else {\n\t                            return Math.max(Math.abs(y(getY(d,i)) - y(0)), 0) || 0;\n\t                        }\n\t                    })\n\t                    .attr('x', function(d,i,j) {\n\t                        var width = 0;\n\t                        if (data[j].nonStackable) {\n\t                            width = d.series * x.rangeBand() / data.length;\n\t                            if (data.length !== nonStackableCount){\n\t                                width = data[j].nonStackableSeries * x.rangeBand()/(nonStackableCount*2);\n\t                            }\n\t                        }\n\t                        return width;\n\t                    })\n\t                    .attr('width', function(d,i,j){\n\t                        if (!data[j].nonStackable) {\n\t                            return x.rangeBand();\n\t                        } else {\n\t                            // if all series are nonStacable, take the full width\n\t                            var width = (x.rangeBand() / nonStackableCount);\n\t                            // otherwise, nonStackable graph will be only taking the half-width\n\t                            // of the x rangeBand\n\t                            if (data.length !== nonStackableCount) {\n\t                                width = x.rangeBand()/(nonStackableCount*2);\n\t                            }\n\t                            return width;\n\t                        }\n\t                    });\n\t            }\n\t            else {\n\t                barSelection\n\t                    .attr('x', function(d,i) {\n\t                        return d.series * x.rangeBand() / data.length;\n\t                    })\n\t                    .attr('width', x.rangeBand() / data.length)\n\t                    .attr('y', function(d,i) {\n\t                        return getY(d,i) < 0 ?\n\t                            y(0) :\n\t                                y(0) - y(getY(d,i)) < 1 ?\n\t                            y(0) - 1 :\n\t                            y(getY(d,i)) || 0;\n\t                    })\n\t                    .attr('height', function(d,i) {\n\t                        return Math.max(Math.abs(y(getY(d,i)) - y(0)),1) || 0;\n\t                    });\n\t            }\n\t\n\t            //store old scales for use in transitions on update\n\t            x0 = x.copy();\n\t            y0 = y.copy();\n\t\n\t            // keep track of the last data value length for transition calculations\n\t            if (data[0] && data[0].values) {\n\t                last_datalength = data[0].values.length;\n\t            }\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('multibar immediate');\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:   {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:  {get: function(){return height;}, set: function(_){height=_;}},\n\t        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n\t        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n\t        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n\t        stacked: {get: function(){return stacked;}, set: function(_){stacked=_;}},\n\t        stackOffset: {get: function(){return stackOffset;}, set: function(_){stackOffset=_;}},\n\t        clipEdge:    {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\t        disabled:    {get: function(){return disabled;}, set: function(_){disabled=_;}},\n\t        id:          {get: function(){return id;}, set: function(_){id=_;}},\n\t        hideable:    {get: function(){return hideable;}, set: function(_){hideable=_;}},\n\t        groupSpacing:{get: function(){return groupSpacing;}, set: function(_){groupSpacing=_;}},\n\t        fillOpacity: {get: function(){return fillOpacity;}, set: function(_){fillOpacity=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        barColor:  {get: function(){return barColor;}, set: function(_){\n\t            barColor = _ ? nv.utils.getColor(_) : null;\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\tnv.models.multiBarChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var multibar = nv.models.multiBar()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t        , interactiveLayer = nv.interactiveGuideline()\n\t        , legend = nv.models.legend()\n\t        , controls = nv.models.legend()\n\t        , tooltip = nv.models.tooltip()\n\t        ;\n\t\n\t    var margin = {top: 30, right: 20, bottom: 50, left: 60}\n\t        , marginTop = null\n\t        , width = null\n\t        , height = null\n\t        , color = nv.utils.defaultColor()\n\t        , showControls = true\n\t        , controlLabels = {}\n\t        , showLegend = true\n\t        , showXAxis = true\n\t        , showYAxis = true\n\t        , rightAlignYAxis = false\n\t        , reduceXTicks = true // if false a tick will show for every data point\n\t        , staggerLabels = false\n\t        , wrapLabels = false\n\t        , rotateLabels = 0\n\t        , x //can be accessed via chart.xScale()\n\t        , y //can be accessed via chart.yScale()\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , noData = null\n\t        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n\t        , controlWidth = function() { return showControls ? 180 : 0 }\n\t        , duration = 250\n\t        , useInteractiveGuideline = false\n\t        ;\n\t\n\t    state.stacked = false // DEPRECATED Maintained for backward compatibility\n\t\n\t    multibar.stacked(false);\n\t    xAxis\n\t        .orient('bottom')\n\t        .tickPadding(7)\n\t        .showMaxMin(false)\n\t        .tickFormat(function(d) { return d })\n\t    ;\n\t    yAxis\n\t        .orient((rightAlignYAxis) ? 'right' : 'left')\n\t        .tickFormat(d3.format(',.1f'))\n\t    ;\n\t\n\t    tooltip\n\t        .duration(0)\n\t        .valueFormatter(function(d, i) {\n\t            return yAxis.tickFormat()(d, i);\n\t        })\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    interactiveLayer.tooltip\n\t        .valueFormatter(function(d, i) {\n\t            return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n\t        })\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    interactiveLayer.tooltip\n\t        .valueFormatter(function (d, i) {\n\t            return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n\t        })\n\t        .headerFormatter(function (d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    interactiveLayer.tooltip\n\t        .duration(0)\n\t        .valueFormatter(function(d, i) {\n\t            return yAxis.tickFormat()(d, i);\n\t        })\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    controls.updateState(false);\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t    var stacked = false;\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled }),\n\t                stacked: stacked\n\t            };\n\t        }\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.stacked !== undefined)\n\t                stacked = state.stacked;\n\t            if (state.active !== undefined)\n\t                data.forEach(function(series,i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t        }\n\t    };\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(multibar);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this),\n\t                that = this;\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() {\n\t                if (duration === 0)\n\t                    container.call(chart);\n\t                else\n\t                    container.transition()\n\t                        .duration(duration)\n\t                        .call(chart);\n\t            };\n\t            chart.container = this;\n\t\n\t            state\n\t                .setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            // DEPRECATED set state.disableddisabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display noData message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            x = multibar.xScale();\n\t            y = multibar.yScale();\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-multiBarWithLegend').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarWithLegend').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-barsWrap');\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\t            gEnter.append('g').attr('class', 'nv-interactive');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                legend.width(availableWidth - controlWidth());\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .datum(data)\n\t                    .call(legend);\n\t\n\t                if (!marginTop && legend.height() !== margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(' + controlWidth() + ',' + (-margin.top) +')');\n\t            }\n\t\n\t            // Controls\n\t            if (!showControls) {\n\t                 g.select('.nv-controlsWrap').selectAll('*').remove();\n\t            } else {\n\t                var controlsData = [\n\t                    { key: controlLabels.grouped || 'Grouped', disabled: multibar.stacked() },\n\t                    { key: controlLabels.stacked || 'Stacked', disabled: !multibar.stacked() }\n\t                ];\n\t\n\t                controls.width(controlWidth()).color(['#444', '#444', '#444']);\n\t                g.select('.nv-controlsWrap')\n\t                    .datum(controlsData)\n\t                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n\t                    .call(controls);\n\t            }\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            // Main Chart Component(s)\n\t            multibar\n\t                .disabled(data.map(function(series) { return series.disabled }))\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function(d,i) { return !data[i].disabled }));\n\t\n\t\n\t            var barsWrap = g.select('.nv-barsWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled }));\n\t\n\t            barsWrap.call(multibar);\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize(-availableHeight, 0);\n\t\n\t                g.select('.nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n\t                g.select('.nv-x.nv-axis')\n\t                    .call(xAxis);\n\t\n\t                var xTicks = g.select('.nv-x.nv-axis > g').selectAll('g');\n\t\n\t                xTicks\n\t                    .selectAll('line, text')\n\t                    .style('opacity', 1)\n\t\n\t                if (staggerLabels) {\n\t                    var getTranslate = function(x,y) {\n\t                        return \"translate(\" + x + \",\" + y + \")\";\n\t                    };\n\t\n\t                    var staggerUp = 5, staggerDown = 17;  //pixels to stagger by\n\t                    // Issue #140\n\t                    xTicks\n\t                        .selectAll(\"text\")\n\t                        .attr('transform', function(d,i,j) {\n\t                            return  getTranslate(0, (j % 2 == 0 ? staggerUp : staggerDown));\n\t                        });\n\t\n\t                    var totalInBetweenTicks = d3.selectAll(\".nv-x.nv-axis .nv-wrap g g text\")[0].length;\n\t                    g.selectAll(\".nv-x.nv-axis .nv-axisMaxMin text\")\n\t                        .attr(\"transform\", function(d,i) {\n\t                            return getTranslate(0, (i === 0 || totalInBetweenTicks % 2 !== 0) ? staggerDown : staggerUp);\n\t                        });\n\t                }\n\t\n\t                if (wrapLabels) {\n\t                    g.selectAll('.tick text')\n\t                        .call(nv.utils.wrapTicks, chart.xAxis.rangeBand())\n\t                }\n\t\n\t                if (reduceXTicks)\n\t                    xTicks\n\t                        .filter(function(d,i) {\n\t                            return i % Math.ceil(data[0].values.length / (availableWidth / 100)) !== 0;\n\t                        })\n\t                        .selectAll('text, line')\n\t                        .style('opacity', 0);\n\t\n\t                if(rotateLabels)\n\t                    xTicks\n\t                        .selectAll('.tick text')\n\t                        .attr('transform', 'rotate(' + rotateLabels + ' 0,0)')\n\t                        .style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n\t\n\t                g.select('.nv-x.nv-axis').selectAll('g.nv-axisMaxMin text')\n\t                    .style('opacity', 1);\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                    .tickSize( -availableWidth, 0);\n\t\n\t                g.select('.nv-y.nv-axis')\n\t                    .call(yAxis);\n\t            }\n\t\n\t            //Set up interactive layer\n\t            if (useInteractiveGuideline) {\n\t                interactiveLayer\n\t                    .width(availableWidth)\n\t                    .height(availableHeight)\n\t                    .margin({left:margin.left, top:margin.top})\n\t                    .svgContainer(container)\n\t                    .xScale(x);\n\t                wrap.select(\".nv-interactive\").call(interactiveLayer);\n\t            }\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState)\n\t                    state[key] = newState[key];\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            controls.dispatch.on('legendClick', function(d,i) {\n\t                if (!d.disabled) return;\n\t                controlsData = controlsData.map(function(s) {\n\t                    s.disabled = true;\n\t                    return s;\n\t                });\n\t                d.disabled = false;\n\t\n\t                switch (d.key) {\n\t                    case 'Grouped':\n\t                    case controlLabels.grouped:\n\t                        multibar.stacked(false);\n\t                        break;\n\t                    case 'Stacked':\n\t                    case controlLabels.stacked:\n\t                        multibar.stacked(true);\n\t                        break;\n\t                }\n\t\n\t                state.stacked = multibar.stacked();\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            // Update chart from a state object passed to event handler\n\t            dispatch.on('changeState', function(e) {\n\t                if (typeof e.disabled !== 'undefined') {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t                    state.disabled = e.disabled;\n\t                }\n\t                if (typeof e.stacked !== 'undefined') {\n\t                    multibar.stacked(e.stacked);\n\t                    state.stacked = e.stacked;\n\t                    stacked = e.stacked;\n\t                }\n\t                chart.update();\n\t            });\n\t\n\t            if (useInteractiveGuideline) {\n\t                interactiveLayer.dispatch.on('elementMousemove', function(e) {\n\t                    if (e.pointXValue == undefined) return;\n\t\n\t                    var singlePoint, pointIndex, pointXLocation, xValue, allData = [];\n\t                    data\n\t                        .filter(function(series, i) {\n\t                            series.seriesIndex = i;\n\t                            return !series.disabled;\n\t                        })\n\t                        .forEach(function(series,i) {\n\t                            pointIndex = x.domain().indexOf(e.pointXValue)\n\t\n\t                            var point = series.values[pointIndex];\n\t                            if (point === undefined) return;\n\t\n\t                            xValue = point.x;\n\t                            if (singlePoint === undefined) singlePoint = point;\n\t                            if (pointXLocation === undefined) pointXLocation = e.mouseX\n\t                            allData.push({\n\t                                key: series.key,\n\t                                value: chart.y()(point, pointIndex),\n\t                                color: color(series,series.seriesIndex),\n\t                                data: series.values[pointIndex]\n\t                            });\n\t                        });\n\t\n\t                    interactiveLayer.tooltip\n\t                        .data({\n\t                            value: xValue,\n\t                            index: pointIndex,\n\t                            series: allData\n\t                        })();\n\t\n\t                    interactiveLayer.renderGuideLine(pointXLocation);\n\t                });\n\t\n\t                interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n\t                    interactiveLayer.tooltip.hidden(true);\n\t                });\n\t            }\n\t            else {\n\t                multibar.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t                    evt.value = chart.x()(evt.data);\n\t                    evt['series'] = {\n\t                        key: evt.data.key,\n\t                        value: chart.y()(evt.data),\n\t                        color: evt.color\n\t                    };\n\t                    tooltip.data(evt).hidden(false);\n\t                });\n\t\n\t                multibar.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true);\n\t                });\n\t\n\t                multibar.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t                    tooltip();\n\t                });\n\t            }\n\t        });\n\t\n\t        renderWatch.renderEnd('multibarchart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.multibar = multibar;\n\t    chart.legend = legend;\n\t    chart.controls = controls;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.state = state;\n\t    chart.tooltip = tooltip;\n\t    chart.interactiveLayer = interactiveLayer;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        showControls: {get: function(){return showControls;}, set: function(_){showControls=_;}},\n\t        controlLabels: {get: function(){return controlLabels;}, set: function(_){controlLabels=_;}},\n\t        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        reduceXTicks:    {get: function(){return reduceXTicks;}, set: function(_){reduceXTicks=_;}},\n\t        rotateLabels:    {get: function(){return rotateLabels;}, set: function(_){rotateLabels=_;}},\n\t        staggerLabels:    {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n\t        wrapLabels:   {get: function(){return wrapLabels;}, set: function(_){wrapLabels=!!_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            multibar.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t            renderWatch.reset(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n\t        }},\n\t        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n\t            useInteractiveGuideline = _;\n\t        }},\n\t        barColor:  {get: function(){return multibar.barColor;}, set: function(_){\n\t            multibar.barColor(_);\n\t            legend.color(function(d,i) {return d3.rgb('#ccc').darker(i * 1.5).toString();})\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, multibar);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.multiBarHorizontal = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 960\n\t        , height = 500\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container = null\n\t        , x = d3.scale.ordinal()\n\t        , y = d3.scale.linear()\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , getYerr = function(d) { return d.yErr }\n\t        , forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n\t        , color = nv.utils.defaultColor()\n\t        , barColor = null // adding the ability to set the color for each rather than the whole group\n\t        , disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n\t        , stacked = false\n\t        , showValues = false\n\t        , showBarLabels = false\n\t        , valuePadding = 60\n\t        , groupSpacing = 0.1\n\t        , fillOpacity = 0.75\n\t        , valueFormat = d3.format(',.2f')\n\t        , delay = 1200\n\t        , xDomain\n\t        , yDomain\n\t        , xRange\n\t        , yRange\n\t        , duration = 250\n\t        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var x0, y0; //used to store previous scales\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            if (stacked)\n\t                data = d3.layout.stack()\n\t                    .offset('zero')\n\t                    .values(function(d){ return d.values })\n\t                    .y(getY)\n\t                (data);\n\t\n\t            //add series index and key to each data point for reference\n\t            data.forEach(function(series, i) {\n\t                series.values.forEach(function(point) {\n\t                    point.series = i;\n\t                    point.key = series.key;\n\t                });\n\t            });\n\t\n\t            // HACK for negative value stacking\n\t            if (stacked)\n\t                data[0].values.map(function(d,i) {\n\t                    var posBase = 0, negBase = 0;\n\t                    data.map(function(d) {\n\t                        var f = d.values[i]\n\t                        f.size = Math.abs(f.y);\n\t                        if (f.y<0)  {\n\t                            f.y1 = negBase - f.size;\n\t                            negBase = negBase - f.size;\n\t                        } else\n\t                        {\n\t                            f.y1 = posBase;\n\t                            posBase = posBase + f.size;\n\t                        }\n\t                    });\n\t                });\n\t\n\t            // Setup Scales\n\t            // remap and flatten the data for use in calculating the scales' domains\n\t            var seriesData = (xDomain && yDomain) ? [] : // if we know xDomain and yDomain, no need to calculate\n\t                data.map(function(d) {\n\t                    return d.values.map(function(d,i) {\n\t                        return { x: getX(d,i), y: getY(d,i), y0: d.y0, y1: d.y1 }\n\t                    })\n\t                });\n\t\n\t            x.domain(xDomain || d3.merge(seriesData).map(function(d) { return d.x }))\n\t                .rangeBands(xRange || [0, availableHeight], groupSpacing);\n\t\n\t            y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function(d) { return stacked ? (d.y > 0 ? d.y1 + d.y : d.y1 ) : d.y }).concat(forceY)))\n\t\n\t            if (showValues && !stacked)\n\t                y.range(yRange || [(y.domain()[0] < 0 ? valuePadding : 0), availableWidth - (y.domain()[1] > 0 ? valuePadding : 0) ]);\n\t            else\n\t                y.range(yRange || [0, availableWidth]);\n\t\n\t            x0 = x0 || x;\n\t            y0 = y0 || d3.scale.linear().domain(y.domain()).range([y(0),y(0)]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = d3.select(this).selectAll('g.nv-wrap.nv-multibarHorizontal').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibarHorizontal');\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-groups');\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n\t                .data(function(d) { return d }, function(d,i) { return i });\n\t            groups.enter().append('g')\n\t                .style('stroke-opacity', 1e-6)\n\t                .style('fill-opacity', 1e-6);\n\t            groups.exit().watchTransition(renderWatch, 'multibarhorizontal: exit groups')\n\t                .style('stroke-opacity', 1e-6)\n\t                .style('fill-opacity', 1e-6)\n\t                .remove();\n\t            groups\n\t                .attr('class', function(d,i) { return 'nv-group nv-series-' + i })\n\t                .classed('hover', function(d) { return d.hover })\n\t                .style('fill', function(d,i){ return color(d, i) })\n\t                .style('stroke', function(d,i){ return color(d, i) });\n\t            groups.watchTransition(renderWatch, 'multibarhorizontal: groups')\n\t                .style('stroke-opacity', 1)\n\t                .style('fill-opacity', fillOpacity);\n\t\n\t            var bars = groups.selectAll('g.nv-bar')\n\t                .data(function(d) { return d.values });\n\t            bars.exit().remove();\n\t\n\t            var barsEnter = bars.enter().append('g')\n\t                .attr('transform', function(d,i,j) {\n\t                    return 'translate(' + y0(stacked ? d.y0 : 0) + ',' + (stacked ? 0 : (j * x.rangeBand() / data.length ) + x(getX(d,i))) + ')'\n\t                });\n\t\n\t            barsEnter.append('rect')\n\t                .attr('width', 0)\n\t                .attr('height', x.rangeBand() / (stacked ? 1 : data.length) )\n\t\n\t            bars\n\t                .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here\n\t                    d3.select(this).classed('hover', true);\n\t                    dispatch.elementMouseover({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.elementMouseout({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    dispatch.elementMouseout({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mousemove', function(d,i) {\n\t                    dispatch.elementMousemove({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('click', function(d,i) {\n\t                    var element = this;\n\t                    dispatch.elementClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\"),\n\t                        event: d3.event,\n\t                        element: element\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                })\n\t                .on('dblclick', function(d,i) {\n\t                    dispatch.elementDblClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                });\n\t\n\t            if (getYerr(data[0],0)) {\n\t                barsEnter.append('polyline');\n\t\n\t                bars.select('polyline')\n\t                    .attr('fill', 'none')\n\t                    .attr('points', function(d,i) {\n\t                        var xerr = getYerr(d,i)\n\t                            , mid = 0.8 * x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n\t                        xerr = xerr.length ? xerr : [-Math.abs(xerr), Math.abs(xerr)];\n\t                        xerr = xerr.map(function(e) { return y(e) - y(0); });\n\t                        var a = [[xerr[0],-mid], [xerr[0],mid], [xerr[0],0], [xerr[1],0], [xerr[1],-mid], [xerr[1],mid]];\n\t                        return a.map(function (path) { return path.join(',') }).join(' ');\n\t                    })\n\t                    .attr('transform', function(d,i) {\n\t                        var mid = x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n\t                        return 'translate(' + (getY(d,i) < 0 ? 0 : y(getY(d,i)) - y(0)) + ', ' + mid + ')'\n\t                    });\n\t            }\n\t\n\t            barsEnter.append('text');\n\t\n\t            if (showValues && !stacked) {\n\t                bars.select('text')\n\t                    .attr('text-anchor', function(d,i) { return getY(d,i) < 0 ? 'end' : 'start' })\n\t                    .attr('y', x.rangeBand() / (data.length * 2))\n\t                    .attr('dy', '.32em')\n\t                    .text(function(d,i) {\n\t                        var t = valueFormat(getY(d,i))\n\t                            , yerr = getYerr(d,i);\n\t                        if (yerr === undefined)\n\t                            return t;\n\t                        if (!yerr.length)\n\t                            return t + '±' + valueFormat(Math.abs(yerr));\n\t                        return t + '+' + valueFormat(Math.abs(yerr[1])) + '-' + valueFormat(Math.abs(yerr[0]));\n\t                    });\n\t                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n\t                    .select('text')\n\t                    .attr('x', function(d,i) { return getY(d,i) < 0 ? -4 : y(getY(d,i)) - y(0) + 4 })\n\t            } else {\n\t                bars.selectAll('text').text('');\n\t            }\n\t\n\t            if (showBarLabels && !stacked) {\n\t                barsEnter.append('text').classed('nv-bar-label',true);\n\t                bars.select('text.nv-bar-label')\n\t                    .attr('text-anchor', function(d,i) { return getY(d,i) < 0 ? 'start' : 'end' })\n\t                    .attr('y', x.rangeBand() / (data.length * 2))\n\t                    .attr('dy', '.32em')\n\t                    .text(function(d,i) { return getX(d,i) });\n\t                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n\t                    .select('text.nv-bar-label')\n\t                    .attr('x', function(d,i) { return getY(d,i) < 0 ? y(0) - y(getY(d,i)) + 4 : -4 });\n\t            }\n\t            else {\n\t                bars.selectAll('text.nv-bar-label').text('');\n\t            }\n\t\n\t            bars\n\t                .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive'})\n\t\n\t            if (barColor) {\n\t                if (!disabled) disabled = data.map(function() { return true });\n\t                bars\n\t                    .style('fill', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); })\n\t                    .style('stroke', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); });\n\t            }\n\t\n\t            if (stacked)\n\t                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n\t                    .attr('transform', function(d,i) {\n\t                        return 'translate(' + y(d.y1) + ',' + x(getX(d,i)) + ')'\n\t                    })\n\t                    .select('rect')\n\t                    .attr('width', function(d,i) {\n\t                        return Math.abs(y(getY(d,i) + d.y0) - y(d.y0)) || 0\n\t                    })\n\t                    .attr('height', x.rangeBand() );\n\t            else\n\t                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n\t                    .attr('transform', function(d,i) {\n\t                        //TODO: stacked must be all positive or all negative, not both?\n\t                        return 'translate(' +\n\t                            (getY(d,i) < 0 ? y(getY(d,i)) : y(0))\n\t                            + ',' +\n\t                            (d.series * x.rangeBand() / data.length\n\t                                +\n\t                                x(getX(d,i)) )\n\t                            + ')'\n\t                    })\n\t                    .select('rect')\n\t                    .attr('height', x.rangeBand() / data.length )\n\t                    .attr('width', function(d,i) {\n\t                        return Math.max(Math.abs(y(getY(d,i)) - y(0)),1) || 0\n\t                    });\n\t\n\t            //store old scales for use in transitions on update\n\t            x0 = x.copy();\n\t            y0 = y.copy();\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('multibarHorizontal immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:   {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:  {get: function(){return height;}, set: function(_){height=_;}},\n\t        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n\t        yErr:       {get: function(){return getYerr;}, set: function(_){getYerr=_;}},\n\t        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n\t        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n\t        stacked: {get: function(){return stacked;}, set: function(_){stacked=_;}},\n\t        showValues: {get: function(){return showValues;}, set: function(_){showValues=_;}},\n\t        // this shows the group name, seems pointless?\n\t        //showBarLabels:    {get: function(){return showBarLabels;}, set: function(_){showBarLabels=_;}},\n\t        disabled:     {get: function(){return disabled;}, set: function(_){disabled=_;}},\n\t        id:           {get: function(){return id;}, set: function(_){id=_;}},\n\t        valueFormat:  {get: function(){return valueFormat;}, set: function(_){valueFormat=_;}},\n\t        valuePadding: {get: function(){return valuePadding;}, set: function(_){valuePadding=_;}},\n\t        groupSpacing: {get: function(){return groupSpacing;}, set: function(_){groupSpacing=_;}},\n\t        fillOpacity:  {get: function(){return fillOpacity;}, set: function(_){fillOpacity=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        barColor:  {get: function(){return barColor;}, set: function(_){\n\t            barColor = _ ? nv.utils.getColor(_) : null;\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.multiBarHorizontalChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var multibar = nv.models.multiBarHorizontal()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t        , legend = nv.models.legend().height(30)\n\t        , controls = nv.models.legend().height(30)\n\t        , tooltip = nv.models.tooltip()\n\t        ;\n\t\n\t    var margin = {top: 30, right: 20, bottom: 50, left: 60}\n\t        , marginTop = null\n\t        , width = null\n\t        , height = null\n\t        , color = nv.utils.defaultColor()\n\t        , showControls = true\n\t        , controlLabels = {}\n\t        , showLegend = true\n\t        , showXAxis = true\n\t        , showYAxis = true\n\t        , stacked = false\n\t        , x //can be accessed via chart.xScale()\n\t        , y //can be accessed via chart.yScale()\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , noData = null\n\t        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd')\n\t        , controlWidth = function() { return showControls ? 180 : 0 }\n\t        , duration = 250\n\t        ;\n\t\n\t    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\t\n\t    multibar.stacked(stacked);\n\t\n\t    xAxis\n\t        .orient('left')\n\t        .tickPadding(5)\n\t        .showMaxMin(false)\n\t        .tickFormat(function(d) { return d })\n\t    ;\n\t    yAxis\n\t        .orient('bottom')\n\t        .tickFormat(d3.format(',.1f'))\n\t    ;\n\t\n\t    tooltip\n\t        .duration(0)\n\t        .valueFormatter(function(d, i) {\n\t            return yAxis.tickFormat()(d, i);\n\t        })\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    controls.updateState(false);\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled }),\n\t                stacked: stacked\n\t            };\n\t        }\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.stacked !== undefined)\n\t                stacked = state.stacked;\n\t            if (state.active !== undefined)\n\t                data.forEach(function(series,i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t        }\n\t    };\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(multibar);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this),\n\t                that = this;\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() { container.transition().duration(duration).call(chart) };\n\t            chart.container = this;\n\t\n\t            stacked = multibar.stacked();\n\t\n\t            state\n\t                .setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            // DEPRECATED set state.disableddisabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            x = multibar.xScale();\n\t            y = multibar.yScale().clamp(true);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-multiBarHorizontalChart').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarHorizontalChart').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis')\n\t                .append('g').attr('class', 'nv-zeroLine')\n\t                .append('line');\n\t            gEnter.append('g').attr('class', 'nv-barsWrap');\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                legend.width(availableWidth - controlWidth());\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .datum(data)\n\t                    .call(legend);\n\t\n\t                if (!marginTop && legend.height() !== margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(' + controlWidth() + ',' + (-margin.top) +')');\n\t            }\n\t\n\t            // Controls\n\t            if (!showControls) {\n\t                 g.select('.nv-controlsWrap').selectAll('*').remove();\n\t            } else {\n\t                var controlsData = [\n\t                    { key: controlLabels.grouped || 'Grouped', disabled: multibar.stacked() },\n\t                    { key: controlLabels.stacked || 'Stacked', disabled: !multibar.stacked() }\n\t                ];\n\t\n\t                controls.width(controlWidth()).color(['#444', '#444', '#444']);\n\t                g.select('.nv-controlsWrap')\n\t                    .datum(controlsData)\n\t                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n\t                    .call(controls);\n\t            }\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            // Main Chart Component(s)\n\t            multibar\n\t                .disabled(data.map(function(series) { return series.disabled }))\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function(d,i) { return !data[i].disabled }));\n\t\n\t            var barsWrap = g.select('.nv-barsWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled }));\n\t\n\t            barsWrap.transition().call(multibar);\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/24, data) )\n\t                    .tickSize(-availableWidth, 0);\n\t\n\t                g.select('.nv-x.nv-axis').call(xAxis);\n\t\n\t                var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\t\n\t                xTicks\n\t                    .selectAll('line, text');\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize( -availableHeight, 0);\n\t\n\t                g.select('.nv-y.nv-axis')\n\t                    .attr('transform', 'translate(0,' + availableHeight + ')');\n\t                g.select('.nv-y.nv-axis').call(yAxis);\n\t            }\n\t\n\t            // Zero line\n\t            g.select(\".nv-zeroLine line\")\n\t                .attr(\"x1\", y(0))\n\t                .attr(\"x2\", y(0))\n\t                .attr(\"y1\", 0)\n\t                .attr(\"y2\", -availableHeight)\n\t            ;\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState)\n\t                    state[key] = newState[key];\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            controls.dispatch.on('legendClick', function(d,i) {\n\t                if (!d.disabled) return;\n\t                controlsData = controlsData.map(function(s) {\n\t                    s.disabled = true;\n\t                    return s;\n\t                });\n\t                d.disabled = false;\n\t\n\t                switch (d.key) {\n\t                    case 'Grouped':\n\t                    case controlLabels.grouped:\n\t                        multibar.stacked(false);\n\t                        break;\n\t                    case 'Stacked':\n\t                    case controlLabels.stacked:\n\t                        multibar.stacked(true);\n\t                        break;\n\t                }\n\t\n\t                state.stacked = multibar.stacked();\n\t                dispatch.stateChange(state);\n\t                stacked = multibar.stacked();\n\t\n\t                chart.update();\n\t            });\n\t\n\t            // Update chart from a state object passed to event handler\n\t            dispatch.on('changeState', function(e) {\n\t\n\t                if (typeof e.disabled !== 'undefined') {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t\n\t                    state.disabled = e.disabled;\n\t                }\n\t\n\t                if (typeof e.stacked !== 'undefined') {\n\t                    multibar.stacked(e.stacked);\n\t                    state.stacked = e.stacked;\n\t                    stacked = e.stacked;\n\t                }\n\t\n\t                chart.update();\n\t            });\n\t        });\n\t        renderWatch.renderEnd('multibar horizontal chart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    multibar.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt.value = chart.x()(evt.data);\n\t        evt['series'] = {\n\t            key: evt.data.key,\n\t            value: chart.y()(evt.data),\n\t            color: evt.color\n\t        };\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    multibar.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    multibar.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.multibar = multibar;\n\t    chart.legend = legend;\n\t    chart.controls = controls;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.state = state;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        showControls: {get: function(){return showControls;}, set: function(_){showControls=_;}},\n\t        controlLabels: {get: function(){return controlLabels;}, set: function(_){controlLabels=_;}},\n\t        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            multibar.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t        }},\n\t        barColor:  {get: function(){return multibar.barColor;}, set: function(_){\n\t            multibar.barColor(_);\n\t            legend.color(function(d,i) {return d3.rgb('#ccc').darker(i * 1.5).toString();})\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, multibar);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\tnv.models.multiChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 30, right: 20, bottom: 50, left: 60},\n\t        marginTop = null,\n\t        color = nv.utils.defaultColor(),\n\t        width = null,\n\t        height = null,\n\t        showLegend = true,\n\t        noData = null,\n\t        yDomain1,\n\t        yDomain2,\n\t        getX = function(d) { return d.x },\n\t        getY = function(d) { return d.y},\n\t        interpolate = 'linear',\n\t        useVoronoi = true,\n\t        interactiveLayer = nv.interactiveGuideline(),\n\t        useInteractiveGuideline = false,\n\t        legendRightAxisHint = ' (right axis)',\n\t        duration = 250\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var x = d3.scale.linear(),\n\t        yScale1 = d3.scale.linear(),\n\t        yScale2 = d3.scale.linear(),\n\t\n\t        lines1 = nv.models.line().yScale(yScale1).duration(duration),\n\t        lines2 = nv.models.line().yScale(yScale2).duration(duration),\n\t\n\t        scatters1 = nv.models.scatter().yScale(yScale1).duration(duration),\n\t        scatters2 = nv.models.scatter().yScale(yScale2).duration(duration),\n\t\n\t        bars1 = nv.models.multiBar().stacked(false).yScale(yScale1).duration(duration),\n\t        bars2 = nv.models.multiBar().stacked(false).yScale(yScale2).duration(duration),\n\t\n\t        stack1 = nv.models.stackedArea().yScale(yScale1).duration(duration),\n\t        stack2 = nv.models.stackedArea().yScale(yScale2).duration(duration),\n\t\n\t        xAxis = nv.models.axis().scale(x).orient('bottom').tickPadding(5).duration(duration),\n\t        yAxis1 = nv.models.axis().scale(yScale1).orient('left').duration(duration),\n\t        yAxis2 = nv.models.axis().scale(yScale2).orient('right').duration(duration),\n\t\n\t        legend = nv.models.legend().height(30),\n\t        tooltip = nv.models.tooltip(),\n\t        dispatch = d3.dispatch();\n\t\n\t    var charts = [lines1, lines2, scatters1, scatters2, bars1, bars2, stack1, stack2];\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            var container = d3.select(this),\n\t                that = this;\n\t            nv.utils.initSVG(container);\n\t\n\t            chart.update = function() { container.transition().call(chart); };\n\t            chart.container = this;\n\t\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            var dataLines1 = data.filter(function(d) {return d.type == 'line' && d.yAxis == 1});\n\t            var dataLines2 = data.filter(function(d) {return d.type == 'line' && d.yAxis == 2});\n\t            var dataScatters1 = data.filter(function(d) {return d.type == 'scatter' && d.yAxis == 1});\n\t            var dataScatters2 = data.filter(function(d) {return d.type == 'scatter' && d.yAxis == 2});\n\t            var dataBars1 =  data.filter(function(d) {return d.type == 'bar'  && d.yAxis == 1});\n\t            var dataBars2 =  data.filter(function(d) {return d.type == 'bar'  && d.yAxis == 2});\n\t            var dataStack1 = data.filter(function(d) {return d.type == 'area' && d.yAxis == 1});\n\t            var dataStack2 = data.filter(function(d) {return d.type == 'area' && d.yAxis == 2});\n\t\n\t            // Display noData message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container);\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            var series1 = data.filter(function(d) {return !d.disabled && d.yAxis == 1})\n\t                .map(function(d) {\n\t                    return d.values.map(function(d,i) {\n\t                        return { x: getX(d), y: getY(d) }\n\t                    })\n\t                });\n\t\n\t            var series2 = data.filter(function(d) {return !d.disabled && d.yAxis == 2})\n\t                .map(function(d) {\n\t                    return d.values.map(function(d,i) {\n\t                        return { x: getX(d), y: getY(d) }\n\t                    })\n\t                });\n\t\n\t            x   .domain(d3.extent(d3.merge(series1.concat(series2)), function(d) { return d.x }))\n\t                .range([0, availableWidth]);\n\t\n\t            var wrap = container.selectAll('g.wrap.multiChart').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'wrap nvd3 multiChart').append('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y1 nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y2 nv-axis');\n\t            gEnter.append('g').attr('class', 'stack1Wrap');\n\t            gEnter.append('g').attr('class', 'stack2Wrap');\n\t            gEnter.append('g').attr('class', 'bars1Wrap');\n\t            gEnter.append('g').attr('class', 'bars2Wrap');\n\t            gEnter.append('g').attr('class', 'scatters1Wrap');\n\t            gEnter.append('g').attr('class', 'scatters2Wrap');\n\t            gEnter.append('g').attr('class', 'lines1Wrap');\n\t            gEnter.append('g').attr('class', 'lines2Wrap');\n\t            gEnter.append('g').attr('class', 'legendWrap');\n\t            gEnter.append('g').attr('class', 'nv-interactive');\n\t\n\t            var g = wrap.select('g');\n\t\n\t            var color_array = data.map(function(d,i) {\n\t                return data[i].color || color(d, i);\n\t            });\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.legendWrap').selectAll('*').remove();\n\t            } else {\n\t                var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n\t                var legendXPosition = legend.align() ? legendWidth : 0;\n\t\n\t                legend.width(legendWidth);\n\t                legend.color(color_array);\n\t\n\t                g.select('.legendWrap')\n\t                    .datum(data.map(function(series) {\n\t                        series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n\t                        series.key = series.originalKey + (series.yAxis == 1 ? '' : legendRightAxisHint);\n\t                        return series;\n\t                    }))\n\t                    .call(legend);\n\t\n\t                if (!marginTop && legend.height() !== margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                g.select('.legendWrap')\n\t                    .attr('transform', 'translate(' + legendXPosition + ',' + (-margin.top) +')');\n\t            }\n\t\n\t            lines1\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .interpolate(interpolate)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'line'}));\n\t            lines2\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .interpolate(interpolate)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'line'}));\n\t            scatters1\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'scatter'}));\n\t            scatters2\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'scatter'}));\n\t            bars1\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'bar'}));\n\t            bars2\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'bar'}));\n\t            stack1\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .interpolate(interpolate)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'area'}));\n\t            stack2\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .interpolate(interpolate)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'area'}));\n\t\n\t            g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            var lines1Wrap = g.select('.lines1Wrap')\n\t                .datum(dataLines1.filter(function(d){return !d.disabled}));\n\t            var scatters1Wrap = g.select('.scatters1Wrap')\n\t                .datum(dataScatters1.filter(function(d){return !d.disabled}));\n\t            var bars1Wrap = g.select('.bars1Wrap')\n\t                .datum(dataBars1.filter(function(d){return !d.disabled}));\n\t            var stack1Wrap = g.select('.stack1Wrap')\n\t                .datum(dataStack1.filter(function(d){return !d.disabled}));\n\t            var lines2Wrap = g.select('.lines2Wrap')\n\t                .datum(dataLines2.filter(function(d){return !d.disabled}));\n\t            var scatters2Wrap = g.select('.scatters2Wrap')\n\t                .datum(dataScatters2.filter(function(d){return !d.disabled}));\n\t            var bars2Wrap = g.select('.bars2Wrap')\n\t                .datum(dataBars2.filter(function(d){return !d.disabled}));\n\t            var stack2Wrap = g.select('.stack2Wrap')\n\t                .datum(dataStack2.filter(function(d){return !d.disabled}));\n\t\n\t            var extraValue1 = dataStack1.length ? dataStack1.map(function(a){return a.values}).reduce(function(a,b){\n\t                return a.map(function(aVal,i){return {x: aVal.x, y: aVal.y + b[i].y}})\n\t            }).concat([{x:0, y:0}]) : [];\n\t            var extraValue2 = dataStack2.length ? dataStack2.map(function(a){return a.values}).reduce(function(a,b){\n\t                return a.map(function(aVal,i){return {x: aVal.x, y: aVal.y + b[i].y}})\n\t            }).concat([{x:0, y:0}]) : [];\n\t\n\t            yScale1 .domain(yDomain1 || d3.extent(d3.merge(series1).concat(extraValue1), function(d) { return d.y } ))\n\t                .range([0, availableHeight]);\n\t\n\t            yScale2 .domain(yDomain2 || d3.extent(d3.merge(series2).concat(extraValue2), function(d) { return d.y } ))\n\t                .range([0, availableHeight]);\n\t\n\t            lines1.yDomain(yScale1.domain());\n\t            scatters1.yDomain(yScale1.domain());\n\t            bars1.yDomain(yScale1.domain());\n\t            stack1.yDomain(yScale1.domain());\n\t\n\t            lines2.yDomain(yScale2.domain());\n\t            scatters2.yDomain(yScale2.domain());\n\t            bars2.yDomain(yScale2.domain());\n\t            stack2.yDomain(yScale2.domain());\n\t\n\t            if(dataStack1.length){d3.transition(stack1Wrap).call(stack1);}\n\t            if(dataStack2.length){d3.transition(stack2Wrap).call(stack2);}\n\t\n\t            if(dataBars1.length){d3.transition(bars1Wrap).call(bars1);}\n\t            if(dataBars2.length){d3.transition(bars2Wrap).call(bars2);}\n\t\n\t            if(dataLines1.length){d3.transition(lines1Wrap).call(lines1);}\n\t            if(dataLines2.length){d3.transition(lines2Wrap).call(lines2);}\n\t\n\t            if(dataScatters1.length){d3.transition(scatters1Wrap).call(scatters1);}\n\t            if(dataScatters2.length){d3.transition(scatters2Wrap).call(scatters2);}\n\t\n\t            xAxis\n\t                ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                .tickSize(-availableHeight, 0);\n\t\n\t            g.select('.nv-x.nv-axis')\n\t                .attr('transform', 'translate(0,' + availableHeight + ')');\n\t            d3.transition(g.select('.nv-x.nv-axis'))\n\t                .call(xAxis);\n\t\n\t            yAxis1\n\t                ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                .tickSize( -availableWidth, 0);\n\t\n\t\n\t            d3.transition(g.select('.nv-y1.nv-axis'))\n\t                .call(yAxis1);\n\t\n\t            yAxis2\n\t                ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                .tickSize( -availableWidth, 0);\n\t\n\t            d3.transition(g.select('.nv-y2.nv-axis'))\n\t                .call(yAxis2);\n\t\n\t            g.select('.nv-y1.nv-axis')\n\t                .classed('nv-disabled', series1.length ? false : true)\n\t                .attr('transform', 'translate(' + x.range()[0] + ',0)');\n\t\n\t            g.select('.nv-y2.nv-axis')\n\t                .classed('nv-disabled', series2.length ? false : true)\n\t                .attr('transform', 'translate(' + x.range()[1] + ',0)');\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                chart.update();\n\t            });\n\t\n\t            if(useInteractiveGuideline){\n\t                interactiveLayer\n\t                    .width(availableWidth)\n\t                    .height(availableHeight)\n\t                    .margin({left:margin.left, top:margin.top})\n\t                    .svgContainer(container)\n\t                    .xScale(x);\n\t                wrap.select(\".nv-interactive\").call(interactiveLayer);\n\t            }\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching\n\t            //------------------------------------------------------------\n\t\n\t            function mouseover_line(evt) {\n\t                var yaxis = data[evt.seriesIndex].yAxis === 2 ? yAxis2 : yAxis1;\n\t                evt.value = evt.point.x;\n\t                evt.series = {\n\t                    value: evt.point.y,\n\t                    color: evt.point.color,\n\t                    key: evt.series.key\n\t                };\n\t                tooltip\n\t                    .duration(0)\n\t                    .headerFormatter(function(d, i) {\n\t                    \treturn xAxis.tickFormat()(d, i);\n\t                    })\n\t                    .valueFormatter(function(d, i) {\n\t                        return yaxis.tickFormat()(d, i);\n\t                    })\n\t                    .data(evt)\n\t                    .hidden(false);\n\t            }\n\t\n\t            function mouseover_scatter(evt) {\n\t                var yaxis = data[evt.seriesIndex].yAxis === 2 ? yAxis2 : yAxis1;\n\t                evt.value = evt.point.x;\n\t                evt.series = {\n\t                    value: evt.point.y,\n\t                    color: evt.point.color,\n\t                    key: evt.series.key\n\t                };\n\t                tooltip\n\t                    .duration(100)\n\t                    .headerFormatter(function(d, i) {\n\t                    \treturn xAxis.tickFormat()(d, i);\n\t                    })\n\t                    .valueFormatter(function(d, i) {\n\t                        return yaxis.tickFormat()(d, i);\n\t                    })\n\t                    .data(evt)\n\t                    .hidden(false);\n\t            }\n\t\n\t            function mouseover_stack(evt) {\n\t                var yaxis = data[evt.seriesIndex].yAxis === 2 ? yAxis2 : yAxis1;\n\t                evt.point['x'] = stack1.x()(evt.point);\n\t                evt.point['y'] = stack1.y()(evt.point);\n\t                tooltip\n\t                    .duration(0)\n\t                    .headerFormatter(function(d, i) {\n\t                    \treturn xAxis.tickFormat()(d, i);\n\t                    })\n\t                    .valueFormatter(function(d, i) {\n\t                        return yaxis.tickFormat()(d, i);\n\t                    })\n\t                    .data(evt)\n\t                    .hidden(false);\n\t            }\n\t\n\t            function mouseover_bar(evt) {\n\t                var yaxis = data[evt.data.series].yAxis === 2 ? yAxis2 : yAxis1;\n\t\n\t                evt.value = bars1.x()(evt.data);\n\t                evt['series'] = {\n\t                    value: bars1.y()(evt.data),\n\t                    color: evt.color,\n\t                    key: evt.data.key\n\t                };\n\t                tooltip\n\t                    .duration(0)\n\t                    .headerFormatter(function(d, i) {\n\t                    \treturn xAxis.tickFormat()(d, i);\n\t                    })\n\t                    .valueFormatter(function(d, i) {\n\t                        return yaxis.tickFormat()(d, i);\n\t                    })\n\t                    .data(evt)\n\t                    .hidden(false);\n\t            }\n\t\n\t\n\t\n\t            function clearHighlights() {\n\t              for(var i=0, il=charts.length; i < il; i++){\n\t                var chart = charts[i];\n\t                try {\n\t                  chart.clearHighlights();\n\t                } catch(e){}\n\t              }\n\t            }\n\t\n\t            function highlightPoint(serieIndex, pointIndex, b){\n\t              for(var i=0, il=charts.length; i < il; i++){\n\t                var chart = charts[i];\n\t                try {\n\t                  chart.highlightPoint(serieIndex, pointIndex, b);\n\t                } catch(e){}\n\t              }\n\t            }\n\t\n\t            if(useInteractiveGuideline){\n\t                interactiveLayer.dispatch.on('elementMousemove', function(e) {\n\t                    clearHighlights();\n\t                    var singlePoint, pointIndex, pointXLocation, allData = [];\n\t                    data\n\t                    .filter(function(series, i) {\n\t                        series.seriesIndex = i;\n\t                        return !series.disabled;\n\t                    })\n\t                    .forEach(function(series,i) {\n\t                        var extent = x.domain();\n\t                        var currentValues = series.values.filter(function(d,i) {\n\t                            return chart.x()(d,i) >= extent[0] && chart.x()(d,i) <= extent[1];\n\t                        });\n\t\n\t                        pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, chart.x());\n\t                        var point = currentValues[pointIndex];\n\t                        var pointYValue = chart.y()(point, pointIndex);\n\t                        if (pointYValue !== null) {\n\t                            highlightPoint(i, pointIndex, true);\n\t                        }\n\t                        if (point === undefined) return;\n\t                        if (singlePoint === undefined) singlePoint = point;\n\t                        if (pointXLocation === undefined) pointXLocation = x(chart.x()(point,pointIndex));\n\t                        allData.push({\n\t                            key: series.key,\n\t                            value: pointYValue,\n\t                            color: color(series,series.seriesIndex),\n\t                            data: point,\n\t                            yAxis: series.yAxis == 2 ? yAxis2 : yAxis1\n\t                        });\n\t                    });\n\t\n\t                    var defaultValueFormatter = function(d,i) {\n\t                        var yAxis = allData[i].yAxis;\n\t                        return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n\t                    };\n\t\n\t                    interactiveLayer.tooltip\n\t                        .headerFormatter(function(d, i) {\n\t                            return xAxis.tickFormat()(d, i);\n\t                        })\n\t                        .valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter)\n\t                        .data({\n\t                            value: chart.x()( singlePoint,pointIndex ),\n\t                            index: pointIndex,\n\t                            series: allData\n\t                        })();\n\t\n\t                    interactiveLayer.renderGuideLine(pointXLocation);\n\t                });\n\t\n\t                interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n\t                    clearHighlights();\n\t                });\n\t            } else {\n\t                lines1.dispatch.on('elementMouseover.tooltip', mouseover_line);\n\t                lines2.dispatch.on('elementMouseover.tooltip', mouseover_line);\n\t                lines1.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true)\n\t                });\n\t                lines2.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true)\n\t                });\n\t\n\t                scatters1.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n\t                scatters2.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n\t                scatters1.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true)\n\t                });\n\t                scatters2.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true)\n\t                });\n\t\n\t                stack1.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n\t                stack2.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n\t                stack1.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true)\n\t                });\n\t                stack2.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true)\n\t                });\n\t\n\t                bars1.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n\t                bars2.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n\t\n\t                bars1.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true);\n\t                });\n\t                bars2.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true);\n\t                });\n\t                bars1.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t                    tooltip();\n\t                });\n\t                bars2.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t                    tooltip();\n\t                });\n\t            }\n\t        });\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Global getters and setters\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.legend = legend;\n\t    chart.lines1 = lines1;\n\t    chart.lines2 = lines2;\n\t    chart.scatters1 = scatters1;\n\t    chart.scatters2 = scatters2;\n\t    chart.bars1 = bars1;\n\t    chart.bars2 = bars2;\n\t    chart.stack1 = stack1;\n\t    chart.stack2 = stack2;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis1 = yAxis1;\n\t    chart.yAxis2 = yAxis2;\n\t    chart.tooltip = tooltip;\n\t    chart.interactiveLayer = interactiveLayer;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        yDomain1:      {get: function(){return yDomain1;}, set: function(_){yDomain1=_;}},\n\t        yDomain2:    {get: function(){return yDomain2;}, set: function(_){yDomain2=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        interpolate:    {get: function(){return interpolate;}, set: function(_){interpolate=_;}},\n\t        legendRightAxisHint:    {get: function(){return legendRightAxisHint;}, set: function(_){legendRightAxisHint=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        x: {get: function(){return getX;}, set: function(_){\n\t            getX = _;\n\t            lines1.x(_);\n\t            lines2.x(_);\n\t            scatters1.x(_);\n\t            scatters2.x(_);\n\t            bars1.x(_);\n\t            bars2.x(_);\n\t            stack1.x(_);\n\t            stack2.x(_);\n\t        }},\n\t        y: {get: function(){return getY;}, set: function(_){\n\t            getY = _;\n\t            lines1.y(_);\n\t            lines2.y(_);\n\t            scatters1.y(_);\n\t            scatters2.y(_);\n\t            stack1.y(_);\n\t            stack2.y(_);\n\t            bars1.y(_);\n\t            bars2.y(_);\n\t        }},\n\t        useVoronoi: {get: function(){return useVoronoi;}, set: function(_){\n\t            useVoronoi=_;\n\t            lines1.useVoronoi(_);\n\t            lines2.useVoronoi(_);\n\t            stack1.useVoronoi(_);\n\t            stack2.useVoronoi(_);\n\t        }},\n\t\n\t        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n\t            useInteractiveGuideline = _;\n\t            if (useInteractiveGuideline) {\n\t                lines1.interactive(false);\n\t                lines1.useVoronoi(false);\n\t                lines2.interactive(false);\n\t                lines2.useVoronoi(false);\n\t                stack1.interactive(false);\n\t                stack1.useVoronoi(false);\n\t                stack2.interactive(false);\n\t                stack2.useVoronoi(false);\n\t                scatters1.interactive(false);\n\t                scatters2.interactive(false);\n\t            }\n\t        }},\n\t\n\t        duration: {get: function(){return duration;}, set: function(_) {\n\t            duration = _;\n\t            [lines1, lines2, stack1, stack2, scatters1, scatters2, xAxis, yAxis1, yAxis2].forEach(function(model){\n\t              model.duration(duration);\n\t            });\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.ohlcBar = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = null\n\t        , height = null\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container = null\n\t        , x = d3.scale.linear()\n\t        , y = d3.scale.linear()\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , getOpen = function(d) { return d.open }\n\t        , getClose = function(d) { return d.close }\n\t        , getHigh = function(d) { return d.high }\n\t        , getLow = function(d) { return d.low }\n\t        , forceX = []\n\t        , forceY = []\n\t        , padData     = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n\t        , clipEdge = true\n\t        , color = nv.utils.defaultColor()\n\t        , interactive = false\n\t        , xDomain\n\t        , yDomain\n\t        , xRange\n\t        , yRange\n\t        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove')\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            container = d3.select(this);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            nv.utils.initSVG(container);\n\t\n\t            // ohlc bar width.\n\t            var w = (availableWidth / data[0].values.length) * .9;\n\t\n\t            // Setup Scales\n\t            x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX) ));\n\t\n\t            if (padData)\n\t                x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n\t            else\n\t                x.range(xRange || [5 + w/2, availableWidth - w/2 - 5]);\n\t\n\t            y.domain(yDomain || [\n\t                    d3.min(data[0].values.map(getLow).concat(forceY)),\n\t                    d3.max(data[0].values.map(getHigh).concat(forceY))\n\t                ]\n\t            ).range(yRange || [availableHeight, 0]);\n\t\n\t            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\t            if (x.domain()[0] === x.domain()[1])\n\t                x.domain()[0] ?\n\t                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n\t                    : x.domain([-1,1]);\n\t\n\t            if (y.domain()[0] === y.domain()[1])\n\t                y.domain()[0] ?\n\t                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n\t                    : y.domain([-1,1]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = d3.select(this).selectAll('g.nv-wrap.nv-ohlcBar').data([data[0].values]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-ohlcBar');\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-ticks');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container\n\t                .on('click', function(d,i) {\n\t                    dispatch.chartClick({\n\t                        data: d,\n\t                        index: i,\n\t                        pos: d3.event,\n\t                        id: id\n\t                    });\n\t                });\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-chart-clip-path-' + id)\n\t                .append('rect');\n\t\n\t            wrap.select('#nv-chart-clip-path-' + id + ' rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            g   .attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n\t\n\t            var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick')\n\t                .data(function(d) { return d });\n\t            ticks.exit().remove();\n\t\n\t            ticks.enter().append('path')\n\t                .attr('class', function(d,i,j) { return (getOpen(d,i) > getClose(d,i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i })\n\t                .attr('d', function(d,i) {\n\t                    return 'm0,0l0,'\n\t                        + (y(getOpen(d,i))\n\t                            - y(getHigh(d,i)))\n\t                        + 'l'\n\t                        + (-w/2)\n\t                        + ',0l'\n\t                        + (w/2)\n\t                        + ',0l0,'\n\t                        + (y(getLow(d,i)) - y(getOpen(d,i)))\n\t                        + 'l0,'\n\t                        + (y(getClose(d,i))\n\t                            - y(getLow(d,i)))\n\t                        + 'l'\n\t                        + (w/2)\n\t                        + ',0l'\n\t                        + (-w/2)\n\t                        + ',0z';\n\t                })\n\t                .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',' + y(getHigh(d,i)) + ')'; })\n\t                .attr('fill', function(d,i) { return color[0]; })\n\t                .attr('stroke', function(d,i) { return color[0]; })\n\t                .attr('x', 0 )\n\t                .attr('y', function(d,i) {  return y(Math.max(0, getY(d,i))) })\n\t                .attr('height', function(d,i) { return Math.abs(y(getY(d,i)) - y(0)) });\n\t\n\t            // the bar colors are controlled by CSS currently\n\t            ticks.attr('class', function(d,i,j) {\n\t                return (getOpen(d,i) > getClose(d,i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n\t            });\n\t\n\t            d3.transition(ticks)\n\t                .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',' + y(getHigh(d,i)) + ')'; })\n\t                .attr('d', function(d,i) {\n\t                    var w = (availableWidth / data[0].values.length) * .9;\n\t                    return 'm0,0l0,'\n\t                        + (y(getOpen(d,i))\n\t                            - y(getHigh(d,i)))\n\t                        + 'l'\n\t                        + (-w/2)\n\t                        + ',0l'\n\t                        + (w/2)\n\t                        + ',0l0,'\n\t                        + (y(getLow(d,i))\n\t                            - y(getOpen(d,i)))\n\t                        + 'l0,'\n\t                        + (y(getClose(d,i))\n\t                            - y(getLow(d,i)))\n\t                        + 'l'\n\t                        + (w/2)\n\t                        + ',0l'\n\t                        + (-w/2)\n\t                        + ',0z';\n\t                });\n\t        });\n\t\n\t        return chart;\n\t    }\n\t\n\t\n\t    //Create methods to allow outside functions to highlight a specific bar.\n\t    chart.highlightPoint = function(pointIndex, isHoverOver) {\n\t        chart.clearHighlights();\n\t        container.select(\".nv-ohlcBar .nv-tick-0-\" + pointIndex)\n\t            .classed(\"hover\", isHoverOver)\n\t        ;\n\t    };\n\t\n\t    chart.clearHighlights = function() {\n\t        container.select(\".nv-ohlcBar .nv-tick.hover\")\n\t            .classed(\"hover\", false)\n\t        ;\n\t    };\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:    {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:   {get: function(){return height;}, set: function(_){height=_;}},\n\t        xScale:   {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:   {get: function(){return y;}, set: function(_){y=_;}},\n\t        xDomain:  {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain:  {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:   {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:   {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        forceX:   {get: function(){return forceX;}, set: function(_){forceX=_;}},\n\t        forceY:   {get: function(){return forceY;}, set: function(_){forceY=_;}},\n\t        padData:  {get: function(){return padData;}, set: function(_){padData=_;}},\n\t        clipEdge: {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\t        id:       {get: function(){return id;}, set: function(_){id=_;}},\n\t        interactive: {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\t\n\t        x:     {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        y:     {get: function(){return getY;}, set: function(_){getY=_;}},\n\t        open:  {get: function(){return getOpen();}, set: function(_){getOpen=_;}},\n\t        close: {get: function(){return getClose();}, set: function(_){getClose=_;}},\n\t        high:  {get: function(){return getHigh;}, set: function(_){getHigh=_;}},\n\t        low:   {get: function(){return getLow;}, set: function(_){getLow=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    != undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  != undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   != undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\t// Code adapted from Jason Davies' \"Parallel Coordinates\"\n\t// http://bl.ocks.org/jasondavies/1341281\n\tnv.models.parallelCoordinates = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 30, right: 0, bottom: 10, left: 0}\n\t        , width = null\n\t        , height = null\n\t        , availableWidth = null\n\t        , availableHeight = null\n\t        , x = d3.scale.ordinal()\n\t        , y = {}\n\t        , undefinedValuesLabel = \"undefined values\"\n\t        , dimensionData = []\n\t        , enabledDimensions = []\n\t        , dimensionNames = []\n\t        , displayBrush = true\n\t        , color = nv.utils.defaultColor()\n\t        , filters = []\n\t        , active = []\n\t        , dragging = []\n\t        , axisWithUndefinedValues = []\n\t        , lineTension = 1\n\t        , foreground\n\t        , background\n\t        , dimensions\n\t        , line = d3.svg.line()\n\t        , axis = d3.svg.axis()\n\t        , dispatch = d3.dispatch('brushstart', 'brush', 'brushEnd', 'dimensionsOrder', \"stateChange\", 'elementClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd', 'activeChanged')\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            availableWidth = nv.utils.availableWidth(width, container, margin);\n\t            availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            nv.utils.initSVG(container);\n\t\n\t           //Convert old data to new format (name, values)\n\t            if (data[0].values === undefined) {\n\t                var newData = [];\n\t                data.forEach(function (d) {\n\t                        var val = {};\n\t                        var key = Object.keys(d);\n\t                        key.forEach(function (k) { if (k !== \"name\") val[k] = d[k] });\n\t                        newData.push({ key: d.name, values: val });\n\t                });\n\t                data = newData;\n\t            }\n\t\n\t            var dataValues = data.map(function (d) {return d.values});\n\t            if (active.length === 0) {\n\t                active = data;\n\t            }; //set all active before first brush call\n\t            \n\t            dimensionNames = dimensionData.sort(function (a, b) { return a.currentPosition - b.currentPosition; }).map(function (d) { return d.key });\n\t            enabledDimensions = dimensionData.filter(function (d) { return !d.disabled; });\n\t            \n\t            // Setup Scales\n\t            x.rangePoints([0, availableWidth], 1).domain(enabledDimensions.map(function (d) { return d.key; }));\n\t\n\t            //Set as true if all values on an axis are missing.\n\t            // Extract the list of dimensions and create a scale for each.\n\t            var oldDomainMaxValue = {};\n\t            var displayMissingValuesline = false;\n\t            var currentTicks = [];\n\t            \n\t            dimensionNames.forEach(function(d) {\n\t                var extent = d3.extent(dataValues, function (p) { return +p[d]; });\n\t                var min = extent[0];\n\t                var max = extent[1];\n\t                var onlyUndefinedValues = false;\n\t                //If there is no values to display on an axis, set the extent to 0\n\t                if (isNaN(min) || isNaN(max)) {\n\t                    onlyUndefinedValues = true;\n\t                    min = 0;\n\t                    max = 0;\n\t                }\n\t                //Scale axis if there is only one value\n\t                if (min === max) {\n\t                    min = min - 1;\n\t                    max = max + 1;\n\t                }\n\t                var f = filters.filter(function (k) { return k.dimension == d; });\n\t                if (f.length !== 0) {\n\t                    //If there is only NaN values, keep the existing domain.\n\t                    if (onlyUndefinedValues) {\n\t                        min = y[d].domain()[0];\n\t                        max = y[d].domain()[1];\n\t                    }\n\t                        //If the brush extent is > max (< min), keep the extent value.\n\t                    else if (!f[0].hasOnlyNaN && displayBrush) {\n\t                        min = min > f[0].extent[0] ? f[0].extent[0] : min;\n\t                        max = max < f[0].extent[1] ? f[0].extent[1] : max;\n\t                    }\n\t                        //If there is NaN values brushed be sure the brush extent is on the domain.\n\t                    else if (f[0].hasNaN) {\n\t                        max = max < f[0].extent[1] ? f[0].extent[1] : max;\n\t                        oldDomainMaxValue[d] = y[d].domain()[1];\n\t                        displayMissingValuesline = true;\n\t                    }\n\t                }\n\t                //Use 90% of (availableHeight - 12) for the axis range, 12 reprensenting the space necessary to display \"undefined values\" text.\n\t                //The remaining 10% are used to display the missingValue line.\n\t                y[d] = d3.scale.linear()\n\t                    .domain([min, max])\n\t                    .range([(availableHeight - 12) * 0.9, 0]);\n\t\n\t                axisWithUndefinedValues = [];\n\t                y[d].brush = d3.svg.brush().y(y[d]).on('brushstart', brushstart).on('brush', brush).on('brushend', brushend);\n\t            });\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinates').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinates');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-parallelCoordinates background');\n\t            gEnter.append('g').attr('class', 'nv-parallelCoordinates foreground');\n\t            gEnter.append('g').attr('class', 'nv-parallelCoordinates missingValuesline');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            line.interpolate('cardinal').tension(lineTension);\n\t            axis.orient('left');\n\t            var axisDrag = d3.behavior.drag()\n\t                        .on('dragstart', dragStart)\n\t                        .on('drag', dragMove)\n\t                        .on('dragend', dragEnd);\n\t\n\t            //Add missing value line at the bottom of the chart\n\t            var missingValuesline, missingValueslineText;\n\t            var step = x.range()[1] - x.range()[0];\n\t            step = isNaN(step) ? x.range()[0] : step;\n\t            if (!isNaN(step)) {\n\t                var lineData = [0 + step / 2, availableHeight - 12, availableWidth - step / 2, availableHeight - 12];\n\t                missingValuesline = wrap.select('.missingValuesline').selectAll('line').data([lineData]);\n\t                missingValuesline.enter().append('line');\n\t                missingValuesline.exit().remove();\n\t                missingValuesline.attr(\"x1\", function(d) { return d[0]; })\n\t                        .attr(\"y1\", function(d) { return d[1]; })\n\t                        .attr(\"x2\", function(d) { return d[2]; })\n\t                        .attr(\"y2\", function(d) { return d[3]; });\n\t    \n\t                //Add the text \"undefined values\" under the missing value line\n\t                missingValueslineText = wrap.select('.missingValuesline').selectAll('text').data([undefinedValuesLabel]);\n\t                missingValueslineText.append('text').data([undefinedValuesLabel]);\n\t                missingValueslineText.enter().append('text');\n\t                missingValueslineText.exit().remove();\n\t                missingValueslineText.attr(\"y\", availableHeight)\n\t                        //To have the text right align with the missingValues line, substract 92 representing the text size.\n\t                        .attr(\"x\", availableWidth - 92 - step / 2)\n\t                        .text(function(d) { return d; });\n\t            }\n\t            // Add grey background lines for context.\n\t            background = wrap.select('.background').selectAll('path').data(data);\n\t            background.enter().append('path');\n\t            background.exit().remove();\n\t            background.attr('d', path);\n\t\n\t            // Add blue foreground lines for focus.\n\t            foreground = wrap.select('.foreground').selectAll('path').data(data);\n\t            foreground.enter().append('path')\n\t            foreground.exit().remove();\n\t            foreground.attr('d', path)\n\t                .style(\"stroke-width\", function (d, i) {\n\t                if (isNaN(d.strokeWidth)) { d.strokeWidth = 1;} return d.strokeWidth;})\n\t                .attr('stroke', function (d, i) { return d.color || color(d, i); });\n\t            foreground.on(\"mouseover\", function (d, i) {\n\t                d3.select(this).classed('hover', true).style(\"stroke-width\", d.strokeWidth + 2 + \"px\").style(\"stroke-opacity\", 1);\n\t                dispatch.elementMouseover({\n\t                    label: d.name,\n\t                    color: d.color || color(d, i),\n\t                    values: d.values,\n\t                    dimensions: enabledDimensions\n\t                });\n\t\n\t            });\n\t            foreground.on(\"mouseout\", function (d, i) {\n\t                d3.select(this).classed('hover', false).style(\"stroke-width\", d.strokeWidth + \"px\").style(\"stroke-opacity\", 0.7);\n\t                dispatch.elementMouseout({\n\t                    label: d.name,\n\t                    index: i\n\t                });\n\t            });\n\t            foreground.on('mousemove', function (d, i) {\n\t                dispatch.elementMousemove();\n\t            });\n\t            foreground.on('click', function (d) {\n\t                dispatch.elementClick({\n\t                    id: d.id\n\t                });\n\t            });\n\t            // Add a group element for each dimension.\n\t            dimensions = g.selectAll('.dimension').data(enabledDimensions);\n\t            var dimensionsEnter = dimensions.enter().append('g').attr('class', 'nv-parallelCoordinates dimension');\n\t\n\t            dimensions.attr('transform', function(d) { return 'translate(' + x(d.key) + ',0)'; });\n\t            dimensionsEnter.append('g').attr('class', 'nv-axis');\n\t\n\t            // Add an axis and title.\n\t            dimensionsEnter.append('text')\n\t                .attr('class', 'nv-label')\n\t                .style(\"cursor\", \"move\")\n\t                .attr('dy', '-1em')\n\t                .attr('text-anchor', 'middle')\n\t                .on(\"mouseover\", function(d, i) {\n\t                    dispatch.elementMouseover({\n\t                        label: d.tooltip || d.key,\n\t                        color: d.color \n\t                    });\n\t                })\n\t                .on(\"mouseout\", function(d, i) {\n\t                    dispatch.elementMouseout({\n\t                        label: d.tooltip\n\t                    });\n\t                })\n\t                .on('mousemove', function (d, i) {\n\t                    dispatch.elementMousemove();\n\t                })\n\t                .call(axisDrag);\n\t\n\t            dimensionsEnter.append('g').attr('class', 'nv-brushBackground');\n\t            dimensions.exit().remove();\n\t            dimensions.select('.nv-label').text(function (d) { return d.key });\n\t\n\t            // Add and store a brush for each axis.\n\t            restoreBrush(displayBrush);\n\t\n\t            var actives = dimensionNames.filter(function (p) { return !y[p].brush.empty(); }),\n\t                    extents = actives.map(function (p) { return y[p].brush.extent(); });\n\t            var formerActive = active.slice(0);\n\t\n\t            //Restore active values\n\t            active = [];\n\t            foreground.style(\"display\", function (d) {\n\t                var isActive = actives.every(function (p, i) {\n\t                    if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) {\n\t                        return true;\n\t                    }\n\t                    return (extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1]) && !isNaN(parseFloat(d.values[p]));\n\t                });\n\t                if (isActive)\n\t                    active.push(d);\n\t                return !isActive ? \"none\" : null;\n\t\n\t            });\n\t\n\t            if (filters.length > 0 || !nv.utils.arrayEquals(active, formerActive)) {\n\t               dispatch.activeChanged(active);\n\t            }\n\t\n\t            // Returns the path for a given data point.\n\t            function path(d) {\n\t                return line(enabledDimensions.map(function (p) {\n\t                    //If value if missing, put the value on the missing value line\n\t                    if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key])) || displayMissingValuesline) {\n\t                        var domain = y[p.key].domain();\n\t                        var range = y[p.key].range();\n\t                        var min = domain[0] - (domain[1] - domain[0]) / 9;\n\t\n\t                        //If it's not already the case, allow brush to select undefined values\n\t                        if (axisWithUndefinedValues.indexOf(p.key) < 0) {\n\t\n\t                            var newscale = d3.scale.linear().domain([min, domain[1]]).range([availableHeight - 12, range[1]]);\n\t                            y[p.key].brush.y(newscale);\n\t                            axisWithUndefinedValues.push(p.key);\n\t                        }\n\t                        if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key]))) {\n\t                            return [x(p.key), y[p.key](min)];\n\t                        }\n\t                    }\n\t\n\t                    //If parallelCoordinate contain missing values show the missing values line otherwise, hide it.\n\t                    if (missingValuesline !== undefined) {\n\t                        if (axisWithUndefinedValues.length > 0 || displayMissingValuesline) {\n\t                            missingValuesline.style(\"display\", \"inline\");\n\t                            missingValueslineText.style(\"display\", \"inline\");\n\t                        } else {\n\t                            missingValuesline.style(\"display\", \"none\");\n\t                            missingValueslineText.style(\"display\", \"none\");\n\t                        }\n\t                    }\n\t                    return [x(p.key), y[p.key](d.values[p.key])];\n\t                }));\n\t            }\n\t\n\t            function restoreBrush(visible) {\n\t                filters.forEach(function (f) {\n\t                    //If filter brushed NaN values, keep the brush on the bottom of the axis.\n\t                    var brushDomain = y[f.dimension].brush.y().domain();\n\t                    if (f.hasOnlyNaN) {\n\t                        f.extent[1] = (y[f.dimension].domain()[1] - brushDomain[0]) * (f.extent[1] - f.extent[0]) / (oldDomainMaxValue[f.dimension] - f.extent[0]) + brushDomain[0];\n\t                    }\n\t                    if (f.hasNaN) {\n\t                        f.extent[0] = brushDomain[0];\n\t                    }\n\t                    if (visible)\n\t                        y[f.dimension].brush.extent(f.extent);\n\t                });\n\t                \n\t                dimensions.select('.nv-brushBackground')\n\t                    .each(function (d) {\n\t                        d3.select(this).call(y[d.key].brush);\n\t\n\t                    })\n\t                    .selectAll('rect')\n\t                    .attr('x', -8)\n\t                    .attr('width', 16);\n\t                \n\t                updateTicks();\n\t            }\n\t            \n\t            // Handles a brush event, toggling the display of foreground lines.\n\t            function brushstart() {\n\t                //If brush aren't visible, show it before brushing again.\n\t                if (displayBrush === false) {\n\t                    displayBrush = true;\n\t                    restoreBrush(true);\n\t                }\n\t            }\n\t            \n\t            // Handles a brush event, toggling the display of foreground lines.\n\t            function brush() {\n\t                actives = dimensionNames.filter(function (p) { return !y[p].brush.empty(); });\n\t                extents = actives.map(function(p) { return y[p].brush.extent(); });\n\t\n\t                filters = []; //erase current filters\n\t                actives.forEach(function(d,i) {\n\t                    filters[i] = {\n\t                        dimension: d,\n\t                        extent: extents[i],\n\t                        hasNaN: false,\n\t                        hasOnlyNaN: false\n\t                    }\n\t                });\n\t\n\t                active = []; //erase current active list\n\t                foreground.style('display', function(d) {\n\t                    var isActive = actives.every(function(p, i) {\n\t                        if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) return true;\n\t                        return (extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1]) && !isNaN(parseFloat(d.values[p]));\n\t                    });\n\t                    if (isActive) active.push(d);\n\t                    return isActive ? null : 'none';\n\t                });\n\t                \n\t                updateTicks();\n\t                \n\t                dispatch.brush({\n\t                    filters: filters,\n\t                    active: active\n\t                });\n\t            }\n\t            function brushend() {\n\t                var hasActiveBrush = actives.length > 0 ? true : false;\n\t                filters.forEach(function (f) {\n\t                    if (f.extent[0] === y[f.dimension].brush.y().domain()[0] && axisWithUndefinedValues.indexOf(f.dimension) >= 0)\n\t                        f.hasNaN = true;\n\t                    if (f.extent[1] < y[f.dimension].domain()[0])\n\t                        f.hasOnlyNaN = true;\n\t                });\n\t                dispatch.brushEnd(active, hasActiveBrush);\n\t            }           \n\t            function updateTicks() {\n\t                dimensions.select('.nv-axis')\n\t                    .each(function (d, i) {\n\t                        var f = filters.filter(function (k) { return k.dimension == d.key; });\n\t                        currentTicks[d.key] = y[d.key].domain();\n\t                        \n\t                        //If brush are available, display brush extent\n\t                        if (f.length != 0 && displayBrush)\n\t                        {\n\t                            currentTicks[d.key] = [];\n\t                            if (f[0].extent[1] > y[d.key].domain()[0]) \n\t                                currentTicks[d.key] = [f[0].extent[1]];\n\t                            if (f[0].extent[0] >= y[d.key].domain()[0])\n\t                                currentTicks[d.key].push(f[0].extent[0]);    \n\t                        }\n\t                            \n\t                        d3.select(this).call(axis.scale(y[d.key]).tickFormat(d.format).tickValues(currentTicks[d.key]));\n\t                });\n\t            }\n\t            function dragStart(d) {\n\t                dragging[d.key] = this.parentNode.__origin__ = x(d.key);\n\t                background.attr(\"visibility\", \"hidden\");\n\t            }\n\t            function dragMove(d) {\n\t                dragging[d.key] = Math.min(availableWidth, Math.max(0, this.parentNode.__origin__ += d3.event.x));\n\t                foreground.attr(\"d\", path);\n\t                enabledDimensions.sort(function (a, b) { return dimensionPosition(a.key) - dimensionPosition(b.key); });\n\t                enabledDimensions.forEach(function (d, i) { return d.currentPosition = i; });\n\t                x.domain(enabledDimensions.map(function (d) { return d.key; }));\n\t                dimensions.attr(\"transform\", function(d) { return \"translate(\" + dimensionPosition(d.key) + \")\"; });\n\t            }\n\t            function dragEnd(d, i) {\n\t                delete this.parentNode.__origin__;\n\t                delete dragging[d.key];\n\t                d3.select(this.parentNode).attr(\"transform\", \"translate(\" + x(d.key) + \")\");\n\t                foreground\n\t                  .attr(\"d\", path);\n\t                background\n\t                  .attr(\"d\", path)\n\t                  .attr(\"visibility\", null);\n\t\n\t                dispatch.dimensionsOrder(enabledDimensions);\n\t            }\n\t            function dimensionPosition(d) {\n\t                var v = dragging[d];\n\t                return v == null ? x(d) : v;\n\t            }\n\t        });\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:         {get: function(){return width;},           set: function(_){width= _;}},\n\t        height:        {get: function(){return height;},          set: function(_){height= _;}},\n\t        dimensionData: { get: function () { return dimensionData; }, set: function (_) { dimensionData = _; } },\n\t        displayBrush: { get: function () { return displayBrush; }, set: function (_) { displayBrush = _; } },\n\t        filters: { get: function () { return filters; }, set: function (_) { filters = _; } },\n\t        active: { get: function () { return active; }, set: function (_) { active = _; } },\n\t        lineTension:   {get: function(){return lineTension;},     set: function(_){lineTension = _;}},\n\t        undefinedValuesLabel : {get: function(){return undefinedValuesLabel;}, set: function(_){undefinedValuesLabel=_;}},\n\t        \n\t        // deprecated options\n\t        dimensions: {get: function () { return dimensionData.map(function (d){return d.key}); }, set: function (_) {\n\t            // deprecated after 1.8.1\n\t            nv.deprecated('dimensions', 'use dimensionData instead');\n\t            if (dimensionData.length === 0) {\n\t                _.forEach(function (k) { dimensionData.push({ key: k }) })\n\t            } else {\n\t                _.forEach(function (k, i) { dimensionData[i].key= k })\n\t            }\n\t        }},\n\t        dimensionNames: {get: function () { return dimensionData.map(function (d){return d.key}); }, set: function (_) {\n\t            // deprecated after 1.8.1\n\t            nv.deprecated('dimensionNames', 'use dimensionData instead');\n\t            dimensionNames = [];\n\t            if (dimensionData.length === 0) {\n\t                _.forEach(function (k) { dimensionData.push({ key: k }) })\n\t            } else {\n\t                _.forEach(function (k, i) { dimensionData[i].key = k })\n\t            }\n\t \n\t        }},\n\t        dimensionFormats: {get: function () { return dimensionData.map(function (d) { return d.format }); }, set: function (_) {\n\t            // deprecated after 1.8.1\n\t            nv.deprecated('dimensionFormats', 'use dimensionData instead');\n\t            if (dimensionData.length === 0) {\n\t                _.forEach(function (f) { dimensionData.push({ format: f }) })\n\t            } else {\n\t                _.forEach(function (f, i) { dimensionData[i].format = f })\n\t            }\n\t\n\t        }},\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    =  _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  =  _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom =  _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   =  _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\tnv.models.parallelCoordinatesChart = function () {\n\t        \"use strict\";\n\t        //============================================================\n\t        // Public Variables with Default Settings\n\t        //------------------------------------------------------------\n\t\n\t        var parallelCoordinates = nv.models.parallelCoordinates()\n\t        var legend = nv.models.legend()\n\t        var tooltip = nv.models.tooltip();\n\t        var dimensionTooltip = nv.models.tooltip();\n\t\n\t        var margin = { top: 0, right: 0, bottom: 0, left: 0 }\n\t        , marginTop = null\n\t        , width = null\n\t        , height = null\n\t        , showLegend = true\n\t        , color = nv.utils.defaultColor()\n\t        , state = nv.utils.state()\n\t        , dimensionData = []\n\t        , displayBrush = true\n\t        , defaultState = null\n\t        , noData = null\n\t        , nanValue = \"undefined\"\n\t        , dispatch = d3.dispatch('dimensionsOrder', 'brushEnd', 'stateChange', 'changeState', 'renderEnd')\n\t        , controlWidth = function () { return showControls ? 180 : 0 }\n\t        ;\n\t\n\t\t    //============================================================\n\t\n\t\t\t//============================================================\n\t        // Private Variables\n\t        //------------------------------------------------------------\n\t\n\t        var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t        var stateGetter = function(data) {\n\t            return function() {\n\t                return {\n\t                    active: data.map(function(d) { return !d.disabled })\n\t                };\n\t            }\n\t        };\n\t\n\t        var stateSetter = function(data) {\n\t            return function(state) {\n\t                if(state.active !== undefined) {\n\t                    data.forEach(function(series, i) {\n\t                        series.disabled = !state.active[i];\n\t                    });\n\t                }\n\t            }\n\t        };\n\t\n\t        tooltip.contentGenerator(function(data) {\n\t            var str = '<table><thead><tr><td class=\"legend-color-guide\"><div style=\"background-color:' + data.color + '\"></div></td><td><strong>' + data.key + '</strong></td></tr></thead>';\n\t            if(data.series.length !== 0)\n\t            {\n\t                str = str + '<tbody><tr><td height =\"10px\"></td></tr>';\n\t                data.series.forEach(function(d){\n\t                    str = str + '<tr><td class=\"legend-color-guide\"><div style=\"background-color:' + d.color + '\"></div></td><td class=\"key\">' + d.key + '</td><td class=\"value\">' + d.value + '</td></tr>';\n\t                });\n\t                str = str + '</tbody>';\n\t            }\n\t            str = str + '</table>';\n\t            return str;\n\t        });\n\t\n\t        //============================================================\n\t        // Chart function\n\t        //------------------------------------------------------------\n\t\n\t        function chart(selection) {\n\t            renderWatch.reset();\n\t            renderWatch.models(parallelCoordinates);\n\t\n\t            selection.each(function(data) {\n\t                var container = d3.select(this);\n\t                nv.utils.initSVG(container);\n\t\n\t                var that = this;\n\t\n\t                var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t                chart.update = function() { container.call(chart); };\n\t                chart.container = this;\n\t\n\t                state.setter(stateSetter(dimensionData), chart.update)\n\t                    .getter(stateGetter(dimensionData))\n\t                    .update();\n\t\n\t                //set state.disabled\n\t                state.disabled = dimensionData.map(function (d) { return !!d.disabled });\n\t\n\t                //Keep dimensions position in memory\n\t                dimensionData = dimensionData.map(function (d) {d.disabled = !!d.disabled; return d});\n\t                dimensionData.forEach(function (d, i) {\n\t                    d.originalPosition = isNaN(d.originalPosition) ? i : d.originalPosition;\n\t                    d.currentPosition = isNaN(d.currentPosition) ? i : d.currentPosition;\n\t                });\n\t\n\t               if (!defaultState) {\n\t                    var key;\n\t                    defaultState = {};\n\t                    for(key in state) {\n\t                        if(state[key] instanceof Array)\n\t                            defaultState[key] = state[key].slice(0);\n\t                        else\n\t                            defaultState[key] = state[key];\n\t                    }\n\t                }\n\t\n\t                // Display No Data message if there's nothing to show.\n\t                if(!data || !data.length) {\n\t                    nv.utils.noData(chart, container);\n\t                    return chart;\n\t                } else {\n\t                    container.selectAll('.nv-noData').remove();\n\t                }\n\t\n\t                //------------------------------------------------------------\n\t                // Setup containers and skeleton of chart\n\t\n\t                var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinatesChart').data([data]);\n\t                var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinatesChart').append('g');\n\t\n\t                var g = wrap.select('g');\n\t\n\t                gEnter.append('g').attr('class', 'nv-parallelCoordinatesWrap');\n\t                gEnter.append('g').attr('class', 'nv-legendWrap');\n\t\n\t                g.select(\"rect\")\n\t                    .attr(\"width\", availableWidth)\n\t                    .attr(\"height\", (availableHeight > 0) ? availableHeight : 0);\n\t\n\t                // Legend\n\t                if (!showLegend) {\n\t                    g.select('.nv-legendWrap').selectAll('*').remove();\n\t                } else {\n\t                    legend.width(availableWidth)\n\t                        .color(function (d) { return \"rgb(188,190,192)\"; });\n\t\n\t                    g.select('.nv-legendWrap')\n\t                        .datum(dimensionData.sort(function (a, b) { return a.originalPosition - b.originalPosition; }))\n\t                        .call(legend);\n\t\n\t                    if (!marginTop && legend.height() !== margin.top) {\n\t                        margin.top = legend.height();\n\t                        availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                    }\n\t                    wrap.select('.nv-legendWrap')\n\t                       .attr('transform', 'translate( 0 ,' + (-margin.top) + ')');\n\t                }\n\t                wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t                // Main Chart Component(s)\n\t                parallelCoordinates\n\t                    .width(availableWidth)\n\t                    .height(availableHeight)\n\t                    .dimensionData(dimensionData)\n\t                    .displayBrush(displayBrush);\n\t\n\t\t\t        var parallelCoordinatesWrap = g.select('.nv-parallelCoordinatesWrap ')\n\t                  .datum(data);\n\t\n\t\t\t        parallelCoordinatesWrap.transition().call(parallelCoordinates);\n\t\n\t\t\t\t\t//============================================================\n\t                // Event Handling/Dispatching (in chart's scope)\n\t                //------------------------------------------------------------\n\t                //Display reset brush button\n\t\t\t        parallelCoordinates.dispatch.on('brushEnd', function (active, hasActiveBrush) {\n\t\t\t            if (hasActiveBrush) {\n\t\t\t                displayBrush = true;\n\t\t\t                dispatch.brushEnd(active);\n\t\t\t            } else {\n\t\n\t\t\t                displayBrush = false;\n\t\t\t            }\n\t\t\t        });\n\t\n\t\t\t        legend.dispatch.on('stateChange', function(newState) {\n\t\t\t            for(var key in newState) {\n\t\t\t                state[key] = newState[key];\n\t\t\t            }\n\t\t\t            dispatch.stateChange(state);\n\t\t\t            chart.update();\n\t\t\t        });\n\t\n\t                //Update dimensions order and display reset sorting button\n\t\t\t        parallelCoordinates.dispatch.on('dimensionsOrder', function (e) {\n\t\t\t            dimensionData.sort(function (a, b) { return a.currentPosition - b.currentPosition; });\n\t\t\t            var isSorted = false;\n\t\t\t            dimensionData.forEach(function (d, i) {\n\t\t\t                d.currentPosition = i;\n\t\t\t                if (d.currentPosition !== d.originalPosition)\n\t\t\t                    isSorted = true;\n\t\t\t            });\n\t\t\t            dispatch.dimensionsOrder(dimensionData, isSorted);\n\t\t\t        });\n\t\n\t\t\t\t\t// Update chart from a state object passed to event handler\n\t                dispatch.on('changeState', function (e) {\n\t\n\t                    if (typeof e.disabled !== 'undefined') {\n\t                        dimensionData.forEach(function (series, i) {\n\t                            series.disabled = e.disabled[i];\n\t                        });\n\t                        state.disabled = e.disabled;\n\t                    }\n\t                    chart.update();\n\t                });\n\t            });\n\t\n\t            renderWatch.renderEnd('parraleleCoordinateChart immediate');\n\t            return chart;\n\t        }\n\t\n\t\t\t//============================================================\n\t        // Event Handling/Dispatching (out of chart's scope)\n\t        //------------------------------------------------------------\n\t\n\t        parallelCoordinates.dispatch.on('elementMouseover.tooltip', function (evt) {\n\t            var tp = {\n\t                key: evt.label,\n\t                color: evt.color,\n\t                series: []\n\t             }\n\t            if(evt.values){\n\t                Object.keys(evt.values).forEach(function (d) {\n\t                    var dim = evt.dimensions.filter(function (dd) {return dd.key === d;})[0];\n\t                    if(dim){\n\t                        var v;\n\t                        if (isNaN(evt.values[d]) || isNaN(parseFloat(evt.values[d]))) {\n\t                            v = nanValue;\n\t                        } else {\n\t                            v = dim.format(evt.values[d]);\n\t                        }\n\t                        tp.series.push({ idx: dim.currentPosition, key: d, value: v, color: dim.color });\n\t                    }\n\t                });\n\t                tp.series.sort(function(a,b) {return a.idx - b.idx});\n\t             }\n\t            tooltip.data(tp).hidden(false);\n\t        });\n\t\n\t        parallelCoordinates.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t            tooltip.hidden(true)\n\t        });\n\t\n\t        parallelCoordinates.dispatch.on('elementMousemove.tooltip', function () {\n\t            tooltip();\n\t        });\n\t\t\t //============================================================\n\t        // Expose Public Variables\n\t        //------------------------------------------------------------\n\t\n\t\t\t// expose chart's sub-components\n\t        chart.dispatch = dispatch;\n\t        chart.parallelCoordinates = parallelCoordinates;\n\t        chart.legend = legend;\n\t        chart.tooltip = tooltip;\n\t        chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t        chart._options = Object.create({}, {\n\t            // simple options, just get/set the necessary values\n\t            width: { get: function () { return width; }, set: function (_) { width = _; } },\n\t            height: { get: function () { return height; }, set: function (_) { height = _; } },\n\t            showLegend: { get: function () { return showLegend; }, set: function (_) { showLegend = _; } },\n\t            defaultState: { get: function () { return defaultState; }, set: function (_) { defaultState = _; } },\n\t            dimensionData: { get: function () { return dimensionData; }, set: function (_) { dimensionData = _; } },\n\t            displayBrush: { get: function () { return displayBrush; }, set: function (_) { displayBrush = _; } },\n\t            noData: { get: function () { return noData; }, set: function (_) { noData = _; } },\n\t            nanValue: { get: function () { return nanValue; }, set: function (_) { nanValue = _; } },\n\t\n\t            // options that require extra logic in the setter\n\t            margin: {\n\t                get: function () { return margin; },\n\t                set: function (_) {\n\t                    if (_.top !== undefined) {\n\t                        margin.top = _.top;\n\t                        marginTop = _.top;\n\t                    }\n\t                    margin.right = _.right !== undefined ? _.right : margin.right;\n\t                    margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t                    margin.left = _.left !== undefined ? _.left : margin.left;\n\t                }\n\t            },\n\t            color: {get: function(){return color;}, set: function(_){\n\t                    color = nv.utils.getColor(_);\n\t                    legend.color(color);\n\t                    parallelCoordinates.color(color);\n\t                }}\n\t        });\n\t\n\t        nv.utils.inheritOptions(chart, parallelCoordinates);\n\t        nv.utils.initOptions(chart);\n\t\n\t        return chart;\n\t    };\n\tnv.models.pie = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 500\n\t        , height = 500\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container = null\n\t        , color = nv.utils.defaultColor()\n\t        , valueFormat = d3.format(',.2f')\n\t        , showLabels = true\n\t        , labelsOutside = false\n\t        , labelType = \"key\"\n\t        , labelThreshold = .02 //if slice percentage is under this, don't show label\n\t        , donut = false\n\t        , title = false\n\t        , growOnHover = true\n\t        , titleOffset = 0\n\t        , labelSunbeamLayout = false\n\t        , startAngle = false\n\t        , padAngle = false\n\t        , endAngle = false\n\t        , cornerRadius = 0\n\t        , donutRatio = 0.5\n\t        , duration = 250\n\t        , arcsRadius = []\n\t        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n\t        ;\n\t\n\t    var arcs = [];\n\t    var arcsOver = [];\n\t\n\t    //============================================================\n\t    // chart function\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right\n\t                , availableHeight = height - margin.top - margin.bottom\n\t                , radius = Math.min(availableWidth, availableHeight) / 2\n\t                , arcsRadiusOuter = []\n\t                , arcsRadiusInner = []\n\t                ;\n\t\n\t            container = d3.select(this)\n\t            if (arcsRadius.length === 0) {\n\t                var outer = radius - radius / 5;\n\t                var inner = donutRatio * radius;\n\t                for (var i = 0; i < data[0].length; i++) {\n\t                    arcsRadiusOuter.push(outer);\n\t                    arcsRadiusInner.push(inner);\n\t                }\n\t            } else {\n\t                if(growOnHover){\n\t                    arcsRadiusOuter = arcsRadius.map(function (d) { return (d.outer - d.outer / 5) * radius; });\n\t                    arcsRadiusInner = arcsRadius.map(function (d) { return (d.inner - d.inner / 5) * radius; });\n\t                    donutRatio = d3.min(arcsRadius.map(function (d) { return (d.inner - d.inner / 5); }));\n\t                } else {\n\t                    arcsRadiusOuter = arcsRadius.map(function (d) { return d.outer * radius; });\n\t                    arcsRadiusInner = arcsRadius.map(function (d) { return d.inner * radius; });\n\t                    donutRatio = d3.min(arcsRadius.map(function (d) { return d.inner; }));\n\t                }\n\t            }\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('.nv-wrap.nv-pie').data(data);\n\t            var wrapEnter = wrap.enter().append('g').attr('class','nvd3 nv-wrap nv-pie nv-chart-' + id);\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t            var g_pie = gEnter.append('g').attr('class', 'nv-pie');\n\t            gEnter.append('g').attr('class', 'nv-pieLabels');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t            g.select('.nv-pie').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n\t            g.select('.nv-pieLabels').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n\t\n\t            //\n\t            container.on('click', function(d,i) {\n\t                dispatch.chartClick({\n\t                    data: d,\n\t                    index: i,\n\t                    pos: d3.event,\n\t                    id: id\n\t                });\n\t            });\n\t\n\t            arcs = [];\n\t            arcsOver = [];\n\t            for (var i = 0; i < data[0].length; i++) {\n\t\n\t                var arc = d3.svg.arc().outerRadius(arcsRadiusOuter[i]);\n\t                var arcOver = d3.svg.arc().outerRadius(arcsRadiusOuter[i] + 5);\n\t\n\t                if (startAngle !== false) {\n\t                    arc.startAngle(startAngle);\n\t                    arcOver.startAngle(startAngle);\n\t                }\n\t                if (endAngle !== false) {\n\t                    arc.endAngle(endAngle);\n\t                    arcOver.endAngle(endAngle);\n\t                }\n\t                if (donut) {\n\t                    arc.innerRadius(arcsRadiusInner[i]);\n\t                    arcOver.innerRadius(arcsRadiusInner[i]);\n\t                }\n\t\n\t                if (arc.cornerRadius && cornerRadius) {\n\t                    arc.cornerRadius(cornerRadius);\n\t                    arcOver.cornerRadius(cornerRadius);\n\t                }\n\t\n\t                arcs.push(arc);\n\t                arcsOver.push(arcOver);\n\t            }\n\t\n\t            // Setup the Pie chart and choose the data element\n\t            var pie = d3.layout.pie()\n\t                .sort(null)\n\t                .value(function(d) { return d.disabled ? 0 : getY(d) });\n\t\n\t            // padAngle added in d3 3.5\n\t            if (pie.padAngle && padAngle) {\n\t                pie.padAngle(padAngle);\n\t            }\n\t\n\t            // if title is specified and donut, put it in the middle\n\t            if (donut && title) {\n\t                g_pie.append(\"text\").attr('class', 'nv-pie-title');\n\t\n\t                wrap.select('.nv-pie-title')\n\t                    .style(\"text-anchor\", \"middle\")\n\t                    .text(function (d) {\n\t                        return title;\n\t                    })\n\t                    .style(\"font-size\", (Math.min(availableWidth, availableHeight)) * donutRatio * 2 / (title.length + 2) + \"px\")\n\t                    .attr(\"dy\", \"0.35em\") // trick to vertically center text\n\t                    .attr('transform', function(d, i) {\n\t                        return 'translate(0, '+ titleOffset + ')';\n\t                    });\n\t            }\n\t\n\t            var slices = wrap.select('.nv-pie').selectAll('.nv-slice').data(pie);\n\t            var pieLabels = wrap.select('.nv-pieLabels').selectAll('.nv-label').data(pie);\n\t\n\t            slices.exit().remove();\n\t            pieLabels.exit().remove();\n\t\n\t            var ae = slices.enter().append('g');\n\t            ae.attr('class', 'nv-slice');\n\t            ae.on('mouseover', function(d, i) {\n\t                d3.select(this).classed('hover', true);\n\t                if (growOnHover) {\n\t                    d3.select(this).select(\"path\").transition()\n\t                        .duration(70)\n\t                        .attr(\"d\", arcsOver[i]);\n\t                }\n\t                dispatch.elementMouseover({\n\t                    data: d.data,\n\t                    index: i,\n\t                    color: d3.select(this).style(\"fill\"),\n\t                    percent: (d.endAngle - d.startAngle) / (2 * Math.PI)\n\t                });\n\t            });\n\t            ae.on('mouseout', function(d, i) {\n\t                d3.select(this).classed('hover', false);\n\t                if (growOnHover) {\n\t                    d3.select(this).select(\"path\").transition()\n\t                        .duration(50)\n\t                        .attr(\"d\", arcs[i]);\n\t                }\n\t                dispatch.elementMouseout({data: d.data, index: i});\n\t            });\n\t            ae.on('mousemove', function(d, i) {\n\t                dispatch.elementMousemove({data: d.data, index: i});\n\t            });\n\t            ae.on('click', function(d, i) {\n\t                var element = this;\n\t                dispatch.elementClick({\n\t                    data: d.data,\n\t                    index: i,\n\t                    color: d3.select(this).style(\"fill\"),\n\t                    event: d3.event,\n\t                    element: element\n\t                });\n\t            });\n\t            ae.on('dblclick', function(d, i) {\n\t                dispatch.elementDblClick({\n\t                    data: d.data,\n\t                    index: i,\n\t                    color: d3.select(this).style(\"fill\")\n\t                });\n\t            });\n\t\n\t            slices.attr('fill', function(d,i) { return color(d.data, i); });\n\t            slices.attr('stroke', function(d,i) { return color(d.data, i); });\n\t\n\t            var paths = ae.append('path').each(function(d) {\n\t                this._current = d;\n\t            });\n\t\n\t            slices.select('path')\n\t                .transition()\n\t                .duration(duration)\n\t                .attr('d', function (d, i) { return arcs[i](d); })\n\t                .attrTween('d', arcTween);\n\t\n\t            if (showLabels) {\n\t                // This does the normal label\n\t                var labelsArc = [];\n\t                for (var i = 0; i < data[0].length; i++) {\n\t                    labelsArc.push(arcs[i]);\n\t\n\t                    if (labelsOutside) {\n\t                        if (donut) {\n\t                            labelsArc[i] = d3.svg.arc().outerRadius(arcs[i].outerRadius());\n\t                            if (startAngle !== false) labelsArc[i].startAngle(startAngle);\n\t                            if (endAngle !== false) labelsArc[i].endAngle(endAngle);\n\t                        }\n\t                    } else if (!donut) {\n\t                            labelsArc[i].innerRadius(0);\n\t                    }\n\t                }\n\t\n\t                pieLabels.enter().append(\"g\").classed(\"nv-label\",true).each(function(d,i) {\n\t                    var group = d3.select(this);\n\t\n\t                    group.attr('transform', function (d, i) {\n\t                        if (labelSunbeamLayout) {\n\t                            d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\t                            d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\t                            var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\t                            if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n\t                                rotateAngle -= 90;\n\t                            } else {\n\t                                rotateAngle += 90;\n\t                            }\n\t                            return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n\t                        } else {\n\t                            d.outerRadius = radius + 10; // Set Outer Coordinate\n\t                            d.innerRadius = radius + 15; // Set Inner Coordinate\n\t                            return 'translate(' + labelsArc[i].centroid(d) + ')'\n\t                        }\n\t                    });\n\t\n\t                    group.append('rect')\n\t                        .style('stroke', '#fff')\n\t                        .style('fill', '#fff')\n\t                        .attr(\"rx\", 3)\n\t                        .attr(\"ry\", 3);\n\t\n\t                    group.append('text')\n\t                        .style('text-anchor', labelSunbeamLayout ? ((d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end') : 'middle') //center the text on it's origin or begin/end if orthogonal aligned\n\t                        .style('fill', '#000')\n\t                });\n\t\n\t                var labelLocationHash = {};\n\t                var avgHeight = 14;\n\t                var avgWidth = 140;\n\t                var createHashKey = function(coordinates) {\n\t                    return Math.floor(coordinates[0]/avgWidth) * avgWidth + ',' + Math.floor(coordinates[1]/avgHeight) * avgHeight;\n\t                };\n\t                var getSlicePercentage = function(d) {\n\t                    return (d.endAngle - d.startAngle) / (2 * Math.PI);\n\t                };\n\t\n\t                pieLabels.watchTransition(renderWatch, 'pie labels').attr('transform', function (d, i) {\n\t                    if (labelSunbeamLayout) {\n\t                        d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\t                        d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\t                        var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\t                        if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n\t                            rotateAngle -= 90;\n\t                        } else {\n\t                            rotateAngle += 90;\n\t                        }\n\t                        return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n\t                    } else {\n\t                        d.outerRadius = radius + 10; // Set Outer Coordinate\n\t                        d.innerRadius = radius + 15; // Set Inner Coordinate\n\t\n\t                        /*\n\t                        Overlapping pie labels are not good. What this attempts to do is, prevent overlapping.\n\t                        Each label location is hashed, and if a hash collision occurs, we assume an overlap.\n\t                        Adjust the label's y-position to remove the overlap.\n\t                        */\n\t                        var center = labelsArc[i].centroid(d);\n\t                        var percent = getSlicePercentage(d);\n\t                        if (d.value && percent >= labelThreshold) {\n\t                            var hashKey = createHashKey(center);\n\t                            if (labelLocationHash[hashKey]) {\n\t                                center[1] -= avgHeight;\n\t                            }\n\t                            labelLocationHash[createHashKey(center)] = true;\n\t                        }\n\t                        return 'translate(' + center + ')'\n\t                    }\n\t                });\n\t\n\t                pieLabels.select(\".nv-label text\")\n\t                    .style('text-anchor', function(d,i) {\n\t                        //center the text on it's origin or begin/end if orthogonal aligned\n\t                        return labelSunbeamLayout ? ((d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end') : 'middle';\n\t                    })\n\t                    .text(function(d, i) {\n\t                        var percent = getSlicePercentage(d);\n\t                        var label = '';\n\t                        if (!d.value || percent < labelThreshold) return '';\n\t\n\t                        if(typeof labelType === 'function') {\n\t                            label = labelType(d, i, {\n\t                                'key': getX(d.data),\n\t                                'value': getY(d.data),\n\t                                'percent': valueFormat(percent)\n\t                            });\n\t                        } else {\n\t                            switch (labelType) {\n\t                                case 'key':\n\t                                    label = getX(d.data);\n\t                                    break;\n\t                                case 'value':\n\t                                    label = valueFormat(getY(d.data));\n\t                                    break;\n\t                                case 'percent':\n\t                                    label = d3.format('%')(percent);\n\t                                    break;\n\t                            }\n\t                        }\n\t                        return label;\n\t                    })\n\t                ;\n\t            }\n\t\n\t\n\t            // Computes the angle of an arc, converting from radians to degrees.\n\t            function angle(d) {\n\t                var a = (d.startAngle + d.endAngle) * 90 / Math.PI - 90;\n\t                return a > 90 ? a - 180 : a;\n\t            }\n\t\n\t            function arcTween(a, idx) {\n\t                a.endAngle = isNaN(a.endAngle) ? 0 : a.endAngle;\n\t                a.startAngle = isNaN(a.startAngle) ? 0 : a.startAngle;\n\t                if (!donut) a.innerRadius = 0;\n\t                var i = d3.interpolate(this._current, a);\n\t                this._current = i(0);\n\t                return function (t) {\n\t                    return arcs[idx](i(t));\n\t                };\n\t            }\n\t        });\n\t\n\t        renderWatch.renderEnd('pie immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        arcsRadius: { get: function () { return arcsRadius; }, set: function (_) { arcsRadius = _; } },\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLabels: {get: function(){return showLabels;}, set: function(_){showLabels=_;}},\n\t        title:      {get: function(){return title;}, set: function(_){title=_;}},\n\t        titleOffset:    {get: function(){return titleOffset;}, set: function(_){titleOffset=_;}},\n\t        labelThreshold: {get: function(){return labelThreshold;}, set: function(_){labelThreshold=_;}},\n\t        valueFormat:    {get: function(){return valueFormat;}, set: function(_){valueFormat=_;}},\n\t        x:          {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        id:         {get: function(){return id;}, set: function(_){id=_;}},\n\t        endAngle:   {get: function(){return endAngle;}, set: function(_){endAngle=_;}},\n\t        startAngle: {get: function(){return startAngle;}, set: function(_){startAngle=_;}},\n\t        padAngle:   {get: function(){return padAngle;}, set: function(_){padAngle=_;}},\n\t        cornerRadius: {get: function(){return cornerRadius;}, set: function(_){cornerRadius=_;}},\n\t        donutRatio:   {get: function(){return donutRatio;}, set: function(_){donutRatio=_;}},\n\t        labelsOutside: {get: function(){return labelsOutside;}, set: function(_){labelsOutside=_;}},\n\t        labelSunbeamLayout: {get: function(){return labelSunbeamLayout;}, set: function(_){labelSunbeamLayout=_;}},\n\t        donut:              {get: function(){return donut;}, set: function(_){donut=_;}},\n\t        growOnHover:        {get: function(){return growOnHover;}, set: function(_){growOnHover=_;}},\n\t\n\t        // depreciated after 1.7.1\n\t        pieLabelsOutside: {get: function(){return labelsOutside;}, set: function(_){\n\t            labelsOutside=_;\n\t            nv.deprecated('pieLabelsOutside', 'use labelsOutside instead');\n\t        }},\n\t        // depreciated after 1.7.1\n\t        donutLabelsOutside: {get: function(){return labelsOutside;}, set: function(_){\n\t            labelsOutside=_;\n\t            nv.deprecated('donutLabelsOutside', 'use labelsOutside instead');\n\t        }},\n\t        // deprecated after 1.7.1\n\t        labelFormat: {get: function(){ return valueFormat;}, set: function(_) {\n\t            valueFormat=_;\n\t            nv.deprecated('labelFormat','use valueFormat instead');\n\t        }},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;\n\t            margin.right  = typeof _.right  != 'undefined' ? _.right  : margin.right;\n\t            margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n\t            margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t        }},\n\t        y: {get: function(){return getY;}, set: function(_){\n\t            getY=d3.functor(_);\n\t        }},\n\t        color: {get: function(){return color;}, set: function(_){\n\t            color=nv.utils.getColor(_);\n\t        }},\n\t        labelType:          {get: function(){return labelType;}, set: function(_){\n\t            labelType= _ || 'key';\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\tnv.models.pieChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var pie = nv.models.pie();\n\t    var legend = nv.models.legend();\n\t    var tooltip = nv.models.tooltip();\n\t\n\t    var margin = {top: 30, right: 20, bottom: 20, left: 20}\n\t        , marginTop = null\n\t        , width = null\n\t        , height = null\n\t        , showTooltipPercent = false\n\t        , showLegend = true\n\t        , legendPosition = \"top\"\n\t        , color = nv.utils.defaultColor()\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , noData = null\n\t        , duration = 250\n\t        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd')\n\t        ;\n\t\n\t    tooltip\n\t        .duration(0)\n\t        .headerEnabled(false)\n\t        .valueFormatter(function(d, i) {\n\t            return pie.valueFormat()(d, i);\n\t        });\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled })\n\t            };\n\t        }\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.active !== undefined) {\n\t                data.forEach(function (series, i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t            }\n\t        }\n\t    };\n\t\n\t    //============================================================\n\t    // Chart function\n\t    //------------------------------------------------------------\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(pie);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            var that = this;\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() { container.transition().call(chart); };\n\t            chart.container = this;\n\t\n\t            state.setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            //set state.disabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length) {\n\t                nv.utils.noData(chart, container);\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-pieChart').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pieChart').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-pieWrap');\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                if (legendPosition === \"top\") {\n\t                    legend.width( availableWidth ).key(pie.x());\n\t\n\t                    wrap.select('.nv-legendWrap')\n\t                        .datum(data)\n\t                        .call(legend);\n\t\n\t                    if (!marginTop && legend.height() !== margin.top) {\n\t                        margin.top = legend.height();\n\t                        availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                    }\n\t\n\t                    wrap.select('.nv-legendWrap')\n\t                        .attr('transform', 'translate(0,' + (-margin.top) +')');\n\t                } else if (legendPosition === \"right\") {\n\t                    var legendWidth = nv.models.legend().width();\n\t                    if (availableWidth / 2 < legendWidth) {\n\t                        legendWidth = (availableWidth / 2)\n\t                    }\n\t                    legend.height(availableHeight).key(pie.x());\n\t                    legend.width(legendWidth);\n\t                    availableWidth -= legend.width();\n\t\n\t                    wrap.select('.nv-legendWrap')\n\t                        .datum(data)\n\t                        .call(legend)\n\t                        .attr('transform', 'translate(' + (availableWidth) +',0)');\n\t                }\n\t            }\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            // Main Chart Component(s)\n\t            pie.width(availableWidth).height(availableHeight);\n\t            var pieWrap = g.select('.nv-pieWrap').datum([data]);\n\t            d3.transition(pieWrap).call(pie);\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState) {\n\t                    state[key] = newState[key];\n\t                }\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            // Update chart from a state object passed to event handler\n\t            dispatch.on('changeState', function(e) {\n\t                if (typeof e.disabled !== 'undefined') {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t                    state.disabled = e.disabled;\n\t                }\n\t                chart.update();\n\t            });\n\t        });\n\t\n\t        renderWatch.renderEnd('pieChart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    pie.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt['series'] = {\n\t            key: chart.x()(evt.data),\n\t            value: chart.y()(evt.data),\n\t            color: evt.color,\n\t            percent: evt.percent\n\t        };\n\t        if (!showTooltipPercent) {\n\t            delete evt.percent;\n\t            delete evt.series.percent;\n\t        }\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    pie.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    pie.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.legend = legend;\n\t    chart.dispatch = dispatch;\n\t    chart.pie = pie;\n\t    chart.tooltip = tooltip;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    // use Object get/set functionality to map between vars and chart functions\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:              {get: function(){return width;},                set: function(_){width=_;}},\n\t        height:             {get: function(){return height;},               set: function(_){height=_;}},\n\t        noData:             {get: function(){return noData;},               set: function(_){noData=_;}},\n\t        showTooltipPercent: {get: function(){return showTooltipPercent;},   set: function(_){showTooltipPercent=_;}},\n\t        showLegend:         {get: function(){return showLegend;},           set: function(_){showLegend=_;}},\n\t        legendPosition:     {get: function(){return legendPosition;},       set: function(_){legendPosition=_;}},\n\t        defaultState:       {get: function(){return defaultState;},         set: function(_){defaultState=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        color: {get: function(){return color;}, set: function(_){\n\t            color = _;\n\t            legend.color(color);\n\t            pie.color(color);\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            pie.duration(duration);\n\t        }},\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }}\n\t    });\n\t    nv.utils.inheritOptions(chart, pie);\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\tnv.models.sankey = function() {\n\t    'use strict';\n\t\n\t    // Sources:\n\t    // - https://bost.ocks.org/mike/sankey/\n\t    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var sankey = {},\n\t        nodeWidth = 24,\n\t        nodePadding = 8,\n\t        size = [1, 1],\n\t        nodes = [],\n\t        links = [],\n\t        sinksRight = true;\n\t\n\t    var layout = function(iterations) {\n\t        computeNodeLinks();\n\t        computeNodeValues();\n\t        computeNodeBreadths();\n\t        computeNodeDepths(iterations);\n\t    };\n\t\n\t    var relayout = function() {\n\t        computeLinkDepths();\n\t    };\n\t\n\t    // SVG path data generator, to be used as 'd' attribute on 'path' element selection.\n\t    var link = function() {\n\t        var curvature = .5;\n\t\n\t        function link(d) {\n\t\n\t            var x0 = d.source.x + d.source.dx,\n\t                x1 = d.target.x,\n\t                xi = d3.interpolateNumber(x0, x1),\n\t                x2 = xi(curvature),\n\t                x3 = xi(1 - curvature),\n\t                y0 = d.source.y + d.sy + d.dy / 2,\n\t                y1 = d.target.y + d.ty + d.dy / 2;\n\t            var linkPath = 'M' + x0 + ',' + y0\n\t                + 'C' + x2 + ',' + y0\n\t                + ' ' + x3 + ',' + y1\n\t                + ' ' + x1 + ',' + y1;\n\t            return linkPath;\n\t        }\n\t\n\t        link.curvature = function(_) {\n\t            if (!arguments.length) return curvature;\n\t            curvature = +_;\n\t            return link;\n\t        };\n\t\n\t        return link;\n\t    };\n\t\n\t    // Y-position of the middle of a node.\n\t    var center = function(node) {\n\t        return node.y + node.dy / 2;\n\t    };\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    // Populate the sourceLinks and targetLinks for each node.\n\t    // Also, if the source and target are not objects, assume they are indices.\n\t    function computeNodeLinks() {\n\t        nodes.forEach(function(node) {\n\t            // Links that have this node as source.\n\t            node.sourceLinks = [];\n\t            // Links that have this node as target.\n\t            node.targetLinks = [];\n\t        });\n\t        links.forEach(function(link) {\n\t            var source = link.source,\n\t                target = link.target;\n\t            if (typeof source === 'number') source = link.source = nodes[link.source];\n\t            if (typeof target === 'number') target = link.target = nodes[link.target];\n\t            source.sourceLinks.push(link);\n\t            target.targetLinks.push(link);\n\t        });\n\t    }\n\t\n\t    // Compute the value (size) of each node by summing the associated links.\n\t    function computeNodeValues() {\n\t        nodes.forEach(function(node) {\n\t            node.value = Math.max(\n\t                d3.sum(node.sourceLinks, value),\n\t                d3.sum(node.targetLinks, value)\n\t            );\n\t        });\n\t    }\n\t\n\t    // Iteratively assign the breadth (x-position) for each node.\n\t    // Nodes are assigned the maximum breadth of incoming neighbors plus one;\n\t    // nodes with no incoming links are assigned breadth zero, while\n\t    // nodes with no outgoing links are assigned the maximum breadth.\n\t    function computeNodeBreadths() {\n\t        //\n\t        var remainingNodes = nodes,\n\t            nextNodes,\n\t            x = 0;\n\t\n\t        // Work from left to right.\n\t        // Keep updating the breath (x-position) of nodes that are target of recently updated nodes.\n\t        //\n\t        while (remainingNodes.length && x < nodes.length) {\n\t            nextNodes = [];\n\t            remainingNodes.forEach(function(node) {\n\t                node.x = x;\n\t                node.dx = nodeWidth;\n\t                node.sourceLinks.forEach(function(link) {\n\t                    if (nextNodes.indexOf(link.target) < 0) {\n\t                        nextNodes.push(link.target);\n\t                    }\n\t                });\n\t            });\n\t            remainingNodes = nextNodes;\n\t            ++x;\n\t            //\n\t        }\n\t\n\t        // Optionally move pure sinks always to the right.\n\t        if (sinksRight) {\n\t            moveSinksRight(x);\n\t        }\n\t\n\t        scaleNodeBreadths((size[0] - nodeWidth) / (x - 1));\n\t    }\n\t\n\t    function moveSourcesRight() {\n\t        nodes.forEach(function(node) {\n\t            if (!node.targetLinks.length) {\n\t                node.x = d3.min(node.sourceLinks, function(d) { return d.target.x; }) - 1;\n\t            }\n\t        });\n\t    }\n\t\n\t    function moveSinksRight(x) {\n\t        nodes.forEach(function(node) {\n\t            if (!node.sourceLinks.length) {\n\t                node.x = x - 1;\n\t            }\n\t        });\n\t    }\n\t\n\t    function scaleNodeBreadths(kx) {\n\t        nodes.forEach(function(node) {\n\t            node.x *= kx;\n\t        });\n\t    }\n\t\n\t    // Compute the depth (y-position) for each node.\n\t    function computeNodeDepths(iterations) {\n\t        // Group nodes by breath.\n\t        var nodesByBreadth = d3.nest()\n\t            .key(function(d) { return d.x; })\n\t            .sortKeys(d3.ascending)\n\t            .entries(nodes)\n\t            .map(function(d) { return d.values; });\n\t\n\t        //\n\t        initializeNodeDepth();\n\t        resolveCollisions();\n\t        computeLinkDepths();\n\t        for (var alpha = 1; iterations > 0; --iterations) {\n\t            relaxRightToLeft(alpha *= .99);\n\t            resolveCollisions();\n\t            computeLinkDepths();\n\t            relaxLeftToRight(alpha);\n\t            resolveCollisions();\n\t            computeLinkDepths();\n\t        }\n\t\n\t        function initializeNodeDepth() {\n\t            // Calculate vertical scaling factor.\n\t            var ky = d3.min(nodesByBreadth, function(nodes) {\n\t                return (size[1] - (nodes.length - 1) * nodePadding) / d3.sum(nodes, value);\n\t            });\n\t\n\t            nodesByBreadth.forEach(function(nodes) {\n\t                nodes.forEach(function(node, i) {\n\t                    node.y = i;\n\t                    node.dy = node.value * ky;\n\t                });\n\t            });\n\t\n\t            links.forEach(function(link) {\n\t                link.dy = link.value * ky;\n\t            });\n\t        }\n\t\n\t        function relaxLeftToRight(alpha) {\n\t            nodesByBreadth.forEach(function(nodes, breadth) {\n\t                nodes.forEach(function(node) {\n\t                    if (node.targetLinks.length) {\n\t                        // Value-weighted average of the y-position of source node centers linked to this node.\n\t                        var y = d3.sum(node.targetLinks, weightedSource) / d3.sum(node.targetLinks, value);\n\t                        node.y += (y - center(node)) * alpha;\n\t                    }\n\t                });\n\t            });\n\t\n\t            function weightedSource(link) {\n\t                return (link.source.y + link.sy + link.dy / 2) * link.value;\n\t            }\n\t        }\n\t\n\t        function relaxRightToLeft(alpha) {\n\t            nodesByBreadth.slice().reverse().forEach(function(nodes) {\n\t                nodes.forEach(function(node) {\n\t                    if (node.sourceLinks.length) {\n\t                        // Value-weighted average of the y-positions of target nodes linked to this node.\n\t                        var y = d3.sum(node.sourceLinks, weightedTarget) / d3.sum(node.sourceLinks, value);\n\t                        node.y += (y - center(node)) * alpha;\n\t                    }\n\t                });\n\t            });\n\t\n\t            function weightedTarget(link) {\n\t                return (link.target.y + link.ty + link.dy / 2) * link.value;\n\t            }\n\t        }\n\t\n\t        function resolveCollisions() {\n\t            nodesByBreadth.forEach(function(nodes) {\n\t                var node,\n\t                    dy,\n\t                    y0 = 0,\n\t                    n = nodes.length,\n\t                    i;\n\t\n\t                // Push any overlapping nodes down.\n\t                nodes.sort(ascendingDepth);\n\t                for (i = 0; i < n; ++i) {\n\t                    node = nodes[i];\n\t                    dy = y0 - node.y;\n\t                    if (dy > 0) node.y += dy;\n\t                    y0 = node.y + node.dy + nodePadding;\n\t                }\n\t\n\t                // If the bottommost node goes outside the bounds, push it back up.\n\t                dy = y0 - nodePadding - size[1];\n\t                if (dy > 0) {\n\t                    y0 = node.y -= dy;\n\t\n\t                    // Push any overlapping nodes back up.\n\t                    for (i = n - 2; i >= 0; --i) {\n\t                        node = nodes[i];\n\t                        dy = node.y + node.dy + nodePadding - y0;\n\t                        if (dy > 0) node.y -= dy;\n\t                        y0 = node.y;\n\t                    }\n\t                }\n\t            });\n\t        }\n\t\n\t        function ascendingDepth(a, b) {\n\t            return a.y - b.y;\n\t        }\n\t    }\n\t\n\t    // Compute y-offset of the source endpoint (sy) and target endpoints (ty) of links,\n\t    // relative to the source/target node's y-position.\n\t    function computeLinkDepths() {\n\t        nodes.forEach(function(node) {\n\t            node.sourceLinks.sort(ascendingTargetDepth);\n\t            node.targetLinks.sort(ascendingSourceDepth);\n\t        });\n\t        nodes.forEach(function(node) {\n\t            var sy = 0, ty = 0;\n\t            node.sourceLinks.forEach(function(link) {\n\t                link.sy = sy;\n\t                sy += link.dy;\n\t            });\n\t            node.targetLinks.forEach(function(link) {\n\t                link.ty = ty;\n\t                ty += link.dy;\n\t            });\n\t        });\n\t\n\t        function ascendingSourceDepth(a, b) {\n\t            return a.source.y - b.source.y;\n\t        }\n\t\n\t        function ascendingTargetDepth(a, b) {\n\t            return a.target.y - b.target.y;\n\t        }\n\t    }\n\t\n\t    // Value property accessor.\n\t    function value(x) {\n\t        return x.value;\n\t    }\n\t\n\t    sankey.options = nv.utils.optionsFunc.bind(sankey);\n\t    sankey._options = Object.create({}, {\n\t        nodeWidth:    {get: function(){return nodeWidth;},   set: function(_){nodeWidth=+_;}},\n\t        nodePadding:  {get: function(){return nodePadding;}, set: function(_){nodePadding=_;}},\n\t        nodes:        {get: function(){return nodes;},       set: function(_){nodes=_;}},\n\t        links:        {get: function(){return links ;},      set: function(_){links=_;}},\n\t        size:         {get: function(){return size;},        set: function(_){size=_;}},\n\t        sinksRight:   {get: function(){return sinksRight;},  set: function(_){sinksRight=_;}},\n\t\n\t        layout:       {get: function(){layout(32);},         set: function(_){layout(_);}},\n\t        relayout:     {get: function(){relayout();},         set: function(_){}},\n\t        center:       {get: function(){return center();},    set: function(_){\n\t            if(typeof _ === 'function'){\n\t                center=_;\n\t            }\n\t        }},\n\t        link:         {get: function(){return link();},      set: function(_){\n\t            if(typeof _ === 'function'){\n\t                link=_;\n\t            }\n\t            return link();\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(sankey);\n\t\n\t    return sankey;\n\t};\n\tnv.models.sankeyChart = function() {\n\t    \"use strict\";\n\t\n\t    // Sources:\n\t    // - https://bost.ocks.org/mike/sankey/\n\t    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 5, right: 0, bottom: 5, left: 0}\n\t        , sankey = nv.models.sankey()\n\t        , width = 600\n\t        , height = 400\n\t        , nodeWidth = 36\n\t        , nodePadding =  40\n\t        , units = 'units'\n\t        , center = undefined\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var formatNumber = d3.format(',.0f');    // zero decimal places\n\t    var format = function(d) {\n\t        return formatNumber(d) + ' ' + units;\n\t    };\n\t    var color = d3.scale.category20();\n\t    var linkTitle = function(d){\n\t        return d.source.name + ' → ' + d.target.name + '\\n' + format(d.value);\n\t    };\n\t    var nodeFillColor = function(d){\n\t        return d.color = color(d.name.replace(/ .*/, ''));\n\t    };\n\t    var nodeStrokeColor = function(d){\n\t        return d3.rgb(d.color).darker(2);\n\t    };\n\t    var nodeTitle = function(d){\n\t        return d.name + '\\n' + format(d.value);\n\t    };\n\t\n\t    var showError = function(element, message) {\n\t        element.append('text')\n\t            .attr('x', 0)\n\t            .attr('y', 0)\n\t            .attr('class', 'nvd3-sankey-chart-error')\n\t            .attr('text-anchor', 'middle')\n\t            .text(message);\n\t    };\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t\n\t            var testData = {\n\t                nodes:\n\t                    [\n\t                        {'node': 1, 'name': 'Test 1'},\n\t                        {'node': 2, 'name': 'Test 2'},\n\t                        {'node': 3, 'name': 'Test 3'},\n\t                        {'node': 4, 'name': 'Test 4'},\n\t                        {'node': 5, 'name': 'Test 5'},\n\t                        {'node': 6, 'name': 'Test 6'}\n\t                    ],\n\t                links:\n\t                    [\n\t                        {'source': 0, 'target': 1, 'value': 2295},\n\t                        {'source': 0, 'target': 5, 'value': 1199},\n\t                        {'source': 1, 'target': 2, 'value': 1119},\n\t                        {'source': 1, 'target': 5, 'value': 1176},\n\t                        {'source': 2, 'target': 3, 'value': 487},\n\t                        {'source': 2, 'target': 5, 'value': 632},\n\t                        {'source': 3, 'target': 4, 'value': 301},\n\t                        {'source': 3, 'target': 5, 'value': 186}\n\t                    ]\n\t            };\n\t\n\t            // Error handling\n\t            var isDataValid = false;\n\t            var dataAvailable = false;\n\t\n\t            // check if data is valid\n\t            if(\n\t                (typeof data['nodes'] === 'object' && data['nodes'].length) >= 0 &&\n\t                (typeof data['links'] === 'object' && data['links'].length) >= 0\n\t            ){\n\t                isDataValid = true;\n\t            }\n\t\n\t            // check if data is available\n\t            if(\n\t                data['nodes'] && data['nodes'].length > 0 &&\n\t                data['links'] && data['links'].length > 0\n\t            ) {\n\t                dataAvailable = true;\n\t            }\n\t\n\t            // show error\n\t            if(!isDataValid) {\n\t                console.error('NVD3 Sankey chart error:', 'invalid data format for', data);\n\t                console.info('Valid data format is: ', testData, JSON.stringify(testData));\n\t                showError(selection, 'Error loading chart, data is invalid');\n\t                return false;\n\t            }\n\t\n\t            // TODO use nv.utils.noData\n\t            if(!dataAvailable) {\n\t                showError(selection, 'No data available');\n\t                return false;\n\t            }\n\t\n\t            // No errors, continue\n\t\n\t            // append the svg canvas to the page\n\t            var svg = selection.append('svg')\n\t                .attr('width', width)\n\t                .attr('height', height)\n\t                .append('g')\n\t                .attr('class', 'nvd3 nv-wrap nv-sankeyChart');\n\t\n\t            // Set the sankey diagram properties\n\t            sankey\n\t                .nodeWidth(nodeWidth)\n\t                .nodePadding(nodePadding)\n\t                .size([width, height]);\n\t\n\t            var path = sankey.link();\n\t\n\t            sankey\n\t                .nodes(data.nodes)\n\t                .links(data.links)\n\t                .layout(32)\n\t                .center(center);\n\t\n\t            // add in the links\n\t            var link = svg.append('g').selectAll('.link')\n\t                .data(data.links)\n\t                .enter().append('path')\n\t                .attr('class', 'link')\n\t                .attr('d', path)\n\t                .style('stroke-width', function(d) { return Math.max(1, d.dy); })\n\t            .sort(function(a,b) { return b.dy - a.dy; });\n\t\n\t            // add the link titles\n\t            link.append('title')\n\t                .text(linkTitle);\n\t\n\t            // add in the nodes\n\t            var node = svg.append('g').selectAll('.node')\n\t                .data(data.nodes)\n\t                .enter().append('g')\n\t                .attr('class', 'node')\n\t                .attr('transform', function(d) { return 'translate(' + d.x + ',' + d.y + ')'; })\n\t                .call(\n\t                    d3.behavior\n\t                        .drag()\n\t                        .origin(function(d) { return d; })\n\t                        .on('dragstart', function() {\n\t                            this.parentNode.appendChild(this);\n\t                        })\n\t                        .on('drag', dragmove)\n\t                );\n\t\n\t            // add the rectangles for the nodes\n\t            node.append('rect')\n\t                .attr('height', function(d) { return d.dy; })\n\t                .attr('width', sankey.nodeWidth())\n\t                .style('fill', nodeFillColor)\n\t                .style('stroke', nodeStrokeColor)\n\t                .append('title')\n\t                .text(nodeTitle);\n\t\n\t            // add in the title for the nodes\n\t            node.append('text')\n\t                .attr('x', -6)\n\t                .attr('y', function(d) { return d.dy / 2; })\n\t                .attr('dy', '.35em')\n\t                .attr('text-anchor', 'end')\n\t                .attr('transform', null)\n\t                .text(function(d) { return d.name; })\n\t                .filter(function(d) { return d.x < width / 2; })\n\t                .attr('x', 6 + sankey.nodeWidth())\n\t                .attr('text-anchor', 'start');\n\t\n\t            // the function for moving the nodes\n\t            function dragmove(d) {\n\t                d3.select(this).attr('transform',\n\t                'translate(' + d.x + ',' + (\n\t                    d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))\n\t                ) + ')');\n\t                sankey.relayout();\n\t                link.attr('d', path);\n\t            }\n\t        });\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        units:           {get: function(){return units;},       set: function(_){units=_;}},\n\t        width:           {get: function(){return width;},       set: function(_){width=_;}},\n\t        height:          {get: function(){return height;},      set: function(_){height=_;}},\n\t        format:          {get: function(){return format;},      set: function(_){format=_;}},\n\t        linkTitle:       {get: function(){return linkTitle;},   set: function(_){linkTitle=_;}},\n\t        nodeWidth:       {get: function(){return nodeWidth;},   set: function(_){nodeWidth=_;}},\n\t        nodePadding:     {get: function(){return nodePadding;}, set: function(_){nodePadding=_;}},\n\t        center:          {get: function(){return center},       set: function(_){center=_}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        nodeStyle: {get: function(){return {};}, set: function(_){\n\t            nodeFillColor   = _.fillColor   !== undefined ? _.fillColor   : nodeFillColor;\n\t            nodeStrokeColor = _.strokeColor !== undefined ? _.strokeColor : nodeStrokeColor;\n\t            nodeTitle       = _.title       !== undefined ? _.title       : nodeTitle;\n\t        }}\n\t\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.scatter = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin       = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width        = null\n\t        , height       = null\n\t        , color        = nv.utils.defaultColor() // chooses color\n\t        , pointBorderColor = null\n\t        , id           = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't select one\n\t        , container    = null\n\t        , x            = d3.scale.linear()\n\t        , y            = d3.scale.linear()\n\t        , z            = d3.scale.linear() //linear because d3.svg.shape.size is treated as area\n\t        , getX         = function(d) { return d.x } // accessor to get the x value\n\t        , getY         = function(d) { return d.y } // accessor to get the y value\n\t        , getSize      = function(d) { return d.size || 1} // accessor to get the point size\n\t        , getShape     = function(d) { return d.shape || 'circle' } // accessor to get point shape\n\t        , forceX       = [] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n\t        , forceY       = [] // List of numbers to Force into the Y scale\n\t        , forceSize    = [] // List of numbers to Force into the Size scale\n\t        , interactive  = true // If true, plots a voronoi overlay for advanced point intersection\n\t        , pointActive  = function(d) { return !d.notActive } // any points that return false will be filtered out\n\t        , padData      = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n\t        , padDataOuter = .1 //outerPadding to imitate ordinal scale outer padding\n\t        , clipEdge     = false // if true, masks points within x and y scale\n\t        , clipVoronoi  = true // if true, masks each point with a circle... can turn off to slightly increase performance\n\t        , showVoronoi  = false // display the voronoi areas\n\t        , clipRadius   = function() { return 25 } // function to get the radius for voronoi point clips\n\t        , xDomain      = null // Override x domain (skips the calculation from data)\n\t        , yDomain      = null // Override y domain\n\t        , xRange       = null // Override x range\n\t        , yRange       = null // Override y range\n\t        , sizeDomain   = null // Override point size domain\n\t        , sizeRange    = null\n\t        , singlePoint  = false\n\t        , dispatch     = d3.dispatch('elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'renderEnd')\n\t        , useVoronoi   = true\n\t        , duration     = 250\n\t        , interactiveUpdateDelay = 300\n\t        , showLabels    = false\n\t        ;\n\t\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var x0, y0, z0 // used to store previous scales\n\t        , width0\n\t        , height0\n\t        , timeoutID\n\t        , needsUpdate = false // Flag for when the points are visually updating, but the interactive layer is behind, to disable tooltips\n\t        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n\t        , _sizeRange_def = [16, 256]\n\t        , _cache = {}\n\t        ;\n\t\n\t    function getCache(d) {\n\t        var key, val;\n\t        key = d[0].series + ':' + d[1];\n\t        val = _cache[key] = _cache[key] || {};\n\t        return val;\n\t    }\n\t\n\t    function delCache(d) {\n\t        var key, val;\n\t        key = d[0].series + ':' + d[1];\n\t        delete _cache[key];\n\t    }\n\t\n\t    function getDiffs(d) {\n\t        var i, key, val,\n\t            cache = getCache(d),\n\t            diffs = false;\n\t        for (i = 1; i < arguments.length; i += 2) {\n\t            key = arguments[i];\n\t            val = arguments[i + 1](d[0], d[1]);\n\t            if (cache[key] !== val || !cache.hasOwnProperty(key)) {\n\t                cache[key] = val;\n\t                diffs = true;\n\t            }\n\t        }\n\t        return diffs;\n\t    }\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            container = d3.select(this);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            nv.utils.initSVG(container);\n\t\n\t            //add series index to each data point for reference\n\t            data.forEach(function(series, i) {\n\t                series.values.forEach(function(point) {\n\t                    point.series = i;\n\t                });\n\t            });\n\t\n\t            // Setup Scales\n\t            var logScale = chart.yScale().name === d3.scale.log().name ? true : false;\n\t            // remap and flatten the data for use in calculating the scales' domains\n\t            var seriesData = (xDomain && yDomain && sizeDomain) ? [] : // if we know xDomain and yDomain and sizeDomain, no need to calculate.... if Size is constant remember to set sizeDomain to speed up performance\n\t                d3.merge(\n\t                    data.map(function(d) {\n\t                        return d.values.map(function(d,i) {\n\t                            return { x: getX(d,i), y: getY(d,i), size: getSize(d,i) }\n\t                        })\n\t                    })\n\t                );\n\t\n\t            x   .domain(xDomain || d3.extent(seriesData.map(function(d) { return d.x; }).concat(forceX)))\n\t\n\t            if (padData && data[0])\n\t                x.range(xRange || [(availableWidth * padDataOuter +  availableWidth) / (2 *data[0].values.length), availableWidth - availableWidth * (1 + padDataOuter) / (2 * data[0].values.length)  ]);\n\t            //x.range([availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n\t            else\n\t                x.range(xRange || [0, availableWidth]);\n\t\n\t             if (logScale) {\n\t                    var min = d3.min(seriesData.map(function(d) { if (d.y !== 0) return d.y; }));\n\t                    y.clamp(true)\n\t                        .domain(yDomain || d3.extent(seriesData.map(function(d) {\n\t                            if (d.y !== 0) return d.y;\n\t                            else return min * 0.1;\n\t                        }).concat(forceY)))\n\t                        .range(yRange || [availableHeight, 0]);\n\t                } else {\n\t                        y.domain(yDomain || d3.extent(seriesData.map(function (d) { return d.y;}).concat(forceY)))\n\t                        .range(yRange || [availableHeight, 0]);\n\t                }\n\t\n\t            z   .domain(sizeDomain || d3.extent(seriesData.map(function(d) { return d.size }).concat(forceSize)))\n\t                .range(sizeRange || _sizeRange_def);\n\t\n\t            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\t            singlePoint = x.domain()[0] === x.domain()[1] || y.domain()[0] === y.domain()[1];\n\t\n\t            if (x.domain()[0] === x.domain()[1])\n\t                x.domain()[0] ?\n\t                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n\t                    : x.domain([-1,1]);\n\t\n\t            if (y.domain()[0] === y.domain()[1])\n\t                y.domain()[0] ?\n\t                    y.domain([y.domain()[0] - y.domain()[0] * 0.01, y.domain()[1] + y.domain()[1] * 0.01])\n\t                    : y.domain([-1,1]);\n\t\n\t            if ( isNaN(x.domain()[0])) {\n\t                x.domain([-1,1]);\n\t            }\n\t\n\t            if ( isNaN(y.domain()[0])) {\n\t                y.domain([-1,1]);\n\t            }\n\t\n\t            x0 = x0 || x;\n\t            y0 = y0 || y;\n\t            z0 = z0 || z;\n\t\n\t            var scaleDiff = x(1) !== x0(1) || y(1) !== y0(1) || z(1) !== z0(1);\n\t\n\t            width0 = width0 || width;\n\t            height0 = height0 || height;\n\t\n\t            var sizeDiff = width0 !== width || height0 !== height;\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-scatter').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatter nv-chart-' + id);\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            wrap.classed('nv-single-point', singlePoint);\n\t            gEnter.append('g').attr('class', 'nv-groups');\n\t            gEnter.append('g').attr('class', 'nv-point-paths');\n\t            wrapEnter.append('g').attr('class', 'nv-point-clips');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-edge-clip-' + id)\n\t                .append('rect')\n\t                .attr('transform', 'translate( -10, -10)');\n\t                \n\t            wrap.select('#nv-edge-clip-' + id + ' rect')\n\t                .attr('width', availableWidth + 20)\n\t                .attr('height', (availableHeight > 0) ? availableHeight + 20 : 0);\n\t\n\t            g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\t\n\t            function updateInteractiveLayer() {\n\t                // Always clear needs-update flag regardless of whether or not\n\t                // we will actually do anything (avoids needless invocations).\n\t                needsUpdate = false;\n\t\n\t                if (!interactive) return false;\n\t\n\t                // inject series and point index for reference into voronoi\n\t                if (useVoronoi === true) {\n\t                    var vertices = d3.merge(data.map(function(group, groupIndex) {\n\t                            return group.values\n\t                                .map(function(point, pointIndex) {\n\t                                    // *Adding noise to make duplicates very unlikely\n\t                                    // *Injecting series and point index for reference\n\t                                    /* *Adding a 'jitter' to the points, because there's an issue in d3.geom.voronoi.\n\t                                     */\n\t                                    var pX = getX(point,pointIndex);\n\t                                    var pY = getY(point,pointIndex);\n\t\n\t                                    return [nv.utils.NaNtoZero(x(pX))+ Math.random() * 1e-4,\n\t                                            nv.utils.NaNtoZero(y(pY))+ Math.random() * 1e-4,\n\t                                        groupIndex,\n\t                                        pointIndex, point]; //temp hack to add noise until I think of a better way so there are no duplicates\n\t                                })\n\t                                .filter(function(pointArray, pointIndex) {\n\t                                    return pointActive(pointArray[4], pointIndex); // Issue #237.. move filter to after map, so pointIndex is correct!\n\t                                })\n\t                        })\n\t                    );\n\t\n\t                    if (vertices.length == 0) return false;  // No active points, we're done\n\t                    if (vertices.length < 3) {\n\t                        // Issue #283 - Adding 2 dummy points to the voronoi b/c voronoi requires min 3 points to work\n\t                        vertices.push([x.range()[0] - 20, y.range()[0] - 20, null, null]);\n\t                        vertices.push([x.range()[1] + 20, y.range()[1] + 20, null, null]);\n\t                        vertices.push([x.range()[0] - 20, y.range()[0] + 20, null, null]);\n\t                        vertices.push([x.range()[1] + 20, y.range()[1] - 20, null, null]);\n\t                    }\n\t\n\t                    // keep voronoi sections from going more than 10 outside of graph\n\t                    // to avoid overlap with other things like legend etc\n\t                    var bounds = d3.geom.polygon([\n\t                        [-10,-10],\n\t                        [-10,height + 10],\n\t                        [width + 10,height + 10],\n\t                        [width + 10,-10]\n\t                    ]);\n\t\n\t                    var voronoi = d3.geom.voronoi(vertices).map(function(d, i) {\n\t                        return {\n\t                            'data': bounds.clip(d),\n\t                            'series': vertices[i][2],\n\t                            'point': vertices[i][3]\n\t                        }\n\t                    });\n\t\n\t                    // nuke all voronoi paths on reload and recreate them\n\t                    wrap.select('.nv-point-paths').selectAll('path').remove();\n\t                    var pointPaths = wrap.select('.nv-point-paths').selectAll('path').data(voronoi);\n\t                    var vPointPaths = pointPaths\n\t                        .enter().append(\"svg:path\")\n\t                        .attr(\"d\", function(d) {\n\t                            if (!d || !d.data || d.data.length === 0)\n\t                                return 'M 0 0';\n\t                            else\n\t                                return \"M\" + d.data.join(\",\") + \"Z\";\n\t                        })\n\t                        .attr(\"id\", function(d,i) {\n\t                            return \"nv-path-\"+i; })\n\t                        .attr(\"clip-path\", function(d,i) { return \"url(#nv-clip-\"+id+\"-\"+i+\")\"; })\n\t                        ;\n\t\n\t                    // good for debugging point hover issues\n\t                    if (showVoronoi) {\n\t                        vPointPaths.style(\"fill\", d3.rgb(230, 230, 230))\n\t                            .style('fill-opacity', 0.4)\n\t                            .style('stroke-opacity', 1)\n\t                            .style(\"stroke\", d3.rgb(200,200,200));\n\t                    }\n\t\n\t                    if (clipVoronoi) {\n\t                        // voronoi sections are already set to clip,\n\t                        // just create the circles with the IDs they expect\n\t                        wrap.select('.nv-point-clips').selectAll('*').remove(); // must do * since it has sub-dom\n\t                        var pointClips = wrap.select('.nv-point-clips').selectAll('clipPath').data(vertices);\n\t                        var vPointClips = pointClips\n\t                            .enter().append(\"svg:clipPath\")\n\t                            .attr(\"id\", function(d, i) { return \"nv-clip-\"+id+\"-\"+i;})\n\t                            .append(\"svg:circle\")\n\t                            .attr('cx', function(d) { return d[0]; })\n\t                            .attr('cy', function(d) { return d[1]; })\n\t                            .attr('r', clipRadius);\n\t                    }\n\t\n\t                    var mouseEventCallback = function(el, d, mDispatch) {\n\t                        if (needsUpdate) return 0;\n\t                        var series = data[d.series];\n\t                        if (series === undefined) return;\n\t                        var point  = series.values[d.point];\n\t                        point['color'] = color(series, d.series);\n\t\n\t                        // standardize attributes for tooltip.\n\t                        point['x'] = getX(point);\n\t                        point['y'] = getY(point);\n\t\n\t                        // can't just get box of event node since it's actually a voronoi polygon\n\t                        var box = container.node().getBoundingClientRect();\n\t                        var scrollTop  = window.pageYOffset || document.documentElement.scrollTop;\n\t                        var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n\t\n\t                        var pos = {\n\t                            left: x(getX(point, d.point)) + box.left + scrollLeft + margin.left + 10,\n\t                            top: y(getY(point, d.point)) + box.top + scrollTop + margin.top + 10\n\t                        };\n\t\n\t                        mDispatch({\n\t                            point: point,\n\t                            series: series,\n\t                            pos: pos,\n\t                            relativePos: [x(getX(point, d.point)) + margin.left, y(getY(point, d.point)) + margin.top],\n\t                            seriesIndex: d.series,\n\t                            pointIndex: d.point,\n\t                            event: d3.event,\n\t                            element: el\n\t                        });\n\t                    };\n\t\n\t                    pointPaths\n\t                        .on('click', function(d) {\n\t                            mouseEventCallback(this, d, dispatch.elementClick);\n\t                        })\n\t                        .on('dblclick', function(d) {\n\t                            mouseEventCallback(this, d, dispatch.elementDblClick);\n\t                        })\n\t                        .on('mouseover', function(d) {\n\t                            mouseEventCallback(this, d, dispatch.elementMouseover);\n\t                        })\n\t                        .on('mouseout', function(d, i) {\n\t                            mouseEventCallback(this, d, dispatch.elementMouseout);\n\t                        });\n\t\n\t                } else {\n\t                    // add event handlers to points instead voronoi paths\n\t                    wrap.select('.nv-groups').selectAll('.nv-group')\n\t                        .selectAll('.nv-point')\n\t                        //.data(dataWithPoints)\n\t                        //.style('pointer-events', 'auto') // recativate events, disabled by css\n\t                        .on('click', function(d,i) {\n\t                            //nv.log('test', d, i);\n\t                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\t                            var series = data[d.series],\n\t                                point  = series.values[i];\n\t                            var element = this;\n\t                            dispatch.elementClick({\n\t                                point: point,\n\t                                series: series,\n\t                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top], //TODO: make this pos base on the page\n\t                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n\t                                seriesIndex: d.series,\n\t                                pointIndex: i,\n\t                                event: d3.event,\n\t                                element: element\n\t                            });\n\t                        })\n\t                        .on('dblclick', function(d,i) {\n\t                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\t                            var series = data[d.series],\n\t                                point  = series.values[i];\n\t\n\t                            dispatch.elementDblClick({\n\t                                point: point,\n\t                                series: series,\n\t                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],//TODO: make this pos base on the page\n\t                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n\t                                seriesIndex: d.series,\n\t                                pointIndex: i\n\t                            });\n\t                        })\n\t                        .on('mouseover', function(d,i) {\n\t                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\t                            var series = data[d.series],\n\t                                point  = series.values[i];\n\t\n\t                            dispatch.elementMouseover({\n\t                                point: point,\n\t                                series: series,\n\t                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],//TODO: make this pos base on the page\n\t                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n\t                                seriesIndex: d.series,\n\t                                pointIndex: i,\n\t                                color: color(d, i)\n\t                            });\n\t                        })\n\t                        .on('mouseout', function(d,i) {\n\t                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\t                            var series = data[d.series],\n\t                                point  = series.values[i];\n\t\n\t                            dispatch.elementMouseout({\n\t                                point: point,\n\t                                series: series,\n\t                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],//TODO: make this pos base on the page\n\t                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n\t                                seriesIndex: d.series,\n\t                                pointIndex: i,\n\t                                color: color(d, i)\n\t                            });\n\t                        });\n\t                }\n\t            }\n\t\n\t            needsUpdate = true;\n\t            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n\t                .data(function(d) { return d }, function(d) { return d.key });\n\t            groups.enter().append('g')\n\t                .style('stroke-opacity', 1e-6)\n\t                .style('fill-opacity', 1e-6);\n\t            groups.exit()\n\t                .remove();\n\t            groups\n\t                .attr('class', function(d,i) {\n\t                    return (d.classed || '') + ' nv-group nv-series-' + i;\n\t                })\n\t                .classed('nv-noninteractive', !interactive)\n\t                .classed('hover', function(d) { return d.hover });\n\t            groups.watchTransition(renderWatch, 'scatter: groups')\n\t                .style('fill', function(d,i) { return color(d, i) })\n\t                .style('stroke', function(d,i) { return d.pointBorderColor || pointBorderColor || color(d, i) })\n\t                .style('stroke-opacity', 1)\n\t                .style('fill-opacity', .5);\n\t\n\t            // create the points, maintaining their IDs from the original data set\n\t            var points = groups.selectAll('path.nv-point')\n\t                .data(function(d) {\n\t                    return d.values.map(\n\t                        function (point, pointIndex) {\n\t                            return [point, pointIndex]\n\t                        }).filter(\n\t                            function(pointArray, pointIndex) {\n\t                                return pointActive(pointArray[0], pointIndex)\n\t                            })\n\t                    });\n\t            points.enter().append('path')\n\t                .attr('class', function (d) {\n\t                    return 'nv-point nv-point-' + d[1];\n\t                })\n\t                .style('fill', function (d) { return d.color })\n\t                .style('stroke', function (d) { return d.color })\n\t                .attr('transform', function(d) {\n\t                    return 'translate(' + nv.utils.NaNtoZero(x0(getX(d[0],d[1]))) + ',' + nv.utils.NaNtoZero(y0(getY(d[0],d[1]))) + ')'\n\t                })\n\t                .attr('d',\n\t                    nv.utils.symbol()\n\t                    .type(function(d) { return getShape(d[0]); })\n\t                    .size(function(d) { return z(getSize(d[0],d[1])) })\n\t            );\n\t            points.exit().each(delCache).remove();\n\t            groups.exit().selectAll('path.nv-point')\n\t                .watchTransition(renderWatch, 'scatter exit')\n\t                .attr('transform', function(d) {\n\t                    return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0],d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')'\n\t                })\n\t                .remove();\n\t            // Update points position only if \"x\" or \"y\" have changed\n\t            points.filter(function (d) { return scaleDiff || sizeDiff || getDiffs(d, 'x', getX, 'y', getY); })\n\t                .watchTransition(renderWatch, 'scatter points')\n\t                .attr('transform', function(d) {\n\t                    //nv.log(d, getX(d[0],d[1]), x(getX(d[0],d[1])));\n\t                    return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0],d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')'\n\t                });\n\t            // Update points appearance only if \"shape\" or \"size\" have changed\n\t            points.filter(function (d) { return scaleDiff || sizeDiff || getDiffs(d, 'shape', getShape, 'size', getSize); })\n\t                .watchTransition(renderWatch, 'scatter points')\n\t                .attr('d',\n\t                    nv.utils.symbol()\n\t                    .type(function(d) { return getShape(d[0]); })\n\t                    .size(function(d) { return z(getSize(d[0],d[1])) })\n\t            );\n\t\n\t            // add label a label to scatter chart\n\t            if(showLabels)\n\t            {\n\t                var titles =  groups.selectAll('.nv-label')\n\t                    .data(function(d) {\n\t                        return d.values.map(\n\t                            function (point, pointIndex) {\n\t                                return [point, pointIndex]\n\t                            }).filter(\n\t                                function(pointArray, pointIndex) {\n\t                                    return pointActive(pointArray[0], pointIndex)\n\t                                })\n\t                        });\n\t\n\t                titles.enter().append('text')\n\t                    .style('fill', function (d,i) {\n\t                        return d.color })\n\t                    .style('stroke-opacity', 0)\n\t                    .style('fill-opacity', 1)\n\t                    .attr('transform', function(d) {\n\t                        var dx = nv.utils.NaNtoZero(x0(getX(d[0],d[1]))) + Math.sqrt(z(getSize(d[0],d[1]))/Math.PI) + 2;\n\t                        return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y0(getY(d[0],d[1]))) + ')';\n\t                    })\n\t                    .text(function(d,i){\n\t                        return d[0].label;});\n\t\n\t                titles.exit().remove();\n\t                groups.exit().selectAll('path.nv-label')\n\t                    .watchTransition(renderWatch, 'scatter exit')\n\t                    .attr('transform', function(d) {\n\t                        var dx = nv.utils.NaNtoZero(x(getX(d[0],d[1])))+ Math.sqrt(z(getSize(d[0],d[1]))/Math.PI)+2;\n\t                        return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')';\n\t                    })\n\t                    .remove();\n\t               titles.each(function(d) {\n\t                  d3.select(this)\n\t                    .classed('nv-label', true)\n\t                    .classed('nv-label-' + d[1], false)\n\t                    .classed('hover',false);\n\t                });\n\t                titles.watchTransition(renderWatch, 'scatter labels')\n\t                    .attr('transform', function(d) {\n\t                        var dx = nv.utils.NaNtoZero(x(getX(d[0],d[1])))+ Math.sqrt(z(getSize(d[0],d[1]))/Math.PI)+2;\n\t                        return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')'\n\t                    });\n\t            }\n\t\n\t            // Delay updating the invisible interactive layer for smoother animation\n\t            if( interactiveUpdateDelay )\n\t            {\n\t                clearTimeout(timeoutID); // stop repeat calls to updateInteractiveLayer\n\t                timeoutID = setTimeout(updateInteractiveLayer, interactiveUpdateDelay );\n\t            }\n\t            else\n\t            {\n\t                updateInteractiveLayer();\n\t            }\n\t\n\t            //store old scales for use in transitions on update\n\t            x0 = x.copy();\n\t            y0 = y.copy();\n\t            z0 = z.copy();\n\t\n\t            width0 = width;\n\t            height0 = height;\n\t\n\t        });\n\t        renderWatch.renderEnd('scatter immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    // utility function calls provided by this chart\n\t    chart._calls = new function() {\n\t        this.clearHighlights = function () {\n\t            nv.dom.write(function() {\n\t                container.selectAll(\".nv-point.hover\").classed(\"hover\", false);\n\t            });\n\t            return null;\n\t        };\n\t        this.highlightPoint = function (seriesIndex, pointIndex, isHoverOver) {\n\t            nv.dom.write(function() {\n\t                container.select('.nv-groups')\n\t                  .selectAll(\".nv-series-\" + seriesIndex)\n\t                  .selectAll(\".nv-point-\" + pointIndex)\n\t                  .classed(\"hover\", isHoverOver);\n\t            });\n\t        };\n\t    };\n\t\n\t    // trigger calls from events too\n\t    dispatch.on('elementMouseover.point', function(d) {\n\t        if (interactive) chart._calls.highlightPoint(d.seriesIndex,d.pointIndex,true);\n\t    });\n\t\n\t    dispatch.on('elementMouseout.point', function(d) {\n\t        if (interactive) chart._calls.highlightPoint(d.seriesIndex,d.pointIndex,false);\n\t    });\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:        {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:       {get: function(){return height;}, set: function(_){height=_;}},\n\t        xScale:       {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:       {get: function(){return y;}, set: function(_){y=_;}},\n\t        pointScale:   {get: function(){return z;}, set: function(_){z=_;}},\n\t        xDomain:      {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain:      {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        pointDomain:  {get: function(){return sizeDomain;}, set: function(_){sizeDomain=_;}},\n\t        xRange:       {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:       {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        pointRange:   {get: function(){return sizeRange;}, set: function(_){sizeRange=_;}},\n\t        forceX:       {get: function(){return forceX;}, set: function(_){forceX=_;}},\n\t        forceY:       {get: function(){return forceY;}, set: function(_){forceY=_;}},\n\t        forcePoint:   {get: function(){return forceSize;}, set: function(_){forceSize=_;}},\n\t        interactive:  {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\t        pointActive:  {get: function(){return pointActive;}, set: function(_){pointActive=_;}},\n\t        padDataOuter: {get: function(){return padDataOuter;}, set: function(_){padDataOuter=_;}},\n\t        padData:      {get: function(){return padData;}, set: function(_){padData=_;}},\n\t        clipEdge:     {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\t        clipVoronoi:  {get: function(){return clipVoronoi;}, set: function(_){clipVoronoi=_;}},\n\t        clipRadius:   {get: function(){return clipRadius;}, set: function(_){clipRadius=_;}},\n\t        showVoronoi:   {get: function(){return showVoronoi;}, set: function(_){showVoronoi=_;}},\n\t        id:           {get: function(){return id;}, set: function(_){id=_;}},\n\t        interactiveUpdateDelay: {get:function(){return interactiveUpdateDelay;}, set: function(_){interactiveUpdateDelay=_;}},\n\t        showLabels: {get: function(){return showLabels;}, set: function(_){ showLabels = _;}},\n\t        pointBorderColor: {get: function(){return pointBorderColor;}, set: function(_){pointBorderColor=_;}},\n\t\n\t        // simple functor options\n\t        x:     {get: function(){return getX;}, set: function(_){getX = d3.functor(_);}},\n\t        y:     {get: function(){return getY;}, set: function(_){getY = d3.functor(_);}},\n\t        pointSize: {get: function(){return getSize;}, set: function(_){getSize = d3.functor(_);}},\n\t        pointShape: {get: function(){return getShape;}, set: function(_){getShape = d3.functor(_);}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t        }},\n\t        color: {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        useVoronoi: {get: function(){return useVoronoi;}, set: function(_){\n\t            useVoronoi = _;\n\t            if (useVoronoi === false) {\n\t                clipVoronoi = false;\n\t            }\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\t\n\tnv.models.scatterChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var scatter      = nv.models.scatter()\n\t        , xAxis        = nv.models.axis()\n\t        , yAxis        = nv.models.axis()\n\t        , legend       = nv.models.legend()\n\t        , distX        = nv.models.distribution()\n\t        , distY        = nv.models.distribution()\n\t        , tooltip      = nv.models.tooltip()\n\t        ;\n\t\n\t    var margin       = {top: 30, right: 20, bottom: 50, left: 75}\n\t        , marginTop = null\n\t        , width        = null\n\t        , height       = null\n\t        , container    = null\n\t        , color        = nv.utils.defaultColor()\n\t        , x            = scatter.xScale()\n\t        , y            = scatter.yScale()\n\t        , showDistX    = false\n\t        , showDistY    = false\n\t        , showLegend   = true\n\t        , showXAxis    = true\n\t        , showYAxis    = true\n\t        , rightAlignYAxis = false\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n\t        , noData       = null\n\t        , duration = 250\n\t        , showLabels    = false\n\t        ;\n\t\n\t    scatter.xScale(x).yScale(y);\n\t    xAxis.orient('bottom').tickPadding(10);\n\t    yAxis\n\t        .orient((rightAlignYAxis) ? 'right' : 'left')\n\t        .tickPadding(10)\n\t    ;\n\t    distX.axis('x');\n\t    distY.axis('y');\n\t    tooltip\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        })\n\t        .valueFormatter(function(d, i) {\n\t            return yAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var x0, y0\n\t        , renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled })\n\t            };\n\t        }\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.active !== undefined)\n\t                data.forEach(function(series,i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t        }\n\t    };\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(scatter);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t        if (showDistX) renderWatch.models(distX);\n\t        if (showDistY) renderWatch.models(distY);\n\t\n\t        selection.each(function(data) {\n\t            var that = this;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() {\n\t                if (duration === 0)\n\t                    container.call(chart);\n\t                else\n\t                    container.transition().duration(duration).call(chart);\n\t            };\n\t            chart.container = this;\n\t\n\t            state\n\t                .setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            // DEPRECATED set state.disableddisabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display noData message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container);\n\t                renderWatch.renderEnd('scatter immediate');\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            x = scatter.xScale();\n\t            y = scatter.yScale();\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-scatterChart').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatterChart nv-chart-' + scatter.id());\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            // background for pointer events\n\t            gEnter.append('rect').attr('class', 'nvd3 nv-background').style(\"pointer-events\",\"none\");\n\t\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-scatterWrap');\n\t            gEnter.append('g').attr('class', 'nv-regressionLinesWrap');\n\t            gEnter.append('g').attr('class', 'nv-distWrap');\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                var legendWidth = availableWidth;\n\t                legend.width(legendWidth);\n\t\n\t                wrap.select('.nv-legendWrap')\n\t                    .datum(data)\n\t                    .call(legend);\n\t\n\t                if (!marginTop && legend.height() !== margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                wrap.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(0' + ',' + (-margin.top) +')');\n\t            }\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            // Main Chart Component(s)\n\t            scatter\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    d.color = d.color || color(d, i);\n\t                    return d.color;\n\t                }).filter(function(d,i) { return !data[i].disabled }))\n\t                .showLabels(showLabels);\n\t\n\t            wrap.select('.nv-scatterWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled }))\n\t                .call(scatter);\n\t\n\t\n\t            wrap.select('.nv-regressionLinesWrap')\n\t                .attr('clip-path', 'url(#nv-edge-clip-' + scatter.id() + ')');\n\t\n\t            var regWrap = wrap.select('.nv-regressionLinesWrap').selectAll('.nv-regLines')\n\t                .data(function (d) {\n\t                    return d;\n\t                });\n\t\n\t            regWrap.enter().append('g').attr('class', 'nv-regLines');\n\t\n\t            var regLine = regWrap.selectAll('.nv-regLine')\n\t                .data(function (d) {\n\t                    return [d]\n\t                });\n\t\n\t            regLine.enter()\n\t                .append('line').attr('class', 'nv-regLine')\n\t                .style('stroke-opacity', 0);\n\t\n\t            // don't add lines unless we have slope and intercept to use\n\t            regLine.filter(function(d) {\n\t                return d.intercept && d.slope;\n\t            })\n\t                .watchTransition(renderWatch, 'scatterPlusLineChart: regline')\n\t                .attr('x1', x.range()[0])\n\t                .attr('x2', x.range()[1])\n\t                .attr('y1', function (d, i) {\n\t                    return y(x.domain()[0] * d.slope + d.intercept)\n\t                })\n\t                .attr('y2', function (d, i) {\n\t                    return y(x.domain()[1] * d.slope + d.intercept)\n\t                })\n\t                .style('stroke', function (d, i, j) {\n\t                    return color(d, j)\n\t                })\n\t                .style('stroke-opacity', function (d, i) {\n\t                    return (d.disabled || typeof d.slope === 'undefined' || typeof d.intercept === 'undefined') ? 0 : 1\n\t                });\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize( -availableHeight , 0);\n\t\n\t                g.select('.nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + y.range()[0] + ')')\n\t                    .call(xAxis);\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                    .tickSize( -availableWidth, 0);\n\t\n\t                g.select('.nv-y.nv-axis')\n\t                    .call(yAxis);\n\t            }\n\t\n\t            // Setup Distribution\n\t            if (showDistX) {\n\t                distX\n\t                    .getData(scatter.x())\n\t                    .scale(x)\n\t                    .width(availableWidth)\n\t                    .color(data.map(function(d,i) {\n\t                        return d.color || color(d, i);\n\t                    }).filter(function(d,i) { return !data[i].disabled }));\n\t                gEnter.select('.nv-distWrap').append('g')\n\t                    .attr('class', 'nv-distributionX');\n\t                g.select('.nv-distributionX')\n\t                    .attr('transform', 'translate(0,' + y.range()[0] + ')')\n\t                    .datum(data.filter(function(d) { return !d.disabled }))\n\t                    .call(distX);\n\t            }\n\t\n\t            if (showDistY) {\n\t                distY\n\t                    .getData(scatter.y())\n\t                    .scale(y)\n\t                    .width(availableHeight)\n\t                    .color(data.map(function(d,i) {\n\t                        return d.color || color(d, i);\n\t                    }).filter(function(d,i) { return !data[i].disabled }));\n\t                gEnter.select('.nv-distWrap').append('g')\n\t                    .attr('class', 'nv-distributionY');\n\t                g.select('.nv-distributionY')\n\t                    .attr('transform', 'translate(' + (rightAlignYAxis ? availableWidth : -distY.size() ) + ',0)')\n\t                    .datum(data.filter(function(d) { return !d.disabled }))\n\t                    .call(distY);\n\t            }\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState)\n\t                    state[key] = newState[key];\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            // Update chart from a state object passed to event handler\n\t            dispatch.on('changeState', function(e) {\n\t                if (typeof e.disabled !== 'undefined') {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t                    state.disabled = e.disabled;\n\t                }\n\t                chart.update();\n\t            });\n\t\n\t            // mouseover needs availableHeight so we just keep scatter mouse events inside the chart block\n\t            scatter.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                tooltip.hidden(true);\n\t                container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex)\n\t                    .attr('y1', 0);\n\t                container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex)\n\t                    .attr('x2', distY.size());\n\t            });\n\t\n\t            scatter.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t                container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex)\n\t                    .attr('y1', evt.relativePos[1] - availableHeight);\n\t                container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex)\n\t                    .attr('x2', evt.relativePos[0] + distX.size());\n\t                tooltip.data(evt).hidden(false);\n\t            });\n\t\n\t            //store old scales for use in transitions on update\n\t            x0 = x.copy();\n\t            y0 = y.copy();\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('scatter with line immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.scatter = scatter;\n\t    chart.legend = legend;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.distX = distX;\n\t    chart.distY = distY;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        container:  {get: function(){return container;}, set: function(_){container=_;}},\n\t        showDistX:  {get: function(){return showDistX;}, set: function(_){showDistX=_;}},\n\t        showDistY:  {get: function(){return showDistY;}, set: function(_){showDistY=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        showXAxis:  {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis:  {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        defaultState:     {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n\t        noData:     {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        duration:   {get: function(){return duration;}, set: function(_){duration=_;}},\n\t        showLabels: {get: function(){return showLabels;}, set: function(_){showLabels=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( (_) ? 'right' : 'left');\n\t        }},\n\t        color: {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t            distX.color(color);\n\t            distY.color(color);\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, scatter);\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\t\n\tnv.models.sparkline = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 2, right: 0, bottom: 2, left: 0}\n\t        , width = 400\n\t        , height = 32\n\t        , container = null\n\t        , animate = true\n\t        , x = d3.scale.linear()\n\t        , y = d3.scale.linear()\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , color = nv.utils.getColor(['#000'])\n\t        , xDomain\n\t        , yDomain\n\t        , xRange\n\t        , yRange\n\t        , showMinMaxPoints = true\n\t        , showCurrentPoint = true\n\t        , dispatch = d3.dispatch('renderEnd')\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t    \n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup Scales\n\t            x   .domain(xDomain || d3.extent(data, getX ))\n\t                .range(xRange || [0, availableWidth]);\n\t\n\t            y   .domain(yDomain || d3.extent(data, getY ))\n\t                .range(yRange || [availableHeight, 0]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-sparkline').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparkline');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\t\n\t            var paths = wrap.selectAll('path')\n\t                .data(function(d) { return [d] });\n\t            paths.enter().append('path');\n\t            paths.exit().remove();\n\t            paths\n\t                .style('stroke', function(d,i) { return d.color || color(d, i) })\n\t                .attr('d', d3.svg.line()\n\t                    .x(function(d,i) { return x(getX(d,i)) })\n\t                    .y(function(d,i) { return y(getY(d,i)) })\n\t            );\n\t\n\t            // TODO: Add CURRENT data point (Need Min, Mac, Current / Most recent)\n\t            var points = wrap.selectAll('circle.nv-point')\n\t                .data(function(data) {\n\t                    var yValues = data.map(function(d, i) { return getY(d,i); });\n\t                    function pointIndex(index) {\n\t                        if (index != -1) {\n\t                            var result = data[index];\n\t                            result.pointIndex = index;\n\t                            return result;\n\t                        } else {\n\t                            return null;\n\t                        }\n\t                    }\n\t                    var maxPoint = pointIndex(yValues.lastIndexOf(y.domain()[1])),\n\t                        minPoint = pointIndex(yValues.indexOf(y.domain()[0])),\n\t                        currentPoint = pointIndex(yValues.length - 1);\n\t                    return [(showMinMaxPoints ? minPoint : null), (showMinMaxPoints ? maxPoint : null), (showCurrentPoint ? currentPoint : null)].filter(function (d) {return d != null;});\n\t                });\n\t            points.enter().append('circle');\n\t            points.exit().remove();\n\t            points\n\t                .attr('cx', function(d,i) { return x(getX(d,d.pointIndex)) })\n\t                .attr('cy', function(d,i) { return y(getY(d,d.pointIndex)) })\n\t                .attr('r', 2)\n\t                .attr('class', function(d,i) {\n\t                    return getX(d, d.pointIndex) == x.domain()[1] ? 'nv-point nv-currentValue' :\n\t                            getY(d, d.pointIndex) == y.domain()[0] ? 'nv-point nv-minValue' : 'nv-point nv-maxValue'\n\t                });\n\t        });\n\t        \n\t        renderWatch.renderEnd('sparkline immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:            {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:           {get: function(){return height;}, set: function(_){height=_;}},\n\t        xDomain:          {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain:          {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:           {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:           {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        xScale:           {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:           {get: function(){return y;}, set: function(_){y=_;}},\n\t        animate:          {get: function(){return animate;}, set: function(_){animate=_;}},\n\t        showMinMaxPoints: {get: function(){return showMinMaxPoints;}, set: function(_){showMinMaxPoints=_;}},\n\t        showCurrentPoint: {get: function(){return showCurrentPoint;}, set: function(_){showCurrentPoint=_;}},\n\t\n\t        //functor options\n\t        x: {get: function(){return getX;}, set: function(_){getX=d3.functor(_);}},\n\t        y: {get: function(){return getY;}, set: function(_){getY=d3.functor(_);}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    chart.dispatch = dispatch;\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\t\n\tnv.models.sparklinePlus = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var sparkline = nv.models.sparkline();\n\t\n\t    var margin = {top: 15, right: 100, bottom: 10, left: 50}\n\t        , width = null\n\t        , height = null\n\t        , x\n\t        , y\n\t        , index = []\n\t        , paused = false\n\t        , xTickFormat = d3.format(',r')\n\t        , yTickFormat = d3.format(',.2f')\n\t        , showLastValue = true\n\t        , alignValue = true\n\t        , rightAlignValue = false\n\t        , noData = null\n\t        , dispatch = d3.dispatch('renderEnd')\n\t        ;\n\t        \n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(sparkline);\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() { container.call(chart); };\n\t            chart.container = this;\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            var currentValue = sparkline.y()(data[data.length-1], data.length-1);\n\t\n\t            // Setup Scales\n\t            x = sparkline.xScale();\n\t            y = sparkline.yScale();\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-sparklineplus').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparklineplus');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-sparklineWrap');\n\t            gEnter.append('g').attr('class', 'nv-valueWrap');\n\t            gEnter.append('g').attr('class', 'nv-hoverArea');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            // Main Chart Component(s)\n\t            var sparklineWrap = g.select('.nv-sparklineWrap');\n\t\n\t            sparkline.width(availableWidth).height(availableHeight);\n\t            sparklineWrap.call(sparkline);\n\t\n\t            if (showLastValue) {\n\t                var valueWrap = g.select('.nv-valueWrap');\n\t                var value = valueWrap.selectAll('.nv-currentValue')\n\t                    .data([currentValue]);\n\t\n\t                value.enter().append('text').attr('class', 'nv-currentValue')\n\t                    .attr('dx', rightAlignValue ? -8 : 8)\n\t                    .attr('dy', '.9em')\n\t                    .style('text-anchor', rightAlignValue ? 'end' : 'start');\n\t\n\t                value\n\t                    .attr('x', availableWidth + (rightAlignValue ? margin.right : 0))\n\t                    .attr('y', alignValue ? function (d) {\n\t                        return y(d)\n\t                    } : 0)\n\t                    .style('fill', sparkline.color()(data[data.length - 1], data.length - 1))\n\t                    .text(yTickFormat(currentValue));\n\t            }\n\t\n\t            gEnter.select('.nv-hoverArea').append('rect')\n\t                .on('mousemove', sparklineHover)\n\t                .on('click', function() { paused = !paused })\n\t                .on('mouseout', function() { index = []; updateValueLine(); });\n\t\n\t            g.select('.nv-hoverArea rect')\n\t                .attr('transform', function(d) { return 'translate(' + -margin.left + ',' + -margin.top + ')' })\n\t                .attr('width', availableWidth + margin.left + margin.right)\n\t                .attr('height', availableHeight + margin.top);\n\t\n\t            //index is currently global (within the chart), may or may not keep it that way\n\t            function updateValueLine() {\n\t                if (paused) return;\n\t\n\t                var hoverValue = g.selectAll('.nv-hoverValue').data(index);\n\t\n\t                var hoverEnter = hoverValue.enter()\n\t                    .append('g').attr('class', 'nv-hoverValue')\n\t                    .style('stroke-opacity', 0)\n\t                    .style('fill-opacity', 0);\n\t\n\t                hoverValue.exit()\n\t                    .transition().duration(250)\n\t                    .style('stroke-opacity', 0)\n\t                    .style('fill-opacity', 0)\n\t                    .remove();\n\t\n\t                hoverValue\n\t                    .attr('transform', function(d) { return 'translate(' + x(sparkline.x()(data[d],d)) + ',0)' })\n\t                    .transition().duration(250)\n\t                    .style('stroke-opacity', 1)\n\t                    .style('fill-opacity', 1);\n\t\n\t                if (!index.length) return;\n\t\n\t                hoverEnter.append('line')\n\t                    .attr('x1', 0)\n\t                    .attr('y1', -margin.top)\n\t                    .attr('x2', 0)\n\t                    .attr('y2', availableHeight);\n\t\n\t                hoverEnter.append('text').attr('class', 'nv-xValue')\n\t                    .attr('x', -6)\n\t                    .attr('y', -margin.top)\n\t                    .attr('text-anchor', 'end')\n\t                    .attr('dy', '.9em');\n\t\n\t                g.select('.nv-hoverValue .nv-xValue')\n\t                    .text(xTickFormat(sparkline.x()(data[index[0]], index[0])));\n\t\n\t                hoverEnter.append('text').attr('class', 'nv-yValue')\n\t                    .attr('x', 6)\n\t                    .attr('y', -margin.top)\n\t                    .attr('text-anchor', 'start')\n\t                    .attr('dy', '.9em');\n\t\n\t                g.select('.nv-hoverValue .nv-yValue')\n\t                    .text(yTickFormat(sparkline.y()(data[index[0]], index[0])));\n\t            }\n\t\n\t            function sparklineHover() {\n\t                if (paused) return;\n\t\n\t                var pos = d3.mouse(this)[0] - margin.left;\n\t\n\t                function getClosestIndex(data, x) {\n\t                    var distance = Math.abs(sparkline.x()(data[0], 0) - x);\n\t                    var closestIndex = 0;\n\t                    for (var i = 0; i < data.length; i++){\n\t                        if (Math.abs(sparkline.x()(data[i], i) - x) < distance) {\n\t                            distance = Math.abs(sparkline.x()(data[i], i) - x);\n\t                            closestIndex = i;\n\t                        }\n\t                    }\n\t                    return closestIndex;\n\t                }\n\t\n\t                index = [getClosestIndex(data, Math.round(x.invert(pos)))];\n\t                updateValueLine();\n\t            }\n\t\n\t        });\n\t        renderWatch.renderEnd('sparklinePlus immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.sparkline = sparkline;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:           {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:          {get: function(){return height;}, set: function(_){height=_;}},\n\t        xTickFormat:     {get: function(){return xTickFormat;}, set: function(_){xTickFormat=_;}},\n\t        yTickFormat:     {get: function(){return yTickFormat;}, set: function(_){yTickFormat=_;}},\n\t        showLastValue:   {get: function(){return showLastValue;}, set: function(_){showLastValue=_;}},\n\t        alignValue:      {get: function(){return alignValue;}, set: function(_){alignValue=_;}},\n\t        rightAlignValue: {get: function(){return rightAlignValue;}, set: function(_){rightAlignValue=_;}},\n\t        noData:          {get: function(){return noData;}, set: function(_){noData=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, sparkline);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.stackedArea = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 960\n\t        , height = 500\n\t        , color = nv.utils.defaultColor() // a function that computes the color\n\t        , id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't selet one\n\t        , container = null\n\t        , getX = function(d) { return d.x } // accessor to get the x value from a data point\n\t        , getY = function(d) { return d.y } // accessor to get the y value from a data point\n\t        , defined = function(d,i) { return !isNaN(getY(d,i)) && getY(d,i) !== null } // allows a line to be not continuous when it is not defined\n\t        , style = 'stack'\n\t        , offset = 'zero'\n\t        , order = 'default'\n\t        , interpolate = 'linear'  // controls the line interpolation\n\t        , clipEdge = false // if true, masks lines within x and y scale\n\t        , x //can be accessed via chart.xScale()\n\t        , y //can be accessed via chart.yScale()\n\t        , scatter = nv.models.scatter()\n\t        , duration = 250\n\t        , dispatch =  d3.dispatch('areaClick', 'areaMouseover', 'areaMouseout','renderEnd', 'elementClick', 'elementMouseover', 'elementMouseout')\n\t        ;\n\t\n\t    scatter\n\t        .pointSize(2.2) // default size\n\t        .pointDomain([2.2, 2.2]) // all the same size by default\n\t    ;\n\t\n\t    /************************************\n\t     * offset:\n\t     *   'wiggle' (stream)\n\t     *   'zero' (stacked)\n\t     *   'expand' (normalize to 100%)\n\t     *   'silhouette' (simple centered)\n\t     *\n\t     * order:\n\t     *   'inside-out' (stream)\n\t     *   'default' (input order)\n\t     ************************************/\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(scatter);\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup Scales\n\t            x = scatter.xScale();\n\t            y = scatter.yScale();\n\t\n\t            var dataRaw = data;\n\t            // Injecting point index into each point because d3.layout.stack().out does not give index\n\t            data.forEach(function(aseries, i) {\n\t                aseries.seriesIndex = i;\n\t                aseries.values = aseries.values.map(function(d, j) {\n\t                    d.index = j;\n\t                    d.seriesIndex = i;\n\t                    return d;\n\t                });\n\t            });\n\t\n\t            var dataFiltered = data.filter(function(series) {\n\t                return !series.disabled;\n\t            });\n\t\n\t            data = d3.layout.stack()\n\t                .order(order)\n\t                .offset(offset)\n\t                .values(function(d) { return d.values })  //TODO: make values customizeable in EVERY model in this fashion\n\t                .x(getX)\n\t                .y(getY)\n\t                .out(function(d, y0, y) {\n\t                    d.display = {\n\t                        y: y,\n\t                        y0: y0\n\t                    };\n\t                })\n\t            (dataFiltered);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-stackedarea').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedarea');\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-areaWrap');\n\t            gEnter.append('g').attr('class', 'nv-scatterWrap');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t            \n\t            // If the user has not specified forceY, make sure 0 is included in the domain\n\t            // Otherwise, use user-specified values for forceY\n\t            if (scatter.forceY().length == 0) {\n\t                scatter.forceY().push(0);\n\t            }\n\t            \n\t            scatter\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .x(getX)\n\t                .y(function(d) {\n\t                    if (d.display !== undefined) { return d.display.y + d.display.y0; }\n\t                })\n\t                .color(data.map(function(d,i) {\n\t                    d.color = d.color || color(d, d.seriesIndex);\n\t                    return d.color;\n\t                }));\n\t\n\t            var scatterWrap = g.select('.nv-scatterWrap')\n\t                .datum(data);\n\t\n\t            scatterWrap.call(scatter);\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-edge-clip-' + id)\n\t                .append('rect');\n\t\n\t            wrap.select('#nv-edge-clip-' + id + ' rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\t\n\t            var area = d3.svg.area()\n\t                .defined(defined)\n\t                .x(function(d,i)  { return x(getX(d,i)) })\n\t                .y0(function(d) {\n\t                    return y(d.display.y0)\n\t                })\n\t                .y1(function(d) {\n\t                    return y(d.display.y + d.display.y0)\n\t                })\n\t                .interpolate(interpolate);\n\t\n\t            var zeroArea = d3.svg.area()\n\t                .defined(defined)\n\t                .x(function(d,i)  { return x(getX(d,i)) })\n\t                .y0(function(d) { return y(d.display.y0) })\n\t                .y1(function(d) { return y(d.display.y0) });\n\t\n\t            var path = g.select('.nv-areaWrap').selectAll('path.nv-area')\n\t                .data(function(d) { return d });\n\t\n\t            path.enter().append('path').attr('class', function(d,i) { return 'nv-area nv-area-' + i })\n\t                .attr('d', function(d,i){\n\t                    return zeroArea(d.values, d.seriesIndex);\n\t                })\n\t                .on('mouseover', function(d,i) {\n\t                    d3.select(this).classed('hover', true);\n\t                    dispatch.areaMouseover({\n\t                        point: d,\n\t                        series: d.key,\n\t                        pos: [d3.event.pageX, d3.event.pageY],\n\t                        seriesIndex: d.seriesIndex\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.areaMouseout({\n\t                        point: d,\n\t                        series: d.key,\n\t                        pos: [d3.event.pageX, d3.event.pageY],\n\t                        seriesIndex: d.seriesIndex\n\t                    });\n\t                })\n\t                .on('click', function(d,i) {\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.areaClick({\n\t                        point: d,\n\t                        series: d.key,\n\t                        pos: [d3.event.pageX, d3.event.pageY],\n\t                        seriesIndex: d.seriesIndex\n\t                    });\n\t                });\n\t\n\t            path.exit().remove();\n\t            path.style('fill', function(d,i){\n\t                    return d.color || color(d, d.seriesIndex)\n\t                })\n\t                .style('stroke', function(d,i){ return d.color || color(d, d.seriesIndex) });\n\t            path.watchTransition(renderWatch,'stackedArea path')\n\t                .attr('d', function(d,i) {\n\t                    return area(d.values,i)\n\t                });\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            scatter.dispatch.on('elementMouseover.area', function(e) {\n\t                g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', true);\n\t            });\n\t            scatter.dispatch.on('elementMouseout.area', function(e) {\n\t                g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', false);\n\t            });\n\t\n\t            //Special offset functions\n\t            chart.d3_stackedOffset_stackPercent = function(stackData) {\n\t                var n = stackData.length,    //How many series\n\t                    m = stackData[0].length,     //how many points per series\n\t                    i,\n\t                    j,\n\t                    o,\n\t                    y0 = [];\n\t\n\t                for (j = 0; j < m; ++j) { //Looping through all points\n\t                    for (i = 0, o = 0; i < dataRaw.length; i++) { //looping through all series\n\t                        o += getY(dataRaw[i].values[j]); //total y value of all series at a certian point in time.\n\t                    }\n\t\n\t                    if (o) for (i = 0; i < n; i++) { //(total y value of all series at point in time i) != 0\n\t                        stackData[i][j][1] /= o;\n\t                    } else { //(total y value of all series at point in time i) == 0\n\t                        for (i = 0; i < n; i++) {\n\t                            stackData[i][j][1] = 0;\n\t                        }\n\t                    }\n\t                }\n\t                for (j = 0; j < m; ++j) y0[j] = 0;\n\t                return y0;\n\t            };\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('stackedArea immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Global getters and setters\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.scatter = scatter;\n\t\n\t    scatter.dispatch.on('elementClick', function(){ dispatch.elementClick.apply(this, arguments); });\n\t    scatter.dispatch.on('elementMouseover', function(){ dispatch.elementMouseover.apply(this, arguments); });\n\t    scatter.dispatch.on('elementMouseout', function(){ dispatch.elementMouseout.apply(this, arguments); });\n\t\n\t    chart.interpolate = function(_) {\n\t        if (!arguments.length) return interpolate;\n\t        interpolate = _;\n\t        return chart;\n\t    };\n\t\n\t    chart.duration = function(_) {\n\t        if (!arguments.length) return duration;\n\t        duration = _;\n\t        renderWatch.reset(duration);\n\t        scatter.duration(duration);\n\t        return chart;\n\t    };\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.scatter = scatter;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        defined: {get: function(){return defined;}, set: function(_){defined=_;}},\n\t        clipEdge: {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\t        offset:      {get: function(){return offset;}, set: function(_){offset=_;}},\n\t        order:    {get: function(){return order;}, set: function(_){order=_;}},\n\t        interpolate:    {get: function(){return interpolate;}, set: function(_){interpolate=_;}},\n\t\n\t        // simple functor options\n\t        x:     {get: function(){return getX;}, set: function(_){getX = d3.functor(_);}},\n\t        y:     {get: function(){return getY;}, set: function(_){getY = d3.functor(_);}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        style: {get: function(){return style;}, set: function(_){\n\t            style = _;\n\t            switch (style) {\n\t                case 'stack':\n\t                    chart.offset('zero');\n\t                    chart.order('default');\n\t                    break;\n\t                case 'stream':\n\t                    chart.offset('wiggle');\n\t                    chart.order('inside-out');\n\t                    break;\n\t                case 'stream-center':\n\t                    chart.offset('silhouette');\n\t                    chart.order('inside-out');\n\t                    break;\n\t                case 'expand':\n\t                    chart.offset('expand');\n\t                    chart.order('default');\n\t                    break;\n\t                case 'stack_percent':\n\t                    chart.offset(chart.d3_stackedOffset_stackPercent);\n\t                    chart.order('default');\n\t                    break;\n\t            }\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            scatter.duration(duration);\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, scatter);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.stackedAreaChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var stacked = nv.models.stackedArea()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t        , legend = nv.models.legend()\n\t        , controls = nv.models.legend()\n\t        , interactiveLayer = nv.interactiveGuideline()\n\t        , tooltip = nv.models.tooltip()\n\t        , focus = nv.models.focus(nv.models.stackedArea())\n\t        ;\n\t\n\t    var margin = {top: 10, right: 25, bottom: 50, left: 60}\n\t        , marginTop = null\n\t        , width = null\n\t        , height = null\n\t        , color = nv.utils.defaultColor()\n\t        , showControls = true\n\t        , showLegend = true\n\t        , legendPosition = 'top'\n\t        , showXAxis = true\n\t        , showYAxis = true\n\t        , rightAlignYAxis = false\n\t        , focusEnable = false\n\t        , useInteractiveGuideline = false\n\t        , showTotalInTooltip = true\n\t        , totalLabel = 'TOTAL'\n\t        , x //can be accessed via chart.xScale()\n\t        , y //can be accessed via chart.yScale()\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , noData = null\n\t        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd')\n\t        , controlWidth = 250\n\t        , controlOptions = ['Stacked','Stream','Expanded']\n\t        , controlLabels = {}\n\t        , duration = 250\n\t        ;\n\t\n\t    state.style = stacked.style();\n\t    xAxis.orient('bottom').tickPadding(7);\n\t    yAxis.orient((rightAlignYAxis) ? 'right' : 'left');\n\t\n\t    tooltip\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        })\n\t        .valueFormatter(function(d, i) {\n\t            return yAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    interactiveLayer.tooltip\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        })\n\t        .valueFormatter(function(d, i) {\n\t            return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    var oldYTickFormat = null,\n\t        oldValueFormatter = null;\n\t\n\t    controls.updateState(false);\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t    var style = stacked.style();\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled }),\n\t                style: stacked.style()\n\t            };\n\t        }\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.style !== undefined)\n\t                style = state.style;\n\t            if (state.active !== undefined)\n\t                data.forEach(function(series,i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t        }\n\t    };\n\t\n\t    var percentFormatter = d3.format('%');\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(stacked);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this),\n\t                that = this;\n\t            nv.utils.initSVG(container);\n\t\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\t\n\t            chart.update = function() { container.transition().duration(duration).call(chart); };\n\t            chart.container = this;\n\t\n\t            state\n\t                .setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            // DEPRECATED set state.disabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t            // Setup Scales\n\t            x = stacked.xScale();\n\t            y = stacked.yScale();\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-stackedAreaChart').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedAreaChart').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\t\n\t            var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n\t            focusEnter.append('g').attr('class', 'nv-background').append('rect');\n\t            focusEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            focusEnter.append('g').attr('class', 'nv-y nv-axis');\n\t            focusEnter.append('g').attr('class', 'nv-stackedWrap');\n\t            focusEnter.append('g').attr('class', 'nv-interactive');\n\t\n\t            // g.select(\"rect\").attr(\"width\",availableWidth).attr(\"height\",availableHeight);\n\t\n\t            var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                var legendWidth = (showControls && legendPosition === 'top') ? availableWidth - controlWidth : availableWidth;\n\t\n\t                legend.width(legendWidth);\n\t                g.select('.nv-legendWrap').datum(data).call(legend);\n\t\n\t                if (legendPosition === 'bottom') {\n\t                \t// constant from axis.js, plus some margin for better layout\n\t                \tvar xAxisHeight = (showXAxis ? 12 : 0) + 10;\n\t                   \tmargin.bottom = Math.max(legend.height() + xAxisHeight, margin.bottom);\n\t                   \tavailableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\t                \tvar legendTop = availableHeight + xAxisHeight;\n\t                    g.select('.nv-legendWrap')\n\t                        .attr('transform', 'translate(0,' + legendTop +')');\n\t                } else if (legendPosition === 'top') {\n\t                    if (!marginTop && margin.top != legend.height()) {\n\t                        margin.top = legend.height();\n\t                        availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\t                    }\n\t\n\t                    g.select('.nv-legendWrap')\n\t                    \t.attr('transform', 'translate(' + (availableWidth-legendWidth) + ',' + (-margin.top) +')');\n\t                }\n\t            }\n\t\n\t            // Controls\n\t            if (!showControls) {\n\t                 g.select('.nv-controlsWrap').selectAll('*').remove();\n\t            } else {\n\t                var controlsData = [\n\t                    {\n\t                        key: controlLabels.stacked || 'Stacked',\n\t                        metaKey: 'Stacked',\n\t                        disabled: stacked.style() != 'stack',\n\t                        style: 'stack'\n\t                    },\n\t                    {\n\t                        key: controlLabels.stream || 'Stream',\n\t                        metaKey: 'Stream',\n\t                        disabled: stacked.style() != 'stream',\n\t                        style: 'stream'\n\t                    },\n\t                    {\n\t                        key: controlLabels.expanded || 'Expanded',\n\t                        metaKey: 'Expanded',\n\t                        disabled: stacked.style() != 'expand',\n\t                        style: 'expand'\n\t                    },\n\t                    {\n\t                        key: controlLabels.stack_percent || 'Stack %',\n\t                        metaKey: 'Stack_Percent',\n\t                        disabled: stacked.style() != 'stack_percent',\n\t                        style: 'stack_percent'\n\t                    }\n\t                ];\n\t\n\t                controlWidth = (controlOptions.length/3) * 260;\n\t                controlsData = controlsData.filter(function(d) {\n\t                    return controlOptions.indexOf(d.metaKey) !== -1;\n\t                });\n\t\n\t                controls\n\t                    .width( controlWidth )\n\t                    .color(['#444', '#444', '#444']);\n\t\n\t                g.select('.nv-controlsWrap')\n\t                    .datum(controlsData)\n\t                    .call(controls);\n\t\n\t                var requiredTop = Math.max(controls.height(), showLegend && (legendPosition === 'top') ? legend.height() : 0);\n\t\n\t                if ( margin.top != requiredTop ) {\n\t                    margin.top = requiredTop;\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\t                }\n\t\n\t                g.select('.nv-controlsWrap')\n\t                    .attr('transform', 'translate(0,' + (-margin.top) +')');\n\t            }\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            //Set up interactive layer\n\t            if (useInteractiveGuideline) {\n\t                interactiveLayer\n\t                    .width(availableWidth)\n\t                    .height(availableHeight)\n\t                    .margin({left: margin.left, top: margin.top})\n\t                    .svgContainer(container)\n\t                    .xScale(x);\n\t                wrap.select(\".nv-interactive\").call(interactiveLayer);\n\t            }\n\t\n\t            g.select('.nv-focus .nv-background rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            stacked\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function(d,i) { return !data[i].disabled; }));\n\t\n\t            var stackedWrap = g.select('.nv-focus .nv-stackedWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled; }));\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis.scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize( -availableHeight, 0);\n\t            }\n\t\n\t            if (showYAxis) {\n\t                var ticks;\n\t                if (stacked.offset() === 'wiggle') {\n\t                    ticks = 0;\n\t                }\n\t                else {\n\t                    ticks = nv.utils.calcTicksY(availableHeight/36, data);\n\t                }\n\t                yAxis.scale(y)\n\t                    ._ticks(ticks)\n\t                    .tickSize(-availableWidth, 0);\n\t            }\n\t\n\t            //============================================================\n\t            // Update Axes\n\t            //============================================================\n\t            function updateXAxis() {\n\t                if(showXAxis) {\n\t                    g.select('.nv-focus .nv-x.nv-axis')\n\t                        .attr('transform', 'translate(0,' + availableHeight + ')')\n\t                        .transition()\n\t                        .duration(duration)\n\t                        .call(xAxis)\n\t                        ;\n\t                }\n\t            }\n\t\n\t            function updateYAxis() {\n\t                if(showYAxis) {\n\t                    if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n\t                        var currentFormat = yAxis.tickFormat();\n\t\n\t                        if ( !oldYTickFormat || currentFormat !== percentFormatter )\n\t                            oldYTickFormat = currentFormat;\n\t\n\t                        //Forces the yAxis to use percentage in 'expand' mode.\n\t                        yAxis.tickFormat(percentFormatter);\n\t                    }\n\t                    else {\n\t                        if (oldYTickFormat) {\n\t                            yAxis.tickFormat(oldYTickFormat);\n\t                            oldYTickFormat = null;\n\t                        }\n\t                    }\n\t\n\t                    g.select('.nv-focus .nv-y.nv-axis')\n\t                    .transition().duration(0)\n\t                    .call(yAxis);\n\t                }\n\t            }\n\t\n\t            //============================================================\n\t            // Update Focus\n\t            //============================================================\n\t            if(!focusEnable) {\n\t                stackedWrap.transition().call(stacked);\n\t                updateXAxis();\n\t                updateYAxis();\n\t            } else {\n\t                focus.width(availableWidth);\n\t                g.select('.nv-focusWrap')\n\t                    .attr('transform', 'translate(0,' + ( availableHeight + margin.bottom + focus.margin().top) + ')')\n\t                    .datum(data.filter(function(d) { return !d.disabled; }))\n\t                    .call(focus);\n\t                var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\t                if(extent !== null){\n\t                    onBrush(extent);\n\t                }\n\t            }\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            stacked.dispatch.on('areaClick.toggle', function(e) {\n\t                if (data.filter(function(d) { return !d.disabled }).length === 1)\n\t                    data.forEach(function(d) {\n\t                        d.disabled = false;\n\t                    });\n\t                else\n\t                    data.forEach(function(d,i) {\n\t                        d.disabled = (i != e.seriesIndex);\n\t                    });\n\t\n\t                state.disabled = data.map(function(d) { return !!d.disabled });\n\t                dispatch.stateChange(state);\n\t\n\t                chart.update();\n\t            });\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState)\n\t                    state[key] = newState[key];\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            controls.dispatch.on('legendClick', function(d,i) {\n\t                if (!d.disabled) return;\n\t\n\t                controlsData = controlsData.map(function(s) {\n\t                    s.disabled = true;\n\t                    return s;\n\t                });\n\t                d.disabled = false;\n\t\n\t                stacked.style(d.style);\n\t\n\t\n\t                state.style = stacked.style();\n\t                dispatch.stateChange(state);\n\t\n\t                chart.update();\n\t            });\n\t\n\t            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n\t                stacked.clearHighlights();\n\t                var singlePoint, pointIndex, pointXLocation, allData = [], valueSum = 0, allNullValues = true;\n\t                data\n\t                    .filter(function(series, i) {\n\t                        series.seriesIndex = i;\n\t                        return !series.disabled;\n\t                    })\n\t                    .forEach(function(series,i) {\n\t                        pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n\t                        var point = series.values[pointIndex];\n\t                        var pointYValue = chart.y()(point, pointIndex);\n\t                        if (pointYValue != null) {\n\t                            stacked.highlightPoint(i, pointIndex, true);\n\t                        }\n\t                        if (typeof point === 'undefined') return;\n\t                        if (typeof singlePoint === 'undefined') singlePoint = point;\n\t                        if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n\t\n\t                        //If we are in 'expand' mode, use the stacked percent value instead of raw value.\n\t                        var tooltipValue = (stacked.style() == 'expand') ? point.display.y : chart.y()(point,pointIndex);\n\t                        allData.push({\n\t                            key: series.key,\n\t                            value: tooltipValue,\n\t                            color: color(series,series.seriesIndex),\n\t                            point: point\n\t                        });\n\t\n\t                        if (showTotalInTooltip && stacked.style() != 'expand' && tooltipValue != null) {\n\t                          valueSum += tooltipValue;\n\t                          allNullValues = false;\n\t                        };\n\t                    });\n\t\n\t                allData.reverse();\n\t\n\t                //Highlight the tooltip entry based on which stack the mouse is closest to.\n\t                if (allData.length > 2) {\n\t                    var yValue = chart.yScale().invert(e.mouseY);\n\t                    var yDistMax = Infinity, indexToHighlight = null;\n\t                    allData.forEach(function(series,i) {\n\t\n\t                        //To handle situation where the stacked area chart is negative, we need to use absolute values\n\t                        //when checking if the mouse Y value is within the stack area.\n\t                        yValue = Math.abs(yValue);\n\t                        var stackedY0 = Math.abs(series.point.display.y0);\n\t                        var stackedY = Math.abs(series.point.display.y);\n\t                        if ( yValue >= stackedY0 && yValue <= (stackedY + stackedY0))\n\t                        {\n\t                            indexToHighlight = i;\n\t                            return;\n\t                        }\n\t                    });\n\t                    if (indexToHighlight != null)\n\t                        allData[indexToHighlight].highlight = true;\n\t                }\n\t\n\t                //If we are not in 'expand' mode, add a 'Total' row to the tooltip.\n\t                if (showTotalInTooltip && stacked.style() != 'expand' && allData.length >= 2 && !allNullValues) {\n\t                    allData.push({\n\t                        key: totalLabel,\n\t                        value: valueSum,\n\t                        total: true\n\t                    });\n\t                }\n\t\n\t                var xValue = chart.x()(singlePoint,pointIndex);\n\t\n\t                var valueFormatter = interactiveLayer.tooltip.valueFormatter();\n\t                // Keeps track of the tooltip valueFormatter if the chart changes to expanded view\n\t                if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n\t                    if ( !oldValueFormatter ) {\n\t                        oldValueFormatter = valueFormatter;\n\t                    }\n\t                    //Forces the tooltip to use percentage in 'expand' mode.\n\t                    valueFormatter = d3.format(\".1%\");\n\t                }\n\t                else {\n\t                    if (oldValueFormatter) {\n\t                        valueFormatter = oldValueFormatter;\n\t                        oldValueFormatter = null;\n\t                    }\n\t                }\n\t\n\t                interactiveLayer.tooltip\n\t                    .valueFormatter(valueFormatter)\n\t                    .data(\n\t                    {\n\t                        value: xValue,\n\t                        series: allData\n\t                    }\n\t                )();\n\t\n\t                interactiveLayer.renderGuideLine(pointXLocation);\n\t\n\t            });\n\t\n\t            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n\t                stacked.clearHighlights();\n\t            });\n\t\n\t            /* Update `main' graph on brush update. */\n\t            focus.dispatch.on(\"onBrush\", function(extent) {\n\t                onBrush(extent);\n\t            });\n\t\n\t            // Update chart from a state object passed to event handler\n\t            dispatch.on('changeState', function(e) {\n\t\n\t                if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t\n\t                    state.disabled = e.disabled;\n\t                }\n\t\n\t                if (typeof e.style !== 'undefined') {\n\t                    stacked.style(e.style);\n\t                    style = e.style;\n\t                }\n\t\n\t                chart.update();\n\t            });\n\t\n\t            //============================================================\n\t            // Functions\n\t            //------------------------------------------------------------\n\t\n\t            function onBrush(extent) {\n\t                // Update Main (Focus)\n\t                var stackedWrap = g.select('.nv-focus .nv-stackedWrap')\n\t                    .datum(\n\t                    data.filter(function(d) { return !d.disabled; })\n\t                        .map(function(d,i) {\n\t                            return {\n\t                                key: d.key,\n\t                                area: d.area,\n\t                                classed: d.classed,\n\t                                values: d.values.filter(function(d,i) {\n\t                                    return stacked.x()(d,i) >= extent[0] && stacked.x()(d,i) <= extent[1];\n\t                                }),\n\t                                disableTooltip: d.disableTooltip\n\t                            };\n\t                        })\n\t                );\n\t                stackedWrap.transition().duration(duration).call(stacked);\n\t\n\t                // Update Main (Focus) Axes\n\t                updateXAxis();\n\t                updateYAxis();\n\t            }\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('stacked Area chart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    stacked.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt.point['x'] = stacked.x()(evt.point);\n\t        evt.point['y'] = stacked.y()(evt.point);\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    stacked.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true)\n\t    });\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.stacked = stacked;\n\t    chart.legend = legend;\n\t    chart.controls = controls;\n\t    chart.xAxis = xAxis;\n\t    chart.x2Axis = focus.xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.y2Axis = focus.yAxis;\n\t    chart.interactiveLayer = interactiveLayer;\n\t    chart.tooltip = tooltip;\n\t    chart.focus = focus;\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        legendPosition: {get: function(){return legendPosition;}, set: function(_){legendPosition=_;}},\n\t        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        showControls:    {get: function(){return showControls;}, set: function(_){showControls=_;}},\n\t        controlLabels:    {get: function(){return controlLabels;}, set: function(_){controlLabels=_;}},\n\t        controlOptions:    {get: function(){return controlOptions;}, set: function(_){controlOptions=_;}},\n\t        showTotalInTooltip:      {get: function(){return showTotalInTooltip;}, set: function(_){showTotalInTooltip=_;}},\n\t        totalLabel:      {get: function(){return totalLabel;}, set: function(_){totalLabel=_;}},\n\t        focusEnable:    {get: function(){return focusEnable;}, set: function(_){focusEnable=_;}},\n\t        focusHeight:     {get: function(){return focus.height();}, set: function(_){focus.height(_);}},\n\t        brushExtent: {get: function(){return focus.brushExtent();}, set: function(_){focus.brushExtent(_);}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        focusMargin: {get: function(){return focus.margin}, set: function(_){\n\t            focus.margin.top    = _.top    !== undefined ? _.top    : focus.margin.top;\n\t            focus.margin.right  = _.right  !== undefined ? _.right  : focus.margin.right;\n\t            focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n\t            focus.margin.left   = _.left   !== undefined ? _.left   : focus.margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            stacked.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t            stacked.color(color);\n\t            focus.color(color);\n\t        }},\n\t        x: {get: function(){return stacked.x();}, set: function(_){\n\t            stacked.x(_);\n\t            focus.x(_);\n\t        }},\n\t        y: {get: function(){return stacked.y();}, set: function(_){\n\t            stacked.y(_);\n\t            focus.y(_);\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n\t        }},\n\t        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n\t            useInteractiveGuideline = !!_;\n\t            chart.interactive(!_);\n\t            chart.useVoronoi(!_);\n\t            stacked.scatter.interactive(!_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, stacked);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.stackedAreaWithFocusChart = function() {\n\t  return nv.models.stackedAreaChart()\n\t    .margin({ bottom: 30 })\n\t    .focusEnable( true );\n\t};\n\t// based on http://bl.ocks.org/kerryrodden/477c1bfb081b783f80ad\n\tnv.models.sunburst = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 600\n\t        , height = 600\n\t        , mode = \"count\"\n\t        , modes = {count: function(d) { return 1; }, value: function(d) { return d.value || d.size }, size: function(d) { return d.value || d.size }}\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container = null\n\t        , color = nv.utils.defaultColor()\n\t        , showLabels = false\n\t        , labelFormat = function(d){if(mode === 'count'){return d.name + ' #' + d.value}else{return d.name + ' ' + (d.value || d.size)}}\n\t        , labelThreshold = 0.02\n\t        , sort = function(d1, d2){return d1.name > d2.name;}\n\t        , key = function(d,i){return d.name;}\n\t        , groupColorByParent = true\n\t        , duration = 500\n\t        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMousemove', 'elementMouseover', 'elementMouseout', 'renderEnd');\n\t\n\t    //============================================================\n\t    // aux functions and setup\n\t    //------------------------------------------------------------\n\t\n\t    var x = d3.scale.linear().range([0, 2 * Math.PI]);\n\t    var y = d3.scale.sqrt();\n\t\n\t    var partition = d3.layout.partition().sort(sort);\n\t\n\t    var node, availableWidth, availableHeight, radius;\n\t    var prevPositions = {};\n\t\n\t    var arc = d3.svg.arc()\n\t        .startAngle(function(d) {return Math.max(0, Math.min(2 * Math.PI, x(d.x))) })\n\t        .endAngle(function(d) {return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx))) })\n\t        .innerRadius(function(d) {return Math.max(0, y(d.y)) })\n\t        .outerRadius(function(d) {return Math.max(0, y(d.y + d.dy)) });\n\t\n\t    function rotationToAvoidUpsideDown(d) {\n\t        var centerAngle = computeCenterAngle(d);\n\t        if(centerAngle > 90){\n\t            return 180;\n\t        }\n\t        else {\n\t            return 0;\n\t        }\n\t    }\n\t\n\t    function computeCenterAngle(d) {\n\t        var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n\t        var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n\t        var centerAngle = (((startAngle + endAngle) / 2) * (180 / Math.PI)) - 90;\n\t        return centerAngle;\n\t    }\n\t\n\t    function computeNodePercentage(d) {\n\t        var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n\t        var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n\t        return (endAngle - startAngle) / (2 * Math.PI);\n\t    }\n\t\n\t    function labelThresholdMatched(d) {\n\t        var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n\t        var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n\t\n\t        var size = endAngle - startAngle;\n\t        return size > labelThreshold;\n\t    }\n\t\n\t    // When zooming: interpolate the scales.\n\t    function arcTweenZoom(e,i) {\n\t        var xd = d3.interpolate(x.domain(), [node.x, node.x + node.dx]),\n\t        yd = d3.interpolate(y.domain(), [node.y, 1]),\n\t        yr = d3.interpolate(y.range(), [node.y ? 20 : 0, radius]);\n\t\n\t        if (i === 0) {\n\t            return function() {return arc(e);}\n\t        }\n\t        else {\n\t            return function (t) {\n\t                x.domain(xd(t));\n\t                y.domain(yd(t)).range(yr(t));\n\t                return arc(e);\n\t            }\n\t        };\n\t    }\n\t\n\t    function arcTweenUpdate(d) {\n\t        var ipo = d3.interpolate({x: d.x0, dx: d.dx0, y: d.y0, dy: d.dy0}, d);\n\t\n\t        return function (t) {\n\t            var b = ipo(t);\n\t\n\t            d.x0 = b.x;\n\t            d.dx0 = b.dx;\n\t            d.y0 = b.y;\n\t            d.dy0 = b.dy;\n\t\n\t            return arc(b);\n\t        };\n\t    }\n\t\n\t    function updatePrevPosition(node) {\n\t        var k = key(node);\n\t        if(! prevPositions[k]) prevPositions[k] = {};\n\t        var pP = prevPositions[k];\n\t        pP.dx = node.dx;\n\t        pP.x = node.x;\n\t        pP.dy = node.dy;\n\t        pP.y = node.y;\n\t    }\n\t\n\t    function storeRetrievePrevPositions(nodes) {\n\t        nodes.forEach(function(n){\n\t            var k = key(n);\n\t            var pP = prevPositions[k];\n\t            //console.log(k,n,pP);\n\t            if( pP ){\n\t                n.dx0 = pP.dx;\n\t                n.x0 = pP.x;\n\t                n.dy0 = pP.dy;\n\t                n.y0 = pP.y;\n\t            }\n\t            else {\n\t                n.dx0 = n.dx;\n\t                n.x0 = n.x;\n\t                n.dy0 = n.dy;\n\t                n.y0 = n.y;\n\t            }\n\t            updatePrevPosition(n);\n\t        });\n\t    }\n\t\n\t    function zoomClick(d) {\n\t        var labels = container.selectAll('text')\n\t        var path = container.selectAll('path')\n\t\n\t        // fade out all text elements\n\t        labels.transition().attr(\"opacity\",0);\n\t\n\t        // to allow reference to the new center node\n\t        node = d;\n\t\n\t        path.transition()\n\t            .duration(duration)\n\t            .attrTween(\"d\", arcTweenZoom)\n\t            .each('end', function(e) {\n\t                // partially taken from here: http://bl.ocks.org/metmajer/5480307\n\t                // check if the animated element's data e lies within the visible angle span given in d\n\t                if(e.x >= d.x && e.x < (d.x + d.dx) ){\n\t                    if(e.depth >= d.depth){\n\t                        // get a selection of the associated text element\n\t                        var parentNode = d3.select(this.parentNode);\n\t                        var arcText = parentNode.select('text');\n\t\n\t                        // fade in the text element and recalculate positions\n\t                        arcText.transition().duration(duration)\n\t                        .text( function(e){return labelFormat(e) })\n\t                        .attr(\"opacity\", function(d){\n\t                            if(labelThresholdMatched(d)) {\n\t                                return 1;\n\t                            }\n\t                            else {\n\t                                return 0;\n\t                            }\n\t                        })\n\t                        .attr(\"transform\", function() {\n\t                            var width = this.getBBox().width;\n\t                            if(e.depth === 0)\n\t                            return \"translate(\" + (width / 2 * - 1) + \",0)\";\n\t                            else if(e.depth === d.depth){\n\t                                return \"translate(\" + (y(e.y) + 5) + \",0)\";\n\t                            }\n\t                            else {\n\t                                var centerAngle = computeCenterAngle(e);\n\t                                var rotation = rotationToAvoidUpsideDown(e);\n\t                                if (rotation === 0) {\n\t                                    return 'rotate('+ centerAngle +')translate(' + (y(e.y) + 5) + ',0)';\n\t                                }\n\t                                else {\n\t                                    return 'rotate('+ centerAngle +')translate(' + (y(e.y) + width + 5) + ',0)rotate(' + rotation + ')';\n\t                                }\n\t                            }\n\t                        });\n\t                    }\n\t                }\n\t            })\n\t    }\n\t\n\t    //============================================================\n\t    // chart function\n\t    //------------------------------------------------------------\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t\n\t        selection.each(function(data) {\n\t            container = d3.select(this);\n\t            availableWidth = nv.utils.availableWidth(width, container, margin);\n\t            availableHeight = nv.utils.availableHeight(height, container, margin);\n\t            radius = Math.min(availableWidth, availableHeight) / 2;\n\t\n\t            y.range([0, radius]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.select('g.nvd3.nv-wrap.nv-sunburst');\n\t            if( !wrap[0][0] ) {\n\t                wrap = container.append('g')\n\t                    .attr('class', 'nvd3 nv-wrap nv-sunburst nv-chart-' + id)\n\t                    .attr('transform', 'translate(' + ((availableWidth / 2) + margin.left + margin.right) + ',' + ((availableHeight / 2) + margin.top + margin.bottom) + ')');\n\t            } else {\n\t                wrap.attr('transform', 'translate(' + ((availableWidth / 2) + margin.left + margin.right) + ',' + ((availableHeight / 2) + margin.top + margin.bottom) + ')');\n\t            }\n\t\n\t            container.on('click', function (d, i) {\n\t                dispatch.chartClick({\n\t                    data: d,\n\t                    index: i,\n\t                    pos: d3.event,\n\t                    id: id\n\t                });\n\t            });\n\t\n\t            partition.value(modes[mode] || modes[\"count\"]);\n\t\n\t            //reverse the drawing order so that the labels of inner\n\t            //arcs are drawn on top of the outer arcs.\n\t            var nodes = partition.nodes(data[0]).reverse()\n\t\n\t            storeRetrievePrevPositions(nodes);\n\t            var cG = wrap.selectAll('.arc-container').data(nodes, key)\n\t\n\t            //handle new datapoints\n\t            var cGE = cG.enter()\n\t                .append(\"g\")\n\t                .attr(\"class\",'arc-container')\n\t\n\t            cGE.append(\"path\")\n\t                .attr(\"d\", arc)\n\t                .style(\"fill\", function (d) {\n\t                    if (d.color) {\n\t                        return d.color;\n\t                    }\n\t                    else if (groupColorByParent) {\n\t                        return color((d.children ? d : d.parent).name);\n\t                    }\n\t                    else {\n\t                        return color(d.name);\n\t                    }\n\t                })\n\t                .style(\"stroke\", \"#FFF\")\n\t                .on(\"click\", function(d,i){\n\t                    zoomClick(d);\n\t                    dispatch.elementClick({\n\t                        data: d,\n\t                        index: i\n\t                    })\n\t                })\n\t                .on('mouseover', function(d,i){\n\t                    d3.select(this).classed('hover', true).style('opacity', 0.8);\n\t                    dispatch.elementMouseover({\n\t                        data: d,\n\t                        color: d3.select(this).style(\"fill\"),\n\t                        percent: computeNodePercentage(d)\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i){\n\t                    d3.select(this).classed('hover', false).style('opacity', 1);\n\t                    dispatch.elementMouseout({\n\t                        data: d\n\t                    });\n\t                })\n\t                .on('mousemove', function(d,i){\n\t                    dispatch.elementMousemove({\n\t                        data: d\n\t                    });\n\t                });\n\t\n\t            ///Iterating via each and selecting based on the this\n\t            ///makes it work ... a cG.selectAll('path') doesn't.\n\t            ///Without iteration the data (in the element) didn't update.\n\t            cG.each(function(d){\n\t                d3.select(this).select('path')\n\t                    .transition()\n\t                    .duration(duration)\n\t                    .attrTween('d', arcTweenUpdate);\n\t            });\n\t\n\t            if(showLabels){\n\t                //remove labels first and add them back\n\t                cG.selectAll('text').remove();\n\t\n\t                //this way labels are on top of newly added arcs\n\t                cG.append('text')\n\t                    .text( function(e){ return labelFormat(e)})\n\t                    .transition()\n\t                    .duration(duration)\n\t                    .attr(\"opacity\", function(d){\n\t                        if(labelThresholdMatched(d)) {\n\t                            return 1;\n\t                        }\n\t                        else {\n\t                            return 0;\n\t                        }\n\t                    })\n\t                    .attr(\"transform\", function(d) {\n\t                        var width = this.getBBox().width;\n\t                        if(d.depth === 0){\n\t                            return \"rotate(0)translate(\" + (width / 2 * -1) + \",0)\";\n\t                        }\n\t                        else {\n\t                            var centerAngle = computeCenterAngle(d);\n\t                            var rotation = rotationToAvoidUpsideDown(d);\n\t                            if (rotation === 0) {\n\t                                return 'rotate('+ centerAngle +')translate(' + (y(d.y) + 5) + ',0)';\n\t                            }\n\t                            else {\n\t                                return 'rotate('+ centerAngle +')translate(' + (y(d.y) + width + 5) + ',0)rotate(' + rotation + ')';\n\t                            }\n\t                        }\n\t                    });\n\t            }\n\t\n\t            //zoom out to the center when the data is updated.\n\t            zoomClick(nodes[nodes.length - 1])\n\t\n\t\n\t            //remove unmatched elements ...\n\t            cG.exit()\n\t                .transition()\n\t                .duration(duration)\n\t                .attr('opacity',0)\n\t                .each('end',function(d){\n\t                    var k = key(d);\n\t                    prevPositions[k] = undefined;\n\t                })\n\t                .remove();\n\t        });\n\t\n\t\n\t        renderWatch.renderEnd('sunburst immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        mode:       {get: function(){return mode;}, set: function(_){mode=_;}},\n\t        id:         {get: function(){return id;}, set: function(_){id=_;}},\n\t        duration:   {get: function(){return duration;}, set: function(_){duration=_;}},\n\t        groupColorByParent: {get: function(){return groupColorByParent;}, set: function(_){groupColorByParent=!!_;}},\n\t        showLabels: {get: function(){return showLabels;}, set: function(_){showLabels=!!_}},\n\t        labelFormat: {get: function(){return labelFormat;}, set: function(_){labelFormat=_}},\n\t        labelThreshold: {get: function(){return labelThreshold;}, set: function(_){labelThreshold=_}},\n\t        sort: {get: function(){return sort;}, set: function(_){sort=_}},\n\t        key: {get: function(){return key;}, set: function(_){key=_}},\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    != undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  != undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   != undefined ? _.left   : margin.left;\n\t        }},\n\t        color: {get: function(){return color;}, set: function(_){\n\t            color=nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\tnv.models.sunburstChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var sunburst = nv.models.sunburst();\n\t    var tooltip = nv.models.tooltip();\n\t\n\t    var margin = {top: 30, right: 20, bottom: 20, left: 20}\n\t        , width = null\n\t        , height = null\n\t        , color = nv.utils.defaultColor()\n\t        , showTooltipPercent = false\n\t        , id = Math.round(Math.random() * 100000)\n\t        , defaultState = null\n\t        , noData = null\n\t        , duration = 250\n\t        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd');\n\t\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t    tooltip\n\t        .duration(0)\n\t        .headerEnabled(false)\n\t        .valueFormatter(function(d){return d;});\n\t\n\t    //============================================================\n\t    // Chart function\n\t    //------------------------------------------------------------\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(sunburst);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t\n\t            nv.utils.initSVG(container);\n\t\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin);\n\t            var availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() {\n\t                if (duration === 0) {\n\t                    container.call(chart);\n\t                } else {\n\t                    container.transition().duration(duration).call(chart);\n\t                }\n\t            };\n\t            chart.container = container;\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length) {\n\t                nv.utils.noData(chart, container);\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            sunburst.width(availableWidth).height(availableHeight).margin(margin);\n\t            container.call(sunburst);\n\t        });\n\t\n\t        renderWatch.renderEnd('sunburstChart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    sunburst.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt.series = {\n\t            key: evt.data.name,\n\t            value: (evt.data.value || evt.data.size),\n\t            color: evt.color,\n\t            percent: evt.percent\n\t        };\n\t        if (!showTooltipPercent) {\n\t            delete evt.percent;\n\t            delete evt.series.percent;\n\t        }\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    sunburst.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    sunburst.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.sunburst = sunburst;\n\t    chart.tooltip = tooltip;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    // use Object get/set functionality to map between vars and chart functions\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        noData:             {get: function(){return noData;},               set: function(_){noData=_;}},\n\t        defaultState:       {get: function(){return defaultState;},         set: function(_){defaultState=_;}},\n\t        showTooltipPercent: {get: function(){return showTooltipPercent;},   set: function(_){showTooltipPercent=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        color: {get: function(){return color;}, set: function(_){\n\t            color = _;\n\t            sunburst.color(color);\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            sunburst.duration(duration);\n\t        }},\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t            sunburst.margin(margin);\n\t        }}\n\t    });\n\t    nv.utils.inheritOptions(chart, sunburst);\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t\n\t};\n\t\n\tnv.version = \"1.8.5\";\n\t})();\n\t//# sourceMappingURL=nv.d3.js.map\n\n/***/ },\n\n/***/ 158:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar _ = __webpack_require__(3);\n\tvar _name = \"fxToolbar\";\n\tvar Strategy = (function () {\n\t    function Strategy() {\n\t        this.tools = {};\n\t    }\n\t    Strategy.prototype.register = function (key, template) {\n\t        this.tools[key] = template;\n\t    };\n\t    Strategy.prototype.get = function (key) {\n\t        return this.tools[key] || \"\";\n\t    };\n\t    return Strategy;\n\t}());\n\tvar strategy = new Strategy();\n\tstrategy.register(\"icon\", __webpack_require__(274)());\n\tstrategy.register(\"btn\", __webpack_require__(273)());\n\tstrategy.register(\"layout\", __webpack_require__(276)());\n\tstrategy.register(\"label\", __webpack_require__(275)());\n\tstrategy.register(\"menu\", __webpack_require__(279)());\n\tstrategy.register(\"menuItem\", __webpack_require__(278)());\n\tstrategy.register(\"menuBar\", __webpack_require__(280)());\n\tstrategy.register(\"menuDivider\", __webpack_require__(277)());\n\tvar Controller = (function () {\n\t    function Controller($scope, $rootScope, $compile, $interpolate, materialUtils) {\n\t        this.$scope = $scope;\n\t        this.$rootScope = $rootScope;\n\t        this.$compile = $compile;\n\t        this.$interpolate = $interpolate;\n\t        this.materialUtils = materialUtils;\n\t    }\n\t    Controller.prototype.openMenu = function ($mdOpenMenu, ev) {\n\t        $mdOpenMenu(ev);\n\t    };\n\t    Controller.prototype.dig = function (models, $ele, $scope) {\n\t        var _this = this;\n\t        _.each(models, function (model) {\n\t            var template = strategy.get(model['type']);\n\t            var $newScope = $scope.$new(true, $scope);\n\t            var tmp, $newEle;\n\t            if (!template) {\n\t                template = model.template;\n\t            }\n\t            if (!template) {\n\t                return console.error(\"没有模板或者找不到类型!\");\n\t            }\n\t            model = _.cloneDeep(model);\n\t            model.disabled = \"\" + _this.ngDisabled;\n\t            model.materialUtils = _this.materialUtils;\n\t            model.ngModel = _this.ngModel;\n\t            model.index = _this.index;\n\t            if (model.conditionInfo && model.conditionInfo.condition) {\n\t                if (model.conditionInfo.prefix) {\n\t                    model.condition = model['type'] + \"Ctl.\" + model.conditionInfo.condition;\n\t                }\n\t                else {\n\t                    model.condition = \"\" + model.conditionInfo.condition;\n\t                }\n\t                if (model.conditionInfo.useDisabled) {\n\t                    model.disabled = model.condition;\n\t                    model.condition = \"\";\n\t                }\n\t            }\n\t            !model.condition && (model.condition = \"true\");\n\t            $newScope[model['type'] + \"Ctl\"] = _.clone(model);\n\t            if (_this.ctls) {\n\t                $newScope[_this.ctls] = $scope.$parent[_this.ctls] || {};\n\t            }\n\t            _this.$scope.$watch(function () {\n\t                return _this.index;\n\t            }, function (newValue, oldValue) {\n\t                if (newValue != oldValue) {\n\t                    $newScope[model['type'] + \"Ctl\"][\"index\"] = newValue;\n\t                }\n\t            });\n\t            tmp = _this.$interpolate(template)($newScope);\n\t            $newEle = angular.element(tmp);\n\t            _.each(model.attributes, function (attr, key) {\n\t                $newEle.attr(key, attr);\n\t            });\n\t            $newEle = _this.$compile($newEle)($newScope);\n\t            $ele.append($newEle);\n\t            if (_.isArray(model.tools)) {\n\t                _this.dig(model.tools, $newEle, $newScope);\n\t            }\n\t        });\n\t    };\n\t    return Controller;\n\t}());\n\tController.$inject = [\"$scope\", \"$rootScope\", \"$compile\", \"$interpolate\", \"materialUtils\"];\n\tfunction Directive() {\n\t    return {\n\t        restrict: 'EA',\n\t        require: [_name],\n\t        scope: {},\n\t        bindToController: {\n\t            ctls: '@',\n\t            ngDisabled: '@',\n\t            items: \"=\",\n\t            ngModel: '=',\n\t            index: '=?'\n\t        },\n\t        controllerAs: 'toolbarCtl',\n\t        controller: Controller,\n\t        replace: false,\n\t        link: function ($scope, $ele, $attr, $ctl) {\n\t            $scope.$watchCollection(function () {\n\t                return $ctl[0].items;\n\t            }, function (newValue) {\n\t                var model = newValue;\n\t                if (!model)\n\t                    return;\n\t                if (!_.isObject(model) && !_.isArray(model)) {\n\t                    return console.error(\"items只能是对象或者数组!\");\n\t                }\n\t                $ctl[0].dig(_.isArray(model) ? model : [model], $ele, $scope);\n\t            });\n\t        }\n\t    };\n\t}\n\tDirective.$inject = [];\n\texports.module = angular.module(_name + \"Module\", []).directive(_name, Directive);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = \"\" + exports.module.name;\n\n\n/***/ },\n\n/***/ 175:\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(218);\n\tmodule.exports = 'nvd3';\n\n/***/ },\n\n/***/ 177:\n/***/ function(module, exports) {\n\n\t/* commonjs package manager support (eg componentjs) */\n\tif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports){\n\t  module.exports = 'treeControl';\n\t}\n\t(function ( angular ) {\n\t    'use strict';\n\t\n\t    function createPath(startScope) {\n\t        return function path() {\n\t            var _path = [];\n\t            var scope = startScope;\n\t            var prevNode;\n\t            while (scope && scope.node !== startScope.synteticRoot) {\n\t                if (prevNode !== scope.node)\n\t                    _path.push(scope.node);\n\t                prevNode = scope.node;\n\t                scope = scope.$parent;\n\t            }\n\t            return _path;\n\t        }\n\t    }\n\t\n\t    function ensureDefault(obj, prop, value) {\n\t        if (!obj.hasOwnProperty(prop))\n\t            obj[prop] = value;\n\t    }\n\t\n\t    function defaultIsLeaf(node, $scope) {\n\t        return !node[$scope.options.nodeChildren] || node[$scope.options.nodeChildren].length === 0;\n\t    }\n\t\n\t    function shallowCopy(src, dst) {\n\t        if (angular.isArray(src)) {\n\t            dst = dst || [];\n\t\n\t            for (var i = 0; i < src.length; i++) {\n\t                dst[i] = src[i];\n\t            }\n\t        } else if (angular.isObject(src)) {\n\t            dst = dst || {};\n\t\n\t            for (var key in src) {\n\t                if (hasOwnProperty.call(src, key) && !(key.charAt(0) === '$' && key.charAt(1) === '$')) {\n\t                    dst[key] = src[key];\n\t                }\n\t            }\n\t        }\n\t\n\t        return dst || src;\n\t    }\n\t    function defaultEquality(a, b,$scope) {\n\t        if (!a || !b)\n\t            return false;\n\t        a = shallowCopy(a);\n\t        a[$scope.options.nodeChildren] = [];\n\t        b = shallowCopy(b);\n\t        b[$scope.options.nodeChildren] = [];\n\t        return angular.equals(a, b);\n\t    }\n\t\n\t    function defaultIsSelectable() {\n\t        return true;\n\t    }\n\t\n\t    function ensureAllDefaultOptions($scope) {\n\t        ensureDefault($scope.options, \"multiSelection\", false);\n\t        ensureDefault($scope.options, \"nodeChildren\", \"children\");\n\t        ensureDefault($scope.options, \"dirSelectable\", \"true\");\n\t        ensureDefault($scope.options, \"injectClasses\", {});\n\t        ensureDefault($scope.options.injectClasses, \"ul\", \"\");\n\t        ensureDefault($scope.options.injectClasses, \"li\", \"\");\n\t        ensureDefault($scope.options.injectClasses, \"liSelected\", \"\");\n\t        ensureDefault($scope.options.injectClasses, \"iExpanded\", \"\");\n\t        ensureDefault($scope.options.injectClasses, \"iCollapsed\", \"\");\n\t        ensureDefault($scope.options.injectClasses, \"iLeaf\", \"\");\n\t        ensureDefault($scope.options.injectClasses, \"label\", \"\");\n\t        ensureDefault($scope.options.injectClasses, \"labelSelected\", \"\");\n\t        ensureDefault($scope.options, \"equality\", defaultEquality);\n\t        ensureDefault($scope.options, \"isLeaf\", defaultIsLeaf);\n\t        ensureDefault($scope.options, \"allowDeselect\", true);\n\t        ensureDefault($scope.options, \"isSelectable\", defaultIsSelectable);\n\t    }\n\t    \n\t    angular.module( 'treeControl', [] )\n\t        .constant('treeConfig', {\n\t            templateUrl: null\n\t        })\n\t        .directive( 'treecontrol', ['$compile', function( $compile ) {\n\t            /**\n\t             * @param cssClass - the css class\n\t             * @param addClassProperty - should we wrap the class name with class=\"\"\n\t             */\n\t            function classIfDefined(cssClass, addClassProperty) {\n\t                if (cssClass) {\n\t                    if (addClassProperty)\n\t                        return 'class=\"' + cssClass + '\"';\n\t                    else\n\t                        return cssClass;\n\t                }\n\t                else\n\t                    return \"\";\n\t            }\n\t            \n\t            \n\t            \n\t            return {\n\t                restrict: 'EA',\n\t                require: \"treecontrol\",\n\t                transclude: true,\n\t                scope: {\n\t                    treeModel: \"=\",\n\t                    selectedNode: \"=?\",\n\t                    selectedNodes: \"=?\",\n\t                    expandedNodes: \"=?\",\n\t                    onSelection: \"&\",\n\t                    onNodeToggle: \"&\",\n\t                    options: \"=?\",\n\t                    orderBy: \"=?\",\n\t                    reverseOrder: \"@\",\n\t                    filterExpression: \"=?\",\n\t                    filterComparator: \"=?\"\n\t                },\n\t                controller: ['$scope', '$templateCache', '$interpolate', 'treeConfig', function ($scope, $templateCache, $interpolate, treeConfig) {\n\t                    \n\t                    $scope.options = $scope.options || {};\n\t                    \n\t                    ensureAllDefaultOptions($scope);\n\t                  \n\t                    $scope.selectedNodes = $scope.selectedNodes || [];\n\t                    $scope.expandedNodes = $scope.expandedNodes || [];\n\t                    $scope.expandedNodesMap = {};\n\t                    for (var i=0; i < $scope.expandedNodes.length; i++) {\n\t                        $scope.expandedNodesMap[\"a\"+i] = $scope.expandedNodes[i];\n\t                    }\n\t                    $scope.parentScopeOfTree = $scope.$parent;\n\t\n\t\n\t                    function isSelectedNode(node) {\n\t                        if (!$scope.options.multiSelection && ($scope.options.equality(node, $scope.selectedNode , $scope)))\n\t                            return true;\n\t                        else if ($scope.options.multiSelection && $scope.selectedNodes) {\n\t                            for (var i = 0; (i < $scope.selectedNodes.length); i++) {\n\t                                if ($scope.options.equality(node, $scope.selectedNodes[i] , $scope)) {\n\t                                    return true;\n\t                                }\n\t                            }\n\t                            return false;\n\t                        }\n\t                    }\n\t\n\t                    $scope.headClass = function(node) {\n\t                        var liSelectionClass = classIfDefined($scope.options.injectClasses.liSelected, false);\n\t                        var injectSelectionClass = \"\";\n\t                        if (liSelectionClass && isSelectedNode(node))\n\t                            injectSelectionClass = \" \" + liSelectionClass;\n\t                        if ($scope.options.isLeaf(node, $scope))\n\t                            return \"tree-leaf\" + injectSelectionClass;\n\t                        if ($scope.expandedNodesMap[this.$id])\n\t                            return \"tree-expanded\" + injectSelectionClass;\n\t                        else\n\t                            return \"tree-collapsed\" + injectSelectionClass;\n\t                    };\n\t\n\t                    $scope.iBranchClass = function() {\n\t                        if ($scope.expandedNodesMap[this.$id])\n\t                            return classIfDefined($scope.options.injectClasses.iExpanded);\n\t                        else\n\t                            return classIfDefined($scope.options.injectClasses.iCollapsed);\n\t                    };\n\t\n\t                    $scope.nodeExpanded = function() {\n\t                        return !!$scope.expandedNodesMap[this.$id];\n\t                    };\n\t\n\t                    $scope.selectNodeHead = function() {\n\t                        var transcludedScope = this;\n\t                        var expanding = $scope.expandedNodesMap[transcludedScope.$id] === undefined;\n\t                        $scope.expandedNodesMap[transcludedScope.$id] = (expanding ? transcludedScope.node : undefined);\n\t                        if (expanding) {\n\t                            $scope.expandedNodes.push(transcludedScope.node);\n\t                        }\n\t                        else {\n\t                            var index;\n\t                            for (var i=0; (i < $scope.expandedNodes.length) && !index; i++) {\n\t                                if ($scope.options.equality($scope.expandedNodes[i], transcludedScope.node , $scope)) {\n\t                                    index = i;\n\t                                }\n\t                            }\n\t                            if (index !== undefined)\n\t                                $scope.expandedNodes.splice(index, 1);\n\t                        }\n\t                        if ($scope.onNodeToggle) {\n\t                            var parentNode = (transcludedScope.$parent.node === transcludedScope.synteticRoot)?null:transcludedScope.$parent.node;\n\t                            var path = createPath(transcludedScope);\n\t                            $scope.onNodeToggle({node: transcludedScope.node, $parentNode: parentNode, $path: path,\n\t                              $index: transcludedScope.$index, $first: transcludedScope.$first, $middle: transcludedScope.$middle,\n\t                              $last: transcludedScope.$last, $odd: transcludedScope.$odd, $even: transcludedScope.$even, expanded: expanding});\n\t\n\t                        }\n\t                    };\n\t\n\t                    $scope.selectNodeLabel = function( selectedNode){\n\t                        var transcludedScope = this;\n\t                        if(!$scope.options.isLeaf(selectedNode, $scope) && (!$scope.options.dirSelectable || !$scope.options.isSelectable(selectedNode))) {\n\t                            // Branch node is not selectable, expand\n\t                            this.selectNodeHead();\n\t                        }\n\t                        else if($scope.options.isLeaf(selectedNode, $scope) && (!$scope.options.isSelectable(selectedNode))) {\n\t                            // Leaf node is not selectable\n\t                            return;\n\t                        }\n\t                        else {\n\t                            var selected = false;\n\t                            if ($scope.options.multiSelection) {\n\t                                var pos = -1;\n\t                                for (var i=0; i < $scope.selectedNodes.length; i++) {\n\t                                    if($scope.options.equality(selectedNode, $scope.selectedNodes[i] , $scope)) {\n\t                                        pos = i;\n\t                                        break;\n\t                                    }\n\t                                }\n\t                                if (pos === -1) {\n\t                                    $scope.selectedNodes.push(selectedNode);\n\t                                    selected = true;\n\t                                } else {\n\t                                    $scope.selectedNodes.splice(pos, 1);\n\t                                }\n\t                            } else {\n\t                                if (!$scope.options.equality(selectedNode, $scope.selectedNode , $scope)) {\n\t                                    $scope.selectedNode = selectedNode;\n\t                                    selected = true;\n\t                                }\n\t                                else {\n\t                                    if ($scope.options.allowDeselect) {\n\t                                        $scope.selectedNode = undefined;\n\t                                    } else {\n\t                                        $scope.selectedNode = selectedNode;\n\t                                        selected = true;\n\t                                    }\n\t                                }\n\t                            }\n\t                            if ($scope.onSelection) {\n\t                                var parentNode = (transcludedScope.$parent.node === transcludedScope.synteticRoot)?null:transcludedScope.$parent.node;\n\t                                var path = createPath(transcludedScope)\n\t                                $scope.onSelection({node: selectedNode, selected: selected, $parentNode: parentNode, $path: path,\n\t                                  $index: transcludedScope.$index, $first: transcludedScope.$first, $middle: transcludedScope.$middle,\n\t                                  $last: transcludedScope.$last, $odd: transcludedScope.$odd, $even: transcludedScope.$even});\n\t                            }\n\t                        }\n\t                    };\n\t\n\t                    $scope.selectedClass = function() {\n\t                        var isThisNodeSelected = isSelectedNode(this.node);\n\t                        var labelSelectionClass = classIfDefined($scope.options.injectClasses.labelSelected, false);\n\t                        var injectSelectionClass = \"\";\n\t                        if (labelSelectionClass && isThisNodeSelected)\n\t                            injectSelectionClass = \" \" + labelSelectionClass;\n\t\n\t                        return isThisNodeSelected ? \"tree-selected\" + injectSelectionClass : \"\";\n\t                    };\n\t\n\t                    $scope.unselectableClass = function() {\n\t                        var isThisNodeUnselectable = !$scope.options.isSelectable(this.node);\n\t                        var labelUnselectableClass = classIfDefined($scope.options.injectClasses.labelUnselectable, false);\n\t                        return isThisNodeUnselectable ? \"tree-unselectable \" + labelUnselectableClass : \"\";\n\t                    };\n\t\n\t                    //tree template\n\t                    $scope.isReverse = function() {\n\t                      return !($scope.reverseOrder === 'false' || $scope.reverseOrder === 'False' || $scope.reverseOrder === '' || $scope.reverseOrder === false);\n\t                    };\n\t\n\t                    $scope.orderByFunc = function() {\n\t                      return $scope.orderBy;\n\t                    };\n\t//                    return \"\" + $scope.orderBy;\n\t\n\t                    var templateOptions = {\n\t                        orderBy: $scope.orderBy ? \" | orderBy:orderByFunc():isReverse()\" : '',\n\t                        ulClass: classIfDefined($scope.options.injectClasses.ul, true),\n\t                        nodeChildren:  $scope.options.nodeChildren,\n\t                        liClass: classIfDefined($scope.options.injectClasses.li, true),\n\t                        iLeafClass: classIfDefined($scope.options.injectClasses.iLeaf, false),\n\t                        labelClass: classIfDefined($scope.options.injectClasses.label, false)\n\t                    };\n\t\n\t                    var template;\n\t                    var templateUrl = $scope.options.templateUrl || treeConfig.templateUrl;\n\t\n\t                    if(templateUrl) {\n\t                        template = $templateCache.get(templateUrl);\n\t                    }\n\t\n\t                    if(!template) {\n\t                        template =\n\t                            '<ul {{options.ulClass}} >' +\n\t                            '<li ng-repeat=\"node in node.{{options.nodeChildren}} | filter:filterExpression:filterComparator {{options.orderBy}}\" ng-class=\"headClass(node)\" {{options.liClass}}' +\n\t                            'set-node-to-data>' +\n\t                            '<i class=\"tree-branch-head\" ng-class=\"iBranchClass()\" ng-click=\"selectNodeHead(node)\"></i>' +\n\t                            '<i class=\"tree-leaf-head {{options.iLeafClass}}\"></i>' +\n\t                            '<div class=\"tree-label {{options.labelClass}}\" ng-class=\"[selectedClass(), unselectableClass()]\" ng-click=\"selectNodeLabel(node)\" tree-transclude></div>' +\n\t                            '<treeitem ng-if=\"nodeExpanded()\"></treeitem>' +\n\t                            '</li>' +\n\t                            '</ul>';\n\t                    }\n\t\n\t                    this.template = $compile($interpolate(template)({options: templateOptions}));\n\t                }],\n\t                compile: function(element, attrs, childTranscludeFn) {\n\t                    return function ( scope, element, attrs, treemodelCntr ) {\n\t\n\t                        scope.$watch(\"treeModel\", function updateNodeOnRootScope(newValue) {\n\t                            if (angular.isArray(newValue)) {\n\t                                if (angular.isDefined(scope.node) && angular.equals(scope.node[scope.options.nodeChildren], newValue))\n\t                                    return;\n\t                                scope.node = {};\n\t                                scope.synteticRoot = scope.node;\n\t                                scope.node[scope.options.nodeChildren] = newValue;\n\t                            }\n\t                            else {\n\t                                if (angular.equals(scope.node, newValue))\n\t                                    return;\n\t                                scope.node = newValue;\n\t                            }\n\t                        });\n\t\n\t                        scope.$watchCollection('expandedNodes', function(newValue, oldValue) {\n\t                            var notFoundIds = 0;\n\t                            var newExpandedNodesMap = {};\n\t                            var $liElements = element.find('li');\n\t                            var existingScopes = [];\n\t                            // find all nodes visible on the tree and the scope $id of the scopes including them\n\t                            angular.forEach($liElements, function(liElement) {\n\t                                var $liElement = angular.element(liElement);\n\t                                var liScope = {\n\t                                    $id: $liElement.data('scope-id'),\n\t                                    node: $liElement.data('node')\n\t                                };\n\t                                existingScopes.push(liScope);\n\t                            });\n\t                            // iterate over the newValue, the new expanded nodes, and for each find it in the existingNodesAndScopes\n\t                            // if found, add the mapping $id -> node into newExpandedNodesMap\n\t                            // if not found, add the mapping num -> node into newExpandedNodesMap\n\t                            angular.forEach(newValue, function(newExNode) {\n\t                                var found = false;\n\t                                for (var i=0; (i < existingScopes.length) && !found; i++) {\n\t                                    var existingScope = existingScopes[i];\n\t                                    if (scope.options.equality(newExNode, existingScope.node , scope)) {\n\t                                        newExpandedNodesMap[existingScope.$id] = existingScope.node;\n\t                                        found = true;\n\t                                    }\n\t                                }\n\t                                if (!found)\n\t                                    newExpandedNodesMap['a' + notFoundIds++] = newExNode;\n\t                            });\n\t                            scope.expandedNodesMap = newExpandedNodesMap;\n\t                        });\n\t\n\t//                        scope.$watch('expandedNodesMap', function(newValue) {\n\t//\n\t//                        });\n\t\n\t                        //Rendering template for a root node\n\t                        treemodelCntr.template( scope, function(clone) {\n\t                            element.html('').append( clone );\n\t                        });\n\t                        // save the transclude function from compile (which is not bound to a scope as apposed to the one from link)\n\t                        // we can fix this to work with the link transclude function with angular 1.2.6. as for angular 1.2.0 we need\n\t                        // to keep using the compile function\n\t                        scope.$treeTransclude = childTranscludeFn;\n\t                    };\n\t                }\n\t            };\n\t        }])\n\t        .directive(\"setNodeToData\", ['$parse', function($parse) {\n\t            return {\n\t                restrict: 'A',\n\t                link: function($scope, $element, $attrs) {\n\t                    $element.data('node', $scope.node);\n\t                    $element.data('scope-id', $scope.$id);\n\t                }\n\t            };\n\t        }])\n\t        .directive(\"treeitem\", function() {\n\t            return {\n\t                restrict: 'E',\n\t                require: \"^treecontrol\",\n\t                link: function( scope, element, attrs, treemodelCntr) {\n\t                    // Rendering template for the current node\n\t                    treemodelCntr.template(scope, function(clone) {\n\t                        element.html('').append(clone);\n\t                    });\n\t                }\n\t            };\n\t        })\n\t        .directive(\"treeTransclude\", function () {\n\t            return {\n\t                controller: ['$scope',function ($scope) {\n\t                    ensureAllDefaultOptions($scope);\n\t                }],\n\t\n\t                link: function(scope, element, attrs, controller) {\n\t                    if (!scope.options.isLeaf(scope.node, scope)) {\n\t                        angular.forEach(scope.expandedNodesMap, function (node, id) {\n\t                            if (scope.options.equality(node, scope.node , scope)) {\n\t                                scope.expandedNodesMap[scope.$id] = scope.node;\n\t                                scope.expandedNodesMap[id] = undefined;\n\t                            }\n\t                        });\n\t                    }\n\t                    if (!scope.options.multiSelection && scope.options.equality(scope.node, scope.selectedNode , scope)) {\n\t                        scope.selectedNode = scope.node;\n\t                    } else if (scope.options.multiSelection) {\n\t                        var newSelectedNodes = [];\n\t                        for (var i = 0; (i < scope.selectedNodes.length); i++) {\n\t                            if (scope.options.equality(scope.node, scope.selectedNodes[i] , scope)) {\n\t                                newSelectedNodes.push(scope.node);\n\t                            }\n\t                        }\n\t                        scope.selectedNodes = newSelectedNodes;\n\t                    }\n\t\n\t                    // create a scope for the transclusion, whos parent is the parent of the tree control\n\t                    scope.transcludeScope = scope.parentScopeOfTree.$new();\n\t                    scope.transcludeScope.node = scope.node;\n\t                    scope.transcludeScope.$path = createPath(scope);\n\t                    scope.transcludeScope.$parentNode = (scope.$parent.node === scope.synteticRoot)?null:scope.$parent.node;\n\t                    scope.transcludeScope.$index = scope.$index;\n\t                    scope.transcludeScope.$first = scope.$first;\n\t                    scope.transcludeScope.$middle = scope.$middle;\n\t                    scope.transcludeScope.$last = scope.$last;\n\t                    scope.transcludeScope.$odd = scope.$odd;\n\t                    scope.transcludeScope.$even = scope.$even;\n\t                    scope.$on('$destroy', function() {\n\t                        scope.transcludeScope.$destroy();\n\t                    });\n\t\n\t                    scope.$treeTransclude(scope.transcludeScope, function(clone) {\n\t                        element.empty();\n\t                        element.append(clone);\n\t                    });\n\t                }\n\t            };\n\t        });\n\t})( angular );\n\n\n/***/ },\n\n/***/ 178:\n/***/ function(module, exports) {\n\n\t/**\n\t * State-based routing for AngularJS\n\t * @version v0.3.2\n\t * @link http://angular-ui.github.com/\n\t * @license MIT License, http://www.opensource.org/licenses/MIT\n\t */\n\t\n\t/* commonjs package manager support (eg componentjs) */\n\tif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports){\n\t  module.exports = 'ui.router';\n\t}\n\t\n\t(function (window, angular, undefined) {\n\t/*jshint globalstrict:true*/\n\t/*global angular:false*/\n\t'use strict';\n\t\n\tvar isDefined = angular.isDefined,\n\t    isFunction = angular.isFunction,\n\t    isString = angular.isString,\n\t    isObject = angular.isObject,\n\t    isArray = angular.isArray,\n\t    forEach = angular.forEach,\n\t    extend = angular.extend,\n\t    copy = angular.copy,\n\t    toJson = angular.toJson;\n\t\n\tfunction inherit(parent, extra) {\n\t  return extend(new (extend(function() {}, { prototype: parent }))(), extra);\n\t}\n\t\n\tfunction merge(dst) {\n\t  forEach(arguments, function(obj) {\n\t    if (obj !== dst) {\n\t      forEach(obj, function(value, key) {\n\t        if (!dst.hasOwnProperty(key)) dst[key] = value;\n\t      });\n\t    }\n\t  });\n\t  return dst;\n\t}\n\t\n\t/**\n\t * Finds the common ancestor path between two states.\n\t *\n\t * @param {Object} first The first state.\n\t * @param {Object} second The second state.\n\t * @return {Array} Returns an array of state names in descending order, not including the root.\n\t */\n\tfunction ancestors(first, second) {\n\t  var path = [];\n\t\n\t  for (var n in first.path) {\n\t    if (first.path[n] !== second.path[n]) break;\n\t    path.push(first.path[n]);\n\t  }\n\t  return path;\n\t}\n\t\n\t/**\n\t * IE8-safe wrapper for `Object.keys()`.\n\t *\n\t * @param {Object} object A JavaScript object.\n\t * @return {Array} Returns the keys of the object as an array.\n\t */\n\tfunction objectKeys(object) {\n\t  if (Object.keys) {\n\t    return Object.keys(object);\n\t  }\n\t  var result = [];\n\t\n\t  forEach(object, function(val, key) {\n\t    result.push(key);\n\t  });\n\t  return result;\n\t}\n\t\n\t/**\n\t * IE8-safe wrapper for `Array.prototype.indexOf()`.\n\t *\n\t * @param {Array} array A JavaScript array.\n\t * @param {*} value A value to search the array for.\n\t * @return {Number} Returns the array index value of `value`, or `-1` if not present.\n\t */\n\tfunction indexOf(array, value) {\n\t  if (Array.prototype.indexOf) {\n\t    return array.indexOf(value, Number(arguments[2]) || 0);\n\t  }\n\t  var len = array.length >>> 0, from = Number(arguments[2]) || 0;\n\t  from = (from < 0) ? Math.ceil(from) : Math.floor(from);\n\t\n\t  if (from < 0) from += len;\n\t\n\t  for (; from < len; from++) {\n\t    if (from in array && array[from] === value) return from;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Merges a set of parameters with all parameters inherited between the common parents of the\n\t * current state and a given destination state.\n\t *\n\t * @param {Object} currentParams The value of the current state parameters ($stateParams).\n\t * @param {Object} newParams The set of parameters which will be composited with inherited params.\n\t * @param {Object} $current Internal definition of object representing the current state.\n\t * @param {Object} $to Internal definition of object representing state to transition to.\n\t */\n\tfunction inheritParams(currentParams, newParams, $current, $to) {\n\t  var parents = ancestors($current, $to), parentParams, inherited = {}, inheritList = [];\n\t\n\t  for (var i in parents) {\n\t    if (!parents[i] || !parents[i].params) continue;\n\t    parentParams = objectKeys(parents[i].params);\n\t    if (!parentParams.length) continue;\n\t\n\t    for (var j in parentParams) {\n\t      if (indexOf(inheritList, parentParams[j]) >= 0) continue;\n\t      inheritList.push(parentParams[j]);\n\t      inherited[parentParams[j]] = currentParams[parentParams[j]];\n\t    }\n\t  }\n\t  return extend({}, inherited, newParams);\n\t}\n\t\n\t/**\n\t * Performs a non-strict comparison of the subset of two objects, defined by a list of keys.\n\t *\n\t * @param {Object} a The first object.\n\t * @param {Object} b The second object.\n\t * @param {Array} keys The list of keys within each object to compare. If the list is empty or not specified,\n\t *                     it defaults to the list of keys in `a`.\n\t * @return {Boolean} Returns `true` if the keys match, otherwise `false`.\n\t */\n\tfunction equalForKeys(a, b, keys) {\n\t  if (!keys) {\n\t    keys = [];\n\t    for (var n in a) keys.push(n); // Used instead of Object.keys() for IE8 compatibility\n\t  }\n\t\n\t  for (var i=0; i<keys.length; i++) {\n\t    var k = keys[i];\n\t    if (a[k] != b[k]) return false; // Not '===', values aren't necessarily normalized\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Returns the subset of an object, based on a list of keys.\n\t *\n\t * @param {Array} keys\n\t * @param {Object} values\n\t * @return {Boolean} Returns a subset of `values`.\n\t */\n\tfunction filterByKeys(keys, values) {\n\t  var filtered = {};\n\t\n\t  forEach(keys, function (name) {\n\t    filtered[name] = values[name];\n\t  });\n\t  return filtered;\n\t}\n\t\n\t// like _.indexBy\n\t// when you know that your index values will be unique, or you want last-one-in to win\n\tfunction indexBy(array, propName) {\n\t  var result = {};\n\t  forEach(array, function(item) {\n\t    result[item[propName]] = item;\n\t  });\n\t  return result;\n\t}\n\t\n\t// extracted from underscore.js\n\t// Return a copy of the object only containing the whitelisted properties.\n\tfunction pick(obj) {\n\t  var copy = {};\n\t  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n\t  forEach(keys, function(key) {\n\t    if (key in obj) copy[key] = obj[key];\n\t  });\n\t  return copy;\n\t}\n\t\n\t// extracted from underscore.js\n\t// Return a copy of the object omitting the blacklisted properties.\n\tfunction omit(obj) {\n\t  var copy = {};\n\t  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n\t  for (var key in obj) {\n\t    if (indexOf(keys, key) == -1) copy[key] = obj[key];\n\t  }\n\t  return copy;\n\t}\n\t\n\tfunction pluck(collection, key) {\n\t  var result = isArray(collection) ? [] : {};\n\t\n\t  forEach(collection, function(val, i) {\n\t    result[i] = isFunction(key) ? key(val) : val[key];\n\t  });\n\t  return result;\n\t}\n\t\n\tfunction filter(collection, callback) {\n\t  var array = isArray(collection);\n\t  var result = array ? [] : {};\n\t  forEach(collection, function(val, i) {\n\t    if (callback(val, i)) {\n\t      result[array ? result.length : i] = val;\n\t    }\n\t  });\n\t  return result;\n\t}\n\t\n\tfunction map(collection, callback) {\n\t  var result = isArray(collection) ? [] : {};\n\t\n\t  forEach(collection, function(val, i) {\n\t    result[i] = callback(val, i);\n\t  });\n\t  return result;\n\t}\n\t\n\t// issue #2676 #2889\n\tfunction silenceUncaughtInPromise (promise) {\n\t  return promise.then(undefined, function() {}) && promise;\n\t}\n\t\n\t/**\n\t * @ngdoc overview\n\t * @name ui.router.util\n\t *\n\t * @description\n\t * # ui.router.util sub-module\n\t *\n\t * This module is a dependency of other sub-modules. Do not include this module as a dependency\n\t * in your angular app (use {@link ui.router} module instead).\n\t *\n\t */\n\tangular.module('ui.router.util', ['ng']);\n\t\n\t/**\n\t * @ngdoc overview\n\t * @name ui.router.router\n\t * \n\t * @requires ui.router.util\n\t *\n\t * @description\n\t * # ui.router.router sub-module\n\t *\n\t * This module is a dependency of other sub-modules. Do not include this module as a dependency\n\t * in your angular app (use {@link ui.router} module instead).\n\t */\n\tangular.module('ui.router.router', ['ui.router.util']);\n\t\n\t/**\n\t * @ngdoc overview\n\t * @name ui.router.state\n\t * \n\t * @requires ui.router.router\n\t * @requires ui.router.util\n\t *\n\t * @description\n\t * # ui.router.state sub-module\n\t *\n\t * This module is a dependency of the main ui.router module. Do not include this module as a dependency\n\t * in your angular app (use {@link ui.router} module instead).\n\t * \n\t */\n\tangular.module('ui.router.state', ['ui.router.router', 'ui.router.util']);\n\t\n\t/**\n\t * @ngdoc overview\n\t * @name ui.router\n\t *\n\t * @requires ui.router.state\n\t *\n\t * @description\n\t * # ui.router\n\t * \n\t * ## The main module for ui.router \n\t * There are several sub-modules included with the ui.router module, however only this module is needed\n\t * as a dependency within your angular app. The other modules are for organization purposes. \n\t *\n\t * The modules are:\n\t * * ui.router - the main \"umbrella\" module\n\t * * ui.router.router - \n\t * \n\t * *You'll need to include **only** this module as the dependency within your angular app.*\n\t * \n\t * <pre>\n\t * <!doctype html>\n\t * <html ng-app=\"myApp\">\n\t * <head>\n\t *   <script src=\"js/angular.js\"></script>\n\t *   <!-- Include the ui-router script -->\n\t *   <script src=\"js/angular-ui-router.min.js\"></script>\n\t *   <script>\n\t *     // ...and add 'ui.router' as a dependency\n\t *     var myApp = angular.module('myApp', ['ui.router']);\n\t *   </script>\n\t * </head>\n\t * <body>\n\t * </body>\n\t * </html>\n\t * </pre>\n\t */\n\tangular.module('ui.router', ['ui.router.state']);\n\t\n\tangular.module('ui.router.compat', ['ui.router']);\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.util.$resolve\n\t *\n\t * @requires $q\n\t * @requires $injector\n\t *\n\t * @description\n\t * Manages resolution of (acyclic) graphs of promises.\n\t */\n\t$Resolve.$inject = ['$q', '$injector'];\n\tfunction $Resolve(  $q,    $injector) {\n\t  \n\t  var VISIT_IN_PROGRESS = 1,\n\t      VISIT_DONE = 2,\n\t      NOTHING = {},\n\t      NO_DEPENDENCIES = [],\n\t      NO_LOCALS = NOTHING,\n\t      NO_PARENT = extend($q.when(NOTHING), { $$promises: NOTHING, $$values: NOTHING });\n\t  \n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$resolve#study\n\t   * @methodOf ui.router.util.$resolve\n\t   *\n\t   * @description\n\t   * Studies a set of invocables that are likely to be used multiple times.\n\t   * <pre>\n\t   * $resolve.study(invocables)(locals, parent, self)\n\t   * </pre>\n\t   * is equivalent to\n\t   * <pre>\n\t   * $resolve.resolve(invocables, locals, parent, self)\n\t   * </pre>\n\t   * but the former is more efficient (in fact `resolve` just calls `study` \n\t   * internally).\n\t   *\n\t   * @param {object} invocables Invocable objects\n\t   * @return {function} a function to pass in locals, parent and self\n\t   */\n\t  this.study = function (invocables) {\n\t    if (!isObject(invocables)) throw new Error(\"'invocables' must be an object\");\n\t    var invocableKeys = objectKeys(invocables || {});\n\t    \n\t    // Perform a topological sort of invocables to build an ordered plan\n\t    var plan = [], cycle = [], visited = {};\n\t    function visit(value, key) {\n\t      if (visited[key] === VISIT_DONE) return;\n\t      \n\t      cycle.push(key);\n\t      if (visited[key] === VISIT_IN_PROGRESS) {\n\t        cycle.splice(0, indexOf(cycle, key));\n\t        throw new Error(\"Cyclic dependency: \" + cycle.join(\" -> \"));\n\t      }\n\t      visited[key] = VISIT_IN_PROGRESS;\n\t      \n\t      if (isString(value)) {\n\t        plan.push(key, [ function() { return $injector.get(value); }], NO_DEPENDENCIES);\n\t      } else {\n\t        var params = $injector.annotate(value);\n\t        forEach(params, function (param) {\n\t          if (param !== key && invocables.hasOwnProperty(param)) visit(invocables[param], param);\n\t        });\n\t        plan.push(key, value, params);\n\t      }\n\t      \n\t      cycle.pop();\n\t      visited[key] = VISIT_DONE;\n\t    }\n\t    forEach(invocables, visit);\n\t    invocables = cycle = visited = null; // plan is all that's required\n\t    \n\t    function isResolve(value) {\n\t      return isObject(value) && value.then && value.$$promises;\n\t    }\n\t    \n\t    return function (locals, parent, self) {\n\t      if (isResolve(locals) && self === undefined) {\n\t        self = parent; parent = locals; locals = null;\n\t      }\n\t      if (!locals) locals = NO_LOCALS;\n\t      else if (!isObject(locals)) {\n\t        throw new Error(\"'locals' must be an object\");\n\t      }       \n\t      if (!parent) parent = NO_PARENT;\n\t      else if (!isResolve(parent)) {\n\t        throw new Error(\"'parent' must be a promise returned by $resolve.resolve()\");\n\t      }\n\t      \n\t      // To complete the overall resolution, we have to wait for the parent\n\t      // promise and for the promise for each invokable in our plan.\n\t      var resolution = $q.defer(),\n\t          result = resolution.promise,\n\t          promises = result.$$promises = {},\n\t          values = extend({}, locals),\n\t          wait = 1 + plan.length/3,\n\t          merged = false;\n\t          \n\t      function done() {\n\t        // Merge parent values we haven't got yet and publish our own $$values\n\t        if (!--wait) {\n\t          if (!merged) merge(values, parent.$$values); \n\t          result.$$values = values;\n\t          result.$$promises = result.$$promises || true; // keep for isResolve()\n\t          delete result.$$inheritedValues;\n\t          resolution.resolve(values);\n\t        }\n\t      }\n\t      \n\t      function fail(reason) {\n\t        result.$$failure = reason;\n\t        resolution.reject(reason);\n\t      }\n\t\n\t      // Short-circuit if parent has already failed\n\t      if (isDefined(parent.$$failure)) {\n\t        fail(parent.$$failure);\n\t        return result;\n\t      }\n\t      \n\t      if (parent.$$inheritedValues) {\n\t        merge(values, omit(parent.$$inheritedValues, invocableKeys));\n\t      }\n\t\n\t      // Merge parent values if the parent has already resolved, or merge\n\t      // parent promises and wait if the parent resolve is still in progress.\n\t      extend(promises, parent.$$promises);\n\t      if (parent.$$values) {\n\t        merged = merge(values, omit(parent.$$values, invocableKeys));\n\t        result.$$inheritedValues = omit(parent.$$values, invocableKeys);\n\t        done();\n\t      } else {\n\t        if (parent.$$inheritedValues) {\n\t          result.$$inheritedValues = omit(parent.$$inheritedValues, invocableKeys);\n\t        }        \n\t        parent.then(done, fail);\n\t      }\n\t      \n\t      // Process each invocable in the plan, but ignore any where a local of the same name exists.\n\t      for (var i=0, ii=plan.length; i<ii; i+=3) {\n\t        if (locals.hasOwnProperty(plan[i])) done();\n\t        else invoke(plan[i], plan[i+1], plan[i+2]);\n\t      }\n\t      \n\t      function invoke(key, invocable, params) {\n\t        // Create a deferred for this invocation. Failures will propagate to the resolution as well.\n\t        var invocation = $q.defer(), waitParams = 0;\n\t        function onfailure(reason) {\n\t          invocation.reject(reason);\n\t          fail(reason);\n\t        }\n\t        // Wait for any parameter that we have a promise for (either from parent or from this\n\t        // resolve; in that case study() will have made sure it's ordered before us in the plan).\n\t        forEach(params, function (dep) {\n\t          if (promises.hasOwnProperty(dep) && !locals.hasOwnProperty(dep)) {\n\t            waitParams++;\n\t            promises[dep].then(function (result) {\n\t              values[dep] = result;\n\t              if (!(--waitParams)) proceed();\n\t            }, onfailure);\n\t          }\n\t        });\n\t        if (!waitParams) proceed();\n\t        function proceed() {\n\t          if (isDefined(result.$$failure)) return;\n\t          try {\n\t            invocation.resolve($injector.invoke(invocable, self, values));\n\t            invocation.promise.then(function (result) {\n\t              values[key] = result;\n\t              done();\n\t            }, onfailure);\n\t          } catch (e) {\n\t            onfailure(e);\n\t          }\n\t        }\n\t        // Publish promise synchronously; invocations further down in the plan may depend on it.\n\t        promises[key] = invocation.promise;\n\t      }\n\t      \n\t      return result;\n\t    };\n\t  };\n\t  \n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$resolve#resolve\n\t   * @methodOf ui.router.util.$resolve\n\t   *\n\t   * @description\n\t   * Resolves a set of invocables. An invocable is a function to be invoked via \n\t   * `$injector.invoke()`, and can have an arbitrary number of dependencies. \n\t   * An invocable can either return a value directly,\n\t   * or a `$q` promise. If a promise is returned it will be resolved and the \n\t   * resulting value will be used instead. Dependencies of invocables are resolved \n\t   * (in this order of precedence)\n\t   *\n\t   * - from the specified `locals`\n\t   * - from another invocable that is part of this `$resolve` call\n\t   * - from an invocable that is inherited from a `parent` call to `$resolve` \n\t   *   (or recursively\n\t   * - from any ancestor `$resolve` of that parent).\n\t   *\n\t   * The return value of `$resolve` is a promise for an object that contains \n\t   * (in this order of precedence)\n\t   *\n\t   * - any `locals` (if specified)\n\t   * - the resolved return values of all injectables\n\t   * - any values inherited from a `parent` call to `$resolve` (if specified)\n\t   *\n\t   * The promise will resolve after the `parent` promise (if any) and all promises \n\t   * returned by injectables have been resolved. If any invocable \n\t   * (or `$injector.invoke`) throws an exception, or if a promise returned by an \n\t   * invocable is rejected, the `$resolve` promise is immediately rejected with the \n\t   * same error. A rejection of a `parent` promise (if specified) will likewise be \n\t   * propagated immediately. Once the `$resolve` promise has been rejected, no \n\t   * further invocables will be called.\n\t   * \n\t   * Cyclic dependencies between invocables are not permitted and will cause `$resolve`\n\t   * to throw an error. As a special case, an injectable can depend on a parameter \n\t   * with the same name as the injectable, which will be fulfilled from the `parent` \n\t   * injectable of the same name. This allows inherited values to be decorated. \n\t   * Note that in this case any other injectable in the same `$resolve` with the same\n\t   * dependency would see the decorated value, not the inherited value.\n\t   *\n\t   * Note that missing dependencies -- unlike cyclic dependencies -- will cause an \n\t   * (asynchronous) rejection of the `$resolve` promise rather than a (synchronous) \n\t   * exception.\n\t   *\n\t   * Invocables are invoked eagerly as soon as all dependencies are available. \n\t   * This is true even for dependencies inherited from a `parent` call to `$resolve`.\n\t   *\n\t   * As a special case, an invocable can be a string, in which case it is taken to \n\t   * be a service name to be passed to `$injector.get()`. This is supported primarily \n\t   * for backwards-compatibility with the `resolve` property of `$routeProvider` \n\t   * routes.\n\t   *\n\t   * @param {object} invocables functions to invoke or \n\t   * `$injector` services to fetch.\n\t   * @param {object} locals  values to make available to the injectables\n\t   * @param {object} parent  a promise returned by another call to `$resolve`.\n\t   * @param {object} self  the `this` for the invoked methods\n\t   * @return {object} Promise for an object that contains the resolved return value\n\t   * of all invocables, as well as any inherited and local values.\n\t   */\n\t  this.resolve = function (invocables, locals, parent, self) {\n\t    return this.study(invocables)(locals, parent, self);\n\t  };\n\t}\n\t\n\tangular.module('ui.router.util').service('$resolve', $Resolve);\n\t\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.util.$templateFactory\n\t *\n\t * @requires $http\n\t * @requires $templateCache\n\t * @requires $injector\n\t *\n\t * @description\n\t * Service. Manages loading of templates.\n\t */\n\t$TemplateFactory.$inject = ['$http', '$templateCache', '$injector'];\n\tfunction $TemplateFactory(  $http,   $templateCache,   $injector) {\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$templateFactory#fromConfig\n\t   * @methodOf ui.router.util.$templateFactory\n\t   *\n\t   * @description\n\t   * Creates a template from a configuration object. \n\t   *\n\t   * @param {object} config Configuration object for which to load a template. \n\t   * The following properties are search in the specified order, and the first one \n\t   * that is defined is used to create the template:\n\t   *\n\t   * @param {string|object} config.template html string template or function to \n\t   * load via {@link ui.router.util.$templateFactory#fromString fromString}.\n\t   * @param {string|object} config.templateUrl url to load or a function returning \n\t   * the url to load via {@link ui.router.util.$templateFactory#fromUrl fromUrl}.\n\t   * @param {Function} config.templateProvider function to invoke via \n\t   * {@link ui.router.util.$templateFactory#fromProvider fromProvider}.\n\t   * @param {object} params  Parameters to pass to the template function.\n\t   * @param {object} locals Locals to pass to `invoke` if the template is loaded \n\t   * via a `templateProvider`. Defaults to `{ params: params }`.\n\t   *\n\t   * @return {string|object}  The template html as a string, or a promise for \n\t   * that string,or `null` if no template is configured.\n\t   */\n\t  this.fromConfig = function (config, params, locals) {\n\t    return (\n\t      isDefined(config.template) ? this.fromString(config.template, params) :\n\t      isDefined(config.templateUrl) ? this.fromUrl(config.templateUrl, params) :\n\t      isDefined(config.templateProvider) ? this.fromProvider(config.templateProvider, params, locals) :\n\t      null\n\t    );\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$templateFactory#fromString\n\t   * @methodOf ui.router.util.$templateFactory\n\t   *\n\t   * @description\n\t   * Creates a template from a string or a function returning a string.\n\t   *\n\t   * @param {string|object} template html template as a string or function that \n\t   * returns an html template as a string.\n\t   * @param {object} params Parameters to pass to the template function.\n\t   *\n\t   * @return {string|object} The template html as a string, or a promise for that \n\t   * string.\n\t   */\n\t  this.fromString = function (template, params) {\n\t    return isFunction(template) ? template(params) : template;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$templateFactory#fromUrl\n\t   * @methodOf ui.router.util.$templateFactory\n\t   * \n\t   * @description\n\t   * Loads a template from the a URL via `$http` and `$templateCache`.\n\t   *\n\t   * @param {string|Function} url url of the template to load, or a function \n\t   * that returns a url.\n\t   * @param {Object} params Parameters to pass to the url function.\n\t   * @return {string|Promise.<string>} The template html as a string, or a promise \n\t   * for that string.\n\t   */\n\t  this.fromUrl = function (url, params) {\n\t    if (isFunction(url)) url = url(params);\n\t    if (url == null) return null;\n\t    else return $http\n\t        .get(url, { cache: $templateCache, headers: { Accept: 'text/html' }})\n\t        .then(function(response) { return response.data; });\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$templateFactory#fromProvider\n\t   * @methodOf ui.router.util.$templateFactory\n\t   *\n\t   * @description\n\t   * Creates a template by invoking an injectable provider function.\n\t   *\n\t   * @param {Function} provider Function to invoke via `$injector.invoke`\n\t   * @param {Object} params Parameters for the template.\n\t   * @param {Object} locals Locals to pass to `invoke`. Defaults to \n\t   * `{ params: params }`.\n\t   * @return {string|Promise.<string>} The template html as a string, or a promise \n\t   * for that string.\n\t   */\n\t  this.fromProvider = function (provider, params, locals) {\n\t    return $injector.invoke(provider, null, locals || { params: params });\n\t  };\n\t}\n\t\n\tangular.module('ui.router.util').service('$templateFactory', $TemplateFactory);\n\t\n\tvar $$UMFP; // reference to $UrlMatcherFactoryProvider\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.util.type:UrlMatcher\n\t *\n\t * @description\n\t * Matches URLs against patterns and extracts named parameters from the path or the search\n\t * part of the URL. A URL pattern consists of a path pattern, optionally followed by '?' and a list\n\t * of search parameters. Multiple search parameter names are separated by '&'. Search parameters\n\t * do not influence whether or not a URL is matched, but their values are passed through into\n\t * the matched parameters returned by {@link ui.router.util.type:UrlMatcher#methods_exec exec}.\n\t *\n\t * Path parameter placeholders can be specified using simple colon/catch-all syntax or curly brace\n\t * syntax, which optionally allows a regular expression for the parameter to be specified:\n\t *\n\t * * `':'` name - colon placeholder\n\t * * `'*'` name - catch-all placeholder\n\t * * `'{' name '}'` - curly placeholder\n\t * * `'{' name ':' regexp|type '}'` - curly placeholder with regexp or type name. Should the\n\t *   regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n\t *\n\t * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n\t * must be unique within the pattern (across both path and search parameters). For colon\n\t * placeholders or curly placeholders without an explicit regexp, a path parameter matches any\n\t * number of characters other than '/'. For catch-all placeholders the path parameter matches\n\t * any number of characters.\n\t *\n\t * Examples:\n\t *\n\t * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n\t *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n\t * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n\t *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n\t * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n\t * * `'/user/{id:[^/]*}'` - Same as the previous example.\n\t * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n\t *   parameter consists of 1 to 8 hex digits.\n\t * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n\t *   path into the parameter 'path'.\n\t * * `'/files/*path'` - ditto.\n\t * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n\t *   in the built-in  `date` Type matches `2014-11-12`) and provides a Date object in $stateParams.start\n\t *\n\t * @param {string} pattern  The pattern to compile into a matcher.\n\t * @param {Object} config  A configuration object hash:\n\t * @param {Object=} parentMatcher Used to concatenate the pattern/config onto\n\t *   an existing UrlMatcher\n\t *\n\t * * `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n\t * * `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\n\t *\n\t * @property {string} prefix  A static prefix of this pattern. The matcher guarantees that any\n\t *   URL matching this matcher (i.e. any string for which {@link ui.router.util.type:UrlMatcher#methods_exec exec()} returns\n\t *   non-null) will start with this prefix.\n\t *\n\t * @property {string} source  The pattern that was passed into the constructor\n\t *\n\t * @property {string} sourcePath  The path portion of the source property\n\t *\n\t * @property {string} sourceSearch  The search portion of the source property\n\t *\n\t * @property {string} regex  The constructed regex that will be used to match against the url when\n\t *   it is time to determine which url will match.\n\t *\n\t * @returns {Object}  New `UrlMatcher` object\n\t */\n\tfunction UrlMatcher(pattern, config, parentMatcher) {\n\t  config = extend({ params: {} }, isObject(config) ? config : {});\n\t\n\t  // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n\t  //   '*' name\n\t  //   ':' name\n\t  //   '{' name '}'\n\t  //   '{' name ':' regexp '}'\n\t  // The regular expression is somewhat complicated due to the need to allow curly braces\n\t  // inside the regular expression. The placeholder regexp breaks down as follows:\n\t  //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n\t  //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n\t  //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n\t  //    [^{}\\\\]+                       - anything other than curly braces or backslash\n\t  //    \\\\.                            - a backslash escape\n\t  //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n\t  var placeholder       = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n\t      searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n\t      compiled = '^', last = 0, m,\n\t      segments = this.segments = [],\n\t      parentParams = parentMatcher ? parentMatcher.params : {},\n\t      params = this.params = parentMatcher ? parentMatcher.params.$$new() : new $$UMFP.ParamSet(),\n\t      paramNames = [];\n\t\n\t  function addParameter(id, type, config, location) {\n\t    paramNames.push(id);\n\t    if (parentParams[id]) return parentParams[id];\n\t    if (!/^\\w+([-.]+\\w+)*(?:\\[\\])?$/.test(id)) throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n\t    if (params[id]) throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n\t    params[id] = new $$UMFP.Param(id, type, config, location);\n\t    return params[id];\n\t  }\n\t\n\t  function quoteRegExp(string, pattern, squash, optional) {\n\t    var surroundPattern = ['',''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\n\t    if (!pattern) return result;\n\t    switch(squash) {\n\t      case false: surroundPattern = ['(', ')' + (optional ? \"?\" : \"\")]; break;\n\t      case true:\n\t        result = result.replace(/\\/$/, '');\n\t        surroundPattern = ['(?:\\/(', ')|\\/)?'];\n\t      break;\n\t      default:    surroundPattern = ['(' + squash + \"|\", ')?']; break;\n\t    }\n\t    return result + surroundPattern[0] + pattern + surroundPattern[1];\n\t  }\n\t\n\t  this.source = pattern;\n\t\n\t  // Split into static segments separated by path parameter placeholders.\n\t  // The number of segments is always 1 more than the number of parameters.\n\t  function matchDetails(m, isSearch) {\n\t    var id, regexp, segment, type, cfg, arrayMode;\n\t    id          = m[2] || m[3]; // IE[78] returns '' for unmatched groups instead of null\n\t    cfg         = config.params[id];\n\t    segment     = pattern.substring(last, m.index);\n\t    regexp      = isSearch ? m[4] : m[4] || (m[1] == '*' ? '.*' : null);\n\t\n\t    if (regexp) {\n\t      type      = $$UMFP.type(regexp) || inherit($$UMFP.type(\"string\"), { pattern: new RegExp(regexp, config.caseInsensitive ? 'i' : undefined) });\n\t    }\n\t\n\t    return {\n\t      id: id, regexp: regexp, segment: segment, type: type, cfg: cfg\n\t    };\n\t  }\n\t\n\t  var p, param, segment;\n\t  while ((m = placeholder.exec(pattern))) {\n\t    p = matchDetails(m, false);\n\t    if (p.segment.indexOf('?') >= 0) break; // we're into the search part\n\t\n\t    param = addParameter(p.id, p.type, p.cfg, \"path\");\n\t    compiled += quoteRegExp(p.segment, param.type.pattern.source, param.squash, param.isOptional);\n\t    segments.push(p.segment);\n\t    last = placeholder.lastIndex;\n\t  }\n\t  segment = pattern.substring(last);\n\t\n\t  // Find any search parameter names and remove them from the last segment\n\t  var i = segment.indexOf('?');\n\t\n\t  if (i >= 0) {\n\t    var search = this.sourceSearch = segment.substring(i);\n\t    segment = segment.substring(0, i);\n\t    this.sourcePath = pattern.substring(0, last + i);\n\t\n\t    if (search.length > 0) {\n\t      last = 0;\n\t      while ((m = searchPlaceholder.exec(search))) {\n\t        p = matchDetails(m, true);\n\t        param = addParameter(p.id, p.type, p.cfg, \"search\");\n\t        last = placeholder.lastIndex;\n\t        // check if ?&\n\t      }\n\t    }\n\t  } else {\n\t    this.sourcePath = pattern;\n\t    this.sourceSearch = '';\n\t  }\n\t\n\t  compiled += quoteRegExp(segment) + (config.strict === false ? '\\/?' : '') + '$';\n\t  segments.push(segment);\n\t\n\t  this.regexp = new RegExp(compiled, config.caseInsensitive ? 'i' : undefined);\n\t  this.prefix = segments[0];\n\t  this.$$paramNames = paramNames;\n\t}\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:UrlMatcher#concat\n\t * @methodOf ui.router.util.type:UrlMatcher\n\t *\n\t * @description\n\t * Returns a new matcher for a pattern constructed by appending the path part and adding the\n\t * search parameters of the specified pattern to this pattern. The current pattern is not\n\t * modified. This can be understood as creating a pattern for URLs that are relative to (or\n\t * suffixes of) the current pattern.\n\t *\n\t * @example\n\t * The following two matchers are equivalent:\n\t * <pre>\n\t * new UrlMatcher('/user/{id}?q').concat('/details?date');\n\t * new UrlMatcher('/user/{id}/details?q&date');\n\t * </pre>\n\t *\n\t * @param {string} pattern  The pattern to append.\n\t * @param {Object} config  An object hash of the configuration for the matcher.\n\t * @returns {UrlMatcher}  A matcher for the concatenated pattern.\n\t */\n\tUrlMatcher.prototype.concat = function (pattern, config) {\n\t  // Because order of search parameters is irrelevant, we can add our own search\n\t  // parameters to the end of the new pattern. Parse the new pattern by itself\n\t  // and then join the bits together, but it's much easier to do this on a string level.\n\t  var defaultConfig = {\n\t    caseInsensitive: $$UMFP.caseInsensitive(),\n\t    strict: $$UMFP.strictMode(),\n\t    squash: $$UMFP.defaultSquashPolicy()\n\t  };\n\t  return new UrlMatcher(this.sourcePath + pattern + this.sourceSearch, extend(defaultConfig, config), this);\n\t};\n\t\n\tUrlMatcher.prototype.toString = function () {\n\t  return this.source;\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:UrlMatcher#exec\n\t * @methodOf ui.router.util.type:UrlMatcher\n\t *\n\t * @description\n\t * Tests the specified path against this matcher, and returns an object containing the captured\n\t * parameter values, or null if the path does not match. The returned object contains the values\n\t * of any search parameters that are mentioned in the pattern, but their value may be null if\n\t * they are not present in `searchParams`. This means that search parameters are always treated\n\t * as optional.\n\t *\n\t * @example\n\t * <pre>\n\t * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n\t *   x: '1', q: 'hello'\n\t * });\n\t * // returns { id: 'bob', q: 'hello', r: null }\n\t * </pre>\n\t *\n\t * @param {string} path  The URL path to match, e.g. `$location.path()`.\n\t * @param {Object} searchParams  URL search parameters, e.g. `$location.search()`.\n\t * @returns {Object}  The captured parameter values.\n\t */\n\tUrlMatcher.prototype.exec = function (path, searchParams) {\n\t  var m = this.regexp.exec(path);\n\t  if (!m) return null;\n\t  searchParams = searchParams || {};\n\t\n\t  var paramNames = this.parameters(), nTotal = paramNames.length,\n\t    nPath = this.segments.length - 1,\n\t    values = {}, i, j, cfg, paramName;\n\t\n\t  if (nPath !== m.length - 1) throw new Error(\"Unbalanced capture group in route '\" + this.source + \"'\");\n\t\n\t  function decodePathArray(string) {\n\t    function reverseString(str) { return str.split(\"\").reverse().join(\"\"); }\n\t    function unquoteDashes(str) { return str.replace(/\\\\-/g, \"-\"); }\n\t\n\t    var split = reverseString(string).split(/-(?!\\\\)/);\n\t    var allReversed = map(split, reverseString);\n\t    return map(allReversed, unquoteDashes).reverse();\n\t  }\n\t\n\t  var param, paramVal;\n\t  for (i = 0; i < nPath; i++) {\n\t    paramName = paramNames[i];\n\t    param = this.params[paramName];\n\t    paramVal = m[i+1];\n\t    // if the param value matches a pre-replace pair, replace the value before decoding.\n\t    for (j = 0; j < param.replace.length; j++) {\n\t      if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;\n\t    }\n\t    if (paramVal && param.array === true) paramVal = decodePathArray(paramVal);\n\t    if (isDefined(paramVal)) paramVal = param.type.decode(paramVal);\n\t    values[paramName] = param.value(paramVal);\n\t  }\n\t  for (/**/; i < nTotal; i++) {\n\t    paramName = paramNames[i];\n\t    values[paramName] = this.params[paramName].value(searchParams[paramName]);\n\t    param = this.params[paramName];\n\t    paramVal = searchParams[paramName];\n\t    for (j = 0; j < param.replace.length; j++) {\n\t      if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;\n\t    }\n\t    if (isDefined(paramVal)) paramVal = param.type.decode(paramVal);\n\t    values[paramName] = param.value(paramVal);\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:UrlMatcher#parameters\n\t * @methodOf ui.router.util.type:UrlMatcher\n\t *\n\t * @description\n\t * Returns the names of all path and search parameters of this pattern in an unspecified order.\n\t *\n\t * @returns {Array.<string>}  An array of parameter names. Must be treated as read-only. If the\n\t *    pattern has no parameters, an empty array is returned.\n\t */\n\tUrlMatcher.prototype.parameters = function (param) {\n\t  if (!isDefined(param)) return this.$$paramNames;\n\t  return this.params[param] || null;\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:UrlMatcher#validates\n\t * @methodOf ui.router.util.type:UrlMatcher\n\t *\n\t * @description\n\t * Checks an object hash of parameters to validate their correctness according to the parameter\n\t * types of this `UrlMatcher`.\n\t *\n\t * @param {Object} params The object hash of parameters to validate.\n\t * @returns {boolean} Returns `true` if `params` validates, otherwise `false`.\n\t */\n\tUrlMatcher.prototype.validates = function (params) {\n\t  return this.params.$$validates(params);\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:UrlMatcher#format\n\t * @methodOf ui.router.util.type:UrlMatcher\n\t *\n\t * @description\n\t * Creates a URL that matches this pattern by substituting the specified values\n\t * for the path and search parameters. Null values for path parameters are\n\t * treated as empty strings.\n\t *\n\t * @example\n\t * <pre>\n\t * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n\t * // returns '/user/bob?q=yes'\n\t * </pre>\n\t *\n\t * @param {Object} values  the values to substitute for the parameters in this pattern.\n\t * @returns {string}  the formatted URL (path and optionally search part).\n\t */\n\tUrlMatcher.prototype.format = function (values) {\n\t  values = values || {};\n\t  var segments = this.segments, params = this.parameters(), paramset = this.params;\n\t  if (!this.validates(values)) return null;\n\t\n\t  var i, search = false, nPath = segments.length - 1, nTotal = params.length, result = segments[0];\n\t\n\t  function encodeDashes(str) { // Replace dashes with encoded \"\\-\"\n\t    return encodeURIComponent(str).replace(/-/g, function(c) { return '%5C%' + c.charCodeAt(0).toString(16).toUpperCase(); });\n\t  }\n\t\n\t  for (i = 0; i < nTotal; i++) {\n\t    var isPathParam = i < nPath;\n\t    var name = params[i], param = paramset[name], value = param.value(values[name]);\n\t    var isDefaultValue = param.isOptional && param.type.equals(param.value(), value);\n\t    var squash = isDefaultValue ? param.squash : false;\n\t    var encoded = param.type.encode(value);\n\t\n\t    if (isPathParam) {\n\t      var nextSegment = segments[i + 1];\n\t      var isFinalPathParam = i + 1 === nPath;\n\t\n\t      if (squash === false) {\n\t        if (encoded != null) {\n\t          if (isArray(encoded)) {\n\t            result += map(encoded, encodeDashes).join(\"-\");\n\t          } else {\n\t            result += encodeURIComponent(encoded);\n\t          }\n\t        }\n\t        result += nextSegment;\n\t      } else if (squash === true) {\n\t        var capture = result.match(/\\/$/) ? /\\/?(.*)/ : /(.*)/;\n\t        result += nextSegment.match(capture)[1];\n\t      } else if (isString(squash)) {\n\t        result += squash + nextSegment;\n\t      }\n\t\n\t      if (isFinalPathParam && param.squash === true && result.slice(-1) === '/') result = result.slice(0, -1);\n\t    } else {\n\t      if (encoded == null || (isDefaultValue && squash !== false)) continue;\n\t      if (!isArray(encoded)) encoded = [ encoded ];\n\t      if (encoded.length === 0) continue;\n\t      encoded = map(encoded, encodeURIComponent).join('&' + name + '=');\n\t      result += (search ? '&' : '?') + (name + '=' + encoded);\n\t      search = true;\n\t    }\n\t  }\n\t\n\t  return result;\n\t};\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.util.type:Type\n\t *\n\t * @description\n\t * Implements an interface to define custom parameter types that can be decoded from and encoded to\n\t * string parameters matched in a URL. Used by {@link ui.router.util.type:UrlMatcher `UrlMatcher`}\n\t * objects when matching or formatting URLs, or comparing or validating parameter values.\n\t *\n\t * See {@link ui.router.util.$urlMatcherFactory#methods_type `$urlMatcherFactory#type()`} for more\n\t * information on registering custom types.\n\t *\n\t * @param {Object} config  A configuration object which contains the custom type definition.  The object's\n\t *        properties will override the default methods and/or pattern in `Type`'s public interface.\n\t * @example\n\t * <pre>\n\t * {\n\t *   decode: function(val) { return parseInt(val, 10); },\n\t *   encode: function(val) { return val && val.toString(); },\n\t *   equals: function(a, b) { return this.is(a) && a === b; },\n\t *   is: function(val) { return angular.isNumber(val) isFinite(val) && val % 1 === 0; },\n\t *   pattern: /\\d+/\n\t * }\n\t * </pre>\n\t *\n\t * @property {RegExp} pattern The regular expression pattern used to match values of this type when\n\t *           coming from a substring of a URL.\n\t *\n\t * @returns {Object}  Returns a new `Type` object.\n\t */\n\tfunction Type(config) {\n\t  extend(this, config);\n\t}\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:Type#is\n\t * @methodOf ui.router.util.type:Type\n\t *\n\t * @description\n\t * Detects whether a value is of a particular type. Accepts a native (decoded) value\n\t * and determines whether it matches the current `Type` object.\n\t *\n\t * @param {*} val  The value to check.\n\t * @param {string} key  Optional. If the type check is happening in the context of a specific\n\t *        {@link ui.router.util.type:UrlMatcher `UrlMatcher`} object, this is the name of the\n\t *        parameter in which `val` is stored. Can be used for meta-programming of `Type` objects.\n\t * @returns {Boolean}  Returns `true` if the value matches the type, otherwise `false`.\n\t */\n\tType.prototype.is = function(val, key) {\n\t  return true;\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:Type#encode\n\t * @methodOf ui.router.util.type:Type\n\t *\n\t * @description\n\t * Encodes a custom/native type value to a string that can be embedded in a URL. Note that the\n\t * return value does *not* need to be URL-safe (i.e. passed through `encodeURIComponent()`), it\n\t * only needs to be a representation of `val` that has been coerced to a string.\n\t *\n\t * @param {*} val  The value to encode.\n\t * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n\t *        meta-programming of `Type` objects.\n\t * @returns {string}  Returns a string representation of `val` that can be encoded in a URL.\n\t */\n\tType.prototype.encode = function(val, key) {\n\t  return val;\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:Type#decode\n\t * @methodOf ui.router.util.type:Type\n\t *\n\t * @description\n\t * Converts a parameter value (from URL string or transition param) to a custom/native value.\n\t *\n\t * @param {string} val  The URL parameter value to decode.\n\t * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n\t *        meta-programming of `Type` objects.\n\t * @returns {*}  Returns a custom representation of the URL parameter value.\n\t */\n\tType.prototype.decode = function(val, key) {\n\t  return val;\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:Type#equals\n\t * @methodOf ui.router.util.type:Type\n\t *\n\t * @description\n\t * Determines whether two decoded values are equivalent.\n\t *\n\t * @param {*} a  A value to compare against.\n\t * @param {*} b  A value to compare against.\n\t * @returns {Boolean}  Returns `true` if the values are equivalent/equal, otherwise `false`.\n\t */\n\tType.prototype.equals = function(a, b) {\n\t  return a == b;\n\t};\n\t\n\tType.prototype.$subPattern = function() {\n\t  var sub = this.pattern.toString();\n\t  return sub.substr(1, sub.length - 2);\n\t};\n\t\n\tType.prototype.pattern = /.*/;\n\t\n\tType.prototype.toString = function() { return \"{Type:\" + this.name + \"}\"; };\n\t\n\t/** Given an encoded string, or a decoded object, returns a decoded object */\n\tType.prototype.$normalize = function(val) {\n\t  return this.is(val) ? val : this.decode(val);\n\t};\n\t\n\t/*\n\t * Wraps an existing custom Type as an array of Type, depending on 'mode'.\n\t * e.g.:\n\t * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n\t * - url: \"/path?queryParam=1&queryParam=2\n\t * - $stateParams.queryParam will be [1, 2]\n\t * if `mode` is \"auto\", then\n\t * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n\t * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n\t */\n\tType.prototype.$asArray = function(mode, isSearch) {\n\t  if (!mode) return this;\n\t  if (mode === \"auto\" && !isSearch) throw new Error(\"'auto' array mode is for query parameters only\");\n\t\n\t  function ArrayType(type, mode) {\n\t    function bindTo(type, callbackName) {\n\t      return function() {\n\t        return type[callbackName].apply(type, arguments);\n\t      };\n\t    }\n\t\n\t    // Wrap non-array value as array\n\t    function arrayWrap(val) { return isArray(val) ? val : (isDefined(val) ? [ val ] : []); }\n\t    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n\t    function arrayUnwrap(val) {\n\t      switch(val.length) {\n\t        case 0: return undefined;\n\t        case 1: return mode === \"auto\" ? val[0] : val;\n\t        default: return val;\n\t      }\n\t    }\n\t    function falsey(val) { return !val; }\n\t\n\t    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n\t    function arrayHandler(callback, allTruthyMode) {\n\t      return function handleArray(val) {\n\t        if (isArray(val) && val.length === 0) return val;\n\t        val = arrayWrap(val);\n\t        var result = map(val, callback);\n\t        if (allTruthyMode === true)\n\t          return filter(result, falsey).length === 0;\n\t        return arrayUnwrap(result);\n\t      };\n\t    }\n\t\n\t    // Wraps type (.equals) functions to operate on each value of an array\n\t    function arrayEqualsHandler(callback) {\n\t      return function handleArray(val1, val2) {\n\t        var left = arrayWrap(val1), right = arrayWrap(val2);\n\t        if (left.length !== right.length) return false;\n\t        for (var i = 0; i < left.length; i++) {\n\t          if (!callback(left[i], right[i])) return false;\n\t        }\n\t        return true;\n\t      };\n\t    }\n\t\n\t    this.encode = arrayHandler(bindTo(type, 'encode'));\n\t    this.decode = arrayHandler(bindTo(type, 'decode'));\n\t    this.is     = arrayHandler(bindTo(type, 'is'), true);\n\t    this.equals = arrayEqualsHandler(bindTo(type, 'equals'));\n\t    this.pattern = type.pattern;\n\t    this.$normalize = arrayHandler(bindTo(type, '$normalize'));\n\t    this.name = type.name;\n\t    this.$arrayMode = mode;\n\t  }\n\t\n\t  return new ArrayType(this, mode);\n\t};\n\t\n\t\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.util.$urlMatcherFactory\n\t *\n\t * @description\n\t * Factory for {@link ui.router.util.type:UrlMatcher `UrlMatcher`} instances. The factory\n\t * is also available to providers under the name `$urlMatcherFactoryProvider`.\n\t */\n\tfunction $UrlMatcherFactory() {\n\t  $$UMFP = this;\n\t\n\t  var isCaseInsensitive = false, isStrictMode = true, defaultSquashPolicy = false;\n\t\n\t  // Use tildes to pre-encode slashes.\n\t  // If the slashes are simply URLEncoded, the browser can choose to pre-decode them,\n\t  // and bidirectional encoding/decoding fails.\n\t  // Tilde was chosen because it's not a RFC 3986 section 2.2 Reserved Character\n\t  function valToString(val) { return val != null ? val.toString().replace(/(~|\\/)/g, function (m) { return {'~':'~~', '/':'~2F'}[m]; }) : val; }\n\t  function valFromString(val) { return val != null ? val.toString().replace(/(~~|~2F)/g, function (m) { return {'~~':'~', '~2F':'/'}[m]; }) : val; }\n\t\n\t  var $types = {}, enqueue = true, typeQueue = [], injector, defaultTypes = {\n\t    \"string\": {\n\t      encode: valToString,\n\t      decode: valFromString,\n\t      // TODO: in 1.0, make string .is() return false if value is undefined/null by default.\n\t      // In 0.2.x, string params are optional by default for backwards compat\n\t      is: function(val) { return val == null || !isDefined(val) || typeof val === \"string\"; },\n\t      pattern: /[^/]*/\n\t    },\n\t    \"int\": {\n\t      encode: valToString,\n\t      decode: function(val) { return parseInt(val, 10); },\n\t      is: function(val) { return isDefined(val) && this.decode(val.toString()) === val; },\n\t      pattern: /\\d+/\n\t    },\n\t    \"bool\": {\n\t      encode: function(val) { return val ? 1 : 0; },\n\t      decode: function(val) { return parseInt(val, 10) !== 0; },\n\t      is: function(val) { return val === true || val === false; },\n\t      pattern: /0|1/\n\t    },\n\t    \"date\": {\n\t      encode: function (val) {\n\t        if (!this.is(val))\n\t          return undefined;\n\t        return [ val.getFullYear(),\n\t          ('0' + (val.getMonth() + 1)).slice(-2),\n\t          ('0' + val.getDate()).slice(-2)\n\t        ].join(\"-\");\n\t      },\n\t      decode: function (val) {\n\t        if (this.is(val)) return val;\n\t        var match = this.capture.exec(val);\n\t        return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n\t      },\n\t      is: function(val) { return val instanceof Date && !isNaN(val.valueOf()); },\n\t      equals: function (a, b) { return this.is(a) && this.is(b) && a.toISOString() === b.toISOString(); },\n\t      pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n\t      capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\n\t    },\n\t    \"json\": {\n\t      encode: angular.toJson,\n\t      decode: angular.fromJson,\n\t      is: angular.isObject,\n\t      equals: angular.equals,\n\t      pattern: /[^/]*/\n\t    },\n\t    \"any\": { // does not encode/decode\n\t      encode: angular.identity,\n\t      decode: angular.identity,\n\t      equals: angular.equals,\n\t      pattern: /.*/\n\t    }\n\t  };\n\t\n\t  function getDefaultConfig() {\n\t    return {\n\t      strict: isStrictMode,\n\t      caseInsensitive: isCaseInsensitive\n\t    };\n\t  }\n\t\n\t  function isInjectable(value) {\n\t    return (isFunction(value) || (isArray(value) && isFunction(value[value.length - 1])));\n\t  }\n\t\n\t  /**\n\t   * [Internal] Get the default value of a parameter, which may be an injectable function.\n\t   */\n\t  $UrlMatcherFactory.$$getDefaultValue = function(config) {\n\t    if (!isInjectable(config.value)) return config.value;\n\t    if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n\t    return injector.invoke(config.value);\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$urlMatcherFactory#caseInsensitive\n\t   * @methodOf ui.router.util.$urlMatcherFactory\n\t   *\n\t   * @description\n\t   * Defines whether URL matching should be case sensitive (the default behavior), or not.\n\t   *\n\t   * @param {boolean} value `false` to match URL in a case sensitive manner; otherwise `true`;\n\t   * @returns {boolean} the current value of caseInsensitive\n\t   */\n\t  this.caseInsensitive = function(value) {\n\t    if (isDefined(value))\n\t      isCaseInsensitive = value;\n\t    return isCaseInsensitive;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$urlMatcherFactory#strictMode\n\t   * @methodOf ui.router.util.$urlMatcherFactory\n\t   *\n\t   * @description\n\t   * Defines whether URLs should match trailing slashes, or not (the default behavior).\n\t   *\n\t   * @param {boolean=} value `false` to match trailing slashes in URLs, otherwise `true`.\n\t   * @returns {boolean} the current value of strictMode\n\t   */\n\t  this.strictMode = function(value) {\n\t    if (isDefined(value))\n\t      isStrictMode = value;\n\t    return isStrictMode;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$urlMatcherFactory#defaultSquashPolicy\n\t   * @methodOf ui.router.util.$urlMatcherFactory\n\t   *\n\t   * @description\n\t   * Sets the default behavior when generating or matching URLs with default parameter values.\n\t   *\n\t   * @param {string} value A string that defines the default parameter URL squashing behavior.\n\t   *    `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n\t   *    `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n\t   *             parameter is surrounded by slashes, squash (remove) one slash from the URL\n\t   *    any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n\t   *             the parameter value from the URL and replace it with this string.\n\t   */\n\t  this.defaultSquashPolicy = function(value) {\n\t    if (!isDefined(value)) return defaultSquashPolicy;\n\t    if (value !== true && value !== false && !isString(value))\n\t      throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n\t    defaultSquashPolicy = value;\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$urlMatcherFactory#compile\n\t   * @methodOf ui.router.util.$urlMatcherFactory\n\t   *\n\t   * @description\n\t   * Creates a {@link ui.router.util.type:UrlMatcher `UrlMatcher`} for the specified pattern.\n\t   *\n\t   * @param {string} pattern  The URL pattern.\n\t   * @param {Object} config  The config object hash.\n\t   * @returns {UrlMatcher}  The UrlMatcher.\n\t   */\n\t  this.compile = function (pattern, config) {\n\t    return new UrlMatcher(pattern, extend(getDefaultConfig(), config));\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$urlMatcherFactory#isMatcher\n\t   * @methodOf ui.router.util.$urlMatcherFactory\n\t   *\n\t   * @description\n\t   * Returns true if the specified object is a `UrlMatcher`, or false otherwise.\n\t   *\n\t   * @param {Object} object  The object to perform the type check against.\n\t   * @returns {Boolean}  Returns `true` if the object matches the `UrlMatcher` interface, by\n\t   *          implementing all the same methods.\n\t   */\n\t  this.isMatcher = function (o) {\n\t    if (!isObject(o)) return false;\n\t    var result = true;\n\t\n\t    forEach(UrlMatcher.prototype, function(val, name) {\n\t      if (isFunction(val)) {\n\t        result = result && (isDefined(o[name]) && isFunction(o[name]));\n\t      }\n\t    });\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$urlMatcherFactory#type\n\t   * @methodOf ui.router.util.$urlMatcherFactory\n\t   *\n\t   * @description\n\t   * Registers a custom {@link ui.router.util.type:Type `Type`} object that can be used to\n\t   * generate URLs with typed parameters.\n\t   *\n\t   * @param {string} name  The type name.\n\t   * @param {Object|Function} definition   The type definition. See\n\t   *        {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n\t   * @param {Object|Function} definitionFn (optional) A function that is injected before the app\n\t   *        runtime starts.  The result of this function is merged into the existing `definition`.\n\t   *        See {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n\t   *\n\t   * @returns {Object}  Returns `$urlMatcherFactoryProvider`.\n\t   *\n\t   * @example\n\t   * This is a simple example of a custom type that encodes and decodes items from an\n\t   * array, using the array index as the URL-encoded value:\n\t   *\n\t   * <pre>\n\t   * var list = ['John', 'Paul', 'George', 'Ringo'];\n\t   *\n\t   * $urlMatcherFactoryProvider.type('listItem', {\n\t   *   encode: function(item) {\n\t   *     // Represent the list item in the URL using its corresponding index\n\t   *     return list.indexOf(item);\n\t   *   },\n\t   *   decode: function(item) {\n\t   *     // Look up the list item by index\n\t   *     return list[parseInt(item, 10)];\n\t   *   },\n\t   *   is: function(item) {\n\t   *     // Ensure the item is valid by checking to see that it appears\n\t   *     // in the list\n\t   *     return list.indexOf(item) > -1;\n\t   *   }\n\t   * });\n\t   *\n\t   * $stateProvider.state('list', {\n\t   *   url: \"/list/{item:listItem}\",\n\t   *   controller: function($scope, $stateParams) {\n\t   *     console.log($stateParams.item);\n\t   *   }\n\t   * });\n\t   *\n\t   * // ...\n\t   *\n\t   * // Changes URL to '/list/3', logs \"Ringo\" to the console\n\t   * $state.go('list', { item: \"Ringo\" });\n\t   * </pre>\n\t   *\n\t   * This is a more complex example of a type that relies on dependency injection to\n\t   * interact with services, and uses the parameter name from the URL to infer how to\n\t   * handle encoding and decoding parameter values:\n\t   *\n\t   * <pre>\n\t   * // Defines a custom type that gets a value from a service,\n\t   * // where each service gets different types of values from\n\t   * // a backend API:\n\t   * $urlMatcherFactoryProvider.type('dbObject', {}, function(Users, Posts) {\n\t   *\n\t   *   // Matches up services to URL parameter names\n\t   *   var services = {\n\t   *     user: Users,\n\t   *     post: Posts\n\t   *   };\n\t   *\n\t   *   return {\n\t   *     encode: function(object) {\n\t   *       // Represent the object in the URL using its unique ID\n\t   *       return object.id;\n\t   *     },\n\t   *     decode: function(value, key) {\n\t   *       // Look up the object by ID, using the parameter\n\t   *       // name (key) to call the correct service\n\t   *       return services[key].findById(value);\n\t   *     },\n\t   *     is: function(object, key) {\n\t   *       // Check that object is a valid dbObject\n\t   *       return angular.isObject(object) && object.id && services[key];\n\t   *     }\n\t   *     equals: function(a, b) {\n\t   *       // Check the equality of decoded objects by comparing\n\t   *       // their unique IDs\n\t   *       return a.id === b.id;\n\t   *     }\n\t   *   };\n\t   * });\n\t   *\n\t   * // In a config() block, you can then attach URLs with\n\t   * // type-annotated parameters:\n\t   * $stateProvider.state('users', {\n\t   *   url: \"/users\",\n\t   *   // ...\n\t   * }).state('users.item', {\n\t   *   url: \"/{user:dbObject}\",\n\t   *   controller: function($scope, $stateParams) {\n\t   *     // $stateParams.user will now be an object returned from\n\t   *     // the Users service\n\t   *   },\n\t   *   // ...\n\t   * });\n\t   * </pre>\n\t   */\n\t  this.type = function (name, definition, definitionFn) {\n\t    if (!isDefined(definition)) return $types[name];\n\t    if ($types.hasOwnProperty(name)) throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n\t\n\t    $types[name] = new Type(extend({ name: name }, definition));\n\t    if (definitionFn) {\n\t      typeQueue.push({ name: name, def: definitionFn });\n\t      if (!enqueue) flushTypeQueue();\n\t    }\n\t    return this;\n\t  };\n\t\n\t  // `flushTypeQueue()` waits until `$urlMatcherFactory` is injected before invoking the queued `definitionFn`s\n\t  function flushTypeQueue() {\n\t    while(typeQueue.length) {\n\t      var type = typeQueue.shift();\n\t      if (type.pattern) throw new Error(\"You cannot override a type's .pattern at runtime.\");\n\t      angular.extend($types[type.name], injector.invoke(type.def));\n\t    }\n\t  }\n\t\n\t  // Register default types. Store them in the prototype of $types.\n\t  forEach(defaultTypes, function(type, name) { $types[name] = new Type(extend({name: name}, type)); });\n\t  $types = inherit($types, {});\n\t\n\t  /* No need to document $get, since it returns this */\n\t  this.$get = ['$injector', function ($injector) {\n\t    injector = $injector;\n\t    enqueue = false;\n\t    flushTypeQueue();\n\t\n\t    forEach(defaultTypes, function(type, name) {\n\t      if (!$types[name]) $types[name] = new Type(type);\n\t    });\n\t    return this;\n\t  }];\n\t\n\t  this.Param = function Param(id, type, config, location) {\n\t    var self = this;\n\t    config = unwrapShorthand(config);\n\t    type = getType(config, type, location);\n\t    var arrayMode = getArrayMode();\n\t    type = arrayMode ? type.$asArray(arrayMode, location === \"search\") : type;\n\t    if (type.name === \"string\" && !arrayMode && location === \"path\" && config.value === undefined)\n\t      config.value = \"\"; // for 0.2.x; in 0.3.0+ do not automatically default to \"\"\n\t    var isOptional = config.value !== undefined;\n\t    var squash = getSquashPolicy(config, isOptional);\n\t    var replace = getReplace(config, arrayMode, isOptional, squash);\n\t\n\t    function unwrapShorthand(config) {\n\t      var keys = isObject(config) ? objectKeys(config) : [];\n\t      var isShorthand = indexOf(keys, \"value\") === -1 && indexOf(keys, \"type\") === -1 &&\n\t                        indexOf(keys, \"squash\") === -1 && indexOf(keys, \"array\") === -1;\n\t      if (isShorthand) config = { value: config };\n\t      config.$$fn = isInjectable(config.value) ? config.value : function () { return config.value; };\n\t      return config;\n\t    }\n\t\n\t    function getType(config, urlType, location) {\n\t      if (config.type && urlType) throw new Error(\"Param '\"+id+\"' has two type configurations.\");\n\t      if (urlType) return urlType;\n\t      if (!config.type) return (location === \"config\" ? $types.any : $types.string);\n\t\n\t      if (angular.isString(config.type))\n\t        return $types[config.type];\n\t      if (config.type instanceof Type)\n\t        return config.type;\n\t      return new Type(config.type);\n\t    }\n\t\n\t    // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n\t    function getArrayMode() {\n\t      var arrayDefaults = { array: (location === \"search\" ? \"auto\" : false) };\n\t      var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n\t      return extend(arrayDefaults, arrayParamNomenclature, config).array;\n\t    }\n\t\n\t    /**\n\t     * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n\t     */\n\t    function getSquashPolicy(config, isOptional) {\n\t      var squash = config.squash;\n\t      if (!isOptional || squash === false) return false;\n\t      if (!isDefined(squash) || squash == null) return defaultSquashPolicy;\n\t      if (squash === true || isString(squash)) return squash;\n\t      throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n\t    }\n\t\n\t    function getReplace(config, arrayMode, isOptional, squash) {\n\t      var replace, configuredKeys, defaultPolicy = [\n\t        { from: \"\",   to: (isOptional || arrayMode ? undefined : \"\") },\n\t        { from: null, to: (isOptional || arrayMode ? undefined : \"\") }\n\t      ];\n\t      replace = isArray(config.replace) ? config.replace : [];\n\t      if (isString(squash))\n\t        replace.push({ from: squash, to: undefined });\n\t      configuredKeys = map(replace, function(item) { return item.from; } );\n\t      return filter(defaultPolicy, function(item) { return indexOf(configuredKeys, item.from) === -1; }).concat(replace);\n\t    }\n\t\n\t    /**\n\t     * [Internal] Get the default value of a parameter, which may be an injectable function.\n\t     */\n\t    function $$getDefaultValue() {\n\t      if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n\t      var defaultValue = injector.invoke(config.$$fn);\n\t      if (defaultValue !== null && defaultValue !== undefined && !self.type.is(defaultValue))\n\t        throw new Error(\"Default value (\" + defaultValue + \") for parameter '\" + self.id + \"' is not an instance of Type (\" + self.type.name + \")\");\n\t      return defaultValue;\n\t    }\n\t\n\t    /**\n\t     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n\t     * default value, which may be the result of an injectable function.\n\t     */\n\t    function $value(value) {\n\t      function hasReplaceVal(val) { return function(obj) { return obj.from === val; }; }\n\t      function $replace(value) {\n\t        var replacement = map(filter(self.replace, hasReplaceVal(value)), function(obj) { return obj.to; });\n\t        return replacement.length ? replacement[0] : value;\n\t      }\n\t      value = $replace(value);\n\t      return !isDefined(value) ? $$getDefaultValue() : self.type.$normalize(value);\n\t    }\n\t\n\t    function toString() { return \"{Param:\" + id + \" \" + type + \" squash: '\" + squash + \"' optional: \" + isOptional + \"}\"; }\n\t\n\t    extend(this, {\n\t      id: id,\n\t      type: type,\n\t      location: location,\n\t      array: arrayMode,\n\t      squash: squash,\n\t      replace: replace,\n\t      isOptional: isOptional,\n\t      value: $value,\n\t      dynamic: undefined,\n\t      config: config,\n\t      toString: toString\n\t    });\n\t  };\n\t\n\t  function ParamSet(params) {\n\t    extend(this, params || {});\n\t  }\n\t\n\t  ParamSet.prototype = {\n\t    $$new: function() {\n\t      return inherit(this, extend(new ParamSet(), { $$parent: this}));\n\t    },\n\t    $$keys: function () {\n\t      var keys = [], chain = [], parent = this,\n\t        ignore = objectKeys(ParamSet.prototype);\n\t      while (parent) { chain.push(parent); parent = parent.$$parent; }\n\t      chain.reverse();\n\t      forEach(chain, function(paramset) {\n\t        forEach(objectKeys(paramset), function(key) {\n\t            if (indexOf(keys, key) === -1 && indexOf(ignore, key) === -1) keys.push(key);\n\t        });\n\t      });\n\t      return keys;\n\t    },\n\t    $$values: function(paramValues) {\n\t      var values = {}, self = this;\n\t      forEach(self.$$keys(), function(key) {\n\t        values[key] = self[key].value(paramValues && paramValues[key]);\n\t      });\n\t      return values;\n\t    },\n\t    $$equals: function(paramValues1, paramValues2) {\n\t      var equal = true, self = this;\n\t      forEach(self.$$keys(), function(key) {\n\t        var left = paramValues1 && paramValues1[key], right = paramValues2 && paramValues2[key];\n\t        if (!self[key].type.equals(left, right)) equal = false;\n\t      });\n\t      return equal;\n\t    },\n\t    $$validates: function $$validate(paramValues) {\n\t      var keys = this.$$keys(), i, param, rawVal, normalized, encoded;\n\t      for (i = 0; i < keys.length; i++) {\n\t        param = this[keys[i]];\n\t        rawVal = paramValues[keys[i]];\n\t        if ((rawVal === undefined || rawVal === null) && param.isOptional)\n\t          break; // There was no parameter value, but the param is optional\n\t        normalized = param.type.$normalize(rawVal);\n\t        if (!param.type.is(normalized))\n\t          return false; // The value was not of the correct Type, and could not be decoded to the correct Type\n\t        encoded = param.type.encode(normalized);\n\t        if (angular.isString(encoded) && !param.type.pattern.exec(encoded))\n\t          return false; // The value was of the correct type, but when encoded, did not match the Type's regexp\n\t      }\n\t      return true;\n\t    },\n\t    $$parent: undefined\n\t  };\n\t\n\t  this.ParamSet = ParamSet;\n\t}\n\t\n\t// Register as a provider so it's available to other providers\n\tangular.module('ui.router.util').provider('$urlMatcherFactory', $UrlMatcherFactory);\n\tangular.module('ui.router.util').run(['$urlMatcherFactory', function($urlMatcherFactory) { }]);\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.router.$urlRouterProvider\n\t *\n\t * @requires ui.router.util.$urlMatcherFactoryProvider\n\t * @requires $locationProvider\n\t *\n\t * @description\n\t * `$urlRouterProvider` has the responsibility of watching `$location`. \n\t * When `$location` changes it runs through a list of rules one by one until a \n\t * match is found. `$urlRouterProvider` is used behind the scenes anytime you specify \n\t * a url in a state configuration. All urls are compiled into a UrlMatcher object.\n\t *\n\t * There are several methods on `$urlRouterProvider` that make it useful to use directly\n\t * in your module config.\n\t */\n\t$UrlRouterProvider.$inject = ['$locationProvider', '$urlMatcherFactoryProvider'];\n\tfunction $UrlRouterProvider(   $locationProvider,   $urlMatcherFactory) {\n\t  var rules = [], otherwise = null, interceptDeferred = false, listener;\n\t\n\t  // Returns a string that is a prefix of all strings matching the RegExp\n\t  function regExpPrefix(re) {\n\t    var prefix = /^\\^((?:\\\\[^a-zA-Z0-9]|[^\\\\\\[\\]\\^$*+?.()|{}]+)*)/.exec(re.source);\n\t    return (prefix != null) ? prefix[1].replace(/\\\\(.)/g, \"$1\") : '';\n\t  }\n\t\n\t  // Interpolates matched values into a String.replace()-style pattern\n\t  function interpolate(pattern, match) {\n\t    return pattern.replace(/\\$(\\$|\\d{1,2})/, function (m, what) {\n\t      return match[what === '$' ? 0 : Number(what)];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.router.$urlRouterProvider#rule\n\t   * @methodOf ui.router.router.$urlRouterProvider\n\t   *\n\t   * @description\n\t   * Defines rules that are used by `$urlRouterProvider` to find matches for\n\t   * specific URLs.\n\t   *\n\t   * @example\n\t   * <pre>\n\t   * var app = angular.module('app', ['ui.router.router']);\n\t   *\n\t   * app.config(function ($urlRouterProvider) {\n\t   *   // Here's an example of how you might allow case insensitive urls\n\t   *   $urlRouterProvider.rule(function ($injector, $location) {\n\t   *     var path = $location.path(),\n\t   *         normalized = path.toLowerCase();\n\t   *\n\t   *     if (path !== normalized) {\n\t   *       return normalized;\n\t   *     }\n\t   *   });\n\t   * });\n\t   * </pre>\n\t   *\n\t   * @param {function} rule Handler function that takes `$injector` and `$location`\n\t   * services as arguments. You can use them to return a valid path as a string.\n\t   *\n\t   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n\t   */\n\t  this.rule = function (rule) {\n\t    if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n\t    rules.push(rule);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc object\n\t   * @name ui.router.router.$urlRouterProvider#otherwise\n\t   * @methodOf ui.router.router.$urlRouterProvider\n\t   *\n\t   * @description\n\t   * Defines a path that is used when an invalid route is requested.\n\t   *\n\t   * @example\n\t   * <pre>\n\t   * var app = angular.module('app', ['ui.router.router']);\n\t   *\n\t   * app.config(function ($urlRouterProvider) {\n\t   *   // if the path doesn't match any of the urls you configured\n\t   *   // otherwise will take care of routing the user to the\n\t   *   // specified url\n\t   *   $urlRouterProvider.otherwise('/index');\n\t   *\n\t   *   // Example of using function rule as param\n\t   *   $urlRouterProvider.otherwise(function ($injector, $location) {\n\t   *     return '/a/valid/url';\n\t   *   });\n\t   * });\n\t   * </pre>\n\t   *\n\t   * @param {string|function} rule The url path you want to redirect to or a function \n\t   * rule that returns the url path. The function version is passed two params: \n\t   * `$injector` and `$location` services, and must return a url string.\n\t   *\n\t   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n\t   */\n\t  this.otherwise = function (rule) {\n\t    if (isString(rule)) {\n\t      var redirect = rule;\n\t      rule = function () { return redirect; };\n\t    }\n\t    else if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n\t    otherwise = rule;\n\t    return this;\n\t  };\n\t\n\t\n\t  function handleIfMatch($injector, handler, match) {\n\t    if (!match) return false;\n\t    var result = $injector.invoke(handler, handler, { $match: match });\n\t    return isDefined(result) ? result : true;\n\t  }\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.router.$urlRouterProvider#when\n\t   * @methodOf ui.router.router.$urlRouterProvider\n\t   *\n\t   * @description\n\t   * Registers a handler for a given url matching. \n\t   * \n\t   * If the handler is a string, it is\n\t   * treated as a redirect, and is interpolated according to the syntax of match\n\t   * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n\t   *\n\t   * If the handler is a function, it is injectable. It gets invoked if `$location`\n\t   * matches. You have the option of inject the match object as `$match`.\n\t   *\n\t   * The handler can return\n\t   *\n\t   * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n\t   *   will continue trying to find another one that matches.\n\t   * - **string** which is treated as a redirect and passed to `$location.url()`\n\t   * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n\t   *\n\t   * @example\n\t   * <pre>\n\t   * var app = angular.module('app', ['ui.router.router']);\n\t   *\n\t   * app.config(function ($urlRouterProvider) {\n\t   *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n\t   *     if ($state.$current.navigable !== state ||\n\t   *         !equalForKeys($match, $stateParams) {\n\t   *      $state.transitionTo(state, $match, false);\n\t   *     }\n\t   *   });\n\t   * });\n\t   * </pre>\n\t   *\n\t   * @param {string|object} what The incoming path that you want to redirect.\n\t   * @param {string|function} handler The path you want to redirect your user to.\n\t   */\n\t  this.when = function (what, handler) {\n\t    var redirect, handlerIsString = isString(handler);\n\t    if (isString(what)) what = $urlMatcherFactory.compile(what);\n\t\n\t    if (!handlerIsString && !isFunction(handler) && !isArray(handler))\n\t      throw new Error(\"invalid 'handler' in when()\");\n\t\n\t    var strategies = {\n\t      matcher: function (what, handler) {\n\t        if (handlerIsString) {\n\t          redirect = $urlMatcherFactory.compile(handler);\n\t          handler = ['$match', function ($match) { return redirect.format($match); }];\n\t        }\n\t        return extend(function ($injector, $location) {\n\t          return handleIfMatch($injector, handler, what.exec($location.path(), $location.search()));\n\t        }, {\n\t          prefix: isString(what.prefix) ? what.prefix : ''\n\t        });\n\t      },\n\t      regex: function (what, handler) {\n\t        if (what.global || what.sticky) throw new Error(\"when() RegExp must not be global or sticky\");\n\t\n\t        if (handlerIsString) {\n\t          redirect = handler;\n\t          handler = ['$match', function ($match) { return interpolate(redirect, $match); }];\n\t        }\n\t        return extend(function ($injector, $location) {\n\t          return handleIfMatch($injector, handler, what.exec($location.path()));\n\t        }, {\n\t          prefix: regExpPrefix(what)\n\t        });\n\t      }\n\t    };\n\t\n\t    var check = { matcher: $urlMatcherFactory.isMatcher(what), regex: what instanceof RegExp };\n\t\n\t    for (var n in check) {\n\t      if (check[n]) return this.rule(strategies[n](what, handler));\n\t    }\n\t\n\t    throw new Error(\"invalid 'what' in when()\");\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.router.$urlRouterProvider#deferIntercept\n\t   * @methodOf ui.router.router.$urlRouterProvider\n\t   *\n\t   * @description\n\t   * Disables (or enables) deferring location change interception.\n\t   *\n\t   * If you wish to customize the behavior of syncing the URL (for example, if you wish to\n\t   * defer a transition but maintain the current URL), call this method at configuration time.\n\t   * Then, at run time, call `$urlRouter.listen()` after you have configured your own\n\t   * `$locationChangeSuccess` event handler.\n\t   *\n\t   * @example\n\t   * <pre>\n\t   * var app = angular.module('app', ['ui.router.router']);\n\t   *\n\t   * app.config(function ($urlRouterProvider) {\n\t   *\n\t   *   // Prevent $urlRouter from automatically intercepting URL changes;\n\t   *   // this allows you to configure custom behavior in between\n\t   *   // location changes and route synchronization:\n\t   *   $urlRouterProvider.deferIntercept();\n\t   *\n\t   * }).run(function ($rootScope, $urlRouter, UserService) {\n\t   *\n\t   *   $rootScope.$on('$locationChangeSuccess', function(e) {\n\t   *     // UserService is an example service for managing user state\n\t   *     if (UserService.isLoggedIn()) return;\n\t   *\n\t   *     // Prevent $urlRouter's default handler from firing\n\t   *     e.preventDefault();\n\t   *\n\t   *     UserService.handleLogin().then(function() {\n\t   *       // Once the user has logged in, sync the current URL\n\t   *       // to the router:\n\t   *       $urlRouter.sync();\n\t   *     });\n\t   *   });\n\t   *\n\t   *   // Configures $urlRouter's listener *after* your custom listener\n\t   *   $urlRouter.listen();\n\t   * });\n\t   * </pre>\n\t   *\n\t   * @param {boolean} defer Indicates whether to defer location change interception. Passing\n\t            no parameter is equivalent to `true`.\n\t   */\n\t  this.deferIntercept = function (defer) {\n\t    if (defer === undefined) defer = true;\n\t    interceptDeferred = defer;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc object\n\t   * @name ui.router.router.$urlRouter\n\t   *\n\t   * @requires $location\n\t   * @requires $rootScope\n\t   * @requires $injector\n\t   * @requires $browser\n\t   *\n\t   * @description\n\t   *\n\t   */\n\t  this.$get = $get;\n\t  $get.$inject = ['$location', '$rootScope', '$injector', '$browser', '$sniffer'];\n\t  function $get(   $location,   $rootScope,   $injector,   $browser,   $sniffer) {\n\t\n\t    var baseHref = $browser.baseHref(), location = $location.url(), lastPushedUrl;\n\t\n\t    function appendBasePath(url, isHtml5, absolute) {\n\t      if (baseHref === '/') return url;\n\t      if (isHtml5) return baseHref.slice(0, -1) + url;\n\t      if (absolute) return baseHref.slice(1) + url;\n\t      return url;\n\t    }\n\t\n\t    // TODO: Optimize groups of rules with non-empty prefix into some sort of decision tree\n\t    function update(evt) {\n\t      if (evt && evt.defaultPrevented) return;\n\t      var ignoreUpdate = lastPushedUrl && $location.url() === lastPushedUrl;\n\t      lastPushedUrl = undefined;\n\t      // TODO: Re-implement this in 1.0 for https://github.com/angular-ui/ui-router/issues/1573\n\t      //if (ignoreUpdate) return true;\n\t\n\t      function check(rule) {\n\t        var handled = rule($injector, $location);\n\t\n\t        if (!handled) return false;\n\t        if (isString(handled)) $location.replace().url(handled);\n\t        return true;\n\t      }\n\t      var n = rules.length, i;\n\t\n\t      for (i = 0; i < n; i++) {\n\t        if (check(rules[i])) return;\n\t      }\n\t      // always check otherwise last to allow dynamic updates to the set of rules\n\t      if (otherwise) check(otherwise);\n\t    }\n\t\n\t    function listen() {\n\t      listener = listener || $rootScope.$on('$locationChangeSuccess', update);\n\t      return listener;\n\t    }\n\t\n\t    if (!interceptDeferred) listen();\n\t\n\t    return {\n\t      /**\n\t       * @ngdoc function\n\t       * @name ui.router.router.$urlRouter#sync\n\t       * @methodOf ui.router.router.$urlRouter\n\t       *\n\t       * @description\n\t       * Triggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.\n\t       * This method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,\n\t       * perform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed\n\t       * with the transition by calling `$urlRouter.sync()`.\n\t       *\n\t       * @example\n\t       * <pre>\n\t       * angular.module('app', ['ui.router'])\n\t       *   .run(function($rootScope, $urlRouter) {\n\t       *     $rootScope.$on('$locationChangeSuccess', function(evt) {\n\t       *       // Halt state change from even starting\n\t       *       evt.preventDefault();\n\t       *       // Perform custom logic\n\t       *       var meetsRequirement = ...\n\t       *       // Continue with the update and state transition if logic allows\n\t       *       if (meetsRequirement) $urlRouter.sync();\n\t       *     });\n\t       * });\n\t       * </pre>\n\t       */\n\t      sync: function() {\n\t        update();\n\t      },\n\t\n\t      listen: function() {\n\t        return listen();\n\t      },\n\t\n\t      update: function(read) {\n\t        if (read) {\n\t          location = $location.url();\n\t          return;\n\t        }\n\t        if ($location.url() === location) return;\n\t\n\t        $location.url(location);\n\t        $location.replace();\n\t      },\n\t\n\t      push: function(urlMatcher, params, options) {\n\t         var url = urlMatcher.format(params || {});\n\t\n\t        // Handle the special hash param, if needed\n\t        if (url !== null && params && params['#']) {\n\t            url += '#' + params['#'];\n\t        }\n\t\n\t        $location.url(url);\n\t        lastPushedUrl = options && options.$$avoidResync ? $location.url() : undefined;\n\t        if (options && options.replace) $location.replace();\n\t      },\n\t\n\t      /**\n\t       * @ngdoc function\n\t       * @name ui.router.router.$urlRouter#href\n\t       * @methodOf ui.router.router.$urlRouter\n\t       *\n\t       * @description\n\t       * A URL generation method that returns the compiled URL for a given\n\t       * {@link ui.router.util.type:UrlMatcher `UrlMatcher`}, populated with the provided parameters.\n\t       *\n\t       * @example\n\t       * <pre>\n\t       * $bob = $urlRouter.href(new UrlMatcher(\"/about/:person\"), {\n\t       *   person: \"bob\"\n\t       * });\n\t       * // $bob == \"/about/bob\";\n\t       * </pre>\n\t       *\n\t       * @param {UrlMatcher} urlMatcher The `UrlMatcher` object which is used as the template of the URL to generate.\n\t       * @param {object=} params An object of parameter values to fill the matcher's required parameters.\n\t       * @param {object=} options Options object. The options are:\n\t       *\n\t       * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n\t       *\n\t       * @returns {string} Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n\t       */\n\t      href: function(urlMatcher, params, options) {\n\t        if (!urlMatcher.validates(params)) return null;\n\t\n\t        var isHtml5 = $locationProvider.html5Mode();\n\t        if (angular.isObject(isHtml5)) {\n\t          isHtml5 = isHtml5.enabled;\n\t        }\n\t\n\t        isHtml5 = isHtml5 && $sniffer.history;\n\t        \n\t        var url = urlMatcher.format(params);\n\t        options = options || {};\n\t\n\t        if (!isHtml5 && url !== null) {\n\t          url = \"#\" + $locationProvider.hashPrefix() + url;\n\t        }\n\t\n\t        // Handle special hash param, if needed\n\t        if (url !== null && params && params['#']) {\n\t          url += '#' + params['#'];\n\t        }\n\t\n\t        url = appendBasePath(url, isHtml5, options.absolute);\n\t\n\t        if (!options.absolute || !url) {\n\t          return url;\n\t        }\n\t\n\t        var slash = (!isHtml5 && url ? '/' : ''), port = $location.port();\n\t        port = (port === 80 || port === 443 ? '' : ':' + port);\n\t\n\t        return [$location.protocol(), '://', $location.host(), port, slash, url].join('');\n\t      }\n\t    };\n\t  }\n\t}\n\t\n\tangular.module('ui.router.router').provider('$urlRouter', $UrlRouterProvider);\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.state.$stateProvider\n\t *\n\t * @requires ui.router.router.$urlRouterProvider\n\t * @requires ui.router.util.$urlMatcherFactoryProvider\n\t *\n\t * @description\n\t * The new `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n\t * on state.\n\t *\n\t * A state corresponds to a \"place\" in the application in terms of the overall UI and\n\t * navigation. A state describes (via the controller / template / view properties) what\n\t * the UI looks like and does at that place.\n\t *\n\t * States often have things in common, and the primary way of factoring out these\n\t * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n\t * nested states.\n\t *\n\t * The `$stateProvider` provides interfaces to declare these states for your app.\n\t */\n\t$StateProvider.$inject = ['$urlRouterProvider', '$urlMatcherFactoryProvider'];\n\tfunction $StateProvider(   $urlRouterProvider,   $urlMatcherFactory) {\n\t\n\t  var root, states = {}, $state, queue = {}, abstractKey = 'abstract';\n\t\n\t  // Builds state properties from definition passed to registerState()\n\t  var stateBuilder = {\n\t\n\t    // Derive parent state from a hierarchical name only if 'parent' is not explicitly defined.\n\t    // state.children = [];\n\t    // if (parent) parent.children.push(state);\n\t    parent: function(state) {\n\t      if (isDefined(state.parent) && state.parent) return findState(state.parent);\n\t      // regex matches any valid composite state name\n\t      // would match \"contact.list\" but not \"contacts\"\n\t      var compositeName = /^(.+)\\.[^.]+$/.exec(state.name);\n\t      return compositeName ? findState(compositeName[1]) : root;\n\t    },\n\t\n\t    // inherit 'data' from parent and override by own values (if any)\n\t    data: function(state) {\n\t      if (state.parent && state.parent.data) {\n\t        state.data = state.self.data = inherit(state.parent.data, state.data);\n\t      }\n\t      return state.data;\n\t    },\n\t\n\t    // Build a URLMatcher if necessary, either via a relative or absolute URL\n\t    url: function(state) {\n\t      var url = state.url, config = { params: state.params || {} };\n\t\n\t      if (isString(url)) {\n\t        if (url.charAt(0) == '^') return $urlMatcherFactory.compile(url.substring(1), config);\n\t        return (state.parent.navigable || root).url.concat(url, config);\n\t      }\n\t\n\t      if (!url || $urlMatcherFactory.isMatcher(url)) return url;\n\t      throw new Error(\"Invalid url '\" + url + \"' in state '\" + state + \"'\");\n\t    },\n\t\n\t    // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n\t    navigable: function(state) {\n\t      return state.url ? state : (state.parent ? state.parent.navigable : null);\n\t    },\n\t\n\t    // Own parameters for this state. state.url.params is already built at this point. Create and add non-url params\n\t    ownParams: function(state) {\n\t      var params = state.url && state.url.params || new $$UMFP.ParamSet();\n\t      forEach(state.params || {}, function(config, id) {\n\t        if (!params[id]) params[id] = new $$UMFP.Param(id, null, config, \"config\");\n\t      });\n\t      return params;\n\t    },\n\t\n\t    // Derive parameters for this state and ensure they're a super-set of parent's parameters\n\t    params: function(state) {\n\t      var ownParams = pick(state.ownParams, state.ownParams.$$keys());\n\t      return state.parent && state.parent.params ? extend(state.parent.params.$$new(), ownParams) : new $$UMFP.ParamSet();\n\t    },\n\t\n\t    // If there is no explicit multi-view configuration, make one up so we don't have\n\t    // to handle both cases in the view directive later. Note that having an explicit\n\t    // 'views' property will mean the default unnamed view properties are ignored. This\n\t    // is also a good time to resolve view names to absolute names, so everything is a\n\t    // straight lookup at link time.\n\t    views: function(state) {\n\t      var views = {};\n\t\n\t      forEach(isDefined(state.views) ? state.views : { '': state }, function (view, name) {\n\t        if (name.indexOf('@') < 0) name += '@' + state.parent.name;\n\t        view.resolveAs = view.resolveAs || state.resolveAs || '$resolve';\n\t        views[name] = view;\n\t      });\n\t      return views;\n\t    },\n\t\n\t    // Keep a full path from the root down to this state as this is needed for state activation.\n\t    path: function(state) {\n\t      return state.parent ? state.parent.path.concat(state) : []; // exclude root from path\n\t    },\n\t\n\t    // Speed up $state.contains() as it's used a lot\n\t    includes: function(state) {\n\t      var includes = state.parent ? extend({}, state.parent.includes) : {};\n\t      includes[state.name] = true;\n\t      return includes;\n\t    },\n\t\n\t    $delegates: {}\n\t  };\n\t\n\t  function isRelative(stateName) {\n\t    return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\n\t  }\n\t\n\t  function findState(stateOrName, base) {\n\t    if (!stateOrName) return undefined;\n\t\n\t    var isStr = isString(stateOrName),\n\t        name  = isStr ? stateOrName : stateOrName.name,\n\t        path  = isRelative(name);\n\t\n\t    if (path) {\n\t      if (!base) throw new Error(\"No reference point given for path '\"  + name + \"'\");\n\t      base = findState(base);\n\t      \n\t      var rel = name.split(\".\"), i = 0, pathLength = rel.length, current = base;\n\t\n\t      for (; i < pathLength; i++) {\n\t        if (rel[i] === \"\" && i === 0) {\n\t          current = base;\n\t          continue;\n\t        }\n\t        if (rel[i] === \"^\") {\n\t          if (!current.parent) throw new Error(\"Path '\" + name + \"' not valid for state '\" + base.name + \"'\");\n\t          current = current.parent;\n\t          continue;\n\t        }\n\t        break;\n\t      }\n\t      rel = rel.slice(i).join(\".\");\n\t      name = current.name + (current.name && rel ? \".\" : \"\") + rel;\n\t    }\n\t    var state = states[name];\n\t\n\t    if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n\t      return state;\n\t    }\n\t    return undefined;\n\t  }\n\t\n\t  function queueState(parentName, state) {\n\t    if (!queue[parentName]) {\n\t      queue[parentName] = [];\n\t    }\n\t    queue[parentName].push(state);\n\t  }\n\t\n\t  function flushQueuedChildren(parentName) {\n\t    var queued = queue[parentName] || [];\n\t    while(queued.length) {\n\t      registerState(queued.shift());\n\t    }\n\t  }\n\t\n\t  function registerState(state) {\n\t    // Wrap a new object around the state so we can store our private details easily.\n\t    state = inherit(state, {\n\t      self: state,\n\t      resolve: state.resolve || {},\n\t      toString: function() { return this.name; }\n\t    });\n\t\n\t    var name = state.name;\n\t    if (!isString(name) || name.indexOf('@') >= 0) throw new Error(\"State must have a valid name\");\n\t    if (states.hasOwnProperty(name)) throw new Error(\"State '\" + name + \"' is already defined\");\n\t\n\t    // Get parent name\n\t    var parentName = (name.indexOf('.') !== -1) ? name.substring(0, name.lastIndexOf('.'))\n\t        : (isString(state.parent)) ? state.parent\n\t        : (isObject(state.parent) && isString(state.parent.name)) ? state.parent.name\n\t        : '';\n\t\n\t    // If parent is not registered yet, add state to queue and register later\n\t    if (parentName && !states[parentName]) {\n\t      return queueState(parentName, state.self);\n\t    }\n\t\n\t    for (var key in stateBuilder) {\n\t      if (isFunction(stateBuilder[key])) state[key] = stateBuilder[key](state, stateBuilder.$delegates[key]);\n\t    }\n\t    states[name] = state;\n\t\n\t    // Register the state in the global state list and with $urlRouter if necessary.\n\t    if (!state[abstractKey] && state.url) {\n\t      $urlRouterProvider.when(state.url, ['$match', '$stateParams', function ($match, $stateParams) {\n\t        if ($state.$current.navigable != state || !equalForKeys($match, $stateParams)) {\n\t          $state.transitionTo(state, $match, { inherit: true, location: false });\n\t        }\n\t      }]);\n\t    }\n\t\n\t    // Register any queued children\n\t    flushQueuedChildren(name);\n\t\n\t    return state;\n\t  }\n\t\n\t  // Checks text to see if it looks like a glob.\n\t  function isGlob (text) {\n\t    return text.indexOf('*') > -1;\n\t  }\n\t\n\t  // Returns true if glob matches current $state name.\n\t  function doesStateMatchGlob (glob) {\n\t    var globSegments = glob.split('.'),\n\t        segments = $state.$current.name.split('.');\n\t\n\t    //match single stars\n\t    for (var i = 0, l = globSegments.length; i < l; i++) {\n\t      if (globSegments[i] === '*') {\n\t        segments[i] = '*';\n\t      }\n\t    }\n\t\n\t    //match greedy starts\n\t    if (globSegments[0] === '**') {\n\t       segments = segments.slice(indexOf(segments, globSegments[1]));\n\t       segments.unshift('**');\n\t    }\n\t    //match greedy ends\n\t    if (globSegments[globSegments.length - 1] === '**') {\n\t       segments.splice(indexOf(segments, globSegments[globSegments.length - 2]) + 1, Number.MAX_VALUE);\n\t       segments.push('**');\n\t    }\n\t\n\t    if (globSegments.length != segments.length) {\n\t      return false;\n\t    }\n\t\n\t    return segments.join('') === globSegments.join('');\n\t  }\n\t\n\t\n\t  // Implicit root state that is always active\n\t  root = registerState({\n\t    name: '',\n\t    url: '^',\n\t    views: null,\n\t    'abstract': true\n\t  });\n\t  root.navigable = null;\n\t\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.state.$stateProvider#decorator\n\t   * @methodOf ui.router.state.$stateProvider\n\t   *\n\t   * @description\n\t   * Allows you to extend (carefully) or override (at your own peril) the \n\t   * `stateBuilder` object used internally by `$stateProvider`. This can be used \n\t   * to add custom functionality to ui-router, for example inferring templateUrl \n\t   * based on the state name.\n\t   *\n\t   * When passing only a name, it returns the current (original or decorated) builder\n\t   * function that matches `name`.\n\t   *\n\t   * The builder functions that can be decorated are listed below. Though not all\n\t   * necessarily have a good use case for decoration, that is up to you to decide.\n\t   *\n\t   * In addition, users can attach custom decorators, which will generate new \n\t   * properties within the state's internal definition. There is currently no clear \n\t   * use-case for this beyond accessing internal states (i.e. $state.$current), \n\t   * however, expect this to become increasingly relevant as we introduce additional \n\t   * meta-programming features.\n\t   *\n\t   * **Warning**: Decorators should not be interdependent because the order of \n\t   * execution of the builder functions in non-deterministic. Builder functions \n\t   * should only be dependent on the state definition object and super function.\n\t   *\n\t   *\n\t   * Existing builder functions and current return values:\n\t   *\n\t   * - **parent** `{object}` - returns the parent state object.\n\t   * - **data** `{object}` - returns state data, including any inherited data that is not\n\t   *   overridden by own values (if any).\n\t   * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n\t   *   or `null`.\n\t   * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is \n\t   *   navigable).\n\t   * - **params** `{object}` - returns an array of state params that are ensured to \n\t   *   be a super-set of parent's params.\n\t   * - **views** `{object}` - returns a views object where each key is an absolute view \n\t   *   name (i.e. \"viewName@stateName\") and each value is the config object \n\t   *   (template, controller) for the view. Even when you don't use the views object \n\t   *   explicitly on a state config, one is still created for you internally.\n\t   *   So by decorating this builder function you have access to decorating template \n\t   *   and controller properties.\n\t   * - **ownParams** `{object}` - returns an array of params that belong to the state, \n\t   *   not including any params defined by ancestor states.\n\t   * - **path** `{string}` - returns the full path from the root down to this state. \n\t   *   Needed for state activation.\n\t   * - **includes** `{object}` - returns an object that includes every state that \n\t   *   would pass a `$state.includes()` test.\n\t   *\n\t   * @example\n\t   * <pre>\n\t   * // Override the internal 'views' builder with a function that takes the state\n\t   * // definition, and a reference to the internal function being overridden:\n\t   * $stateProvider.decorator('views', function (state, parent) {\n\t   *   var result = {},\n\t   *       views = parent(state);\n\t   *\n\t   *   angular.forEach(views, function (config, name) {\n\t   *     var autoName = (state.name + '.' + name).replace('.', '/');\n\t   *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n\t   *     result[name] = config;\n\t   *   });\n\t   *   return result;\n\t   * });\n\t   *\n\t   * $stateProvider.state('home', {\n\t   *   views: {\n\t   *     'contact.list': { controller: 'ListController' },\n\t   *     'contact.item': { controller: 'ItemController' }\n\t   *   }\n\t   * });\n\t   *\n\t   * // ...\n\t   *\n\t   * $state.go('home');\n\t   * // Auto-populates list and item views with /partials/home/contact/list.html,\n\t   * // and /partials/home/contact/item.html, respectively.\n\t   * </pre>\n\t   *\n\t   * @param {string} name The name of the builder function to decorate. \n\t   * @param {object} func A function that is responsible for decorating the original \n\t   * builder function. The function receives two parameters:\n\t   *\n\t   *   - `{object}` - state - The state config object.\n\t   *   - `{object}` - super - The original builder function.\n\t   *\n\t   * @return {object} $stateProvider - $stateProvider instance\n\t   */\n\t  this.decorator = decorator;\n\t  function decorator(name, func) {\n\t    /*jshint validthis: true */\n\t    if (isString(name) && !isDefined(func)) {\n\t      return stateBuilder[name];\n\t    }\n\t    if (!isFunction(func) || !isString(name)) {\n\t      return this;\n\t    }\n\t    if (stateBuilder[name] && !stateBuilder.$delegates[name]) {\n\t      stateBuilder.$delegates[name] = stateBuilder[name];\n\t    }\n\t    stateBuilder[name] = func;\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.state.$stateProvider#state\n\t   * @methodOf ui.router.state.$stateProvider\n\t   *\n\t   * @description\n\t   * Registers a state configuration under a given state name. The stateConfig object\n\t   * has the following acceptable properties.\n\t   *\n\t   * @param {string} name A unique state name, e.g. \"home\", \"about\", \"contacts\".\n\t   * To create a parent/child state use a dot, e.g. \"about.sales\", \"home.newest\".\n\t   * @param {object} stateConfig State configuration object.\n\t   * @param {string|function=} stateConfig.template\n\t   * <a id='template'></a>\n\t   *   html template as a string or a function that returns\n\t   *   an html template as a string which should be used by the uiView directives. This property \n\t   *   takes precedence over templateUrl.\n\t   *   \n\t   *   If `template` is a function, it will be called with the following parameters:\n\t   *\n\t   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\n\t   *     applying the current state\n\t   *\n\t   * <pre>template:\n\t   *   \"<h1>inline template definition</h1>\" +\n\t   *   \"<div ui-view></div>\"</pre>\n\t   * <pre>template: function(params) {\n\t   *       return \"<h1>generated template</h1>\"; }</pre>\n\t   * </div>\n\t   *\n\t   * @param {string|function=} stateConfig.templateUrl\n\t   * <a id='templateUrl'></a>\n\t   *\n\t   *   path or function that returns a path to an html\n\t   *   template that should be used by uiView.\n\t   *   \n\t   *   If `templateUrl` is a function, it will be called with the following parameters:\n\t   *\n\t   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by \n\t   *     applying the current state\n\t   *\n\t   * <pre>templateUrl: \"home.html\"</pre>\n\t   * <pre>templateUrl: function(params) {\n\t   *     return myTemplates[params.pageId]; }</pre>\n\t   *\n\t   * @param {function=} stateConfig.templateProvider\n\t   * <a id='templateProvider'></a>\n\t   *    Provider function that returns HTML content string.\n\t   * <pre> templateProvider:\n\t   *       function(MyTemplateService, params) {\n\t   *         return MyTemplateService.getTemplate(params.pageId);\n\t   *       }</pre>\n\t   *\n\t   * @param {string|function=} stateConfig.controller\n\t   * <a id='controller'></a>\n\t   *\n\t   *  Controller fn that should be associated with newly\n\t   *   related scope or the name of a registered controller if passed as a string.\n\t   *   Optionally, the ControllerAs may be declared here.\n\t   * <pre>controller: \"MyRegisteredController\"</pre>\n\t   * <pre>controller:\n\t   *     \"MyRegisteredController as fooCtrl\"}</pre>\n\t   * <pre>controller: function($scope, MyService) {\n\t   *     $scope.data = MyService.getData(); }</pre>\n\t   *\n\t   * @param {function=} stateConfig.controllerProvider\n\t   * <a id='controllerProvider'></a>\n\t   *\n\t   * Injectable provider function that returns the actual controller or string.\n\t   * <pre>controllerProvider:\n\t   *   function(MyResolveData) {\n\t   *     if (MyResolveData.foo)\n\t   *       return \"FooCtrl\"\n\t   *     else if (MyResolveData.bar)\n\t   *       return \"BarCtrl\";\n\t   *     else return function($scope) {\n\t   *       $scope.baz = \"Qux\";\n\t   *     }\n\t   *   }</pre>\n\t   *\n\t   * @param {string=} stateConfig.controllerAs\n\t   * <a id='controllerAs'></a>\n\t   * \n\t   * A controller alias name. If present the controller will be\n\t   *   published to scope under the controllerAs name.\n\t   * <pre>controllerAs: \"myCtrl\"</pre>\n\t   *\n\t   * @param {string|object=} stateConfig.parent\n\t   * <a id='parent'></a>\n\t   * Optionally specifies the parent state of this state.\n\t   *\n\t   * <pre>parent: 'parentState'</pre>\n\t   * <pre>parent: parentState // JS variable</pre>\n\t   *\n\t   * @param {object=} stateConfig.resolve\n\t   * <a id='resolve'></a>\n\t   *\n\t   * An optional map&lt;string, function&gt; of dependencies which\n\t   *   should be injected into the controller. If any of these dependencies are promises, \n\t   *   the router will wait for them all to be resolved before the controller is instantiated.\n\t   *   If all the promises are resolved successfully, the $stateChangeSuccess event is fired\n\t   *   and the values of the resolved promises are injected into any controllers that reference them.\n\t   *   If any  of the promises are rejected the $stateChangeError event is fired.\n\t   *\n\t   *   The map object is:\n\t   *   \n\t   *   - key - {string}: name of dependency to be injected into controller\n\t   *   - factory - {string|function}: If string then it is alias for service. Otherwise if function, \n\t   *     it is injected and return value it treated as dependency. If result is a promise, it is \n\t   *     resolved before its value is injected into controller.\n\t   *\n\t   * <pre>resolve: {\n\t   *     myResolve1:\n\t   *       function($http, $stateParams) {\n\t   *         return $http.get(\"/api/foos/\"+stateParams.fooID);\n\t   *       }\n\t   *     }</pre>\n\t   *\n\t   * @param {string=} stateConfig.url\n\t   * <a id='url'></a>\n\t   *\n\t   *   A url fragment with optional parameters. When a state is navigated or\n\t   *   transitioned to, the `$stateParams` service will be populated with any \n\t   *   parameters that were passed.\n\t   *\n\t   *   (See {@link ui.router.util.type:UrlMatcher UrlMatcher} `UrlMatcher`} for\n\t   *   more details on acceptable patterns )\n\t   *\n\t   * examples:\n\t   * <pre>url: \"/home\"\n\t   * url: \"/users/:userid\"\n\t   * url: \"/books/{bookid:[a-zA-Z_-]}\"\n\t   * url: \"/books/{categoryid:int}\"\n\t   * url: \"/books/{publishername:string}/{categoryid:int}\"\n\t   * url: \"/messages?before&after\"\n\t   * url: \"/messages?{before:date}&{after:date}\"\n\t   * url: \"/messages/:mailboxid?{before:date}&{after:date}\"\n\t   * </pre>\n\t   *\n\t   * @param {object=} stateConfig.views\n\t   * <a id='views'></a>\n\t   * an optional map&lt;string, object&gt; which defined multiple views, or targets views\n\t   * manually/explicitly.\n\t   *\n\t   * Examples:\n\t   *\n\t   * Targets three named `ui-view`s in the parent state's template\n\t   * <pre>views: {\n\t   *     header: {\n\t   *       controller: \"headerCtrl\",\n\t   *       templateUrl: \"header.html\"\n\t   *     }, body: {\n\t   *       controller: \"bodyCtrl\",\n\t   *       templateUrl: \"body.html\"\n\t   *     }, footer: {\n\t   *       controller: \"footCtrl\",\n\t   *       templateUrl: \"footer.html\"\n\t   *     }\n\t   *   }</pre>\n\t   *\n\t   * Targets named `ui-view=\"header\"` from grandparent state 'top''s template, and named `ui-view=\"body\" from parent state's template.\n\t   * <pre>views: {\n\t   *     'header@top': {\n\t   *       controller: \"msgHeaderCtrl\",\n\t   *       templateUrl: \"msgHeader.html\"\n\t   *     }, 'body': {\n\t   *       controller: \"messagesCtrl\",\n\t   *       templateUrl: \"messages.html\"\n\t   *     }\n\t   *   }</pre>\n\t   *\n\t   * @param {boolean=} [stateConfig.abstract=false]\n\t   * <a id='abstract'></a>\n\t   * An abstract state will never be directly activated,\n\t   *   but can provide inherited properties to its common children states.\n\t   * <pre>abstract: true</pre>\n\t   *\n\t   * @param {function=} stateConfig.onEnter\n\t   * <a id='onEnter'></a>\n\t   *\n\t   * Callback function for when a state is entered. Good way\n\t   *   to trigger an action or dispatch an event, such as opening a dialog.\n\t   * If minifying your scripts, make sure to explicitly annotate this function,\n\t   * because it won't be automatically annotated by your build tools.\n\t   *\n\t   * <pre>onEnter: function(MyService, $stateParams) {\n\t   *     MyService.foo($stateParams.myParam);\n\t   * }</pre>\n\t   *\n\t   * @param {function=} stateConfig.onExit\n\t   * <a id='onExit'></a>\n\t   *\n\t   * Callback function for when a state is exited. Good way to\n\t   *   trigger an action or dispatch an event, such as opening a dialog.\n\t   * If minifying your scripts, make sure to explicitly annotate this function,\n\t   * because it won't be automatically annotated by your build tools.\n\t   *\n\t   * <pre>onExit: function(MyService, $stateParams) {\n\t   *     MyService.cleanup($stateParams.myParam);\n\t   * }</pre>\n\t   *\n\t   * @param {boolean=} [stateConfig.reloadOnSearch=true]\n\t   * <a id='reloadOnSearch'></a>\n\t   *\n\t   * If `false`, will not retrigger the same state\n\t   *   just because a search/query parameter has changed (via $location.search() or $location.hash()). \n\t   *   Useful for when you'd like to modify $location.search() without triggering a reload.\n\t   * <pre>reloadOnSearch: false</pre>\n\t   *\n\t   * @param {object=} stateConfig.data\n\t   * <a id='data'></a>\n\t   *\n\t   * Arbitrary data object, useful for custom configuration.  The parent state's `data` is\n\t   *   prototypally inherited.  In other words, adding a data property to a state adds it to\n\t   *   the entire subtree via prototypal inheritance.\n\t   *\n\t   * <pre>data: {\n\t   *     requiredRole: 'foo'\n\t   * } </pre>\n\t   *\n\t   * @param {object=} stateConfig.params\n\t   * <a id='params'></a>\n\t   *\n\t   * A map which optionally configures parameters declared in the `url`, or\n\t   *   defines additional non-url parameters.  For each parameter being\n\t   *   configured, add a configuration object keyed to the name of the parameter.\n\t   *\n\t   *   Each parameter configuration object may contain the following properties:\n\t   *\n\t   *   - ** value ** - {object|function=}: specifies the default value for this\n\t   *     parameter.  This implicitly sets this parameter as optional.\n\t   *\n\t   *     When UI-Router routes to a state and no value is\n\t   *     specified for this parameter in the URL or transition, the\n\t   *     default value will be used instead.  If `value` is a function,\n\t   *     it will be injected and invoked, and the return value used.\n\t   *\n\t   *     *Note*: `undefined` is treated as \"no default value\" while `null`\n\t   *     is treated as \"the default value is `null`\".\n\t   *\n\t   *     *Shorthand*: If you only need to configure the default value of the\n\t   *     parameter, you may use a shorthand syntax.   In the **`params`**\n\t   *     map, instead mapping the param name to a full parameter configuration\n\t   *     object, simply set map it to the default parameter value, e.g.:\n\t   *\n\t   * <pre>// define a parameter's default value\n\t   * params: {\n\t   *     param1: { value: \"defaultValue\" }\n\t   * }\n\t   * // shorthand default values\n\t   * params: {\n\t   *     param1: \"defaultValue\",\n\t   *     param2: \"param2Default\"\n\t   * }</pre>\n\t   *\n\t   *   - ** array ** - {boolean=}: *(default: false)* If true, the param value will be\n\t   *     treated as an array of values.  If you specified a Type, the value will be\n\t   *     treated as an array of the specified Type.  Note: query parameter values\n\t   *     default to a special `\"auto\"` mode.\n\t   *\n\t   *     For query parameters in `\"auto\"` mode, if multiple  values for a single parameter\n\t   *     are present in the URL (e.g.: `/foo?bar=1&bar=2&bar=3`) then the values\n\t   *     are mapped to an array (e.g.: `{ foo: [ '1', '2', '3' ] }`).  However, if\n\t   *     only one value is present (e.g.: `/foo?bar=1`) then the value is treated as single\n\t   *     value (e.g.: `{ foo: '1' }`).\n\t   *\n\t   * <pre>params: {\n\t   *     param1: { array: true }\n\t   * }</pre>\n\t   *\n\t   *   - ** squash ** - {bool|string=}: `squash` configures how a default parameter value is represented in the URL when\n\t   *     the current parameter value is the same as the default value. If `squash` is not set, it uses the\n\t   *     configured default squash policy.\n\t   *     (See {@link ui.router.util.$urlMatcherFactory#methods_defaultSquashPolicy `defaultSquashPolicy()`})\n\t   *\n\t   *   There are three squash settings:\n\t   *\n\t   *     - false: The parameter's default value is not squashed.  It is encoded and included in the URL\n\t   *     - true: The parameter's default value is omitted from the URL.  If the parameter is preceeded and followed\n\t   *       by slashes in the state's `url` declaration, then one of those slashes are omitted.\n\t   *       This can allow for cleaner looking URLs.\n\t   *     - `\"<arbitrary string>\"`: The parameter's default value is replaced with an arbitrary placeholder of  your choice.\n\t   *\n\t   * <pre>params: {\n\t   *     param1: {\n\t   *       value: \"defaultId\",\n\t   *       squash: true\n\t   * } }\n\t   * // squash \"defaultValue\" to \"~\"\n\t   * params: {\n\t   *     param1: {\n\t   *       value: \"defaultValue\",\n\t   *       squash: \"~\"\n\t   * } }\n\t   * </pre>\n\t   *\n\t   *\n\t   * @example\n\t   * <pre>\n\t   * // Some state name examples\n\t   *\n\t   * // stateName can be a single top-level name (must be unique).\n\t   * $stateProvider.state(\"home\", {});\n\t   *\n\t   * // Or it can be a nested state name. This state is a child of the\n\t   * // above \"home\" state.\n\t   * $stateProvider.state(\"home.newest\", {});\n\t   *\n\t   * // Nest states as deeply as needed.\n\t   * $stateProvider.state(\"home.newest.abc.xyz.inception\", {});\n\t   *\n\t   * // state() returns $stateProvider, so you can chain state declarations.\n\t   * $stateProvider\n\t   *   .state(\"home\", {})\n\t   *   .state(\"about\", {})\n\t   *   .state(\"contacts\", {});\n\t   * </pre>\n\t   *\n\t   */\n\t  this.state = state;\n\t  function state(name, definition) {\n\t    /*jshint validthis: true */\n\t    if (isObject(name)) definition = name;\n\t    else definition.name = name;\n\t    registerState(definition);\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * @ngdoc object\n\t   * @name ui.router.state.$state\n\t   *\n\t   * @requires $rootScope\n\t   * @requires $q\n\t   * @requires ui.router.state.$view\n\t   * @requires $injector\n\t   * @requires ui.router.util.$resolve\n\t   * @requires ui.router.state.$stateParams\n\t   * @requires ui.router.router.$urlRouter\n\t   *\n\t   * @property {object} params A param object, e.g. {sectionId: section.id)}, that \n\t   * you'd like to test against the current active state.\n\t   * @property {object} current A reference to the state's config object. However \n\t   * you passed it in. Useful for accessing custom data.\n\t   * @property {object} transition Currently pending transition. A promise that'll \n\t   * resolve or reject.\n\t   *\n\t   * @description\n\t   * `$state` service is responsible for representing states as well as transitioning\n\t   * between them. It also provides interfaces to ask for current state or even states\n\t   * you're coming from.\n\t   */\n\t  this.$get = $get;\n\t  $get.$inject = ['$rootScope', '$q', '$view', '$injector', '$resolve', '$stateParams', '$urlRouter', '$location', '$urlMatcherFactory'];\n\t  function $get(   $rootScope,   $q,   $view,   $injector,   $resolve,   $stateParams,   $urlRouter,   $location,   $urlMatcherFactory) {\n\t\n\t    var TransitionSupersededError = new Error('transition superseded');\n\t\n\t    var TransitionSuperseded = silenceUncaughtInPromise($q.reject(TransitionSupersededError));\n\t    var TransitionPrevented = silenceUncaughtInPromise($q.reject(new Error('transition prevented')));\n\t    var TransitionAborted = silenceUncaughtInPromise($q.reject(new Error('transition aborted')));\n\t    var TransitionFailed = silenceUncaughtInPromise($q.reject(new Error('transition failed')));\n\t\n\t    // Handles the case where a state which is the target of a transition is not found, and the user\n\t    // can optionally retry or defer the transition\n\t    function handleRedirect(redirect, state, params, options) {\n\t      /**\n\t       * @ngdoc event\n\t       * @name ui.router.state.$state#$stateNotFound\n\t       * @eventOf ui.router.state.$state\n\t       * @eventType broadcast on root scope\n\t       * @description\n\t       * Fired when a requested state **cannot be found** using the provided state name during transition.\n\t       * The event is broadcast allowing any handlers a single chance to deal with the error (usually by\n\t       * lazy-loading the unfound state). A special `unfoundState` object is passed to the listener handler,\n\t       * you can see its three properties in the example. You can use `event.preventDefault()` to abort the\n\t       * transition and the promise returned from `go` will be rejected with a `'transition aborted'` value.\n\t       *\n\t       * @param {Object} event Event object.\n\t       * @param {Object} unfoundState Unfound State information. Contains: `to, toParams, options` properties.\n\t       * @param {State} fromState Current state object.\n\t       * @param {Object} fromParams Current state params.\n\t       *\n\t       * @example\n\t       *\n\t       * <pre>\n\t       * // somewhere, assume lazy.state has not been defined\n\t       * $state.go(\"lazy.state\", {a:1, b:2}, {inherit:false});\n\t       *\n\t       * // somewhere else\n\t       * $scope.$on('$stateNotFound',\n\t       * function(event, unfoundState, fromState, fromParams){\n\t       *     console.log(unfoundState.to); // \"lazy.state\"\n\t       *     console.log(unfoundState.toParams); // {a:1, b:2}\n\t       *     console.log(unfoundState.options); // {inherit:false} + default options\n\t       * })\n\t       * </pre>\n\t       */\n\t      var evt = $rootScope.$broadcast('$stateNotFound', redirect, state, params);\n\t\n\t      if (evt.defaultPrevented) {\n\t        $urlRouter.update();\n\t        return TransitionAborted;\n\t      }\n\t\n\t      if (!evt.retry) {\n\t        return null;\n\t      }\n\t\n\t      // Allow the handler to return a promise to defer state lookup retry\n\t      if (options.$retry) {\n\t        $urlRouter.update();\n\t        return TransitionFailed;\n\t      }\n\t      var retryTransition = $state.transition = $q.when(evt.retry);\n\t\n\t      retryTransition.then(function() {\n\t        if (retryTransition !== $state.transition) {\n\t          $rootScope.$broadcast('$stateChangeCancel', redirect.to, redirect.toParams, state, params);\n\t          return TransitionSuperseded;\n\t        }\n\t        redirect.options.$retry = true;\n\t        return $state.transitionTo(redirect.to, redirect.toParams, redirect.options);\n\t      }, function() {\n\t        return TransitionAborted;\n\t      });\n\t      $urlRouter.update();\n\t\n\t      return retryTransition;\n\t    }\n\t\n\t    root.locals = { resolve: null, globals: { $stateParams: {} } };\n\t\n\t    $state = {\n\t      params: {},\n\t      current: root.self,\n\t      $current: root,\n\t      transition: null\n\t    };\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name ui.router.state.$state#reload\n\t     * @methodOf ui.router.state.$state\n\t     *\n\t     * @description\n\t     * A method that force reloads the current state. All resolves are re-resolved,\n\t     * controllers reinstantiated, and events re-fired.\n\t     *\n\t     * @example\n\t     * <pre>\n\t     * var app angular.module('app', ['ui.router']);\n\t     *\n\t     * app.controller('ctrl', function ($scope, $state) {\n\t     *   $scope.reload = function(){\n\t     *     $state.reload();\n\t     *   }\n\t     * });\n\t     * </pre>\n\t     *\n\t     * `reload()` is just an alias for:\n\t     * <pre>\n\t     * $state.transitionTo($state.current, $stateParams, { \n\t     *   reload: true, inherit: false, notify: true\n\t     * });\n\t     * </pre>\n\t     *\n\t     * @param {string=|object=} state - A state name or a state object, which is the root of the resolves to be re-resolved.\n\t     * @example\n\t     * <pre>\n\t     * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item' \n\t     * //and current state is 'contacts.detail.item'\n\t     * var app angular.module('app', ['ui.router']);\n\t     *\n\t     * app.controller('ctrl', function ($scope, $state) {\n\t     *   $scope.reload = function(){\n\t     *     //will reload 'contact.detail' and 'contact.detail.item' states\n\t     *     $state.reload('contact.detail');\n\t     *   }\n\t     * });\n\t     * </pre>\n\t     *\n\t     * `reload()` is just an alias for:\n\t     * <pre>\n\t     * $state.transitionTo($state.current, $stateParams, { \n\t     *   reload: true, inherit: false, notify: true\n\t     * });\n\t     * </pre>\n\t\n\t     * @returns {promise} A promise representing the state of the new transition. See\n\t     * {@link ui.router.state.$state#methods_go $state.go}.\n\t     */\n\t    $state.reload = function reload(state) {\n\t      return $state.transitionTo($state.current, $stateParams, { reload: state || true, inherit: false, notify: true});\n\t    };\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name ui.router.state.$state#go\n\t     * @methodOf ui.router.state.$state\n\t     *\n\t     * @description\n\t     * Convenience method for transitioning to a new state. `$state.go` calls \n\t     * `$state.transitionTo` internally but automatically sets options to \n\t     * `{ location: true, inherit: true, relative: $state.$current, notify: true }`. \n\t     * This allows you to easily use an absolute or relative to path and specify \n\t     * only the parameters you'd like to update (while letting unspecified parameters \n\t     * inherit from the currently active ancestor states).\n\t     *\n\t     * @example\n\t     * <pre>\n\t     * var app = angular.module('app', ['ui.router']);\n\t     *\n\t     * app.controller('ctrl', function ($scope, $state) {\n\t     *   $scope.changeState = function () {\n\t     *     $state.go('contact.detail');\n\t     *   };\n\t     * });\n\t     * </pre>\n\t     * <img src='../ngdoc_assets/StateGoExamples.png'/>\n\t     *\n\t     * @param {string} to Absolute state name or relative state path. Some examples:\n\t     *\n\t     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n\t     * - `$state.go('^')` - will go to a parent state\n\t     * - `$state.go('^.sibling')` - will go to a sibling state\n\t     * - `$state.go('.child.grandchild')` - will go to grandchild state\n\t     *\n\t     * @param {object=} params A map of the parameters that will be sent to the state, \n\t     * will populate $stateParams. Any parameters that are not specified will be inherited from currently \n\t     * defined parameters. Only parameters specified in the state definition can be overridden, new \n\t     * parameters will be ignored. This allows, for example, going to a sibling state that shares parameters\n\t     * specified in a parent state. Parameter inheritance only works between common ancestor states, I.e.\n\t     * transitioning to a sibling will get you the parameters for all parents, transitioning to a child\n\t     * will get you all current parameters, etc.\n\t     * @param {object=} options Options object. The options are:\n\t     *\n\t     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n\t     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n\t     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n\t     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n\t     *    defines which state to be relative from.\n\t     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n\t     * - **`reload`** (v0.2.5) - {boolean=false|string|object}, If `true` will force transition even if no state or params\n\t     *    have changed.  It will reload the resolves and views of the current state and parent states.\n\t     *    If `reload` is a string (or state object), the state object is fetched (by name, or object reference); and \\\n\t     *    the transition reloads the resolves and views for that matched state, and all its children states.\n\t     *\n\t     * @returns {promise} A promise representing the state of the new transition.\n\t     *\n\t     * Possible success values:\n\t     *\n\t     * - $state.current\n\t     *\n\t     * <br/>Possible rejection values:\n\t     *\n\t     * - 'transition superseded' - when a newer transition has been started after this one\n\t     * - 'transition prevented' - when `event.preventDefault()` has been called in a `$stateChangeStart` listener\n\t     * - 'transition aborted' - when `event.preventDefault()` has been called in a `$stateNotFound` listener or\n\t     *   when a `$stateNotFound` `event.retry` promise errors.\n\t     * - 'transition failed' - when a state has been unsuccessfully found after 2 tries.\n\t     * - *resolve error* - when an error has occurred with a `resolve`\n\t     *\n\t     */\n\t    $state.go = function go(to, params, options) {\n\t      return $state.transitionTo(to, params, extend({ inherit: true, relative: $state.$current }, options));\n\t    };\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name ui.router.state.$state#transitionTo\n\t     * @methodOf ui.router.state.$state\n\t     *\n\t     * @description\n\t     * Low-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}\n\t     * uses `transitionTo` internally. `$state.go` is recommended in most situations.\n\t     *\n\t     * @example\n\t     * <pre>\n\t     * var app = angular.module('app', ['ui.router']);\n\t     *\n\t     * app.controller('ctrl', function ($scope, $state) {\n\t     *   $scope.changeState = function () {\n\t     *     $state.transitionTo('contact.detail');\n\t     *   };\n\t     * });\n\t     * </pre>\n\t     *\n\t     * @param {string} to State name.\n\t     * @param {object=} toParams A map of the parameters that will be sent to the state,\n\t     * will populate $stateParams.\n\t     * @param {object=} options Options object. The options are:\n\t     *\n\t     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n\t     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n\t     * - **`inherit`** - {boolean=false}, If `true` will inherit url parameters from current url.\n\t     * - **`relative`** - {object=}, When transitioning with relative path (e.g '^'), \n\t     *    defines which state to be relative from.\n\t     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n\t     * - **`reload`** (v0.2.5) - {boolean=false|string=|object=}, If `true` will force transition even if the state or params \n\t     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\n\t     *    use this when you want to force a reload when *everything* is the same, including search params.\n\t     *    if String, then will reload the state with the name given in reload, and any children.\n\t     *    if Object, then a stateObj is expected, will reload the state found in stateObj, and any children.\n\t     *\n\t     * @returns {promise} A promise representing the state of the new transition. See\n\t     * {@link ui.router.state.$state#methods_go $state.go}.\n\t     */\n\t    $state.transitionTo = function transitionTo(to, toParams, options) {\n\t      toParams = toParams || {};\n\t      options = extend({\n\t        location: true, inherit: false, relative: null, notify: true, reload: false, $retry: false\n\t      }, options || {});\n\t\n\t      var from = $state.$current, fromParams = $state.params, fromPath = from.path;\n\t      var evt, toState = findState(to, options.relative);\n\t\n\t      // Store the hash param for later (since it will be stripped out by various methods)\n\t      var hash = toParams['#'];\n\t\n\t      if (!isDefined(toState)) {\n\t        var redirect = { to: to, toParams: toParams, options: options };\n\t        var redirectResult = handleRedirect(redirect, from.self, fromParams, options);\n\t\n\t        if (redirectResult) {\n\t          return redirectResult;\n\t        }\n\t\n\t        // Always retry once if the $stateNotFound was not prevented\n\t        // (handles either redirect changed or state lazy-definition)\n\t        to = redirect.to;\n\t        toParams = redirect.toParams;\n\t        options = redirect.options;\n\t        toState = findState(to, options.relative);\n\t\n\t        if (!isDefined(toState)) {\n\t          if (!options.relative) throw new Error(\"No such state '\" + to + \"'\");\n\t          throw new Error(\"Could not resolve '\" + to + \"' from state '\" + options.relative + \"'\");\n\t        }\n\t      }\n\t      if (toState[abstractKey]) throw new Error(\"Cannot transition to abstract state '\" + to + \"'\");\n\t      if (options.inherit) toParams = inheritParams($stateParams, toParams || {}, $state.$current, toState);\n\t      if (!toState.params.$$validates(toParams)) return TransitionFailed;\n\t\n\t      toParams = toState.params.$$values(toParams);\n\t      to = toState;\n\t\n\t      var toPath = to.path;\n\t\n\t      // Starting from the root of the path, keep all levels that haven't changed\n\t      var keep = 0, state = toPath[keep], locals = root.locals, toLocals = [];\n\t\n\t      if (!options.reload) {\n\t        while (state && state === fromPath[keep] && state.ownParams.$$equals(toParams, fromParams)) {\n\t          locals = toLocals[keep] = state.locals;\n\t          keep++;\n\t          state = toPath[keep];\n\t        }\n\t      } else if (isString(options.reload) || isObject(options.reload)) {\n\t        if (isObject(options.reload) && !options.reload.name) {\n\t          throw new Error('Invalid reload state object');\n\t        }\n\t        \n\t        var reloadState = options.reload === true ? fromPath[0] : findState(options.reload);\n\t        if (options.reload && !reloadState) {\n\t          throw new Error(\"No such reload state '\" + (isString(options.reload) ? options.reload : options.reload.name) + \"'\");\n\t        }\n\t\n\t        while (state && state === fromPath[keep] && state !== reloadState) {\n\t          locals = toLocals[keep] = state.locals;\n\t          keep++;\n\t          state = toPath[keep];\n\t        }\n\t      }\n\t\n\t      // If we're going to the same state and all locals are kept, we've got nothing to do.\n\t      // But clear 'transition', as we still want to cancel any other pending transitions.\n\t      // TODO: We may not want to bump 'transition' if we're called from a location change\n\t      // that we've initiated ourselves, because we might accidentally abort a legitimate\n\t      // transition initiated from code?\n\t      if (shouldSkipReload(to, toParams, from, fromParams, locals, options)) {\n\t        if (hash) toParams['#'] = hash;\n\t        $state.params = toParams;\n\t        copy($state.params, $stateParams);\n\t        copy(filterByKeys(to.params.$$keys(), $stateParams), to.locals.globals.$stateParams);\n\t        if (options.location && to.navigable && to.navigable.url) {\n\t          $urlRouter.push(to.navigable.url, toParams, {\n\t            $$avoidResync: true, replace: options.location === 'replace'\n\t          });\n\t          $urlRouter.update(true);\n\t        }\n\t        $state.transition = null;\n\t        return $q.when($state.current);\n\t      }\n\t\n\t      // Filter parameters before we pass them to event handlers etc.\n\t      toParams = filterByKeys(to.params.$$keys(), toParams || {});\n\t      \n\t      // Re-add the saved hash before we start returning things or broadcasting $stateChangeStart\n\t      if (hash) toParams['#'] = hash;\n\t      \n\t      // Broadcast start event and cancel the transition if requested\n\t      if (options.notify) {\n\t        /**\n\t         * @ngdoc event\n\t         * @name ui.router.state.$state#$stateChangeStart\n\t         * @eventOf ui.router.state.$state\n\t         * @eventType broadcast on root scope\n\t         * @description\n\t         * Fired when the state transition **begins**. You can use `event.preventDefault()`\n\t         * to prevent the transition from happening and then the transition promise will be\n\t         * rejected with a `'transition prevented'` value.\n\t         *\n\t         * @param {Object} event Event object.\n\t         * @param {State} toState The state being transitioned to.\n\t         * @param {Object} toParams The params supplied to the `toState`.\n\t         * @param {State} fromState The current state, pre-transition.\n\t         * @param {Object} fromParams The params supplied to the `fromState`.\n\t         *\n\t         * @example\n\t         *\n\t         * <pre>\n\t         * $rootScope.$on('$stateChangeStart',\n\t         * function(event, toState, toParams, fromState, fromParams){\n\t         *     event.preventDefault();\n\t         *     // transitionTo() promise will be rejected with\n\t         *     // a 'transition prevented' error\n\t         * })\n\t         * </pre>\n\t         */\n\t        if ($rootScope.$broadcast('$stateChangeStart', to.self, toParams, from.self, fromParams, options).defaultPrevented) {\n\t          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n\t          //Don't update and resync url if there's been a new transition started. see issue #2238, #600\n\t          if ($state.transition == null) $urlRouter.update();\n\t          return TransitionPrevented;\n\t        }\n\t      }\n\t\n\t      // Resolve locals for the remaining states, but don't update any global state just\n\t      // yet -- if anything fails to resolve the current state needs to remain untouched.\n\t      // We also set up an inheritance chain for the locals here. This allows the view directive\n\t      // to quickly look up the correct definition for each view in the current state. Even\n\t      // though we create the locals object itself outside resolveState(), it is initially\n\t      // empty and gets filled asynchronously. We need to keep track of the promise for the\n\t      // (fully resolved) current locals, and pass this down the chain.\n\t      var resolved = $q.when(locals);\n\t\n\t      for (var l = keep; l < toPath.length; l++, state = toPath[l]) {\n\t        locals = toLocals[l] = inherit(locals);\n\t        resolved = resolveState(state, toParams, state === to, resolved, locals, options);\n\t      }\n\t\n\t      // Once everything is resolved, we are ready to perform the actual transition\n\t      // and return a promise for the new state. We also keep track of what the\n\t      // current promise is, so that we can detect overlapping transitions and\n\t      // keep only the outcome of the last transition.\n\t      var transition = $state.transition = resolved.then(function () {\n\t        var l, entering, exiting;\n\t\n\t        if ($state.transition !== transition) {\n\t          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n\t          return TransitionSuperseded;\n\t        }\n\t\n\t        // Exit 'from' states not kept\n\t        for (l = fromPath.length - 1; l >= keep; l--) {\n\t          exiting = fromPath[l];\n\t          if (exiting.self.onExit) {\n\t            $injector.invoke(exiting.self.onExit, exiting.self, exiting.locals.globals);\n\t          }\n\t          exiting.locals = null;\n\t        }\n\t\n\t        // Enter 'to' states not kept\n\t        for (l = keep; l < toPath.length; l++) {\n\t          entering = toPath[l];\n\t          entering.locals = toLocals[l];\n\t          if (entering.self.onEnter) {\n\t            $injector.invoke(entering.self.onEnter, entering.self, entering.locals.globals);\n\t          }\n\t        }\n\t\n\t        // Run it again, to catch any transitions in callbacks\n\t        if ($state.transition !== transition) {\n\t          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n\t          return TransitionSuperseded;\n\t        }\n\t\n\t        // Update globals in $state\n\t        $state.$current = to;\n\t        $state.current = to.self;\n\t        $state.params = toParams;\n\t        copy($state.params, $stateParams);\n\t        $state.transition = null;\n\t\n\t        if (options.location && to.navigable) {\n\t          $urlRouter.push(to.navigable.url, to.navigable.locals.globals.$stateParams, {\n\t            $$avoidResync: true, replace: options.location === 'replace'\n\t          });\n\t        }\n\t\n\t        if (options.notify) {\n\t        /**\n\t         * @ngdoc event\n\t         * @name ui.router.state.$state#$stateChangeSuccess\n\t         * @eventOf ui.router.state.$state\n\t         * @eventType broadcast on root scope\n\t         * @description\n\t         * Fired once the state transition is **complete**.\n\t         *\n\t         * @param {Object} event Event object.\n\t         * @param {State} toState The state being transitioned to.\n\t         * @param {Object} toParams The params supplied to the `toState`.\n\t         * @param {State} fromState The current state, pre-transition.\n\t         * @param {Object} fromParams The params supplied to the `fromState`.\n\t         */\n\t          $rootScope.$broadcast('$stateChangeSuccess', to.self, toParams, from.self, fromParams);\n\t        }\n\t        $urlRouter.update(true);\n\t\n\t        return $state.current;\n\t      }).then(null, function (error) {\n\t        // propagate TransitionSuperseded error without emitting $stateChangeCancel\n\t        // as it was already emitted in the success handler above\n\t        if (error === TransitionSupersededError) return TransitionSuperseded;\n\t\n\t        if ($state.transition !== transition) {\n\t          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n\t          return TransitionSuperseded;\n\t        }\n\t\n\t        $state.transition = null;\n\t        /**\n\t         * @ngdoc event\n\t         * @name ui.router.state.$state#$stateChangeError\n\t         * @eventOf ui.router.state.$state\n\t         * @eventType broadcast on root scope\n\t         * @description\n\t         * Fired when an **error occurs** during transition. It's important to note that if you\n\t         * have any errors in your resolve functions (javascript errors, non-existent services, etc)\n\t         * they will not throw traditionally. You must listen for this $stateChangeError event to\n\t         * catch **ALL** errors.\n\t         *\n\t         * @param {Object} event Event object.\n\t         * @param {State} toState The state being transitioned to.\n\t         * @param {Object} toParams The params supplied to the `toState`.\n\t         * @param {State} fromState The current state, pre-transition.\n\t         * @param {Object} fromParams The params supplied to the `fromState`.\n\t         * @param {Error} error The resolve error object.\n\t         */\n\t        evt = $rootScope.$broadcast('$stateChangeError', to.self, toParams, from.self, fromParams, error);\n\t\n\t        if (!evt.defaultPrevented) {\n\t          $urlRouter.update();\n\t        }\n\t\n\t        return $q.reject(error);\n\t      });\n\t\n\t      return transition;\n\t    };\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name ui.router.state.$state#is\n\t     * @methodOf ui.router.state.$state\n\t     *\n\t     * @description\n\t     * Similar to {@link ui.router.state.$state#methods_includes $state.includes},\n\t     * but only checks for the full state name. If params is supplied then it will be\n\t     * tested for strict equality against the current active params object, so all params\n\t     * must match with none missing and no extras.\n\t     *\n\t     * @example\n\t     * <pre>\n\t     * $state.$current.name = 'contacts.details.item';\n\t     *\n\t     * // absolute name\n\t     * $state.is('contact.details.item'); // returns true\n\t     * $state.is(contactDetailItemStateObject); // returns true\n\t     *\n\t     * // relative name (. and ^), typically from a template\n\t     * // E.g. from the 'contacts.details' template\n\t     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n\t     * </pre>\n\t     *\n\t     * @param {string|object} stateOrName The state name (absolute or relative) or state object you'd like to check.\n\t     * @param {object=} params A param object, e.g. `{sectionId: section.id}`, that you'd like\n\t     * to test against the current active state.\n\t     * @param {object=} options An options object.  The options are:\n\t     *\n\t     * - **`relative`** - {string|object} -  If `stateOrName` is a relative state name and `options.relative` is set, .is will\n\t     * test relative to `options.relative` state (or name).\n\t     *\n\t     * @returns {boolean} Returns true if it is the state.\n\t     */\n\t    $state.is = function is(stateOrName, params, options) {\n\t      options = extend({ relative: $state.$current }, options || {});\n\t      var state = findState(stateOrName, options.relative);\n\t\n\t      if (!isDefined(state)) { return undefined; }\n\t      if ($state.$current !== state) { return false; }\n\t      return params ? equalForKeys(state.params.$$values(params), $stateParams) : true;\n\t    };\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name ui.router.state.$state#includes\n\t     * @methodOf ui.router.state.$state\n\t     *\n\t     * @description\n\t     * A method to determine if the current active state is equal to or is the child of the\n\t     * state stateName. If any params are passed then they will be tested for a match as well.\n\t     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n\t     *\n\t     * @example\n\t     * Partial and relative names\n\t     * <pre>\n\t     * $state.$current.name = 'contacts.details.item';\n\t     *\n\t     * // Using partial names\n\t     * $state.includes(\"contacts\"); // returns true\n\t     * $state.includes(\"contacts.details\"); // returns true\n\t     * $state.includes(\"contacts.details.item\"); // returns true\n\t     * $state.includes(\"contacts.list\"); // returns false\n\t     * $state.includes(\"about\"); // returns false\n\t     *\n\t     * // Using relative names (. and ^), typically from a template\n\t     * // E.g. from the 'contacts.details' template\n\t     * <div ng-class=\"{highlighted: $state.includes('.item')}\">Item</div>\n\t     * </pre>\n\t     *\n\t     * Basic globbing patterns\n\t     * <pre>\n\t     * $state.$current.name = 'contacts.details.item.url';\n\t     *\n\t     * $state.includes(\"*.details.*.*\"); // returns true\n\t     * $state.includes(\"*.details.**\"); // returns true\n\t     * $state.includes(\"**.item.**\"); // returns true\n\t     * $state.includes(\"*.details.item.url\"); // returns true\n\t     * $state.includes(\"*.details.*.url\"); // returns true\n\t     * $state.includes(\"*.details.*\"); // returns false\n\t     * $state.includes(\"item.**\"); // returns false\n\t     * </pre>\n\t     *\n\t     * @param {string} stateOrName A partial name, relative name, or glob pattern\n\t     * to be searched for within the current state name.\n\t     * @param {object=} params A param object, e.g. `{sectionId: section.id}`,\n\t     * that you'd like to test against the current active state.\n\t     * @param {object=} options An options object.  The options are:\n\t     *\n\t     * - **`relative`** - {string|object=} -  If `stateOrName` is a relative state reference and `options.relative` is set,\n\t     * .includes will test relative to `options.relative` state (or name).\n\t     *\n\t     * @returns {boolean} Returns true if it does include the state\n\t     */\n\t    $state.includes = function includes(stateOrName, params, options) {\n\t      options = extend({ relative: $state.$current }, options || {});\n\t      if (isString(stateOrName) && isGlob(stateOrName)) {\n\t        if (!doesStateMatchGlob(stateOrName)) {\n\t          return false;\n\t        }\n\t        stateOrName = $state.$current.name;\n\t      }\n\t\n\t      var state = findState(stateOrName, options.relative);\n\t      if (!isDefined(state)) { return undefined; }\n\t      if (!isDefined($state.$current.includes[state.name])) { return false; }\n\t      if (!params) { return true; }\n\t\n\t      var keys = objectKeys(params);\n\t      for (var i = 0; i < keys.length; i++) {\n\t        var key = keys[i], paramDef = state.params[key];\n\t        if (paramDef && !paramDef.type.equals($stateParams[key], params[key])) {\n\t          return false;\n\t        }\n\t      }\n\t\n\t      return true;\n\t    };\n\t\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name ui.router.state.$state#href\n\t     * @methodOf ui.router.state.$state\n\t     *\n\t     * @description\n\t     * A url generation method that returns the compiled url for the given state populated with the given params.\n\t     *\n\t     * @example\n\t     * <pre>\n\t     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n\t     * </pre>\n\t     *\n\t     * @param {string|object} stateOrName The state name or state object you'd like to generate a url from.\n\t     * @param {object=} params An object of parameter values to fill the state's required parameters.\n\t     * @param {object=} options Options object. The options are:\n\t     *\n\t     * - **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the\n\t     *    first parameter, then the constructed href url will be built from the first navigable ancestor (aka\n\t     *    ancestor with a valid url).\n\t     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n\t     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n\t     *    defines which state to be relative from.\n\t     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n\t     * \n\t     * @returns {string} compiled state url\n\t     */\n\t    $state.href = function href(stateOrName, params, options) {\n\t      options = extend({\n\t        lossy:    true,\n\t        inherit:  true,\n\t        absolute: false,\n\t        relative: $state.$current\n\t      }, options || {});\n\t\n\t      var state = findState(stateOrName, options.relative);\n\t\n\t      if (!isDefined(state)) return null;\n\t      if (options.inherit) params = inheritParams($stateParams, params || {}, $state.$current, state);\n\t      \n\t      var nav = (state && options.lossy) ? state.navigable : state;\n\t\n\t      if (!nav || nav.url === undefined || nav.url === null) {\n\t        return null;\n\t      }\n\t      return $urlRouter.href(nav.url, filterByKeys(state.params.$$keys().concat('#'), params || {}), {\n\t        absolute: options.absolute\n\t      });\n\t    };\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name ui.router.state.$state#get\n\t     * @methodOf ui.router.state.$state\n\t     *\n\t     * @description\n\t     * Returns the state configuration object for any specific state or all states.\n\t     *\n\t     * @param {string|object=} stateOrName (absolute or relative) If provided, will only get the config for\n\t     * the requested state. If not provided, returns an array of ALL state configs.\n\t     * @param {string|object=} context When stateOrName is a relative state reference, the state will be retrieved relative to context.\n\t     * @returns {Object|Array} State configuration object or array of all objects.\n\t     */\n\t    $state.get = function (stateOrName, context) {\n\t      if (arguments.length === 0) return map(objectKeys(states), function(name) { return states[name].self; });\n\t      var state = findState(stateOrName, context || $state.$current);\n\t      return (state && state.self) ? state.self : null;\n\t    };\n\t\n\t    function resolveState(state, params, paramsAreFiltered, inherited, dst, options) {\n\t      // Make a restricted $stateParams with only the parameters that apply to this state if\n\t      // necessary. In addition to being available to the controller and onEnter/onExit callbacks,\n\t      // we also need $stateParams to be available for any $injector calls we make during the\n\t      // dependency resolution process.\n\t      var $stateParams = (paramsAreFiltered) ? params : filterByKeys(state.params.$$keys(), params);\n\t      var locals = { $stateParams: $stateParams };\n\t\n\t      // Resolve 'global' dependencies for the state, i.e. those not specific to a view.\n\t      // We're also including $stateParams in this; that way the parameters are restricted\n\t      // to the set that should be visible to the state, and are independent of when we update\n\t      // the global $state and $stateParams values.\n\t      dst.resolve = $resolve.resolve(state.resolve, locals, dst.resolve, state);\n\t      var promises = [dst.resolve.then(function (globals) {\n\t        dst.globals = globals;\n\t      })];\n\t      if (inherited) promises.push(inherited);\n\t\n\t      function resolveViews() {\n\t        var viewsPromises = [];\n\t\n\t        // Resolve template and dependencies for all views.\n\t        forEach(state.views, function (view, name) {\n\t          var injectables = (view.resolve && view.resolve !== state.resolve ? view.resolve : {});\n\t          injectables.$template = [ function () {\n\t            return $view.load(name, { view: view, locals: dst.globals, params: $stateParams, notify: options.notify }) || '';\n\t          }];\n\t\n\t          viewsPromises.push($resolve.resolve(injectables, dst.globals, dst.resolve, state).then(function (result) {\n\t            // References to the controller (only instantiated at link time)\n\t            if (isFunction(view.controllerProvider) || isArray(view.controllerProvider)) {\n\t              var injectLocals = angular.extend({}, injectables, dst.globals);\n\t              result.$$controller = $injector.invoke(view.controllerProvider, null, injectLocals);\n\t            } else {\n\t              result.$$controller = view.controller;\n\t            }\n\t            // Provide access to the state itself for internal use\n\t            result.$$state = state;\n\t            result.$$controllerAs = view.controllerAs;\n\t            result.$$resolveAs = view.resolveAs;\n\t            dst[name] = result;\n\t          }));\n\t        });\n\t\n\t        return $q.all(viewsPromises).then(function(){\n\t          return dst.globals;\n\t        });\n\t      }\n\t\n\t      // Wait for all the promises and then return the activation object\n\t      return $q.all(promises).then(resolveViews).then(function (values) {\n\t        return dst;\n\t      });\n\t    }\n\t\n\t    return $state;\n\t  }\n\t\n\t  function shouldSkipReload(to, toParams, from, fromParams, locals, options) {\n\t    // Return true if there are no differences in non-search (path/object) params, false if there are differences\n\t    function nonSearchParamsEqual(fromAndToState, fromParams, toParams) {\n\t      // Identify whether all the parameters that differ between `fromParams` and `toParams` were search params.\n\t      function notSearchParam(key) {\n\t        return fromAndToState.params[key].location != \"search\";\n\t      }\n\t      var nonQueryParamKeys = fromAndToState.params.$$keys().filter(notSearchParam);\n\t      var nonQueryParams = pick.apply({}, [fromAndToState.params].concat(nonQueryParamKeys));\n\t      var nonQueryParamSet = new $$UMFP.ParamSet(nonQueryParams);\n\t      return nonQueryParamSet.$$equals(fromParams, toParams);\n\t    }\n\t\n\t    // If reload was not explicitly requested\n\t    // and we're transitioning to the same state we're already in\n\t    // and    the locals didn't change\n\t    //     or they changed in a way that doesn't merit reloading\n\t    //        (reloadOnParams:false, or reloadOnSearch.false and only search params changed)\n\t    // Then return true.\n\t    if (!options.reload && to === from &&\n\t      (locals === from.locals || (to.self.reloadOnSearch === false && nonSearchParamsEqual(from, fromParams, toParams)))) {\n\t      return true;\n\t    }\n\t  }\n\t}\n\t\n\tangular.module('ui.router.state')\n\t  .factory('$stateParams', function () { return {}; })\n\t  .constant(\"$state.runtime\", { autoinject: true })\n\t  .provider('$state', $StateProvider)\n\t  // Inject $state to initialize when entering runtime. #2574\n\t  .run(['$injector', function ($injector) {\n\t    // Allow tests (stateSpec.js) to turn this off by defining this constant\n\t    if ($injector.get(\"$state.runtime\").autoinject) {\n\t      $injector.get('$state');\n\t    }\n\t  }]);\n\t\n\t\n\t$ViewProvider.$inject = [];\n\tfunction $ViewProvider() {\n\t\n\t  this.$get = $get;\n\t  /**\n\t   * @ngdoc object\n\t   * @name ui.router.state.$view\n\t   *\n\t   * @requires ui.router.util.$templateFactory\n\t   * @requires $rootScope\n\t   *\n\t   * @description\n\t   *\n\t   */\n\t  $get.$inject = ['$rootScope', '$templateFactory'];\n\t  function $get(   $rootScope,   $templateFactory) {\n\t    return {\n\t      // $view.load('full.viewName', { template: ..., controller: ..., resolve: ..., async: false, params: ... })\n\t      /**\n\t       * @ngdoc function\n\t       * @name ui.router.state.$view#load\n\t       * @methodOf ui.router.state.$view\n\t       *\n\t       * @description\n\t       *\n\t       * @param {string} name name\n\t       * @param {object} options option object.\n\t       */\n\t      load: function load(name, options) {\n\t        var result, defaults = {\n\t          template: null, controller: null, view: null, locals: null, notify: true, async: true, params: {}\n\t        };\n\t        options = extend(defaults, options);\n\t\n\t        if (options.view) {\n\t          result = $templateFactory.fromConfig(options.view, options.params, options.locals);\n\t        }\n\t        return result;\n\t      }\n\t    };\n\t  }\n\t}\n\t\n\tangular.module('ui.router.state').provider('$view', $ViewProvider);\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.state.$uiViewScrollProvider\n\t *\n\t * @description\n\t * Provider that returns the {@link ui.router.state.$uiViewScroll} service function.\n\t */\n\tfunction $ViewScrollProvider() {\n\t\n\t  var useAnchorScroll = false;\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.state.$uiViewScrollProvider#useAnchorScroll\n\t   * @methodOf ui.router.state.$uiViewScrollProvider\n\t   *\n\t   * @description\n\t   * Reverts back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll) service for\n\t   * scrolling based on the url anchor.\n\t   */\n\t  this.useAnchorScroll = function () {\n\t    useAnchorScroll = true;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc object\n\t   * @name ui.router.state.$uiViewScroll\n\t   *\n\t   * @requires $anchorScroll\n\t   * @requires $timeout\n\t   *\n\t   * @description\n\t   * When called with a jqLite element, it scrolls the element into view (after a\n\t   * `$timeout` so the DOM has time to refresh).\n\t   *\n\t   * If you prefer to rely on `$anchorScroll` to scroll the view to the anchor,\n\t   * this can be enabled by calling {@link ui.router.state.$uiViewScrollProvider#methods_useAnchorScroll `$uiViewScrollProvider.useAnchorScroll()`}.\n\t   */\n\t  this.$get = ['$anchorScroll', '$timeout', function ($anchorScroll, $timeout) {\n\t    if (useAnchorScroll) {\n\t      return $anchorScroll;\n\t    }\n\t\n\t    return function ($element) {\n\t      return $timeout(function () {\n\t        $element[0].scrollIntoView();\n\t      }, 0, false);\n\t    };\n\t  }];\n\t}\n\t\n\tangular.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ui.router.state.directive:ui-view\n\t *\n\t * @requires ui.router.state.$state\n\t * @requires $compile\n\t * @requires $controller\n\t * @requires $injector\n\t * @requires ui.router.state.$uiViewScroll\n\t * @requires $document\n\t *\n\t * @restrict ECA\n\t *\n\t * @description\n\t * The ui-view directive tells $state where to place your templates.\n\t *\n\t * @param {string=} name A view name. The name should be unique amongst the other views in the\n\t * same state. You can have views of the same name that live in different states.\n\t *\n\t * @param {string=} autoscroll It allows you to set the scroll behavior of the browser window\n\t * when a view is populated. By default, $anchorScroll is overridden by ui-router's custom scroll\n\t * service, {@link ui.router.state.$uiViewScroll}. This custom service let's you\n\t * scroll ui-view elements into view when they are populated during a state activation.\n\t *\n\t * *Note: To revert back to old [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll)\n\t * functionality, call `$uiViewScrollProvider.useAnchorScroll()`.*\n\t *\n\t * @param {string=} onload Expression to evaluate whenever the view updates.\n\t *\n\t * @example\n\t * A view can be unnamed or named.\n\t * <pre>\n\t * <!-- Unnamed -->\n\t * <div ui-view></div>\n\t *\n\t * <!-- Named -->\n\t * <div ui-view=\"viewName\"></div>\n\t * </pre>\n\t *\n\t * You can only have one unnamed view within any template (or root html). If you are only using a\n\t * single view and it is unnamed then you can populate it like so:\n\t * <pre>\n\t * <div ui-view></div>\n\t * $stateProvider.state(\"home\", {\n\t *   template: \"<h1>HELLO!</h1>\"\n\t * })\n\t * </pre>\n\t *\n\t * The above is a convenient shortcut equivalent to specifying your view explicitly with the {@link ui.router.state.$stateProvider#methods_state `views`}\n\t * config property, by name, in this case an empty name:\n\t * <pre>\n\t * $stateProvider.state(\"home\", {\n\t *   views: {\n\t *     \"\": {\n\t *       template: \"<h1>HELLO!</h1>\"\n\t *     }\n\t *   }    \n\t * })\n\t * </pre>\n\t *\n\t * But typically you'll only use the views property if you name your view or have more than one view\n\t * in the same template. There's not really a compelling reason to name a view if its the only one,\n\t * but you could if you wanted, like so:\n\t * <pre>\n\t * <div ui-view=\"main\"></div>\n\t * </pre>\n\t * <pre>\n\t * $stateProvider.state(\"home\", {\n\t *   views: {\n\t *     \"main\": {\n\t *       template: \"<h1>HELLO!</h1>\"\n\t *     }\n\t *   }    \n\t * })\n\t * </pre>\n\t *\n\t * Really though, you'll use views to set up multiple views:\n\t * <pre>\n\t * <div ui-view></div>\n\t * <div ui-view=\"chart\"></div>\n\t * <div ui-view=\"data\"></div>\n\t * </pre>\n\t *\n\t * <pre>\n\t * $stateProvider.state(\"home\", {\n\t *   views: {\n\t *     \"\": {\n\t *       template: \"<h1>HELLO!</h1>\"\n\t *     },\n\t *     \"chart\": {\n\t *       template: \"<chart_thing/>\"\n\t *     },\n\t *     \"data\": {\n\t *       template: \"<data_thing/>\"\n\t *     }\n\t *   }    \n\t * })\n\t * </pre>\n\t *\n\t * Examples for `autoscroll`:\n\t *\n\t * <pre>\n\t * <!-- If autoscroll present with no expression,\n\t *      then scroll ui-view into view -->\n\t * <ui-view autoscroll/>\n\t *\n\t * <!-- If autoscroll present with valid expression,\n\t *      then scroll ui-view into view if expression evaluates to true -->\n\t * <ui-view autoscroll='true'/>\n\t * <ui-view autoscroll='false'/>\n\t * <ui-view autoscroll='scopeVariable'/>\n\t * </pre>\n\t *\n\t * Resolve data:\n\t *\n\t * The resolved data from the state's `resolve` block is placed on the scope as `$resolve` (this\n\t * can be customized using [[ViewDeclaration.resolveAs]]).  This can be then accessed from the template.\n\t *\n\t * Note that when `controllerAs` is being used, `$resolve` is set on the controller instance *after* the\n\t * controller is instantiated.  The `$onInit()` hook can be used to perform initialization code which\n\t * depends on `$resolve` data.\n\t *\n\t * Example usage of $resolve in a view template\n\t * <pre>\n\t * $stateProvider.state('home', {\n\t *   template: '<my-component user=\"$resolve.user\"></my-component>',\n\t *   resolve: {\n\t *     user: function(UserService) { return UserService.fetchUser(); }\n\t *   }\n\t * });\n\t * </pre>\n\t */\n\t$ViewDirective.$inject = ['$state', '$injector', '$uiViewScroll', '$interpolate', '$q'];\n\tfunction $ViewDirective(   $state,   $injector,   $uiViewScroll,   $interpolate,   $q) {\n\t\n\t  function getService() {\n\t    return ($injector.has) ? function(service) {\n\t      return $injector.has(service) ? $injector.get(service) : null;\n\t    } : function(service) {\n\t      try {\n\t        return $injector.get(service);\n\t      } catch (e) {\n\t        return null;\n\t      }\n\t    };\n\t  }\n\t\n\t  var service = getService(),\n\t      $animator = service('$animator'),\n\t      $animate = service('$animate');\n\t\n\t  // Returns a set of DOM manipulation functions based on which Angular version\n\t  // it should use\n\t  function getRenderer(attrs, scope) {\n\t    var statics = function() {\n\t      return {\n\t        enter: function (element, target, cb) { target.after(element); cb(); },\n\t        leave: function (element, cb) { element.remove(); cb(); }\n\t      };\n\t    };\n\t\n\t    if ($animate) {\n\t      return {\n\t        enter: function(element, target, cb) {\n\t          if (angular.version.minor > 2) {\n\t            $animate.enter(element, null, target).then(cb);\n\t          } else {\n\t            $animate.enter(element, null, target, cb);\n\t          }\n\t        },\n\t        leave: function(element, cb) {\n\t          if (angular.version.minor > 2) {\n\t            $animate.leave(element).then(cb);\n\t          } else {\n\t            $animate.leave(element, cb);\n\t          }\n\t        }\n\t      };\n\t    }\n\t\n\t    if ($animator) {\n\t      var animate = $animator && $animator(scope, attrs);\n\t\n\t      return {\n\t        enter: function(element, target, cb) {animate.enter(element, null, target); cb(); },\n\t        leave: function(element, cb) { animate.leave(element); cb(); }\n\t      };\n\t    }\n\t\n\t    return statics();\n\t  }\n\t\n\t  var directive = {\n\t    restrict: 'ECA',\n\t    terminal: true,\n\t    priority: 400,\n\t    transclude: 'element',\n\t    compile: function (tElement, tAttrs, $transclude) {\n\t      return function (scope, $element, attrs) {\n\t        var previousEl, currentEl, currentScope, latestLocals,\n\t            onloadExp     = attrs.onload || '',\n\t            autoScrollExp = attrs.autoscroll,\n\t            renderer      = getRenderer(attrs, scope),\n\t            inherited     = $element.inheritedData('$uiView');\n\t\n\t        scope.$on('$stateChangeSuccess', function() {\n\t          updateView(false);\n\t        });\n\t\n\t        updateView(true);\n\t\n\t        function cleanupLastView() {\n\t          if (previousEl) {\n\t            previousEl.remove();\n\t            previousEl = null;\n\t          }\n\t\n\t          if (currentScope) {\n\t            currentScope.$destroy();\n\t            currentScope = null;\n\t          }\n\t\n\t          if (currentEl) {\n\t            var $uiViewData = currentEl.data('$uiViewAnim');\n\t            renderer.leave(currentEl, function() {\n\t              $uiViewData.$$animLeave.resolve();\n\t              previousEl = null;\n\t            });\n\t\n\t            previousEl = currentEl;\n\t            currentEl = null;\n\t          }\n\t        }\n\t\n\t        function updateView(firstTime) {\n\t          var newScope,\n\t              name            = getUiViewName(scope, attrs, $element, $interpolate),\n\t              previousLocals  = name && $state.$current && $state.$current.locals[name];\n\t\n\t          if (!firstTime && previousLocals === latestLocals) return; // nothing to do\n\t          newScope = scope.$new();\n\t          latestLocals = $state.$current.locals[name];\n\t\n\t          /**\n\t           * @ngdoc event\n\t           * @name ui.router.state.directive:ui-view#$viewContentLoading\n\t           * @eventOf ui.router.state.directive:ui-view\n\t           * @eventType emits on ui-view directive scope\n\t           * @description\n\t           *\n\t           * Fired once the view **begins loading**, *before* the DOM is rendered.\n\t           *\n\t           * @param {Object} event Event object.\n\t           * @param {string} viewName Name of the view.\n\t           */\n\t          newScope.$emit('$viewContentLoading', name);\n\t\n\t          var clone = $transclude(newScope, function(clone) {\n\t            var animEnter = $q.defer(), animLeave = $q.defer();\n\t            var viewAnimData = {\n\t              $animEnter: animEnter.promise,\n\t              $animLeave: animLeave.promise,\n\t              $$animLeave: animLeave\n\t            };\n\t\n\t            clone.data('$uiViewAnim', viewAnimData);\n\t            renderer.enter(clone, $element, function onUiViewEnter() {\n\t              animEnter.resolve();\n\t              if(currentScope) {\n\t                currentScope.$emit('$viewContentAnimationEnded');\n\t              }\n\t\n\t              if (angular.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {\n\t                $uiViewScroll(clone);\n\t              }\n\t            });\n\t            cleanupLastView();\n\t          });\n\t\n\t          currentEl = clone;\n\t          currentScope = newScope;\n\t          /**\n\t           * @ngdoc event\n\t           * @name ui.router.state.directive:ui-view#$viewContentLoaded\n\t           * @eventOf ui.router.state.directive:ui-view\n\t           * @eventType emits on ui-view directive scope\n\t           * @description\n\t           * Fired once the view is **loaded**, *after* the DOM is rendered.\n\t           *\n\t           * @param {Object} event Event object.\n\t           * @param {string} viewName Name of the view.\n\t           */\n\t          currentScope.$emit('$viewContentLoaded', name);\n\t          currentScope.$eval(onloadExp);\n\t        }\n\t      };\n\t    }\n\t  };\n\t\n\t  return directive;\n\t}\n\t\n\t$ViewDirectiveFill.$inject = ['$compile', '$controller', '$state', '$interpolate'];\n\tfunction $ViewDirectiveFill (  $compile,   $controller,   $state,   $interpolate) {\n\t  return {\n\t    restrict: 'ECA',\n\t    priority: -400,\n\t    compile: function (tElement) {\n\t      var initial = tElement.html();\n\t      return function (scope, $element, attrs) {\n\t        var current = $state.$current,\n\t            name = getUiViewName(scope, attrs, $element, $interpolate),\n\t            locals  = current && current.locals[name];\n\t\n\t        if (! locals) {\n\t          return;\n\t        }\n\t\n\t        $element.data('$uiView', { name: name, state: locals.$$state });\n\t        $element.html(locals.$template ? locals.$template : initial);\n\t\n\t        var resolveData = angular.extend({}, locals);\n\t        scope[locals.$$resolveAs] = resolveData;\n\t\n\t        var link = $compile($element.contents());\n\t\n\t        if (locals.$$controller) {\n\t          locals.$scope = scope;\n\t          locals.$element = $element;\n\t          var controller = $controller(locals.$$controller, locals);\n\t          if (locals.$$controllerAs) {\n\t            scope[locals.$$controllerAs] = controller;\n\t            scope[locals.$$controllerAs][locals.$$resolveAs] = resolveData;\n\t          }\n\t          if (isFunction(controller.$onInit)) controller.$onInit();\n\t          $element.data('$ngControllerController', controller);\n\t          $element.children().data('$ngControllerController', controller);\n\t        }\n\t\n\t        link(scope);\n\t      };\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Shared ui-view code for both directives:\n\t * Given scope, element, and its attributes, return the view's name\n\t */\n\tfunction getUiViewName(scope, attrs, element, $interpolate) {\n\t  var name = $interpolate(attrs.uiView || attrs.name || '')(scope);\n\t  var uiViewCreatedBy = element.inheritedData('$uiView');\n\t  return name.indexOf('@') >= 0 ?  name :  (name + '@' + (uiViewCreatedBy ? uiViewCreatedBy.state.name : ''));\n\t}\n\t\n\tangular.module('ui.router.state').directive('uiView', $ViewDirective);\n\tangular.module('ui.router.state').directive('uiView', $ViewDirectiveFill);\n\t\n\tfunction parseStateRef(ref, current) {\n\t  var preparsed = ref.match(/^\\s*({[^}]*})\\s*$/), parsed;\n\t  if (preparsed) ref = current + '(' + preparsed[1] + ')';\n\t  parsed = ref.replace(/\\n/g, \" \").match(/^([^(]+?)\\s*(\\((.*)\\))?$/);\n\t  if (!parsed || parsed.length !== 4) throw new Error(\"Invalid state ref '\" + ref + \"'\");\n\t  return { state: parsed[1], paramExpr: parsed[3] || null };\n\t}\n\t\n\tfunction stateContext(el) {\n\t  var stateData = el.parent().inheritedData('$uiView');\n\t\n\t  if (stateData && stateData.state && stateData.state.name) {\n\t    return stateData.state;\n\t  }\n\t}\n\t\n\tfunction getTypeInfo(el) {\n\t  // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n\t  var isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';\n\t  var isForm = el[0].nodeName === \"FORM\";\n\t\n\t  return {\n\t    attr: isForm ? \"action\" : (isSvg ? 'xlink:href' : 'href'),\n\t    isAnchor: el.prop(\"tagName\").toUpperCase() === \"A\",\n\t    clickable: !isForm\n\t  };\n\t}\n\t\n\tfunction clickHook(el, $state, $timeout, type, current) {\n\t  return function(e) {\n\t    var button = e.which || e.button, target = current();\n\t\n\t    if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || el.attr('target'))) {\n\t      // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\n\t      var transition = $timeout(function() {\n\t        $state.go(target.state, target.params, target.options);\n\t      });\n\t      e.preventDefault();\n\t\n\t      // if the state has no URL, ignore one preventDefault from the <a> directive.\n\t      var ignorePreventDefaultCount = type.isAnchor && !target.href ? 1: 0;\n\t\n\t      e.preventDefault = function() {\n\t        if (ignorePreventDefaultCount-- <= 0) $timeout.cancel(transition);\n\t      };\n\t    }\n\t  };\n\t}\n\t\n\tfunction defaultOpts(el, $state) {\n\t  return { relative: stateContext(el) || $state.$current, inherit: true };\n\t}\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ui.router.state.directive:ui-sref\n\t *\n\t * @requires ui.router.state.$state\n\t * @requires $timeout\n\t *\n\t * @restrict A\n\t *\n\t * @description\n\t * A directive that binds a link (`<a>` tag) to a state. If the state has an associated\n\t * URL, the directive will automatically generate & update the `href` attribute via\n\t * the {@link ui.router.state.$state#methods_href $state.href()} method. Clicking\n\t * the link will trigger a state transition with optional parameters.\n\t *\n\t * Also middle-clicking, right-clicking, and ctrl-clicking on the link will be\n\t * handled natively by the browser.\n\t *\n\t * You can also use relative state paths within ui-sref, just like the relative\n\t * paths passed to `$state.go()`. You just need to be aware that the path is relative\n\t * to the state that the link lives in, in other words the state that loaded the\n\t * template containing the link.\n\t *\n\t * You can specify options to pass to {@link ui.router.state.$state#methods_go $state.go()}\n\t * using the `ui-sref-opts` attribute. Options are restricted to `location`, `inherit`,\n\t * and `reload`.\n\t *\n\t * @example\n\t * Here's an example of how you'd use ui-sref and how it would compile. If you have the\n\t * following template:\n\t * <pre>\n\t * <a ui-sref=\"home\">Home</a> | <a ui-sref=\"about\">About</a> | <a ui-sref=\"{page: 2}\">Next page</a>\n\t *\n\t * <ul>\n\t *     <li ng-repeat=\"contact in contacts\">\n\t *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n\t *     </li>\n\t * </ul>\n\t * </pre>\n\t *\n\t * Then the compiled html would be (assuming Html5Mode is off and current state is contacts):\n\t * <pre>\n\t * <a href=\"#/home\" ui-sref=\"home\">Home</a> | <a href=\"#/about\" ui-sref=\"about\">About</a> | <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n\t *\n\t * <ul>\n\t *     <li ng-repeat=\"contact in contacts\">\n\t *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n\t *     </li>\n\t *     <li ng-repeat=\"contact in contacts\">\n\t *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n\t *     </li>\n\t *     <li ng-repeat=\"contact in contacts\">\n\t *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n\t *     </li>\n\t * </ul>\n\t *\n\t * <a ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n\t * </pre>\n\t *\n\t * @param {string} ui-sref 'stateName' can be any valid absolute or relative state\n\t * @param {Object} ui-sref-opts options to pass to {@link ui.router.state.$state#methods_go $state.go()}\n\t */\n\t$StateRefDirective.$inject = ['$state', '$timeout'];\n\tfunction $StateRefDirective($state, $timeout) {\n\t  return {\n\t    restrict: 'A',\n\t    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n\t    link: function(scope, element, attrs, uiSrefActive) {\n\t      var ref    = parseStateRef(attrs.uiSref, $state.current.name);\n\t      var def    = { state: ref.state, href: null, params: null };\n\t      var type   = getTypeInfo(element);\n\t      var active = uiSrefActive[1] || uiSrefActive[0];\n\t      var unlinkInfoFn = null;\n\t      var hookFn;\n\t\n\t      def.options = extend(defaultOpts(element, $state), attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {});\n\t\n\t      var update = function(val) {\n\t        if (val) def.params = angular.copy(val);\n\t        def.href = $state.href(ref.state, def.params, def.options);\n\t\n\t        if (unlinkInfoFn) unlinkInfoFn();\n\t        if (active) unlinkInfoFn = active.$$addStateInfo(ref.state, def.params);\n\t        if (def.href !== null) attrs.$set(type.attr, def.href);\n\t      };\n\t\n\t      if (ref.paramExpr) {\n\t        scope.$watch(ref.paramExpr, function(val) { if (val !== def.params) update(val); }, true);\n\t        def.params = angular.copy(scope.$eval(ref.paramExpr));\n\t      }\n\t      update();\n\t\n\t      if (!type.clickable) return;\n\t      hookFn = clickHook(element, $state, $timeout, type, function() { return def; });\n\t      element[element.on ? 'on' : 'bind'](\"click\", hookFn);\n\t      scope.$on('$destroy', function() {\n\t        element[element.off ? 'off' : 'unbind'](\"click\", hookFn);\n\t      });\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ui.router.state.directive:ui-state\n\t *\n\t * @requires ui.router.state.uiSref\n\t *\n\t * @restrict A\n\t *\n\t * @description\n\t * Much like ui-sref, but will accept named $scope properties to evaluate for a state definition,\n\t * params and override options.\n\t *\n\t * @param {string} ui-state 'stateName' can be any valid absolute or relative state\n\t * @param {Object} ui-state-params params to pass to {@link ui.router.state.$state#methods_href $state.href()}\n\t * @param {Object} ui-state-opts options to pass to {@link ui.router.state.$state#methods_go $state.go()}\n\t */\n\t$StateRefDynamicDirective.$inject = ['$state', '$timeout'];\n\tfunction $StateRefDynamicDirective($state, $timeout) {\n\t  return {\n\t    restrict: 'A',\n\t    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n\t    link: function(scope, element, attrs, uiSrefActive) {\n\t      var type   = getTypeInfo(element);\n\t      var active = uiSrefActive[1] || uiSrefActive[0];\n\t      var group  = [attrs.uiState, attrs.uiStateParams || null, attrs.uiStateOpts || null];\n\t      var watch  = '[' + group.map(function(val) { return val || 'null'; }).join(', ') + ']';\n\t      var def    = { state: null, params: null, options: null, href: null };\n\t      var unlinkInfoFn = null;\n\t      var hookFn;\n\t\n\t      function runStateRefLink (group) {\n\t        def.state = group[0]; def.params = group[1]; def.options = group[2];\n\t        def.href = $state.href(def.state, def.params, def.options);\n\t\n\t        if (unlinkInfoFn) unlinkInfoFn();\n\t        if (active) unlinkInfoFn = active.$$addStateInfo(def.state, def.params);\n\t        if (def.href) attrs.$set(type.attr, def.href);\n\t      }\n\t\n\t      scope.$watch(watch, runStateRefLink, true);\n\t      runStateRefLink(scope.$eval(watch));\n\t\n\t      if (!type.clickable) return;\n\t      hookFn = clickHook(element, $state, $timeout, type, function() { return def; });\n\t      element[element.on ? 'on' : 'bind'](\"click\", hookFn);\n\t      scope.$on('$destroy', function() {\n\t        element[element.off ? 'off' : 'unbind'](\"click\", hookFn);\n\t      });\n\t    }\n\t  };\n\t}\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ui.router.state.directive:ui-sref-active\n\t *\n\t * @requires ui.router.state.$state\n\t * @requires ui.router.state.$stateParams\n\t * @requires $interpolate\n\t *\n\t * @restrict A\n\t *\n\t * @description\n\t * A directive working alongside ui-sref to add classes to an element when the\n\t * related ui-sref directive's state is active, and removing them when it is inactive.\n\t * The primary use-case is to simplify the special appearance of navigation menus\n\t * relying on `ui-sref`, by having the \"active\" state's menu button appear different,\n\t * distinguishing it from the inactive menu items.\n\t *\n\t * ui-sref-active can live on the same element as ui-sref or on a parent element. The first\n\t * ui-sref-active found at the same level or above the ui-sref will be used.\n\t *\n\t * Will activate when the ui-sref's target state or any child state is active. If you\n\t * need to activate only when the ui-sref target state is active and *not* any of\n\t * it's children, then you will use\n\t * {@link ui.router.state.directive:ui-sref-active-eq ui-sref-active-eq}\n\t *\n\t * @example\n\t * Given the following template:\n\t * <pre>\n\t * <ul>\n\t *   <li ui-sref-active=\"active\" class=\"item\">\n\t *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n\t *   </li>\n\t * </ul>\n\t * </pre>\n\t *\n\t *\n\t * When the app state is \"app.user\" (or any children states), and contains the state parameter \"user\" with value \"bilbobaggins\",\n\t * the resulting HTML will appear as (note the 'active' class):\n\t * <pre>\n\t * <ul>\n\t *   <li ui-sref-active=\"active\" class=\"item active\">\n\t *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n\t *   </li>\n\t * </ul>\n\t * </pre>\n\t *\n\t * The class name is interpolated **once** during the directives link time (any further changes to the\n\t * interpolated value are ignored).\n\t *\n\t * Multiple classes may be specified in a space-separated format:\n\t * <pre>\n\t * <ul>\n\t *   <li ui-sref-active='class1 class2 class3'>\n\t *     <a ui-sref=\"app.user\">link</a>\n\t *   </li>\n\t * </ul>\n\t * </pre>\n\t *\n\t * It is also possible to pass ui-sref-active an expression that evaluates\n\t * to an object hash, whose keys represent active class names and whose\n\t * values represent the respective state names/globs.\n\t * ui-sref-active will match if the current active state **includes** any of\n\t * the specified state names/globs, even the abstract ones.\n\t *\n\t * @Example\n\t * Given the following template, with \"admin\" being an abstract state:\n\t * <pre>\n\t * <div ui-sref-active=\"{'active': 'admin.*'}\">\n\t *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n\t * </div>\n\t * </pre>\n\t *\n\t * When the current state is \"admin.roles\" the \"active\" class will be applied\n\t * to both the <div> and <a> elements. It is important to note that the state\n\t * names/globs passed to ui-sref-active shadow the state provided by ui-sref.\n\t */\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ui.router.state.directive:ui-sref-active-eq\n\t *\n\t * @requires ui.router.state.$state\n\t * @requires ui.router.state.$stateParams\n\t * @requires $interpolate\n\t *\n\t * @restrict A\n\t *\n\t * @description\n\t * The same as {@link ui.router.state.directive:ui-sref-active ui-sref-active} but will only activate\n\t * when the exact target state used in the `ui-sref` is active; no child states.\n\t *\n\t */\n\t$StateRefActiveDirective.$inject = ['$state', '$stateParams', '$interpolate'];\n\tfunction $StateRefActiveDirective($state, $stateParams, $interpolate) {\n\t  return  {\n\t    restrict: \"A\",\n\t    controller: ['$scope', '$element', '$attrs', '$timeout', function ($scope, $element, $attrs, $timeout) {\n\t      var states = [], activeClasses = {}, activeEqClass, uiSrefActive;\n\t\n\t      // There probably isn't much point in $observing this\n\t      // uiSrefActive and uiSrefActiveEq share the same directive object with some\n\t      // slight difference in logic routing\n\t      activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);\n\t\n\t      try {\n\t        uiSrefActive = $scope.$eval($attrs.uiSrefActive);\n\t      } catch (e) {\n\t        // Do nothing. uiSrefActive is not a valid expression.\n\t        // Fall back to using $interpolate below\n\t      }\n\t      uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);\n\t      if (isObject(uiSrefActive)) {\n\t        forEach(uiSrefActive, function(stateOrName, activeClass) {\n\t          if (isString(stateOrName)) {\n\t            var ref = parseStateRef(stateOrName, $state.current.name);\n\t            addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);\n\t          }\n\t        });\n\t      }\n\t\n\t      // Allow uiSref to communicate with uiSrefActive[Equals]\n\t      this.$$addStateInfo = function (newState, newParams) {\n\t        // we already got an explicit state provided by ui-sref-active, so we\n\t        // shadow the one that comes from ui-sref\n\t        if (isObject(uiSrefActive) && states.length > 0) {\n\t          return;\n\t        }\n\t        var deregister = addState(newState, newParams, uiSrefActive);\n\t        update();\n\t        return deregister;\n\t      };\n\t\n\t      $scope.$on('$stateChangeSuccess', update);\n\t\n\t      function addState(stateName, stateParams, activeClass) {\n\t        var state = $state.get(stateName, stateContext($element));\n\t        var stateHash = createStateHash(stateName, stateParams);\n\t\n\t        var stateInfo = {\n\t          state: state || { name: stateName },\n\t          params: stateParams,\n\t          hash: stateHash\n\t        };\n\t\n\t        states.push(stateInfo);\n\t        activeClasses[stateHash] = activeClass;\n\t\n\t        return function removeState() {\n\t          var idx = states.indexOf(stateInfo);\n\t          if (idx !== -1) states.splice(idx, 1);\n\t        };\n\t      }\n\t\n\t      /**\n\t       * @param {string} state\n\t       * @param {Object|string} [params]\n\t       * @return {string}\n\t       */\n\t      function createStateHash(state, params) {\n\t        if (!isString(state)) {\n\t          throw new Error('state should be a string');\n\t        }\n\t        if (isObject(params)) {\n\t          return state + toJson(params);\n\t        }\n\t        params = $scope.$eval(params);\n\t        if (isObject(params)) {\n\t          return state + toJson(params);\n\t        }\n\t        return state;\n\t      }\n\t\n\t      // Update route state\n\t      function update() {\n\t        for (var i = 0; i < states.length; i++) {\n\t          if (anyMatch(states[i].state, states[i].params)) {\n\t            addClass($element, activeClasses[states[i].hash]);\n\t          } else {\n\t            removeClass($element, activeClasses[states[i].hash]);\n\t          }\n\t\n\t          if (exactMatch(states[i].state, states[i].params)) {\n\t            addClass($element, activeEqClass);\n\t          } else {\n\t            removeClass($element, activeEqClass);\n\t          }\n\t        }\n\t      }\n\t\n\t      function addClass(el, className) { $timeout(function () { el.addClass(className); }); }\n\t      function removeClass(el, className) { el.removeClass(className); }\n\t      function anyMatch(state, params) { return $state.includes(state.name, params); }\n\t      function exactMatch(state, params) { return $state.is(state.name, params); }\n\t\n\t      update();\n\t    }]\n\t  };\n\t}\n\t\n\tangular.module('ui.router.state')\n\t  .directive('uiSref', $StateRefDirective)\n\t  .directive('uiSrefActive', $StateRefActiveDirective)\n\t  .directive('uiSrefActiveEq', $StateRefActiveDirective)\n\t  .directive('uiState', $StateRefDynamicDirective);\n\t\n\t/**\n\t * @ngdoc filter\n\t * @name ui.router.state.filter:isState\n\t *\n\t * @requires ui.router.state.$state\n\t *\n\t * @description\n\t * Translates to {@link ui.router.state.$state#methods_is $state.is(\"stateName\")}.\n\t */\n\t$IsStateFilter.$inject = ['$state'];\n\tfunction $IsStateFilter($state) {\n\t  var isFilter = function (state, params) {\n\t    return $state.is(state, params);\n\t  };\n\t  isFilter.$stateful = true;\n\t  return isFilter;\n\t}\n\t\n\t/**\n\t * @ngdoc filter\n\t * @name ui.router.state.filter:includedByState\n\t *\n\t * @requires ui.router.state.$state\n\t *\n\t * @description\n\t * Translates to {@link ui.router.state.$state#methods_includes $state.includes('fullOrPartialStateName')}.\n\t */\n\t$IncludedByStateFilter.$inject = ['$state'];\n\tfunction $IncludedByStateFilter($state) {\n\t  var includesFilter = function (state, params, options) {\n\t    return $state.includes(state, params, options);\n\t  };\n\t  includesFilter.$stateful = true;\n\t  return  includesFilter;\n\t}\n\t\n\tangular.module('ui.router.state')\n\t  .filter('isState', $IsStateFilter)\n\t  .filter('includedByState', $IncludedByStateFilter);\n\t})(window, window.angular);\n\n/***/ },\n\n/***/ 179:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {module.exports = global[\"SVGMorpheus\"] = __webpack_require__(243);\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 193:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(232);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(11)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js!./../../../node_modules/sass-loader/index.js!./index.scss\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js!./../../../node_modules/sass-loader/index.js!./index.scss\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 202:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar module_1 = __webpack_require__(12);\n\t__webpack_require__(340);\n\t__webpack_require__(337);\n\t__webpack_require__(336);\n\t__webpack_require__(338);\n\t__webpack_require__(339);\n\t__webpack_require__(341);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = module_1.default;\n\n\n/***/ },\n\n/***/ 203:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar module_1 = __webpack_require__(158);\n\t__webpack_require__(342);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = module_1.default;\n\n\n/***/ },\n\n/***/ 204:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar home_controller_1 = __webpack_require__(344);\n\tvar sidenavl_controller_1 = __webpack_require__(345);\n\tvar content_controller_1 = __webpack_require__(343);\n\texports.initRouter = function ($urlRouterProvider, $stateProvider) {\n\t    $urlRouterProvider.otherwise(function ($injector) {\n\t        var $state = $injector.get(\"$state\");\n\t        $state.go(\"home\");\n\t    });\n\t    $stateProvider.state(\"home\", {\n\t        url: \"/\",\n\t        data: {\n\t            permissions: {\n\t                except: [\"anonymous\"],\n\t                only: [\"user\"]\n\t            }\n\t        },\n\t        views: {\n\t            \"\": {\n\t                controller: home_controller_1.HomeController,\n\t                controllerAs: \"homeCtl\",\n\t                template: __webpack_require__(282)(),\n\t            },\n\t            \"sidenavLeft@home\": {\n\t                controller: sidenavl_controller_1.SidenavLeftController,\n\t                controllerAs: \"sideLeftCtl\",\n\t                template: __webpack_require__(283)(),\n\t            },\n\t            \"content@home\": {\n\t                controller: content_controller_1.ContentController,\n\t                controllerAs: \"contentCtl\",\n\t                template: __webpack_require__(281)(),\n\t            }\n\t        }\n\t    });\n\t};\n\n\n/***/ },\n\n/***/ 208:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar _ = __webpack_require__(3);\n\tvar ngMaterialIcons = __webpack_require__(19);\n\tvar ngMaterial = __webpack_require__(7);\n\tvar Service = (function () {\n\t    function Service() {\n\t    }\n\t    return Service;\n\t}());\n\tService._name = \"svgUtils\";\n\tService.provider = [\"$q\", \"$templateRequest\", \"$templateCache\", \"ngMdIconService\", function ($q, $templateRequest, $templateCache, ngMdIconService) {\n\t        var Service = (function () {\n\t            function Service() {\n\t            }\n\t            Service.prototype.getAllIcons = function () {\n\t                return ngMdIconService.getShapes();\n\t            };\n\t            Service.prototype.loadSvgUrl = function (url) {\n\t                var defer = $q.defer();\n\t                var viewBox;\n\t                if ($templateCache.get(url)) {\n\t                    defer.resolve();\n\t                }\n\t                else {\n\t                    $templateRequest(url, true).then(function (response) {\n\t                        var svg = angular.element('<div>').append(response).find('svg')[0];\n\t                        viewBox = svg.attributes[\"viewBox\"];\n\t                        _.each(svg.querySelectorAll(\"[id]\"), function (g) {\n\t                            ngMdIconService.addShape(g.id, g.innerHTML);\n\t                            if (viewBox && viewBox.value) {\n\t                                ngMdIconService.addViewBox(g.id, viewBox.value);\n\t                            }\n\t                        });\n\t                        defer.resolve();\n\t                    }, defer.resolve);\n\t                }\n\t                return defer.promise;\n\t            };\n\t            return Service;\n\t        }());\n\t        return new Service();\n\t    }];\n\tvar module = angular.module(\"mdSvgModule\", [ngMaterialIcons, ngMaterial]);\n\tmodule.service(Service._name, Service.provider);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = \"\" + module.name;\n\n\n/***/ },\n\n/***/ 218:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**************************************************************************\n\t* AngularJS-nvD3, v1.0.9; MIT\n\t* http://krispo.github.io/angular-nvd3\n\t**************************************************************************/\n\t(function(window){\n\t\n\t    'use strict';\n\t    var nv = window.nv;\n\t\n\t    // Node.js or CommonJS\n\t    if (true) {\n\t        /* jshint -W020 */\n\t        nv = __webpack_require__(35);\n\t        /* jshint +W020 */\n\t    }\n\t\n\t    angular.module('nvd3', [])\n\t\n\t        .directive('nvd3', ['nvd3Utils', function(nvd3Utils){\n\t            return {\n\t                restrict: 'AE',\n\t                scope: {\n\t                    data: '=',      //chart data, [required]\n\t                    options: '=',   //chart options, according to nvd3 core api, [required]\n\t                    api: '=?',      //directive global api, [optional]\n\t                    events: '=?',   //global events that directive would subscribe to, [optional]\n\t                    config: '=?',    //global directive configuration, [optional]\n\t                    onReady: '&?' //callback function that is called with internal scope when directive is created [optional]\n\t                },\n\t                link: function(scope, element, attrs){\n\t                    var defaultConfig = {\n\t                        extended: false,\n\t                        visible: true,\n\t                        disabled: false,\n\t                        refreshDataOnly: true,\n\t                        deepWatchOptions: true,\n\t                        deepWatchData: true,\n\t                        deepWatchDataDepth: 2, // 0 - by reference (cheap), 1 - by collection item (the middle), 2 - by value (expensive)\n\t                        debounce: 10, // default 10ms, time silence to prevent refresh while multiple options changes at a time\n\t                        debounceImmediate: true // immediate flag for debounce function\n\t                    };\n\t\n\t                    //flag indicates if directive and chart is ready\n\t                    scope.isReady = false;\n\t\n\t                    //basic directive configuration\n\t                    scope._config = angular.extend(defaultConfig, scope.config);\n\t\n\t                    //directive global api\n\t                    scope.api = {\n\t                        // Fully refresh directive\n\t                        refresh: function(){\n\t                            scope.api.updateWithOptions();\n\t                            scope.isReady = true;\n\t                        },\n\t\n\t                        // Fully refresh directive with specified timeout\n\t                        refreshWithTimeout: function(t){\n\t                            setTimeout(function(){\n\t                                scope.api.refresh();\n\t                            }, t);\n\t                        },\n\t\n\t                        // Update chart layout (for example if container is resized)\n\t                        update: function() {\n\t                            if (scope.chart && scope.svg) {\n\t                                if (scope.options.chart.type === 'sunburstChart') {\n\t                                    scope.svg.datum(angular.copy(scope.data)).call(scope.chart);\n\t                                } else {\n\t                                    scope.svg.datum(scope.data).call(scope.chart);\n\t                                }\n\t                            } else {\n\t                                scope.api.refresh();\n\t                            }\n\t                        },\n\t\n\t                        // Update chart layout with specified timeout\n\t                        updateWithTimeout: function(t){\n\t                            setTimeout(function(){\n\t                                scope.api.update();\n\t                            }, t);\n\t                        },\n\t\n\t                        // Update chart with new options\n\t                        updateWithOptions: function(options){\n\t                            // set options\n\t                            if (!arguments.length) {\n\t                                options = scope.options;\n\t                            } else {\n\t                                scope.options = options;\n\t\n\t                                // return if options $watch is enabled\n\t                                if (scope._config.deepWatchOptions && !scope._config.disabled) return;\n\t                            }\n\t\n\t                            // Clearing\n\t                            scope.api.clearElement();\n\t\n\t                            // Exit if options are not yet bound\n\t                            if (angular.isDefined(options) === false) return;\n\t\n\t                            // Exit if chart is hidden\n\t                            if (!scope._config.visible) return;\n\t\n\t                            // Initialize chart with specific type\n\t                            scope.chart = nv.models[options.chart.type]();\n\t\n\t                            // Generate random chart ID\n\t                            scope.chart.id = Math.random().toString(36).substr(2, 15);\n\t\n\t                            angular.forEach(scope.chart, function(value, key){\n\t                                if (key[0] === '_');\n\t                                else if ([\n\t                                        'clearHighlights',\n\t                                        'highlightPoint',\n\t                                        'id',\n\t                                        'options',\n\t                                        'resizeHandler',\n\t                                        'state',\n\t                                        'open',\n\t                                        'close',\n\t                                        'tooltipContent'\n\t                                    ].indexOf(key) >= 0);\n\t\n\t                                else if (key === 'dispatch') {\n\t                                    if (options.chart[key] === undefined || options.chart[key] === null) {\n\t                                        if (scope._config.extended) options.chart[key] = {};\n\t                                    }\n\t                                    configureEvents(scope.chart[key], options.chart[key]);\n\t                                }\n\t\n\t                                else if ([\n\t                                        'bars',\n\t                                        'bars1',\n\t                                        'bars2',\n\t                                        'boxplot',\n\t                                        'bullet',\n\t                                        'controls',\n\t                                        'discretebar',\n\t                                        'distX',\n\t                                        'distY',\n\t                                        'focus',\n\t                                        'interactiveLayer',\n\t                                        'legend',\n\t                                        'lines',\n\t                                        'lines1',\n\t                                        'lines2',\n\t                                        'multibar',\n\t                                        'pie',\n\t                                        'scatter',\n\t                                        'scatters1',\n\t                                        'scatters2',\n\t                                        'sparkline',\n\t                                        'stack1',\n\t                                        'stack2',\n\t                                        'sunburst',\n\t                                        'tooltip',\n\t                                        'x2Axis',\n\t                                        'xAxis',\n\t                                        'y1Axis',\n\t                                        'y2Axis',\n\t                                        'y3Axis',\n\t                                        'y4Axis',\n\t                                        'yAxis',\n\t                                        'yAxis1',\n\t                                        'yAxis2'\n\t                                    ].indexOf(key) >= 0 ||\n\t                                        // stacked is a component for stackedAreaChart, but a boolean for multiBarChart and multiBarHorizontalChart\n\t                                    (key === 'stacked' && options.chart.type === 'stackedAreaChart')) {\n\t                                    if (options.chart[key] === undefined || options.chart[key] === null) {\n\t                                        if (scope._config.extended) options.chart[key] = {};\n\t                                    }\n\t                                    configure(scope.chart[key], options.chart[key], options.chart.type);\n\t                                }\n\t\n\t                                //TODO: need to fix bug in nvd3\n\t                                else if ((key === 'focusHeight') && options.chart.type === 'lineChart');\n\t                                else if ((key === 'focusHeight') && options.chart.type === 'lineWithFocusChart');\n\t                                else if ((key === 'xTickFormat' || key === 'yTickFormat') && options.chart.type === 'lineWithFocusChart');\n\t                                else if ((key === 'tooltips') && options.chart.type === 'boxPlotChart');\n\t                                else if ((key === 'tooltipXContent' || key === 'tooltipYContent') && options.chart.type === 'scatterChart');\n\t                                else if ((key === 'x' || key === 'y') && options.chart.type === 'forceDirectedGraph');\n\t\n\t                                else if (options.chart[key] === undefined || options.chart[key] === null){\n\t                                    if (scope._config.extended) {\n\t                                        if (key==='barColor')\n\t                                            options.chart[key] = value()();\n\t                                        else\n\t                                            options.chart[key] = value();\n\t                                    }\n\t                                }\n\t\n\t                                else scope.chart[key](options.chart[key]);\n\t                            });\n\t\n\t                            // Update with data\n\t                            scope.api.updateWithData();\n\t\n\t                            // Configure wrappers\n\t                            if (options['title'] || scope._config.extended) configureWrapper('title');\n\t                            if (options['subtitle'] || scope._config.extended) configureWrapper('subtitle');\n\t                            if (options['caption'] || scope._config.extended) configureWrapper('caption');\n\t\n\t\n\t                            // Configure styles\n\t                            if (options['styles'] || scope._config.extended) configureStyles();\n\t\n\t                            nv.addGraph(function() {\n\t                                if (!scope.chart) return;\n\t\n\t                                // Remove resize handler. Due to async execution should be placed here, not in the clearElement\n\t                                if (scope.chart.resizeHandler) scope.chart.resizeHandler.clear();\n\t\n\t                                // Update the chart when window resizes\n\t                                scope.chart.resizeHandler = nv.utils.windowResize(function() {\n\t                                    scope.chart && scope.chart.update && scope.chart.update();\n\t                                });\n\t\n\t                                /// Zoom feature\n\t                                if (options.chart.zoom !== undefined && [\n\t                                        'scatterChart',\n\t                                        'lineChart',\n\t                                        'candlestickBarChart',\n\t                                        'cumulativeLineChart',\n\t                                        'historicalBarChart',\n\t                                        'ohlcBarChart',\n\t                                        'stackedAreaChart'\n\t                                    ].indexOf(options.chart.type) > -1) {\n\t                                    nvd3Utils.zoom(scope, options);\n\t                                }\n\t\n\t                                return scope.chart;\n\t                            }, options.chart['callback']);\n\t                        },\n\t\n\t                        // Update chart with new data\n\t                        updateWithData: function (data){\n\t                            // set data\n\t                            if (!arguments.length) {\n\t                                if (scope.options.chart.type === 'sunburstChart') {\n\t                                    data = angular.copy(scope.data);\n\t                                } else {\n\t                                    data = scope.data;\n\t                                }\n\t                            } else {\n\t                                scope.data = data;\n\t\n\t                                // return if data $watch is enabled\n\t                                if (scope._config.deepWatchData && !scope._config.disabled) return;\n\t                            }\n\t\n\t                            if (data) {\n\t                                // remove whole svg element with old data\n\t                                d3.select(element[0]).select('svg').remove();\n\t\n\t                                var h, w;\n\t\n\t                                // Select the current element to add <svg> element and to render the chart in\n\t                                scope.svg = d3.select(element[0]).insert('svg', '.caption');\n\t                                if (h = scope.options.chart.height) {\n\t                                    if (!isNaN(+h)) h += 'px'; //check if height is number\n\t                                    scope.svg.attr('height', h).style({height: h});\n\t                                }\n\t                                if (w = scope.options.chart.width) {\n\t                                    if (!isNaN(+w)) w += 'px'; //check if width is number\n\t                                    scope.svg.attr('width', w).style({width: w});\n\t                                } else {\n\t                                    scope.svg.attr('width', '100%').style({width: '100%'});\n\t                                }\n\t\n\t                                scope.svg.datum(data).call(scope.chart);\n\t\n\t                                // update zooming if exists\n\t                                if (scope.chart && scope.chart.zoomRender) scope.chart.zoomRender();\n\t                            }\n\t                        },\n\t\n\t                        // Fully clear directive element\n\t                        clearElement: function (){\n\t                            element.find('.title').remove();\n\t                            element.find('.subtitle').remove();\n\t                            element.find('.caption').remove();\n\t                            element.empty();\n\t\n\t                            // remove tooltip if exists\n\t                            if (scope.chart && scope.chart.tooltip && scope.chart.tooltip.id) {\n\t                                d3.select('#' + scope.chart.tooltip.id()).remove();\n\t                            }\n\t\n\t                            // To be compatible with old nvd3 (v1.7.1)\n\t                            if (nv.graphs && scope.chart) {\n\t                                for (var i = nv.graphs.length - 1; i >= 0; i--) {\n\t                                    if (nv.graphs[i] && (nv.graphs[i].id === scope.chart.id)) {\n\t                                        nv.graphs.splice(i, 1);\n\t                                    }\n\t                                }\n\t                            }\n\t                            if (nv.tooltip && nv.tooltip.cleanup) {\n\t                                nv.tooltip.cleanup();\n\t                            }\n\t                            if (scope.chart && scope.chart.resizeHandler) scope.chart.resizeHandler.clear();\n\t                            scope.chart = null;\n\t                        },\n\t\n\t                        // Get full directive scope\n\t                        getScope: function(){ return scope; },\n\t\n\t                        // Get directive element\n\t                        getElement: function(){ return element; }\n\t                    };\n\t\n\t                    // Configure the chart model with the passed options\n\t                    function configure(chart, options, chartType){\n\t                        if (chart && options){\n\t                            angular.forEach(chart, function(value, key){\n\t                                if (key[0] === '_');\n\t                                else if (key === 'dispatch') {\n\t                                    if (options[key] === undefined || options[key] === null) {\n\t                                        if (scope._config.extended) options[key] = {};\n\t                                    }\n\t                                    configureEvents(value, options[key]);\n\t                                }\n\t                                else if (key === 'tooltip') {\n\t                                    if (options[key] === undefined || options[key] === null) {\n\t                                        if (scope._config.extended) options[key] = {};\n\t                                    }\n\t                                    configure(chart[key], options[key], chartType);\n\t                                }\n\t                                else if (key === 'contentGenerator') {\n\t                                    if (options[key]) chart[key](options[key]);\n\t                                }\n\t                                else if ([\n\t                                        'axis',\n\t                                        'clearHighlights',\n\t                                        'defined',\n\t                                        'highlightPoint',\n\t                                        'nvPointerEventsClass',\n\t                                        'options',\n\t                                        'rangeBand',\n\t                                        'rangeBands',\n\t                                        'scatter',\n\t                                        'open',\n\t                                        'close',\n\t                                        'node'\n\t                                    ].indexOf(key) === -1) {\n\t                                    if (options[key] === undefined || options[key] === null){\n\t                                        if (scope._config.extended) options[key] = value();\n\t                                    }\n\t                                    else chart[key](options[key]);\n\t                                }\n\t                            });\n\t                        }\n\t                    }\n\t\n\t                    // Subscribe to the chart events (contained in 'dispatch')\n\t                    // and pass eventHandler functions in the 'options' parameter\n\t                    function configureEvents(dispatch, options){\n\t                        if (dispatch && options){\n\t                            angular.forEach(dispatch, function(value, key){\n\t                                if (options[key] === undefined || options[key] === null){\n\t                                    if (scope._config.extended) options[key] = value.on;\n\t                                }\n\t                                else dispatch.on(key + '._', options[key]);\n\t                            });\n\t                        }\n\t                    }\n\t\n\t                    // Configure 'title', 'subtitle', 'caption'.\n\t                    // nvd3 has no sufficient models for it yet.\n\t                    function configureWrapper(name){\n\t                        var _ = nvd3Utils.deepExtend(defaultWrapper(name), scope.options[name] || {});\n\t\n\t                        if (scope._config.extended) scope.options[name] = _;\n\t\n\t                        var wrapElement = angular.element('<div></div>').html(_['html'] || '')\n\t                            .addClass(name).addClass(_.className)\n\t                            .removeAttr('style')\n\t                            .css(_.css);\n\t\n\t                        if (!_['html']) wrapElement.text(_.text);\n\t\n\t                        if (_.enable) {\n\t                            if (name === 'title') element.prepend(wrapElement);\n\t                            else if (name === 'subtitle') angular.element(element[0].querySelector('.title')).after(wrapElement);\n\t                            else if (name === 'caption') element.append(wrapElement);\n\t                        }\n\t                    }\n\t\n\t                    // Add some styles to the whole directive element\n\t                    function configureStyles(){\n\t                        var _ = nvd3Utils.deepExtend(defaultStyles(), scope.options['styles'] || {});\n\t\n\t                        if (scope._config.extended) scope.options['styles'] = _;\n\t\n\t                        angular.forEach(_.classes, function(value, key){\n\t                            value ? element.addClass(key) : element.removeClass(key);\n\t                        });\n\t\n\t                        element.removeAttr('style').css(_.css);\n\t                    }\n\t\n\t                    // Default values for 'title', 'subtitle', 'caption'\n\t                    function defaultWrapper(_){\n\t                        switch (_){\n\t                            case 'title': return {\n\t                                enable: false,\n\t                                text: 'Write Your Title',\n\t                                className: 'h4',\n\t                                css: {\n\t                                    width: scope.options.chart.width + 'px',\n\t                                    textAlign: 'center'\n\t                                }\n\t                            };\n\t                            case 'subtitle': return {\n\t                                enable: false,\n\t                                text: 'Write Your Subtitle',\n\t                                css: {\n\t                                    width: scope.options.chart.width + 'px',\n\t                                    textAlign: 'center'\n\t                                }\n\t                            };\n\t                            case 'caption': return {\n\t                                enable: false,\n\t                                text: 'Figure 1. Write Your Caption text.',\n\t                                css: {\n\t                                    width: scope.options.chart.width + 'px',\n\t                                    textAlign: 'center'\n\t                                }\n\t                            };\n\t                        }\n\t                    }\n\t\n\t                    // Default values for styles\n\t                    function defaultStyles(){\n\t                        return {\n\t                            classes: {\n\t                                'with-3d-shadow': true,\n\t                                'with-transitions': true,\n\t                                'gallery': false\n\t                            },\n\t                            css: {}\n\t                        };\n\t                    }\n\t\n\t                    /* Event Handling */\n\t                    // Watching on options changing\n\t                    if (scope._config.deepWatchOptions) {\n\t                        scope.$watch('options', nvd3Utils.debounce(function(newOptions){\n\t                            if (!scope._config.disabled) scope.api.refresh();\n\t                        }, scope._config.debounce, scope._config.debounceImmediate), true);\n\t                    }\n\t\n\t                    // Watching on data changing\n\t                    function dataWatchFn(newData, oldData) {\n\t                        if (newData !== oldData){\n\t                            if (!scope._config.disabled) {\n\t                                scope._config.refreshDataOnly ? scope.api.update() : scope.api.refresh(); // if wanted to refresh data only, use update method, otherwise use full refresh.\n\t                            }\n\t                        }\n\t                    }\n\t                    if (scope._config.deepWatchData) {\n\t                        if (scope._config.deepWatchDataDepth === 1) {\n\t                            scope.$watchCollection('data', dataWatchFn);\n\t                        } else {\n\t                            scope.$watch('data', dataWatchFn, scope._config.deepWatchDataDepth === 2);\n\t                        }\n\t                    }\n\t\n\t                    // Watching on config changing\n\t                    scope.$watch('config', function(newConfig, oldConfig){\n\t                        if (newConfig !== oldConfig){\n\t                            scope._config = angular.extend(defaultConfig, newConfig);\n\t                            scope.api.refresh();\n\t                        }\n\t                    }, true);\n\t\n\t                    // Refresh chart first time if deepWatchOptions and deepWatchData are false\n\t                    if (!scope._config.deepWatchOptions && !scope._config.deepWatchData) {\n\t                        scope.api.refresh();\n\t                    }\n\t\n\t                    //subscribe on global events\n\t                    angular.forEach(scope.events, function(eventHandler, event){\n\t                        scope.$on(event, function(e, args){\n\t                            return eventHandler(e, scope, args);\n\t                        });\n\t                    });\n\t\n\t                    // remove completely when directive is destroyed\n\t                    element.on('$destroy', function () {\n\t                        scope.api.clearElement();\n\t                    });\n\t\n\t                    // trigger onReady callback if directive is ready\n\t                    scope.$watch('isReady', function(isReady){\n\t                        if (isReady) {\n\t                            if (scope.onReady && typeof scope.onReady() === 'function') scope.onReady()(scope, element);\n\t                        }\n\t                    });\n\t                }\n\t            };\n\t        }])\n\t\n\t        .factory('nvd3Utils', function(){\n\t            return {\n\t                debounce: function(func, wait, immediate) {\n\t                    var timeout;\n\t                    return function() {\n\t                        var context = this, args = arguments;\n\t                        var later = function() {\n\t                            timeout = null;\n\t                            if (!immediate) func.apply(context, args);\n\t                        };\n\t                        var callNow = immediate && !timeout;\n\t                        clearTimeout(timeout);\n\t                        timeout = setTimeout(later, wait);\n\t                        if (callNow) func.apply(context, args);\n\t                    };\n\t                },\n\t                deepExtend: function(dst){\n\t                    var me = this;\n\t                    angular.forEach(arguments, function(obj) {\n\t                        if (obj !== dst) {\n\t                            angular.forEach(obj, function(value, key) {\n\t                                if (dst[key] && dst[key].constructor && dst[key].constructor === Object) {\n\t                                    me.deepExtend(dst[key], value);\n\t                                } else {\n\t                                    dst[key] = value;\n\t                                }\n\t                            });\n\t                        }\n\t                    });\n\t                    return dst;\n\t                },\n\t                zoom: function(scope, options) {\n\t                    var zoom = options.chart.zoom;\n\t\n\t                    // check if zoom enabled\n\t                    var enabled = (typeof zoom.enabled === 'undefined' || zoom.enabled === null) ? true : zoom.enabled;\n\t                    if (!enabled) return;\n\t\n\t                    var xScale = scope.chart.xAxis.scale()\n\t                        , yScale = scope.chart.yAxis.scale()\n\t                        , xDomain = scope.chart.xDomain || xScale.domain\n\t                        , yDomain = scope.chart.yDomain || yScale.domain\n\t                        , x_boundary = xScale.domain().slice()\n\t                        , y_boundary = yScale.domain().slice()\n\t\n\t                    // initialize zoom options\n\t                        , scale = zoom.scale || 1\n\t                        , translate = zoom.translate || [0, 0]\n\t                        , scaleExtent = zoom.scaleExtent || [1, 10]\n\t                        , useFixedDomain = zoom.useFixedDomain || false\n\t                        , useNiceScale = zoom.useNiceScale || false\n\t                        , horizontalOff = zoom.horizontalOff || false\n\t                        , verticalOff = zoom.verticalOff || false\n\t                        , unzoomEventType = zoom.unzoomEventType || 'dblclick.zoom'\n\t\n\t                    // auxiliary functions\n\t                        , fixDomain\n\t                        , d3zoom\n\t                        , zoomed\n\t                        , unzoomed\n\t                        , zoomend\n\t                        ;\n\t\n\t                    // ensure nice axis\n\t                    if (useNiceScale) {\n\t                        xScale.nice();\n\t                        yScale.nice();\n\t                    }\n\t\n\t                    // fix domain\n\t                    fixDomain = function (domain, boundary) {\n\t                        domain[0] = Math.min(Math.max(domain[0], boundary[0]), boundary[1] - boundary[1] / scaleExtent[1]);\n\t                        domain[1] = Math.max(boundary[0] + boundary[1] / scaleExtent[1], Math.min(domain[1], boundary[1]));\n\t                        return domain;\n\t                    };\n\t\n\t                    // zoom event handler\n\t                    zoomed = function () {\n\t                        if (zoom.zoomed !== undefined) {\n\t                            var domains = zoom.zoomed(xScale.domain(), yScale.domain());\n\t                            if (!horizontalOff) xDomain([domains.x1, domains.x2]);\n\t                            if (!verticalOff) yDomain([domains.y1, domains.y2]);\n\t                        } else {\n\t                            if (!horizontalOff) xDomain(useFixedDomain ? fixDomain(xScale.domain(), x_boundary) : xScale.domain());\n\t                            if (!verticalOff) yDomain(useFixedDomain ? fixDomain(yScale.domain(), y_boundary) : yScale.domain());\n\t                        }\n\t                        if (scope.chart) scope.chart.update();\n\t                    };\n\t\n\t                    // unzoomed event handler\n\t                    unzoomed = function () {\n\t                        if (zoom.unzoomed !== undefined) {\n\t                            var domains = zoom.unzoomed(xScale.domain(), yScale.domain());\n\t                            if (!horizontalOff) xDomain([domains.x1, domains.x2]);\n\t                            if (!verticalOff) yDomain([domains.y1, domains.y2]);\n\t                        } else {\n\t                            if (!horizontalOff) xDomain(x_boundary);\n\t                            if (!verticalOff) yDomain(y_boundary);\n\t                        }\n\t                        d3zoom.scale(scale).translate(translate);\n\t                        if (scope.chart) scope.chart.update();\n\t                    };\n\t\n\t                    // zoomend event handler\n\t                    zoomend = function () {\n\t                        if (zoom.zoomend !== undefined) {\n\t                            zoom.zoomend();\n\t                        }\n\t                    };\n\t\n\t                    // create d3 zoom handler\n\t                    d3zoom = d3.behavior.zoom()\n\t                        .x(xScale)\n\t                        .y(yScale)\n\t                        .scaleExtent(scaleExtent)\n\t                        .on('zoom', zoomed)\n\t                        .on('zoomend', zoomend);\n\t\n\t                    if (scope.svg) {\n\t                        scope.svg.call(d3zoom);\n\t\n\t                        d3zoom.scale(scale).translate(translate).event(scope.svg);\n\t\n\t                        if (unzoomEventType !== 'none') scope.svg.on(unzoomEventType, unzoomed);\n\t                    }\n\t\n\t                    if (scope.chart)\n\t                        scope.chart.zoomRender = function(){\n\t                            // reset zoom scale and translate\n\t                            d3zoom.scale(scale).translate(translate);\n\t\n\t                            // update scale\n\t                            xScale = scope.chart.xAxis.scale();\n\t                            yScale = scope.chart.yAxis.scale();\n\t                            xDomain = scope.chart.xDomain || xScale.domain;\n\t                            yDomain = scope.chart.yDomain || yScale.domain;\n\t                            x_boundary = xScale.domain().slice();\n\t                            y_boundary = yScale.domain().slice();\n\t\n\t                            // update zoom scale\n\t                            d3zoom.x(xScale).y(yScale);\n\t\n\t                            scope.svg.call(d3zoom);\n\t\n\t                            if (unzoomEventType !== 'none') scope.svg.on(unzoomEventType, unzoomed);\n\t                        };\n\t                }\n\t            };\n\t        });\n\t})(window);\n\n\n/***/ },\n\n/***/ 231:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(10)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".side-menu li,.side-menu ul{padding:0;margin:0}.side-menu ul li button{text-align:left}.side-menu a,.side-menu button{padding:0;margin:0}.side-menu a>md-content,.side-menu button>md-content{padding-left:5px}.side-menu .side-menu-child{position:relative;display:block}.side-menu .side-menu-child a,.side-menu .side-menu-child button{border-radius:0;background:transparent}.side-menu .side-menu-child a:hover>md-content:before,.side-menu .side-menu-child button:hover>md-content:before{display:block}.side-menu .side-menu-child>ul li a,.side-menu .side-menu-child>ul li button{padding-left:25px}.side-menu .side-menu-child>ul li a:before,.side-menu .side-menu-child>ul li button:before{display:none;background-color:transparent;padding-left:20px;content:\\\"\\\";position:absolute;z-index:1;left:0;top:0;bottom:0;border-left:3px solid #e2e2e2}.side-menu .side-menu-child .side-menu-child ul li a,.side-menu .side-menu-child .side-menu-child ul li button{padding-left:50px}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 232:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(10)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".logo{height:64px;min-height:64px!important;line-height:64px;margin:5px;padding-left:64px;background:transparent url(\" + __webpack_require__(359) + \") no-repeat 0 0;background-size:contain}.logo.center{background-position:top;height:150px}.gridster .gridster-item{overflow:hidden}.md-no-padding{padding:0}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 243:\n/***/ function(module, exports) {\n\n\t/*!\n\t * SVG Morpheus v0.3.0\n\t * https://github.com/alexk111/SVG-Morpheus\n\t *\n\t * Copyright (c) 2016 Alex Kaul\n\t * License: MIT\n\t *\n\t * Generated at Saturday, May 7th, 2016, 4:52:57 PM\n\t */\n\tvar SVGMorpheus=(function() {\n\t'use strict';\n\t\n\t/*\n\t * Easing functions\n\t */\n\t\n\tvar easings={};\n\teasings['circ-in']=function (t) {\n\t  return -1 * (Math.sqrt(1 - t*t) - 1);\n\t};\n\teasings['circ-out']=function (t) {\n\t  return Math.sqrt(1 - (t=t-1)*t);\n\t};\n\teasings['circ-in-out']=function (t) {\n\t  if ((t/=1/2) < 1) return -1/2 * (Math.sqrt(1 - t*t) - 1);\n\t  return 1/2 * (Math.sqrt(1 - (t-=2)*t) + 1);\n\t};\n\teasings['cubic-in']=function (t) { return t*t*t };\n\teasings['cubic-out']=function (t) { return (--t)*t*t+1 };\n\teasings['cubic-in-out']=function (t) { return t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1 };\n\teasings['elastic-in']=function (t) {\n\t  var s=1.70158;var p=0;var a=1;\n\t  if (t==0) return 0;  if (t==1) return 1;  if (!p) p=.3;\n\t  if (a < Math.abs(1)) { a=1; var s=p/4; }\n\t  else var s = p/(2*Math.PI) * Math.asin (1/a);\n\t  return -(a*Math.pow(2,10*(t-=1)) * Math.sin( (t-s)*(2*Math.PI)/p ));\n\t};\n\teasings['elastic-out']=function (t) {\n\t  var s=1.70158;var p=0;var a=1;\n\t  if (t==0) return 0;  if (t==1) return 1;  if (!p) p=.3;\n\t  if (a < Math.abs(1)) { a=1; var s=p/4; }\n\t  else var s = p/(2*Math.PI) * Math.asin (1/a);\n\t  return a*Math.pow(2,-10*t) * Math.sin( (t-s)*(2*Math.PI)/p ) + 1;\n\t};\n\teasings['elastic-in-out']=function (t) {\n\t  var s=1.70158;var p=0;var a=1;\n\t  if (t==0) return 0;  if ((t/=1/2)==2) return 1;  if (!p) p=1*(.3*1.5);\n\t  if (a < Math.abs(1)) { a=1; var s=p/4; }\n\t  else var s = p/(2*Math.PI) * Math.asin (1/a);\n\t  if (t < 1) return -.5*(a*Math.pow(2,10*(t-=1)) * Math.sin( (t-s)*(2*Math.PI)/p ));\n\t  return a*Math.pow(2,-10*(t-=1)) * Math.sin( (t-s)*(2*Math.PI)/p )*.5 + 1;\n\t};\n\teasings['expo-in']=function (t) {\n\t  return (t==0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t};\n\teasings['expo-out']=function (t) {\n\t  return (t==1) ? 1 : 1-Math.pow(2, -10 * t);\n\t};\n\teasings['expo-in-out']=function (t) {\n\t  if (t==0) return 0;\n\t  if (t==1) return 1;\n\t  if ((t/=1/2) < 1) return 1/2 * Math.pow(2, 10 * (t - 1));\n\t  return 1/2 * (-Math.pow(2, -10 * --t) + 2);\n\t};\n\teasings['linear']=function (t) { return t };\n\teasings['quad-in']=function (t) { return t*t };\n\teasings['quad-out']=function (t) { return t*(2-t) };\n\teasings['quad-in-out']=function (t) { return t<.5 ? 2*t*t : -1+(4-2*t)*t };\n\teasings['quart-in']=function (t) { return t*t*t*t };\n\teasings['quart-out']=function (t) { return 1-(--t)*t*t*t };\n\teasings['quart-in-out']=function (t) { return t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t };\n\teasings['quint-in']=function (t) { return t*t*t*t*t };\n\teasings['quint-out']=function (t) { return 1+(--t)*t*t*t*t };\n\teasings['quint-in-out']=function (t) { return t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t };\n\teasings['sine-in']=function (t) {\n\t  return 1-Math.cos(t * (Math.PI/2));\n\t};\n\teasings['sine-out']=function (t) {\n\t  return Math.sin(t * (Math.PI/2));\n\t};\n\teasings['sine-in-out']=function (t) {\n\t  return 1/2 * (1-Math.cos(Math.PI*t));\n\t};\n\t\n\t\n\t/*\n\t * Helper functions\n\t */\n\t\n\tvar _reqAnimFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.oRequestAnimationFrame;\n\tvar _cancelAnimFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.oCancelAnimationFrame;\n\t\n\t// Calculate style\n\tfunction styleNormCalc(styleNormFrom, styleNormTo, progress) {\n\t  var i, len, styleNorm={};\n\t  for(i in styleNormFrom) {\n\t    switch (i) {\n\t      case 'fill':\n\t      case 'stroke':\n\t        styleNorm[i]=clone(styleNormFrom[i]);\n\t        styleNorm[i].r=styleNormFrom[i].r+(styleNormTo[i].r-styleNormFrom[i].r)*progress;\n\t        styleNorm[i].g=styleNormFrom[i].g+(styleNormTo[i].g-styleNormFrom[i].g)*progress;\n\t        styleNorm[i].b=styleNormFrom[i].b+(styleNormTo[i].b-styleNormFrom[i].b)*progress;\n\t        styleNorm[i].opacity=styleNormFrom[i].opacity+(styleNormTo[i].opacity-styleNormFrom[i].opacity)*progress;\n\t        break;\n\t      case 'opacity':\n\t      case 'fill-opacity':\n\t      case 'stroke-opacity':\n\t      case 'stroke-width':\n\t        styleNorm[i]=styleNormFrom[i]+(styleNormTo[i]-styleNormFrom[i])*progress;\n\t        break;\n\t    }\n\t  }\n\t  return styleNorm;\n\t}\n\t\n\tfunction styleNormToString(styleNorm) {\n\t  var i;\n\t  var style={};\n\t  for(i in styleNorm) {\n\t    switch (i) {\n\t      case 'fill':\n\t      case 'stroke':\n\t        style[i]=rgbToString(styleNorm[i]);\n\t        break;\n\t      case 'opacity':\n\t      case 'fill-opacity':\n\t      case 'stroke-opacity':\n\t      case 'stroke-width':\n\t        style[i]=styleNorm[i];\n\t        break;\n\t    }\n\t  }\n\t  return style;\n\t}\n\t\n\tfunction styleToNorm(styleFrom, styleTo) {\n\t  var styleNorm=[{},{}];\n\t  var i;\n\t  for(i in styleFrom) {\n\t    switch(i) {\n\t      case 'fill':\n\t      case 'stroke':\n\t        styleNorm[0][i]=getRGB(styleFrom[i]);\n\t        if(styleTo[i]===undefined) {\n\t          styleNorm[1][i]=getRGB(styleFrom[i]);\n\t          styleNorm[1][i].opacity=0;\n\t        }\n\t        break;\n\t      case 'opacity':\n\t      case 'fill-opacity':\n\t      case 'stroke-opacity':\n\t      case 'stroke-width':\n\t        styleNorm[0][i]=styleFrom[i];\n\t        if(styleTo[i]===undefined) {\n\t          styleNorm[1][i]=1;\n\t        }\n\t        break;\n\t    }\n\t  }\n\t  for(i in styleTo) {\n\t    switch(i) {\n\t      case 'fill':\n\t      case 'stroke':\n\t        styleNorm[1][i]=getRGB(styleTo[i]);\n\t        if(styleFrom[i]===undefined) {\n\t          styleNorm[0][i]=getRGB(styleTo[i]);\n\t          styleNorm[0][i].opacity=0;\n\t        }\n\t        break;\n\t      case 'opacity':\n\t      case 'fill-opacity':\n\t      case 'stroke-opacity':\n\t      case 'stroke-width':\n\t        styleNorm[1][i]=styleTo[i];\n\t        if(styleFrom[i]===undefined) {\n\t          styleNorm[0][i]=1;\n\t        }\n\t        break;\n\t    }\n\t  }\n\t  return styleNorm;\n\t}\n\t\n\t// Calculate transform progress\n\tfunction transCalc(transFrom, transTo, progress) {\n\t  var res={};\n\t  for(var i in transFrom) {\n\t    switch(i) {\n\t      case 'rotate':\n\t        res[i]=[0,0,0];\n\t        for(var j=0;j<3;j++) {\n\t          res[i][j]=transFrom[i][j]+(transTo[i][j]-transFrom[i][j])*progress;\n\t        }\n\t        break;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\tfunction trans2string(trans) {\n\t  var res='';\n\t  if(!!trans.rotate) {\n\t    res+='rotate('+trans.rotate.join(' ')+')';\n\t  }\n\t  return res;\n\t}\n\t\n\t// Calculate curve progress\n\tfunction curveCalc(curveFrom, curveTo, progress) {\n\t  var curve=[];\n\t  for(var i=0,len1=curveFrom.length;i<len1;i++) {\n\t    curve.push([curveFrom[i][0]]);\n\t    for(var j=1,len2=curveFrom[i].length;j<len2;j++) {\n\t      curve[i].push(curveFrom[i][j]+(curveTo[i][j]-curveFrom[i][j])*progress);\n\t    }\n\t  }\n\t  return curve;\n\t}\n\t\n\tfunction clone(obj) {\n\t  var copy;\n\t\n\t  // Handle Array\n\t  if (obj instanceof Array) {\n\t    copy = [];\n\t    for (var i = 0, len = obj.length; i < len; i++) {\n\t      copy[i] = clone(obj[i]);\n\t    }\n\t    return copy;\n\t  }\n\t\n\t  // Handle Object\n\t  if (obj instanceof Object) {\n\t    copy = {};\n\t    for (var attr in obj) {\n\t      if (obj.hasOwnProperty(attr)) {\n\t        copy[attr] = clone(obj[attr]);\n\t      }\n\t    }\n\t    return copy;\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\t\n\t\n\t/*\n\t * Useful things from Adobe's Snap.svg adopted to the library needs\n\t */\n\t\n\t/*\n\t * Paths\n\t */\n\t\n\tvar spaces = \"\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029\";\n\tvar pathCommand = new RegExp(\"([a-z])[\" + spaces + \",]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\" + spaces + \"]*,?[\" + spaces + \"]*)+)\", \"ig\");\n\tvar pathValues = new RegExp(\"(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[\" + spaces + \"]*,?[\" + spaces + \"]*\", \"ig\");\n\t\n\t// Parses given path string into an array of arrays of path segments\n\tvar parsePathString = function (pathString) {\n\t  if (!pathString) {\n\t    return null;\n\t  }\n\t\n\t  if(typeof pathString === typeof []) {\n\t    return pathString;\n\t  } else {\n\t    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n\t        data = [];\n\t\n\t    String(pathString).replace(pathCommand, function (a, b, c) {\n\t      var params = [],\n\t          name = b.toLowerCase();\n\t      c.replace(pathValues, function (a, b) {\n\t        b && params.push(+b);\n\t      });\n\t      if (name == \"m\" && params.length > 2) {\n\t        data.push([b].concat(params.splice(0, 2)));\n\t        name = \"l\";\n\t        b = b == \"m\" ? \"l\" : \"L\";\n\t      }\n\t      if (name == \"o\" && params.length == 1) {\n\t        data.push([b, params[0]]);\n\t      }\n\t      if (name == \"r\") {\n\t        data.push([b].concat(params));\n\t      } else while (params.length >= paramCounts[name]) {\n\t        data.push([b].concat(params.splice(0, paramCounts[name])));\n\t        if (!paramCounts[name]) {\n\t          break;\n\t        }\n\t      }\n\t    });\n\t\n\t    return data;\n\t  }\n\t};\n\t\n\t// http://schepers.cc/getting-to-the-point\n\tvar catmullRom2bezier=function(crp, z) {\n\t  var d = [];\n\t  for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n\t    var p = [\n\t              {x: +crp[i - 2], y: +crp[i - 1]},\n\t              {x: +crp[i],     y: +crp[i + 1]},\n\t              {x: +crp[i + 2], y: +crp[i + 3]},\n\t              {x: +crp[i + 4], y: +crp[i + 5]}\n\t            ];\n\t    if (z) {\n\t      if (!i) {\n\t        p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n\t      } else if (iLen - 4 == i) {\n\t        p[3] = {x: +crp[0], y: +crp[1]};\n\t      } else if (iLen - 2 == i) {\n\t        p[2] = {x: +crp[0], y: +crp[1]};\n\t        p[3] = {x: +crp[2], y: +crp[3]};\n\t      }\n\t    } else {\n\t      if (iLen - 4 == i) {\n\t        p[3] = p[2];\n\t      } else if (!i) {\n\t        p[0] = {x: +crp[i], y: +crp[i + 1]};\n\t      }\n\t    }\n\t    d.push([\"C\",\n\t          (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n\t          (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n\t          (p[1].x + 6 * p[2].x - p[3].x) / 6,\n\t          (p[1].y + 6*p[2].y - p[3].y) / 6,\n\t          p[2].x,\n\t          p[2].y\n\t    ]);\n\t  }\n\t\n\t  return d;\n\t\n\t};\n\t\n\tvar ellipsePath=function(x, y, rx, ry, a) {\n\t  if (a == null && ry == null) {\n\t    ry = rx;\n\t  }\n\t  x = +x;\n\t  y = +y;\n\t  rx = +rx;\n\t  ry = +ry;\n\t  if (a != null) {\n\t    var rad = Math.PI / 180,\n\t        x1 = x + rx * Math.cos(-ry * rad),\n\t        x2 = x + rx * Math.cos(-a * rad),\n\t        y1 = y + rx * Math.sin(-ry * rad),\n\t        y2 = y + rx * Math.sin(-a * rad),\n\t        res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n\t  } else {\n\t    res = [\n\t        [\"M\", x, y],\n\t        [\"m\", 0, -ry],\n\t        [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n\t        [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n\t        [\"z\"]\n\t    ];\n\t  }\n\t  return res;\n\t};\n\t\n\tvar pathToAbsolute=function(pathArray) {\n\t  pathArray = parsePathString(pathArray);\n\t\n\t  if (!pathArray || !pathArray.length) {\n\t    return [[\"M\", 0, 0]];\n\t  }\n\t  var res = [],\n\t      x = 0,\n\t      y = 0,\n\t      mx = 0,\n\t      my = 0,\n\t      start = 0,\n\t      pa0;\n\t  if (pathArray[0][0] == \"M\") {\n\t    x = +pathArray[0][1];\n\t    y = +pathArray[0][2];\n\t    mx = x;\n\t    my = y;\n\t    start++;\n\t    res[0] = [\"M\", x, y];\n\t  }\n\t  var crz = pathArray.length == 3 &&\n\t      pathArray[0][0] == \"M\" &&\n\t      pathArray[1][0].toUpperCase() == \"R\" &&\n\t      pathArray[2][0].toUpperCase() == \"Z\";\n\t  for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n\t    res.push(r = []);\n\t    pa = pathArray[i];\n\t    pa0 = pa[0];\n\t    if (pa0 != pa0.toUpperCase()) {\n\t      r[0] = pa0.toUpperCase();\n\t      switch (r[0]) {\n\t        case \"A\":\n\t          r[1] = pa[1];\n\t          r[2] = pa[2];\n\t          r[3] = pa[3];\n\t          r[4] = pa[4];\n\t          r[5] = pa[5];\n\t          r[6] = +pa[6] + x;\n\t          r[7] = +pa[7] + y;\n\t          break;\n\t        case \"V\":\n\t          r[1] = +pa[1] + y;\n\t          break;\n\t        case \"H\":\n\t          r[1] = +pa[1] + x;\n\t          break;\n\t        case \"R\":\n\t          var dots = [x, y].concat(pa.slice(1));\n\t          for (var j = 2, jj = dots.length; j < jj; j++) {\n\t            dots[j] = +dots[j] + x;\n\t            dots[++j] = +dots[j] + y;\n\t          }\n\t          res.pop();\n\t          res = res.concat(catmullRom2bezier(dots, crz));\n\t          break;\n\t        case \"O\":\n\t          res.pop();\n\t          dots = ellipsePath(x, y, pa[1], pa[2]);\n\t          dots.push(dots[0]);\n\t          res = res.concat(dots);\n\t          break;\n\t        case \"U\":\n\t          res.pop();\n\t          res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n\t          r = [\"U\"].concat(res[res.length - 1].slice(-2));\n\t          break;\n\t        case \"M\":\n\t          mx = +pa[1] + x;\n\t          my = +pa[2] + y;\n\t        default:\n\t          for (j = 1, jj = pa.length; j < jj; j++) {\n\t            r[j] = +pa[j] + ((j % 2) ? x : y);\n\t          }\n\t      }\n\t    } else if (pa0 == \"R\") {\n\t      dots = [x, y].concat(pa.slice(1));\n\t      res.pop();\n\t      res = res.concat(catmullRom2bezier(dots, crz));\n\t      r = [\"R\"].concat(pa.slice(-2));\n\t    } else if (pa0 == \"O\") {\n\t      res.pop();\n\t      dots = ellipsePath(x, y, pa[1], pa[2]);\n\t      dots.push(dots[0]);\n\t      res = res.concat(dots);\n\t    } else if (pa0 == \"U\") {\n\t      res.pop();\n\t      res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n\t      r = [\"U\"].concat(res[res.length - 1].slice(-2));\n\t    } else {\n\t      for (var k = 0, kk = pa.length; k < kk; k++) {\n\t        r[k] = pa[k];\n\t      }\n\t    }\n\t    pa0 = pa0.toUpperCase();\n\t    if (pa0 != \"O\") {\n\t      switch (r[0]) {\n\t        case \"Z\":\n\t          x = +mx;\n\t          y = +my;\n\t          break;\n\t        case \"H\":\n\t          x = r[1];\n\t          break;\n\t        case \"V\":\n\t          y = r[1];\n\t          break;\n\t        case \"M\":\n\t          mx = r[r.length - 2];\n\t          my = r[r.length - 1];\n\t        default:\n\t          x = r[r.length - 2];\n\t          y = r[r.length - 1];\n\t      }\n\t    }\n\t  }\n\t\n\t  return res;\n\t};\n\t\n\tvar l2c = function(x1, y1, x2, y2) {\n\t  return [x1, y1, x2, y2, x2, y2];\n\t};\n\tvar q2c = function(x1, y1, ax, ay, x2, y2) {\n\t  var _13 = 1 / 3,\n\t      _23 = 2 / 3;\n\t  return [\n\t          _13 * x1 + _23 * ax,\n\t          _13 * y1 + _23 * ay,\n\t          _13 * x2 + _23 * ax,\n\t          _13 * y2 + _23 * ay,\n\t          x2,\n\t          y2\n\t      ];\n\t};\n\tvar a2c = function(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n\t  // for more information of where this math came from visit:\n\t  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n\t  var _120 = Math.PI * 120 / 180,\n\t      rad = Math.PI / 180 * (+angle || 0),\n\t      res = [],\n\t      xy,\n\t      rotate = function (x, y, rad) {\n\t          var X = x * Math.cos(rad) - y * Math.sin(rad),\n\t              Y = x * Math.sin(rad) + y * Math.cos(rad);\n\t          return {x: X, y: Y};\n\t      };\n\t  if (!recursive) {\n\t    xy = rotate(x1, y1, -rad);\n\t    x1 = xy.x;\n\t    y1 = xy.y;\n\t    xy = rotate(x2, y2, -rad);\n\t    x2 = xy.x;\n\t    y2 = xy.y;\n\t    var cos = Math.cos(Math.PI / 180 * angle),\n\t        sin = Math.sin(Math.PI / 180 * angle),\n\t        x = (x1 - x2) / 2,\n\t        y = (y1 - y2) / 2;\n\t    var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n\t    if (h > 1) {\n\t      h = Math.sqrt(h);\n\t      rx = h * rx;\n\t      ry = h * ry;\n\t    }\n\t    var rx2 = rx * rx,\n\t        ry2 = ry * ry,\n\t        k = (large_arc_flag == sweep_flag ? -1 : 1) *\n\t            Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n\t        cx = k * rx * y / ry + (x1 + x2) / 2,\n\t        cy = k * -ry * x / rx + (y1 + y2) / 2,\n\t        f1 = Math.asin(((y1 - cy) / ry).toFixed(9)),\n\t        f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\n\t\n\t    f1 = x1 < cx ? Math.PI - f1 : f1;\n\t    f2 = x2 < cx ? Math.PI - f2 : f2;\n\t    f1 < 0 && (f1 = Math.PI * 2 + f1);\n\t    f2 < 0 && (f2 = Math.PI * 2 + f2);\n\t    if (sweep_flag && f1 > f2) {\n\t      f1 = f1 - Math.PI * 2;\n\t    }\n\t    if (!sweep_flag && f2 > f1) {\n\t      f2 = f2 - Math.PI * 2;\n\t    }\n\t  } else {\n\t    f1 = recursive[0];\n\t    f2 = recursive[1];\n\t    cx = recursive[2];\n\t    cy = recursive[3];\n\t  }\n\t  var df = f2 - f1;\n\t  if (Math.abs(df) > _120) {\n\t    var f2old = f2,\n\t        x2old = x2,\n\t        y2old = y2;\n\t    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n\t    x2 = cx + rx * Math.cos(f2);\n\t    y2 = cy + ry * Math.sin(f2);\n\t    res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n\t  }\n\t  df = f2 - f1;\n\t  var c1 = Math.cos(f1),\n\t      s1 = Math.sin(f1),\n\t      c2 = Math.cos(f2),\n\t      s2 = Math.sin(f2),\n\t      t = Math.tan(df / 4),\n\t      hx = 4 / 3 * rx * t,\n\t      hy = 4 / 3 * ry * t,\n\t      m1 = [x1, y1],\n\t      m2 = [x1 + hx * s1, y1 - hy * c1],\n\t      m3 = [x2 + hx * s2, y2 - hy * c2],\n\t      m4 = [x2, y2];\n\t  m2[0] = 2 * m1[0] - m2[0];\n\t  m2[1] = 2 * m1[1] - m2[1];\n\t  if (recursive) {\n\t    return [m2, m3, m4].concat(res);\n\t  } else {\n\t    res = [m2, m3, m4].concat(res).join().split(\",\");\n\t    var newres = [];\n\t    for (var i = 0, ii = res.length; i < ii; i++) {\n\t      newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n\t    }\n\t    return newres;\n\t  }\n\t};\n\t\n\tvar path2curve=function(path, path2) {\n\t  var p = pathToAbsolute(path),\n\t      p2 = path2 && pathToAbsolute(path2),\n\t      attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n\t      attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n\t      processPath = function (path, d, pcom) {\n\t        var nx, ny;\n\t        if (!path) {\n\t          return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n\t        }\n\t        !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n\t        switch (path[0]) {\n\t          case \"M\":\n\t            d.X = path[1];\n\t            d.Y = path[2];\n\t            break;\n\t          case \"A\":\n\t            path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n\t            break;\n\t          case \"S\":\n\t            if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n\t              nx = d.x * 2 - d.bx;          // And reflect the previous\n\t              ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n\t            }\n\t            else {                            // or some else or nothing\n\t              nx = d.x;\n\t              ny = d.y;\n\t            }\n\t            path = [\"C\", nx, ny].concat(path.slice(1));\n\t            break;\n\t          case \"T\":\n\t            if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n\t              d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n\t              d.qy = d.y * 2 - d.qy;        // to case \"S\".\n\t            }\n\t            else {                            // or something else or nothing\n\t              d.qx = d.x;\n\t              d.qy = d.y;\n\t            }\n\t            path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n\t            break;\n\t          case \"Q\":\n\t            d.qx = path[1];\n\t            d.qy = path[2];\n\t            path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n\t            break;\n\t          case \"L\":\n\t            path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n\t            break;\n\t          case \"H\":\n\t            path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n\t            break;\n\t          case \"V\":\n\t            path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n\t            break;\n\t          case \"Z\":\n\t            path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n\t            break;\n\t        }\n\t        return path;\n\t      },\n\t      fixArc = function (pp, i) {\n\t        if (pp[i].length > 7) {\n\t          pp[i].shift();\n\t          var pi = pp[i];\n\t          while (pi.length) {\n\t            pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n\t            p2 && (pcoms2[i] = \"A\"); // the same as above\n\t            pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n\t          }\n\t          pp.splice(i, 1);\n\t          ii = Math.max(p.length, p2 && p2.length || 0);\n\t        }\n\t      },\n\t      fixM = function (path1, path2, a1, a2, i) {\n\t        if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n\t          path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n\t          a1.bx = 0;\n\t          a1.by = 0;\n\t          a1.x = path1[i][1];\n\t          a1.y = path1[i][2];\n\t          ii = Math.max(p.length, p2 && p2.length || 0);\n\t        }\n\t      },\n\t      pcoms1 = [], // path commands of original path p\n\t      pcoms2 = [], // path commands of original path p2\n\t      pfirst = \"\", // temporary holder for original path command\n\t      pcom = \"\"; // holder for previous path command of original path\n\t  for (var i = 0, ii = Math.max(p.length, p2 && p2.length || 0); i < ii; i++) {\n\t    p[i] && (pfirst = p[i][0]); // save current path command\n\t\n\t    if (pfirst != \"C\") { // C is not saved yet, because it may be result of conversion\n\t      pcoms1[i] = pfirst; // Save current path command\n\t      i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n\t    }\n\t    p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\t\n\t    if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n\t    // which may produce multiple C:s\n\t    // so we have to make sure that C is also C in original path\n\t\n\t    fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\t\n\t    if (p2) { // the same procedures is done to p2\n\t      p2[i] && (pfirst = p2[i][0]);\n\t      if (pfirst != \"C\") {\n\t        pcoms2[i] = pfirst;\n\t        i && (pcom = pcoms2[i - 1]);\n\t      }\n\t      p2[i] = processPath(p2[i], attrs2, pcom);\n\t\n\t      if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n\t        pcoms2[i] = \"C\";\n\t      }\n\t\n\t      fixArc(p2, i);\n\t    }\n\t    fixM(p, p2, attrs, attrs2, i);\n\t    fixM(p2, p, attrs2, attrs, i);\n\t    var seg = p[i],\n\t        seg2 = p2 && p2[i],\n\t        seglen = seg.length,\n\t        seg2len = p2 && seg2.length;\n\t    attrs.x = seg[seglen - 2];\n\t    attrs.y = seg[seglen - 1];\n\t    attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;\n\t    attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;\n\t    attrs2.bx = p2 && (parseFloat(seg2[seg2len - 4]) || attrs2.x);\n\t    attrs2.by = p2 && (parseFloat(seg2[seg2len - 3]) || attrs2.y);\n\t    attrs2.x = p2 && seg2[seg2len - 2];\n\t    attrs2.y = p2 && seg2[seg2len - 1];\n\t  }\n\t\n\t  return p2 ? [p, p2] : p;\n\t};\n\t\n\tvar box=function(x, y, width, height) {\n\t  if (x == null) {\n\t    x = y = width = height = 0;\n\t  }\n\t  if (y == null) {\n\t    y = x.y;\n\t    width = x.width;\n\t    height = x.height;\n\t    x = x.x;\n\t  }\n\t  return {\n\t    x: x,\n\t    y: y,\n\t    w: width,\n\t    h: height,\n\t    cx: x + width / 2,\n\t    cy: y + height / 2\n\t  };\n\t};\n\t\n\t// Returns bounding box of cubic bezier curve.\n\t// Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n\t// Original version: NISHIO Hirokazu\n\t// Modifications: https://github.com/timo22345\n\tvar curveDim=function(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var tvalues = [],\n\t      bounds = [[], []],\n\t      a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\t  for (var i = 0; i < 2; ++i) {\n\t    if (i == 0) {\n\t      b = 6 * x0 - 12 * x1 + 6 * x2;\n\t      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n\t      c = 3 * x1 - 3 * x0;\n\t    } else {\n\t      b = 6 * y0 - 12 * y1 + 6 * y2;\n\t      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n\t      c = 3 * y1 - 3 * y0;\n\t    }\n\t    if (Math.abs(a) < 1e-12) {\n\t      if (Math.abs(b) < 1e-12) {\n\t        continue;\n\t      }\n\t      t = -c / b;\n\t      if (0 < t && t < 1) {\n\t        tvalues.push(t);\n\t      }\n\t      continue;\n\t    }\n\t    b2ac = b * b - 4 * c * a;\n\t    sqrtb2ac = Math.sqrt(b2ac);\n\t    if (b2ac < 0) {\n\t      continue;\n\t    }\n\t    t1 = (-b + sqrtb2ac) / (2 * a);\n\t    if (0 < t1 && t1 < 1) {\n\t      tvalues.push(t1);\n\t    }\n\t    t2 = (-b - sqrtb2ac) / (2 * a);\n\t    if (0 < t2 && t2 < 1) {\n\t      tvalues.push(t2);\n\t    }\n\t  }\n\t\n\t  var x, y, j = tvalues.length,\n\t      jlen = j,\n\t      mt;\n\t  while (j--) {\n\t    t = tvalues[j];\n\t    mt = 1 - t;\n\t    bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n\t    bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n\t  }\n\t\n\t  bounds[0][jlen] = x0;\n\t  bounds[1][jlen] = y0;\n\t  bounds[0][jlen + 1] = x3;\n\t  bounds[1][jlen + 1] = y3;\n\t  bounds[0].length = bounds[1].length = jlen + 2;\n\t\n\t  return {\n\t    min: {x: Math.min.apply(0, bounds[0]), y: Math.min.apply(0, bounds[1])},\n\t    max: {x: Math.max.apply(0, bounds[0]), y: Math.max.apply(0, bounds[1])}\n\t  };\n\t};\n\t\n\tvar curvePathBBox=function(path) {\n\t  var x = 0,\n\t      y = 0,\n\t      X = [],\n\t      Y = [],\n\t      p;\n\t  for (var i = 0, ii = path.length; i < ii; i++) {\n\t    p = path[i];\n\t    if (p[0] == \"M\") {\n\t      x = p[1];\n\t      y = p[2];\n\t      X.push(x);\n\t      Y.push(y);\n\t    } else {\n\t      var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n\t      X = X.concat(dim.min.x, dim.max.x);\n\t      Y = Y.concat(dim.min.y, dim.max.y);\n\t      x = p[5];\n\t      y = p[6];\n\t    }\n\t  }\n\t  var xmin = Math.min.apply(0, X),\n\t      ymin = Math.min.apply(0, Y),\n\t      xmax = Math.max.apply(0, X),\n\t      ymax = Math.max.apply(0, Y),\n\t      bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n\t\n\t  return bb;\n\t};\n\t\n\tvar p2s=/,?([a-z]),?/gi;\n\tvar path2string=function(path) {\n\t  return path.join(',').replace(p2s, \"$1\");\n\t};\n\t\n\t/*\n\t * Styles\n\t */\n\t\n\tvar hsrg = {hs: 1, rg: 1},\n\t    has = \"hasOwnProperty\",\n\t    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n\t    commaSpaces = new RegExp(\"[\" + spaces + \"]*,[\" + spaces + \"]*\");\n\t\n\t// Converts RGB values to a hex representation of the color\n\t// var rgb = function (r, g, b, o) {\n\t//   if (isFinite(o)) {\n\t//     var round = math.round;\n\t//     return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n\t//   }\n\t//   return \"#\" + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1);\n\t// };\n\tvar rgbToString = function (rgb) {\n\t  var round = Math.round;\n\t  return \"rgba(\" + [round(rgb.r), round(rgb.g), round(rgb.b), +rgb.opacity.toFixed(2)] + \")\";\n\t};\n\tvar toHex = function (color) {\n\t  var i = window.document.getElementsByTagName(\"head\")[0] || window.document.getElementsByTagName(\"svg\")[0],\n\t      red = \"rgb(255, 0, 0)\";\n\t  toHex = function (color) {\n\t    if (color.toLowerCase() == \"red\") {\n\t      return red;\n\t    }\n\t    i.style.color = red;\n\t    i.style.color = color;\n\t    var out = window.document.defaultView.getComputedStyle(i, \"\").getPropertyValue(\"color\");\n\t    return out == red ? null : out;\n\t  };\n\t  return toHex(color);\n\t};\n\t\n\tvar packageRGB = function (r, g, b, o) {\n\t  r = Math.round(r * 255);\n\t  g = Math.round(g * 255);\n\t  b = Math.round(b * 255);\n\t  var rgb = {\n\t      r: r,\n\t      g: g,\n\t      b: b,\n\t      opacity: isFinite(o) ? o : 1\n\t  };\n\t  return rgb;\n\t};\n\t\n\t// Converts HSB values to an RGB object\n\tvar hsb2rgb = function (h, s, v, o) {\n\t  if (typeof h === typeof {} && \"h\" in h && \"s\" in h && \"b\" in h) {\n\t      v = h.b;\n\t      s = h.s;\n\t      h = h.h;\n\t      o = h.o;\n\t  }\n\t  h *= 360;\n\t  var R, G, B, X, C;\n\t  h = (h % 360) / 60;\n\t  C = v * s;\n\t  X = C * (1 - Math.abs(h % 2 - 1));\n\t  R = G = B = v - C;\n\t\n\t  h = ~~h;\n\t  R += [C, X, 0, 0, X, C][h];\n\t  G += [X, C, C, X, 0, 0][h];\n\t  B += [0, 0, X, C, C, X][h];\n\t  return packageRGB(R, G, B, o);\n\t};\n\t\n\t// Converts HSL values to an RGB object\n\tvar hsl2rgb = function (h, s, l, o) {\n\t  if (typeof h === typeof {} && \"h\" in h && \"s\" in h && \"l\" in h) {\n\t    l = h.l;\n\t    s = h.s;\n\t    h = h.h;\n\t  }\n\t  if (h > 1 || s > 1 || l > 1) {\n\t    h /= 360;\n\t    s /= 100;\n\t    l /= 100;\n\t  }\n\t  h *= 360;\n\t  var R, G, B, X, C;\n\t  h = (h % 360) / 60;\n\t  C = 2 * s * (l < .5 ? l : 1 - l);\n\t  X = C * (1 - Math.abs(h % 2 - 1));\n\t  R = G = B = l - C / 2;\n\t\n\t  h = ~~h;\n\t  R += [C, X, 0, 0, X, C][h];\n\t  G += [X, C, C, X, 0, 0][h];\n\t  B += [0, 0, X, C, C, X][h];\n\t  return packageRGB(R, G, B, o);\n\t};\n\t\n\t// Parses color string as RGB object\n\tvar getRGB = function (colour) {\n\t  if (!colour || !!((colour = String(colour)).indexOf(\"-\") + 1)) {\n\t    return {r: -1, g: -1, b: -1, opacity: -1, error: 1};\n\t  }\n\t  if (colour == \"none\") {\n\t    return {r: -1, g: -1, b: -1, opacity: -1};\n\t  }\n\t  !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n\t  if (!colour) {\n\t    return {r: -1, g: -1, b: -1, opacity: -1, error: 1};\n\t  }\n\t  var res,\n\t      red,\n\t      green,\n\t      blue,\n\t      opacity,\n\t      t,\n\t      values,\n\t      rgb = colour.match(colourRegExp);\n\t  if (rgb) {\n\t    if (rgb[2]) {\n\t      blue = parseInt(rgb[2].substring(5), 16);\n\t      green = parseInt(rgb[2].substring(3, 5), 16);\n\t      red = parseInt(rgb[2].substring(1, 3), 16);\n\t    }\n\t    if (rgb[3]) {\n\t      blue = parseInt((t = rgb[3].charAt(3)) + t, 16);\n\t      green = parseInt((t = rgb[3].charAt(2)) + t, 16);\n\t      red = parseInt((t = rgb[3].charAt(1)) + t, 16);\n\t    }\n\t    if (rgb[4]) {\n\t      values = rgb[4].split(commaSpaces);\n\t      red = parseFloat(values[0]);\n\t      values[0].slice(-1) == \"%\" && (red *= 2.55);\n\t      green = parseFloat(values[1]);\n\t      values[1].slice(-1) == \"%\" && (green *= 2.55);\n\t      blue = parseFloat(values[2]);\n\t      values[2].slice(-1) == \"%\" && (blue *= 2.55);\n\t      rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = parseFloat(values[3]));\n\t      values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t    }\n\t    if (rgb[5]) {\n\t      values = rgb[5].split(commaSpaces);\n\t      red = parseFloat(values[0]);\n\t      values[0].slice(-1) == \"%\" && (red /= 100);\n\t      green = parseFloat(values[1]);\n\t      values[1].slice(-1) == \"%\" && (green /= 100);\n\t      blue = parseFloat(values[2]);\n\t      values[2].slice(-1) == \"%\" && (blue /= 100);\n\t      (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n\t      rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = parseFloat(values[3]));\n\t      values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t      return hsb2rgb(red, green, blue, opacity);\n\t    }\n\t    if (rgb[6]) {\n\t      values = rgb[6].split(commaSpaces);\n\t      red = parseFloat(values[0]);\n\t      values[0].slice(-1) == \"%\" && (red /= 100);\n\t      green = parseFloat(values[1]);\n\t      values[1].slice(-1) == \"%\" && (green /= 100);\n\t      blue = parseFloat(values[2]);\n\t      values[2].slice(-1) == \"%\" && (blue /= 100);\n\t      (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n\t      rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = parseFloat(values[3]));\n\t      values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t      return hsl2rgb(red, green, blue, opacity);\n\t    }\n\t    red = Math.min(Math.round(red), 255);\n\t    green = Math.min(Math.round(green), 255);\n\t    blue = Math.min(Math.round(blue), 255);\n\t    opacity = Math.min(Math.max(opacity, 0), 1);\n\t    rgb = {r: red, g: green, b: blue};\n\t    rgb.opacity = isFinite(opacity) ? opacity : 1;\n\t    return rgb;\n\t  }\n\t  return {r: -1, g: -1, b: -1, opacity: -1, error: 1};\n\t};\n\t\n\tfunction SVGMorpheus(element, options, callback) {\n\t  if (!element) {\n\t    throw new Error('SVGMorpheus > \"element\" is required');\n\t  }\n\t\n\t  if(typeof element === typeof '') {\n\t    element=document.querySelector(element);\n\t    if (!element) {\n\t      throw new Error('SVGMorpheus > \"element\" query is not related to an existing DOM node');\n\t    }\n\t  }\n\t\n\t  if (!!options && typeof options !== typeof {}) {\n\t    throw new Error('SVGMorpheus > \"options\" parameter must be an object');\n\t  }\n\t  options = options || {};\n\t\n\t  if (!!callback && typeof callback !== typeof (function(){})) {\n\t    throw new Error('SVGMorpheus > \"callback\" parameter must be a function');\n\t  }\n\t\n\t  var that=this;\n\t\n\t  this._icons={};\n\t  this._curIconId=options.iconId || '';\n\t  this._toIconId='';\n\t  this._curIconItems=[];\n\t  this._fromIconItems=[];\n\t  this._toIconItems=[];\n\t  this._morphNodes=[];\n\t  this._morphG;\n\t  this._startTime;\n\t  this._defDuration=options.duration || 750;\n\t  this._defEasing=options.easing || 'quad-in-out';\n\t  this._defRotation=options.rotation || 'clock';\n\t  this._defCallback = callback || function () {};\n\t  this._duration=this._defDuration;\n\t  this._easing=this._defEasing;\n\t  this._rotation=this._defRotation;\n\t  this._callback=this._defCallback;\n\t  this._rafid;\n\t\n\t  this._fnTick=function(timePassed) {\n\t    if(!that._startTime) {\n\t      that._startTime=timePassed;\n\t    }\n\t    var progress=Math.min((timePassed-that._startTime)/that._duration,1);\n\t    that._updateAnimationProgress(progress);\n\t    if(progress<1) {\n\t      that._rafid=_reqAnimFrame(that._fnTick);\n\t    } else {\n\t      if (that._toIconId != '') {\n\t        that._animationEnd();\n\t      }\n\t    }\n\t  };\n\t\n\t  if(element.nodeName.toUpperCase()==='SVG') {\n\t    this._svgDoc=element;\n\t  } else {\n\t    this._svgDoc = element.getSVGDocument();\n\t  }\n\t  if(!this._svgDoc) {\n\t    element.addEventListener(\"load\",function(){\n\t      that._svgDoc = element.getSVGDocument();\n\t      that._init();\n\t    },false);\n\t  } else {\n\t    that._init();\n\t  }\n\t}\n\t\n\tSVGMorpheus.prototype._init=function(){\n\t  if(this._svgDoc.nodeName.toUpperCase()!=='SVG') {\n\t    this._svgDoc=this._svgDoc.getElementsByTagName('svg')[0];\n\t  }\n\t\n\t  if(!!this._svgDoc) {\n\t    var lastIconId='',\n\t        i, len, id, items, item, j, len2, icon;\n\t\n\t    // Read Icons Data\n\t    // Icons = 1st tier G nodes having ID\n\t    for(i=this._svgDoc.childNodes.length-1;i>=0;i--) {\n\t      var nodeIcon=this._svgDoc.childNodes[i];\n\t      if(nodeIcon.nodeName.toUpperCase()==='G') {\n\t        id=nodeIcon.getAttribute('id');\n\t        if(!!id) {\n\t          items=[];\n\t          for(j=0, len2=nodeIcon.childNodes.length;j<len2;j++) {\n\t            var nodeItem=nodeIcon.childNodes[j];\n\t            item={\n\t              path: '',\n\t              attrs: {},\n\t              style: {}\n\t            };\n\t\n\t            // Get Item Path (Convert all shapes into Path Data)\n\t            switch(nodeItem.nodeName.toUpperCase()) {\n\t              case 'PATH':\n\t                item.path=nodeItem.getAttribute('d');\n\t                break;\n\t              case 'CIRCLE':\n\t                var cx=nodeItem.getAttribute('cx')*1,\n\t                    cy=nodeItem.getAttribute('cy')*1,\n\t                    r=nodeItem.getAttribute('r')*1;\n\t                item.path='M'+(cx-r)+','+cy+'a'+r+','+r+' 0 1,0 '+(r*2)+',0a'+r+','+r+' 0 1,0 -'+(r*2)+',0z';\n\t                break;\n\t              case 'ELLIPSE':\n\t                var cx=nodeItem.getAttribute('cx')*1,\n\t                    cy=nodeItem.getAttribute('cy')*1,\n\t                    rx=nodeItem.getAttribute('rx')*1,\n\t                    ry=nodeItem.getAttribute('ry')*1;\n\t                item.path='M'+(cx-rx)+','+cy+'a'+rx+','+ry+' 0 1,0 '+(rx*2)+',0a'+rx+','+ry+' 0 1,0 -'+(rx*2)+',0z';\n\t                break;\n\t              case 'RECT':\n\t                var x=nodeItem.getAttribute('x')*1,\n\t                    y=nodeItem.getAttribute('y')*1,\n\t                    w=nodeItem.getAttribute('width')*1,\n\t                    h=nodeItem.getAttribute('height')*1,\n\t                    rx=nodeItem.getAttribute('rx')*1,\n\t                    ry=nodeItem.getAttribute('ry')*1;\n\t                if(!rx && !ry) {\n\t                  item.path='M'+x+','+y+'l'+w+',0l0,'+h+'l-'+w+',0z';\n\t                } else {\n\t                  item.path='M'+(x+rx)+','+y+\n\t                            'l'+(w-rx*2)+',0'+\n\t                            'a'+rx+','+ry+' 0 0,1 '+rx+','+ry+\n\t                            'l0,'+(h-ry*2)+\n\t                            'a'+rx+','+ry+' 0 0,1 -'+rx+','+ry+\n\t                            'l'+(rx*2-w)+',0'+\n\t                            'a'+rx+','+ry+' 0 0,1 -'+rx+',-'+ry+\n\t                            'l0,'+(ry*2-h)+\n\t                            'a'+rx+','+ry+' 0 0,1 '+rx+',-'+ry+\n\t                            'z';\n\t                }\n\t                break;\n\t              case 'POLYGON':\n\t                var points=nodeItem.getAttribute('points');\n\t                var p = points.split(/\\s+/);\n\t                var path = \"\";\n\t                for( var k = 0, len = p.length; k < len; k++ ){\n\t                    path += (k && \"L\" || \"M\") + p[k]\n\t                }\n\t                item.path=path+'z';\n\t                break;\n\t              case 'LINE':\n\t                var x1=nodeItem.getAttribute('x1')*1,\n\t                    y1=nodeItem.getAttribute('y1')*1,\n\t                    x2=nodeItem.getAttribute('x2')*1,\n\t                    y2=nodeItem.getAttribute('y2')*1;\n\t                item.path='M'+x1+','+y1+'L'+x2+','+y2+'z';\n\t                break;\n\t            }\n\t            if(item.path!='') {\n\t              // Traverse all attributes and get style values\n\t              for (var k = 0, len3=nodeItem.attributes.length; k < len3; k++) {\n\t                var attrib = nodeItem.attributes[k];\n\t                if (attrib.specified) {\n\t                  var name=attrib.name.toLowerCase();\n\t                  switch (name) {\n\t                    case 'fill':\n\t                    case 'fill-opacity':\n\t                    case 'opacity':\n\t                    case 'stroke':\n\t                    case 'stroke-opacity':\n\t                    case 'stroke-width':\n\t                      item.attrs[name]=attrib.value;\n\t                  }\n\t                }\n\t              }\n\t\n\t              // Traverse all inline styles and get supported values\n\t              for (var l = 0, len4=nodeItem.style.length; l < len4; l++) {\n\t                var styleName = nodeItem.style[l];\n\t                switch (styleName) {\n\t                  case 'fill':\n\t                  case 'fill-opacity':\n\t                  case 'opacity':\n\t                  case 'stroke':\n\t                  case 'stroke-opacity':\n\t                  case 'stroke-width':\n\t                    item.style[styleName]=nodeItem.style[styleName];\n\t                }\n\t              }\n\t\n\t              items.push(item);\n\t            }\n\t          }\n\t\n\t          // Add Icon\n\t          if(items.length>0) {\n\t            icon={\n\t              id: id,\n\t              items: items\n\t            };\n\t            this._icons[id]=icon;\n\t          }\n\t\n\t          // Init Node for Icons Items and remove Icon Nodes\n\t          if(!this._morphG) {\n\t            lastIconId=id;\n\t            this._morphG=document.createElementNS('http://www.w3.org/2000/svg', 'g');\n\t            this._svgDoc.replaceChild(this._morphG,nodeIcon);\n\t          } else {\n\t            this._svgDoc.removeChild(nodeIcon);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    // To Default Icon\n\t    var defaultIcon = this._curIconId || lastIconId;\n\t    if(defaultIcon!=='') {\n\t      this._setupAnimation(defaultIcon);\n\t      this._updateAnimationProgress(1);\n\t      this._animationEnd();\n\t    }\n\t  }\n\t\n\t};\n\t\n\tSVGMorpheus.prototype._setupAnimation=function(toIconId) {\n\t  if(!!toIconId && !!this._icons[toIconId]) {\n\t    this._toIconId=toIconId;\n\t    this._startTime=undefined;\n\t    var i, len, j, len2;\n\t    this._fromIconItems=clone(this._curIconItems);\n\t    this._toIconItems=clone(this._icons[toIconId].items);\n\t\n\t    for(i=0, len=this._morphNodes.length;i<len;i++) {\n\t      var morphNode=this._morphNodes[i];\n\t      morphNode.fromIconItemIdx=i;\n\t      morphNode.toIconItemIdx=i;\n\t    }\n\t\n\t    var maxNum=Math.max(this._fromIconItems.length, this._toIconItems.length);\n\t    var toBB;\n\t    for(i=0;i<maxNum;i++) {\n\t      // Add items to fromIcon/toIcon if needed\n\t      if(!this._fromIconItems[i]) {\n\t        if(!!this._toIconItems[i]) {\n\t          toBB=curvePathBBox(path2curve(this._toIconItems[i].path));\n\t          this._fromIconItems.push({\n\t            path: 'M'+toBB.cx+','+toBB.cy+'l0,0',\n\t            attrs: {},\n\t            style: {},\n\t            trans: {\n\t              'rotate': [0,toBB.cx,toBB.cy]\n\t            }\n\t          });\n\t        } else {\n\t          this._fromIconItems.push({\n\t            path: 'M0,0l0,0',\n\t            attrs: {},\n\t            style: {},\n\t            trans: {\n\t              'rotate': [0,0,0]\n\t            }\n\t          });\n\t        }\n\t      }\n\t      if(!this._toIconItems[i]) {\n\t        if(!!this._fromIconItems[i]) {\n\t          toBB=curvePathBBox(path2curve(this._fromIconItems[i].path));\n\t          this._toIconItems.push({\n\t            path: 'M'+toBB.cx+','+toBB.cy+'l0,0',\n\t            attrs: {},\n\t            style: {},\n\t            trans: {\n\t              'rotate': [0,toBB.cx,toBB.cy]\n\t            }\n\t          });\n\t        } else {\n\t          this._toIconItems.push({\n\t            path: 'M0,0l0,0',\n\t            attrs: {},\n\t            style: {},\n\t            trans: {\n\t              'rotate': [0,0,0]\n\t            }\n\t          });\n\t        }\n\t      }\n\t\n\t      // Add Node to DOM if needed\n\t      if(!this._morphNodes[i]) {\n\t        var node=document.createElementNS('http://www.w3.org/2000/svg', 'path');\n\t        this._morphG.appendChild(node);\n\t        this._morphNodes.push({\n\t          node: node,\n\t          fromIconItemIdx: i,\n\t          toIconItemIdx: i\n\t        });\n\t      }\n\t    }\n\t\n\t    for(i=0;i<maxNum;i++) {\n\t      var fromIconItem=this._fromIconItems[i];\n\t      var toIconItem=this._toIconItems[i];\n\t\n\t      // Calculate from/to curve data and set to fromIcon/toIcon\n\t      var curves=path2curve(this._fromIconItems[i].path,this._toIconItems[i].path);\n\t      fromIconItem.curve=curves[0];\n\t      toIconItem.curve=curves[1];\n\t\n\t      // Normalize from/to attrs\n\t      var attrsNorm=styleToNorm(this._fromIconItems[i].attrs,this._toIconItems[i].attrs);\n\t      fromIconItem.attrsNorm=attrsNorm[0];\n\t      toIconItem.attrsNorm=attrsNorm[1];\n\t      fromIconItem.attrs=styleNormToString(fromIconItem.attrsNorm);\n\t      toIconItem.attrs=styleNormToString(toIconItem.attrsNorm);\n\t\n\t      // Normalize from/to style\n\t      var styleNorm=styleToNorm(this._fromIconItems[i].style,this._toIconItems[i].style);\n\t      fromIconItem.styleNorm=styleNorm[0];\n\t      toIconItem.styleNorm=styleNorm[1];\n\t      fromIconItem.style=styleNormToString(fromIconItem.styleNorm);\n\t      toIconItem.style=styleNormToString(toIconItem.styleNorm);\n\t\n\t      // Calculate from/to transform\n\t      toBB=curvePathBBox(toIconItem.curve);\n\t      toIconItem.trans={\n\t        'rotate': [0,toBB.cx,toBB.cy]\n\t      };\n\t      var rotation=this._rotation, degAdd;\n\t      if(rotation==='random') {\n\t        rotation=Math.random()<0.5?'counterclock':'clock';\n\t      }\n\t      switch(rotation) {\n\t        case 'none':\n\t          if(!!fromIconItem.trans.rotate) {\n\t            toIconItem.trans.rotate[0]=fromIconItem.trans.rotate[0];\n\t          }\n\t          break;\n\t        case 'counterclock':\n\t          if(!!fromIconItem.trans.rotate) {\n\t            toIconItem.trans.rotate[0]=fromIconItem.trans.rotate[0]-360;\n\t            degAdd=-fromIconItem.trans.rotate[0]%360;\n\t            toIconItem.trans.rotate[0]+=(degAdd<180?degAdd:degAdd-360);\n\t          } else {\n\t            toIconItem.trans.rotate[0]=-360;\n\t          }\n\t          break;\n\t        default: // Clockwise\n\t          if(!!fromIconItem.trans.rotate) {\n\t            toIconItem.trans.rotate[0]=fromIconItem.trans.rotate[0]+360;\n\t            degAdd=fromIconItem.trans.rotate[0]%360;\n\t            toIconItem.trans.rotate[0]+=(degAdd<180?-degAdd:360-degAdd);\n\t          } else {\n\t            toIconItem.trans.rotate[0]=360;\n\t          }\n\t          break;\n\t      }\n\t    }\n\t\n\t    this._curIconItems=clone(this._fromIconItems);\n\t  }\n\t};\n\t\n\tSVGMorpheus.prototype._updateAnimationProgress=function(progress) {\n\t  progress=easings[this._easing](progress);\n\t\n\t  var i, j, k, len;\n\t  // Update path/attrs/transform\n\t  for(i=0, len=this._curIconItems.length;i<len;i++) {\n\t    this._curIconItems[i].curve=curveCalc(this._fromIconItems[i].curve, this._toIconItems[i].curve, progress);\n\t    this._curIconItems[i].path=path2string(this._curIconItems[i].curve);\n\t\n\t    this._curIconItems[i].attrsNorm=styleNormCalc(this._fromIconItems[i].attrsNorm, this._toIconItems[i].attrsNorm, progress);\n\t    this._curIconItems[i].attrs=styleNormToString(this._curIconItems[i].attrsNorm);\n\t\n\t    this._curIconItems[i].styleNorm=styleNormCalc(this._fromIconItems[i].styleNorm, this._toIconItems[i].styleNorm, progress);\n\t    this._curIconItems[i].style=styleNormToString(this._curIconItems[i].styleNorm);\n\t\n\t    this._curIconItems[i].trans=transCalc(this._fromIconItems[i].trans, this._toIconItems[i].trans, progress);\n\t    this._curIconItems[i].transStr=trans2string(this._curIconItems[i].trans);\n\t  }\n\t\n\t  // Update DOM\n\t  for(i=0, len=this._morphNodes.length;i<len;i++) {\n\t    var morphNode=this._morphNodes[i];\n\t    morphNode.node.setAttribute(\"d\",this._curIconItems[i].path);\n\t    var attrs=this._curIconItems[i].attrs;\n\t    for(j in attrs) {\n\t      morphNode.node.setAttribute(j,attrs[j]);\n\t    }\n\t    var style=this._curIconItems[i].style;\n\t    for(k in style) {\n\t      morphNode.node.style[k]=style[k];\n\t    }\n\t    morphNode.node.setAttribute(\"transform\",this._curIconItems[i].transStr);\n\t  }\n\t};\n\t\n\tSVGMorpheus.prototype._animationEnd=function() {\n\t  for(var i=this._morphNodes.length-1;i>=0;i--) {\n\t    var morphNode=this._morphNodes[i];\n\t    if(!!this._icons[this._toIconId].items[i]) {\n\t      morphNode.node.setAttribute(\"d\",this._icons[this._toIconId].items[i].path);\n\t    } else {\n\t      morphNode.node.parentNode.removeChild(morphNode.node);\n\t      this._morphNodes.splice(i,1);\n\t    }\n\t  }\n\t\n\t  this._curIconId=this._toIconId;\n\t  this._toIconId='';\n\t\n\t  this._callback();\n\t};\n\t\n\t/*\n\t * Public methods\n\t */\n\t\n\t// Morph To Icon\n\tSVGMorpheus.prototype.to=function(iconId, options, callback) {\n\t  if(iconId!==this._toIconId) {\n\t    if (!!options && typeof options !== typeof {}) {\n\t      throw new Error('SVGMorpheus.to() > \"options\" parameter must be an object');\n\t    }\n\t    options = options || {};\n\t\n\t    if (!!callback && typeof callback !== typeof (function(){})) {\n\t      throw new Error('SVGMorpheus.to() > \"callback\" parameter must be a function');\n\t    }\n\t\n\t    _cancelAnimFrame(this._rafid);\n\t\n\t    this._duration=options.duration || this._defDuration;\n\t    this._easing=options.easing || this._defEasing;\n\t    this._rotation=options.rotation || this._defRotation;\n\t    this._callback=callback || this._defCallback;\n\t\n\t    this._setupAnimation(iconId);\n\t    this._rafid=_reqAnimFrame(this._fnTick);\n\t  }\n\t};\n\t\n\t// Register custom Easing function\n\tSVGMorpheus.prototype.registerEasing=function(name, fn) {\n\t  easings[name] = fn;\n\t}\n\t\n\treturn SVGMorpheus;\n\t\n\t}());\n\t\n\t/*** EXPORTS FROM exports-loader ***/\n\tmodule.exports = SVGMorpheus;\n\n/***/ },\n\n/***/ 271:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\n\tbuf.push(\"<md-input-container md-no-float class=\\\"md-icon-float md-block no-tb-margin no-errors no-borders\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\n\tbuf.push(\"<md-icon>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\n\tbuf.push(\"<ng-md-icon icon=\\\"search\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</ng-md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\n\tbuf.push(\"<input placeholder=\\\"{{title}}\\\" aria-label=\\\"{{title}}\\\" ng-model=\\\"searchText\\\">\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-input-container>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 5, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\n\tbuf.push(\"<md-divider>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-divider>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-input-container(md-no-float,class=\\\"md-icon-float md-block no-tb-margin no-errors no-borders\\\")\\n    md-icon\\n        ng-md-icon(icon=\\\"search\\\")\\n    input(placeholder=\\\"{{title}}\\\",aria-label=\\\"{{title}}\\\",  ng-model=\\\"searchText\\\")\\nmd-divider\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 272:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\n\tbuf.push(\"<ul ng-if=\\\"node.{{opts.children}}.length\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\n\tbuf.push(\"<li ng-if=\\\"node.showed\\\" ng-repeat=\\\"node in node.{{opts.children}} | filter: sideCtl.options.filterExpression | orderBy:['{{opts.orderBy}}']:true\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\n\tbuf.push(\"<div fx-side-menu-content-transclude ng-click=\\\"sideCtl.showChildren(node)\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</div>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\n\tbuf.push(\"<md-divider ng-if=\\\"node.depth===1\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-divider>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 5, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\n\tbuf.push(\"<fx-side-menu-child ng-show=\\\"sideCtl.isShowChildren(node)\\\" class=\\\"side-menu-child nga-fast nga-stagger-fast nga-slide-right\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</fx-side-menu-child>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</li>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</ul>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\n\tbuf.push(\"<md-divider ng-if=\\\"!$last &amp;&amp; node.depth&gt;1\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-divider>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"ul(ng-if=\\\"node.{{opts.children}}.length\\\")\\n    li(ng-if=\\\"node.showed\\\",ng-repeat=\\\"node in node.{{opts.children}} | filter: sideCtl.options.filterExpression | orderBy:['{{opts.orderBy}}']:true\\\")\\n        div(fx-side-menu-content-transclude,ng-click=\\\"sideCtl.showChildren(node)\\\")\\n        md-divider(ng-if=\\\"node.depth===1\\\")\\n        fx-side-menu-child.side-menu-child.nga-fast.nga-stagger-fast.nga-slide-right(ng-show=\\\"sideCtl.isShowChildren(node)\\\")\\nmd-divider(ng-if=\\\"!$last && node.depth>1\\\")\\n\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 273:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\n\tbuf.push(\"<md-button ng-if=\\\"{{btnCtl.condition}}\\\" ng-class=\\\"btnCtl.className\\\" ng-click=\\\"btnCtl.onClick($event,btnCtl.ngModel,btnCtl.index)\\\" ng-disabled=\\\"{{btnCtl.disabled}}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\n\tbuf.push(\"<md-tooltip ng-if=\\\"btnCtl.tooltip\\\" md-direction=\\\"{{btnCtl.tooltip.position}}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 2, jade_debug[0].filename ));\n\tbuf.push(\"{{btnCtl.tooltip.title || btnCtl.title}}\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-tooltip>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\n\tbuf.push(\"<md-icon ng-if=\\\"btnCtl.icon &amp;&amp; btnCtl.icon.icon\\\" md-menu-align-target ng-style=\\\"btnCtl.icon.style\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\n\tbuf.push(\"<ng-md-icon icon=\\\"{{btnCtl.icon.icon}}\\\" ng-style=\\\"btnCtl.icon.style\\\" options=\\\"{&quot;rotation&quot;:&quot;none&quot;}\\\" size=\\\"{{btnCtl.icon.size||'24px'}}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</ng-md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 5, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\n\tbuf.push(\"<span ng-if=\\\"btnCtl.showTitle\\\" layout-padding>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 5, jade_debug[0].filename ));\n\tbuf.push(\"{{btnCtl.title}} \");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</span>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\n\tbuf.push(\"<span ng-hide=\\\"true\\\" ng-bind=\\\"{{btnCtl.disabled}}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</span>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 7, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\n\tbuf.push(\"<md-icon ng-if=\\\"btnCtl.icon &amp;&amp; btnCtl.icon.ricon\\\" md-menu-align-target ng-style=\\\"btnCtl.icon.style\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 8, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\n\tbuf.push(\"<ng-md-icon icon=\\\"{{btnCtl.icon.ricon}}\\\" ng-style=\\\"btnCtl.icon.style\\\" options=\\\"{&quot;rotation&quot;:&quot;none&quot;}\\\" size=\\\"{{btnCtl.icon.size||'24px'}}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</ng-md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-button>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-button(ng-if=\\\"{{btnCtl.condition}}\\\",ng-class=\\\"btnCtl.className\\\",ng-click=\\\"btnCtl.onClick($event,btnCtl.ngModel,btnCtl.index)\\\",ng-disabled=\\\"{{btnCtl.disabled}}\\\")\\n    md-tooltip(ng-if=\\\"btnCtl.tooltip\\\",md-direction=\\\"{{btnCtl.tooltip.position}}\\\") {{btnCtl.tooltip.title || btnCtl.title}}\\n    md-icon(ng-if=\\\"btnCtl.icon && btnCtl.icon.icon\\\",md-menu-align-target,ng-style=\\\"btnCtl.icon.style\\\")\\n        ng-md-icon(icon=\\\"{{btnCtl.icon.icon}}\\\",ng-style=\\\"btnCtl.icon.style\\\",options='{\\\"rotation\\\":\\\"none\\\"}',size=\\\"{{btnCtl.icon.size||'24px'}}\\\")\\n    span(ng-if=\\\"btnCtl.showTitle\\\",layout-padding) {{btnCtl.title}} \\n    span(ng-hide=\\\"true\\\",ng-bind=\\\"{{btnCtl.disabled}}\\\")\\n    md-icon(ng-if=\\\"btnCtl.icon && btnCtl.icon.ricon\\\",md-menu-align-target,ng-style=\\\"btnCtl.icon.style\\\")\\n        ng-md-icon(icon=\\\"{{btnCtl.icon.ricon}}\\\",ng-style=\\\"btnCtl.icon.style\\\",options='{\\\"rotation\\\":\\\"none\\\"}',size=\\\"{{btnCtl.icon.size||'24px'}}\\\")\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 274:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/icon.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/icon.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/icon.jade\" ));\n\tbuf.push(\"<md-icon ng-if=\\\"iconCtl.icon\\\" md-menu-align-target ng-style=\\\"iconCtl.icon.style\\\" ng-class=\\\"iconCtl.className\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/toolbar/tpls/icon.jade\" ));\n\tbuf.push(\"<ng-md-icon icon=\\\"{{iconCtl.icon.icon}}\\\" ng-style=\\\"iconCtl.icon.style\\\" options=\\\"{&quot;rotation&quot;:&quot;none&quot;}\\\" size=\\\"{{iconCtl.icon.size||'24px'}}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</ng-md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-icon(ng-if=\\\"iconCtl.icon\\\",md-menu-align-target,ng-style=\\\"iconCtl.icon.style\\\",ng-class=\\\"iconCtl.className\\\")\\n    ng-md-icon(icon=\\\"{{iconCtl.icon.icon}}\\\",ng-style=\\\"iconCtl.icon.style\\\",options='{\\\"rotation\\\":\\\"none\\\"}',size=\\\"{{iconCtl.icon.size||'24px'}}\\\")\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 275:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/label.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/label.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/label.jade\" ));\n\tbuf.push(\"<span ng-class=\\\"labelCtl.cls\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 1, jade_debug[0].filename ));\n\tbuf.push(\"{{labelCtl.title}}\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</span>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"span(ng-class=\\\"labelCtl.cls\\\") {{labelCtl.title}}\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 276:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/layout.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/layout.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/layout.jade\" ));\n\tbuf.push(\"<div layout=\\\"{{layoutCtl.layout}}\\\" flex=\\\"{{layoutCtl.flex}}\\\" layout-align=\\\"{{layoutCtl.layoutAlign}}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</div>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"div(layout=\\\"{{layoutCtl.layout}}\\\",flex=\\\"{{layoutCtl.flex}}\\\",layout-align=\\\"{{layoutCtl.layoutAlign}}\\\")\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 277:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-divider.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-divider.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-divider.jade\" ));\n\tbuf.push(\"<md-menu-divider>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-menu-divider>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-menu-divider\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 278:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-item.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-item.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-item.jade\" ));\n\tbuf.push(\"<md-menu-item fx-toolbar ng-if=\\\"{{menuItemCtl.condition}}\\\" ng-init=\\\"item = menuItemCtl;item.type='btn'\\\" items=\\\"item\\\" ng-model=\\\"menuItemCtl.ngModel\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-menu-item>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-menu-item(fx-toolbar,ng-if=\\\"{{menuItemCtl.condition}}\\\",ng-init=\\\"item = menuItemCtl;item.type='btn'\\\",items=\\\"item\\\",ng-model=\\\"menuItemCtl.ngModel\\\")\\n\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 279:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\n\tbuf.push(\"<md-menu md-offset=\\\"2 0\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\n\tbuf.push(\"<md-button ng-class=\\\"menuCtl.className\\\" aria-label=\\\"菜单\\\" ng-click=\\\"menuCtl.materialUtils.openMenu($mdOpenMenu,$event)\\\" ng-disabled=\\\"{{menuCtl.disabled}}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\n\tbuf.push(\"<md-tooltip ng-if=\\\"menuCtl.tooltip\\\" md-direction=\\\"{{menuCtl.tooltip.position}}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 3, jade_debug[0].filename ));\n\tbuf.push(\"{{menuCtl.tooltip.title || menuCtl.title}}\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-tooltip>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\n\tbuf.push(\"<md-icon ng-if=\\\"menuCtl.icon\\\" md-menu-origin>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 5, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\n\tbuf.push(\"<ng-md-icon icon=\\\"{{menuCtl.icon.icon}}\\\" ng-style=\\\"menuCtl.icon.style\\\" options=\\\"{&quot;rotation&quot;:&quot;none&quot;}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</ng-md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-button>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\n\tbuf.push(\"<md-menu-content width=\\\"{{menuCtl.width}}\\\" fx-toolbar items=\\\"menuCtl.items\\\" ng-model=\\\"menuCtl.ngModel\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-menu-content>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-menu>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-menu(md-offset=\\\"2 0\\\")\\n    md-button(ng-class=\\\"menuCtl.className\\\",aria-label=\\\"菜单\\\",ng-click=\\\"menuCtl.materialUtils.openMenu($mdOpenMenu,$event)\\\",ng-disabled=\\\"{{menuCtl.disabled}}\\\")\\n        md-tooltip(ng-if=\\\"menuCtl.tooltip\\\",md-direction=\\\"{{menuCtl.tooltip.position}}\\\") {{menuCtl.tooltip.title || menuCtl.title}}\\n        md-icon(ng-if=\\\"menuCtl.icon\\\",md-menu-origin)\\n            ng-md-icon(icon=\\\"{{menuCtl.icon.icon}}\\\",ng-style=\\\"menuCtl.icon.style\\\",options='{\\\"rotation\\\":\\\"none\\\"}')\\n    md-menu-content(width=\\\"{{menuCtl.width}}\\\",fx-toolbar,items=\\\"menuCtl.items\\\",ng-model=\\\"menuCtl.ngModel\\\")\\n\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 280:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menubar.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/menubar.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menubar.jade\" ));\n\tbuf.push(\"<md-menu-bar md-offset=\\\"2 0\\\" ng-class=\\\"menuBarCtl.className\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/toolbar/tpls/menubar.jade\" ));\n\tbuf.push(\"<div fx-toolbar items=\\\"menuBarCtl.items\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</div>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-menu-bar>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-menu-bar(md-offset=\\\"2 0\\\",ng-class=\\\"menuBarCtl.className\\\")\\n    div(fx-toolbar,items=\\\"menuBarCtl.items\\\")\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 281:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/content.template.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/pages/home/tpls/content.template.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/content.template.jade\" ));\n\tbuf.push(\"<md-content flex>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/pages/home/tpls/content.template.jade\" ));\n\tbuf.push(\"<nvd3 flex options=\\\"contentCtl.departChartOptions\\\" data=\\\"contentCtl.departChartData\\\" events=\\\"contentCtl.departChartOptions.events\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</nvd3>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-content>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-content(flex)\\n     nvd3(flex,options=\\\"contentCtl.departChartOptions\\\",data=\\\"contentCtl.departChartData\\\",events=\\\"contentCtl.departChartOptions.events\\\")\\n\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 282:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<md-content flex=\\\"100\\\" layout=\\\"row\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<md-sidenav ui-view=\\\"sidenavLeft\\\" md-is-locked-open=\\\"$mdMedia('gt-md') || $root.isOpenMenu\\\" md-component-id=\\\"left\\\" md-whiteframe=\\\"4\\\" layout=\\\"column\\\" class=\\\"md-sidenav-left\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-sidenav>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<md-content flex=\\\"100\\\" layout=\\\"column\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 7, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<md-toolbar class=\\\"md-hue-3\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 8, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<div fx-toolbar items=\\\"homeCtl.toolbars\\\" layout=\\\"row\\\" ctls=\\\"homeCtl\\\" class=\\\"md-toolbar-tools\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</div>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-toolbar>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 9, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<md-divider>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-divider>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 10, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<md-content flex ui-view=\\\"content\\\" layout=\\\"column\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-content>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-content>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 11, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<div execute-cmd real-time=\\\"true\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</div>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 12, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<div ng-if=\\\"!$mdMedia('gt-md')\\\" class=\\\"lock-size\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 13, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<md-fab-speed-dial md-direction=\\\"right\\\" ng-mouseenter=\\\"$root.isOpenFab=true\\\" ng-mouseleave=\\\"$root.isOpenFab=false\\\" md-open=\\\"$root.isOpenFab\\\" class=\\\"md-scale md-fab-bottom-left\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 14, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<md-fab-trigger>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 15, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<md-button aria-label=\\\"menu\\\" ng-click=\\\"homeCtl.materialUtils.buildToggle('left')()\\\" class=\\\"md-fab md-default\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 16, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<md-icon>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 17, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<ng-md-icon icon=\\\"menu\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</ng-md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-button>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-fab-trigger>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-fab-speed-dial>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</div>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-content>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"//- md-toolbar.md-whiteframe-glow-z1.md-hue-3()\\n    //- div.md-toolbar-tools(fx-toolbar,items=\\\"homeCtl.toolbars\\\",layout=\\\"row\\\",ctls=\\\"homeCtl\\\")\\nmd-content(flex=\\\"100\\\",layout=\\\"row\\\")\\n    md-sidenav.md-sidenav-left(ui-view=\\\"sidenavLeft\\\",md-is-locked-open=\\\"$mdMedia('gt-md') || $root.isOpenMenu\\\",md-component-id=\\\"left\\\",md-whiteframe=\\\"4\\\",layout=\\\"column\\\")\\n    //- md-sidenav.md-sidenav-right(md-component-id=\\\"right\\\",ui-view=\\\"sidenavRight\\\",layout=\\\"column\\\",md-whiteframe=\\\"4\\\")\\n    md-content(flex=\\\"100\\\",layout=\\\"column\\\")\\n        md-toolbar.md-hue-3\\n            div.md-toolbar-tools(fx-toolbar,items=\\\"homeCtl.toolbars\\\",layout=\\\"row\\\",ctls=\\\"homeCtl\\\")\\n        md-divider\\n        md-content(flex,ui-view=\\\"content\\\",layout=\\\"column\\\")\\n    div(execute-cmd,real-time=\\\"true\\\")\\n    div.lock-size(ng-if=\\\"!$mdMedia('gt-md')\\\")\\n        md-fab-speed-dial.md-scale.md-fab-bottom-left(md-direction=\\\"right\\\",ng-mouseenter=\\\"$root.isOpenFab=true\\\",ng-mouseleave=\\\"$root.isOpenFab=false\\\",md-open=\\\"$root.isOpenFab\\\")\\n            md-fab-trigger\\n                md-button.md-fab.md-default(aria-label=\\\"menu\\\",ng-click=\\\"homeCtl.materialUtils.buildToggle('left')()\\\")\\n                    md-icon\\n                        ng-md-icon(icon=\\\"menu\\\")\\n           \");\n\t}\n\t}\n\n/***/ },\n\n/***/ 283:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<md-content flex=\\\"100\\\" layout=\\\"column\\\" ng-cloak>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<a layout=\\\"row\\\" ng-href=\\\"#/\\\" flex class=\\\"logo\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<div fx-toolbar items=\\\"sideLeftCtl.toolbar\\\" layout=\\\"row\\\" ctls=\\\"sideLeftCtl\\\" class=\\\"md-toolbar-tools\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</div>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</a>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<md-divider>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-divider>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 5, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<fx-side-menu-search>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</fx-side-menu-search>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<md-content flex=\\\"100\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 7, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<fx-side-menu selected-nodes=\\\"sideLeftCtl.selectedNodes\\\" modules=\\\"sideLeftCtl.modules\\\" ng-click=\\\"sideLeftCtl.doLinkBind\\\" class=\\\"side-menu\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 8, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<md-button ng-click=\\\"sideCtl.doLinkPre($event,node)\\\" md-style-color=\\\"{'background-color': sideCtl.isSelected(node) ? 'primary.300': 'primary.0'}\\\" class=\\\"layout-fill\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 9, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<div flex=\\\"100\\\" layout=\\\"row\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 10, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<md-icon>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 11, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<ng-md-icon icon=\\\"{{ node.icon||'apps'}}\\\" md-style-color=\\\"{'color': sideCtl.isSelected(node) ? 'accent.300': 'primary.500'}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</ng-md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 12, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<div flex=\\\"100\\\" class=\\\"md-margin\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 12, jade_debug[0].filename ));\n\tbuf.push(\"{{node.title}}\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</div>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 13, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<md-icon>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 14, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<ng-md-icon options=\\\"{&quot;rotation&quot;: &quot;none&quot;}\\\" ng-if=\\\"!sideCtl.isLeaf(node)\\\" icon=\\\"{{ sideCtl.isShowChildren(node)?'expand_more':'chevron_right' }}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</ng-md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</div>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-button>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</fx-side-menu>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-content>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 15, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<md-divider>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-divider>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 16, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<div fx-toolbar items=\\\"sideLeftCtl.toolbarBottom\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</div>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-content>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-content(flex=\\\"100\\\",layout=\\\"column\\\",ng-cloak)\\n    a.logo(layout=\\\"row\\\",ng-href=\\\"#/\\\",flex)\\n        div.md-toolbar-tools(fx-toolbar,items=\\\"sideLeftCtl.toolbar\\\",layout=\\\"row\\\",ctls=\\\"sideLeftCtl\\\")\\n    md-divider\\n    fx-side-menu-search\\n    md-content(flex=\\\"100\\\")\\n        fx-side-menu.side-menu(selected-nodes=\\\"sideLeftCtl.selectedNodes\\\",modules=\\\"sideLeftCtl.modules\\\",ng-click=\\\"sideLeftCtl.doLinkBind\\\")\\n            md-button.layout-fill(ng-click=\\\"sideCtl.doLinkPre($event,node)\\\",md-style-color=\\\"{'background-color': sideCtl.isSelected(node) ? 'primary.300': 'primary.0'}\\\")\\n                div(flex=\\\"100\\\",layout=\\\"row\\\")\\n                    md-icon\\n                        ng-md-icon(icon=\\\"{{ node.icon||'apps'}}\\\",md-style-color=\\\"{'color': sideCtl.isSelected(node) ? 'accent.300': 'primary.500'}\\\")\\n                    div.md-margin(flex=\\\"100\\\") {{node.title}}\\n                    md-icon\\n                        ng-md-icon(options='{\\\"rotation\\\": \\\"none\\\"}',ng-if=\\\"!sideCtl.isLeaf(node)\\\",icon=\\\"{{ sideCtl.isShowChildren(node)?'expand_more':'chevron_right' }}\\\")\\n    md-divider\\n    div(fx-toolbar,items=\\\"sideLeftCtl.toolbarBottom\\\")\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 310:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(231);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(11)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/sass-loader/index.js!./sidemenu.scss\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/sass-loader/index.js!./sidemenu.scss\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 336:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar module_1 = __webpack_require__(12);\n\tfunction Directive() {\n\t    return {\n\t        restrict: 'EA',\n\t        require: '^fxSideMenu',\n\t        link: function ($scope, $element, $attrs, $ctrl) {\n\t            $ctrl['template']($scope, function (clone) {\n\t                $element.html('').append(clone);\n\t            });\n\t        }\n\t    };\n\t}\n\tmodule_1.module.directive('fxSideMenuChild', Directive);\n\n\n/***/ },\n\n/***/ 337:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar module_1 = __webpack_require__(12);\n\tfunction Directive() {\n\t    return {\n\t        link: function ($scope, $element, $attrs, $ctrl) {\n\t            $scope['$sideMenuTransclude']($scope, function (clone) {\n\t                $element.empty();\n\t                $element.append(clone);\n\t            });\n\t        }\n\t    };\n\t}\n\tmodule_1.module.directive('fxSideMenuContentTransclude', Directive);\n\n\n/***/ },\n\n/***/ 338:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar module_1 = __webpack_require__(12);\n\tvar _name = \"mdStyleColor\";\n\tfunction Directive(mdSideMenuSections) {\n\t    return {\n\t        restrict: 'A',\n\t        scope: {\n\t            mdStyleColor: '='\n\t        },\n\t        link: function ($scope, $element, $attrs) {\n\t            var themeColors, split, hueR, colorR, colorA, hueA, colorValue, _apply_color = function () {\n\t                for (var p in $scope[_name]) {\n\t                    if ($scope[_name].hasOwnProperty(p)) {\n\t                        themeColors = mdSideMenuSections.theme.colors,\n\t                            split = ($scope[_name][p] || '').split('.');\n\t                        if (split.length < 2) {\n\t                            split.unshift('primary');\n\t                        }\n\t                        hueR = split[1] || 'hue-1';\n\t                        colorR = split[0] || 'primary';\n\t                        colorA = themeColors[colorR] ? themeColors[colorR].name : colorR;\n\t                        hueA = themeColors[colorR] ? (themeColors[colorR].hues[hueR] || hueR) : hueR;\n\t                        colorValue = mdSideMenuSections.palettes[colorA][hueA] ? mdSideMenuSections.palettes[colorA][hueA].value : mdSideMenuSections.palettes[colorA]['500'].value;\n\t                        if (hueA !== '0') {\n\t                            $element.css(p, 'rgb(' + colorValue.join(',') + ')');\n\t                        }\n\t                        else {\n\t                            $element.css(p, 'transparent');\n\t                        }\n\t                    }\n\t                }\n\t            };\n\t            if (!mdSideMenuSections.theme || !mdSideMenuSections.palettes) {\n\t                return console.warn('you probably want to ssSideNavSectionsProvider.initWithTheme($mdThemingProvider)');\n\t            }\n\t            $scope.$watch(_name, function (oldVal, newVal) {\n\t                if ((oldVal && newVal) && oldVal !== newVal) {\n\t                    _apply_color();\n\t                }\n\t            }, true);\n\t            _apply_color();\n\t        }\n\t    };\n\t}\n\tmodule_1.module.directive(_name, [\"mdSideMenuSections\", Directive]);\n\n\n/***/ },\n\n/***/ 339:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar module_1 = __webpack_require__(12);\n\tfunction Directive(mdSideMenuSections, $timeout) {\n\t    return {\n\t        restrict: 'EA',\n\t        template: __webpack_require__(271),\n\t        controllerAs: \"searchCtl\",\n\t        link: function ($scope) {\n\t            $scope.searchText = \"\";\n\t            $scope.title = \"搜索菜单\";\n\t            $scope.$watch(\"searchText\", function (newVal, oldVal) {\n\t                $timeout.cancel($scope.timeID);\n\t                $scope.timeID = $timeout(function () {\n\t                    mdSideMenuSections.options.filterExpression = newVal;\n\t                }, 1000);\n\t            });\n\t        }\n\t    };\n\t}\n\tmodule_1.module.directive('fxSideMenuSearch', [\"mdSideMenuSections\", \"$timeout\", Directive]);\n\n\n/***/ },\n\n/***/ 340:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar module_1 = __webpack_require__(12);\n\tfunction Provider() {\n\t    var _sections = [], _theme, _palettes;\n\t    this.initWithSections = function (value) {\n\t        _sections = value ? value : [];\n\t    };\n\t    this.initWithTheme = function (value) {\n\t        _theme = value.theme();\n\t        _palettes = value._PALETTES;\n\t    };\n\t    this.$get = [function () {\n\t            var MdSideMenuSections = function () {\n\t                this.sections = _sections;\n\t                this.selectedNode = null;\n\t                this.options = {};\n\t                this.theme = _theme;\n\t                this.palettes = _palettes;\n\t                this.searchStr = \"\";\n\t            };\n\t            return new MdSideMenuSections();\n\t        }];\n\t}\n\tmodule_1.module.provider('mdSideMenuSections', [Provider]);\n\n\n/***/ },\n\n/***/ 341:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar module_1 = __webpack_require__(12);\n\tvar _ = __webpack_require__(3);\n\tfunction Factory($rootScope, $timeout, mdSideMenuSections) {\n\t    var onStateChangeStart = function (event, toState, toParams) {\n\t        var options = mdSideMenuSections.options;\n\t        function digest(sections, currentSection) {\n\t            !mdSideMenuSections.selectedNode && sections &&\n\t                _.forEach(sections, function (section) {\n\t                    if (section[mdSideMenuSections.options.children] && section[mdSideMenuSections.options.children].length) {\n\t                        digest(section[mdSideMenuSections.options.children], section);\n\t                    }\n\t                    if (section.showed && toState.name == section.link && toParams.key == section.key) {\n\t                        mdSideMenuSections.selectedNode = section;\n\t                        return false;\n\t                    }\n\t                });\n\t            return false;\n\t        }\n\t        mdSideMenuSections.selectedNode = null;\n\t        $timeout(function () {\n\t            digest(mdSideMenuSections.sections, null);\n\t        }, 10);\n\t    };\n\t    $rootScope.$on('$stateChangeSuccess', onStateChangeStart);\n\t    return {\n\t        onStateChangeStart: onStateChangeStart\n\t    };\n\t}\n\tmodule_1.module.factory('fxSideMenuFactory', [\"$rootScope\", \"$timeout\", \"mdSideMenuSections\", Factory]);\n\n\n/***/ },\n\n/***/ 342:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar module_1 = __webpack_require__(158);\n\tvar _ = __webpack_require__(3);\n\t__webpack_require__(25);\n\tvar Service = (function () {\n\t    function Service() {\n\t    }\n\t    return Service;\n\t}());\n\tService._name = \"toolbarUtils\";\n\tService.provider = [function () {\n\t        var Base = (function () {\n\t            function Base(data) {\n\t                this.data = data;\n\t            }\n\t            Base.prototype.conditionBuilder = function (condition, prefix, useDisabled) {\n\t                if (prefix === void 0) { prefix = true; }\n\t                if (useDisabled === void 0) { useDisabled = false; }\n\t                this.data = _.extend({}, this.data, {\n\t                    conditionInfo: {\n\t                        condition: condition,\n\t                        prefix: prefix,\n\t                        useDisabled: useDisabled\n\t                    }\n\t                });\n\t                return this;\n\t            };\n\t            Base.prototype.className = function (className) {\n\t                this.data = _.extend({}, this.data, {\n\t                    className: className\n\t                });\n\t                return this;\n\t            };\n\t            Base.prototype.noOptions = function (tooltip, icon) {\n\t                if (tooltip === void 0) { tooltip = false; }\n\t                if (icon === void 0) { icon = false; }\n\t                tooltip && delete this.data.tooltip;\n\t                icon && delete this.data.icon;\n\t                return this;\n\t            };\n\t            Base.prototype.tooltipBuilder = function (title, position) {\n\t                if (title === void 0) { title = \"\"; }\n\t                if (position === void 0) { position = \"bottom\"; }\n\t                this.data = _.extend({}, this.data, {\n\t                    tooltip: {\n\t                        title: title,\n\t                        position: position\n\t                    }\n\t                });\n\t                return this;\n\t            };\n\t            Base.prototype.removeTooltip = function () {\n\t                this.data.tooltip = null;\n\t                return this;\n\t            };\n\t            Base.prototype.iconBuilder = function (icon, style, ricon, options, size) {\n\t                this.data = _.extend({}, this.data, {\n\t                    icon: {\n\t                        icon: icon,\n\t                        ricon: ricon,\n\t                        style: style,\n\t                        size: size || '24px'\n\t                    }\n\t                });\n\t                return this;\n\t            };\n\t            Base.prototype.attrBuilder = function (attributes) {\n\t                this.data = _.extend({}, this.data, {\n\t                    attributes: attributes\n\t                });\n\t                return this;\n\t            };\n\t            Base.prototype.toolsBuilder = function (tools) {\n\t                this.data = _.extend({}, this.data, {\n\t                    tools: tools || []\n\t                });\n\t                return this;\n\t            };\n\t            Base.prototype.btnClick = function (func) {\n\t                if (func && _.isFunction(func)) {\n\t                    this.data = _.extend({}, this.data, {\n\t                        onClick: func\n\t                    });\n\t                }\n\t                return this;\n\t            };\n\t            Base.prototype.menuOptionsBuilder = function (width, items) {\n\t                if (width === void 0) { width = 4; }\n\t                if (items === void 0) { items = []; }\n\t                this.data = _.extend({}, this.data, {\n\t                    width: width || 4,\n\t                    items: items || []\n\t                });\n\t                return this;\n\t            };\n\t            Base.prototype.items = function (items) {\n\t                if (items === void 0) { items = []; }\n\t                this.data = _.extend({}, this.data, {\n\t                    items: items || []\n\t                });\n\t                return this;\n\t            };\n\t            Base.prototype.toValue = function () {\n\t                return this.data;\n\t            };\n\t            return Base;\n\t        }());\n\t        var Service = (function (_super) {\n\t            __extends(Service, _super);\n\t            function Service(data) {\n\t                var _this = _super.call(this, data) || this;\n\t                _this.data = data;\n\t                return _this;\n\t            }\n\t            Service.prototype.btnBuilder = function (title, className, showTitle, tooltipPosition) {\n\t                if (showTitle === void 0) { showTitle = true; }\n\t                if (tooltipPosition === void 0) { tooltipPosition = \"bottom\"; }\n\t                var service = new Service({\n\t                    type: \"btn\",\n\t                    title: title,\n\t                    className: className,\n\t                    showTitle: showTitle\n\t                });\n\t                service.tooltipBuilder(title, tooltipPosition);\n\t                return service;\n\t            };\n\t            Service.prototype.menuBuilder = function (title, className, showTitle, tooltipPosition) {\n\t                if (showTitle === void 0) { showTitle = true; }\n\t                if (tooltipPosition === void 0) { tooltipPosition = \"bottom\"; }\n\t                var service = this.btnBuilder(title, className, showTitle, tooltipPosition);\n\t                service.data.type = \"menu\";\n\t                return service;\n\t            };\n\t            Service.prototype.menuItemBuilder = function (title, className, showTitle, tooltipPosition) {\n\t                if (showTitle === void 0) { showTitle = true; }\n\t                if (tooltipPosition === void 0) { tooltipPosition = \"bottom\"; }\n\t                var service = this.btnBuilder(title, className, showTitle, tooltipPosition);\n\t                service.data.type = \"menuItem\";\n\t                return service;\n\t            };\n\t            Service.prototype.labelBuilder = function (title, cls) {\n\t                return new Service({\n\t                    type: \"label\",\n\t                    title: title,\n\t                    cls: cls\n\t                });\n\t            };\n\t            Service.prototype.layoutBuilder = function (flex, layout, layoutAlign) {\n\t                if (flex === void 0) { flex = \"none\"; }\n\t                if (layout === void 0) { layout = \"none\"; }\n\t                if (layoutAlign === void 0) { layoutAlign = \"none none\"; }\n\t                return new Service({\n\t                    type: \"layout\",\n\t                    flex: flex,\n\t                    layout: layout,\n\t                    layoutAlign: layoutAlign\n\t                });\n\t            };\n\t            Service.prototype.menuBarBuilder = function () {\n\t                return new Service({\n\t                    type: \"menuBar\"\n\t                });\n\t            };\n\t            Service.prototype.noneBuilder = function (type) {\n\t                return new Service({\n\t                    type: type\n\t                });\n\t            };\n\t            return Service;\n\t        }(Base));\n\t        return new Service();\n\t    }];\n\tmodule_1.module.service(Service._name, Service.provider);\n\n\n/***/ },\n\n/***/ 343:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar _ = __webpack_require__(3);\n\tvar ContentController = (function () {\n\t    function ContentController($rootScope, $timeout, materialUtils, svgUtils, fxAction, iconInfoDetailForm) {\n\t        var _this = this;\n\t        this.$rootScope = $rootScope;\n\t        this.$timeout = $timeout;\n\t        this.materialUtils = materialUtils;\n\t        this.svgUtils = svgUtils;\n\t        this.fxAction = fxAction;\n\t        this.iconInfoDetailForm = iconInfoDetailForm;\n\t        this.icons = [];\n\t        this.icons.length = 0;\n\t        _.each(svgUtils.getAllIcons(), function (shape, key) {\n\t            _this.icons.push(key);\n\t        });\n\t        this.standardItems = [\n\t            { sizeX: 2, sizeY: 1, row: 0, col: 0, class: \"md-whiteframe-1dp\" },\n\t            { sizeX: 2, sizeY: 2, row: 0, col: 2, class: \"md-whiteframe-1dp\" },\n\t            { sizeX: 1, sizeY: 1, row: 0, col: 4, class: \"md-whiteframe-1dp\" },\n\t            { sizeX: 1, sizeY: 1, row: 0, col: 5, class: \"md-whiteframe-1dp\" },\n\t            { sizeX: 2, sizeY: 1, row: 1, col: 0, class: \"md-whiteframe-1dp\" },\n\t            { sizeX: 1, sizeY: 1, row: 1, col: 4, class: \"md-whiteframe-1dp\" },\n\t            { sizeX: 1, sizeY: 2, row: 1, col: 5, class: \"md-whiteframe-1dp\" },\n\t            { sizeX: 1, sizeY: 1, row: 2, col: 0, class: \"md-whiteframe-1dp\" },\n\t            { sizeX: 2, sizeY: 1, row: 2, col: 1, class: \"md-whiteframe-1dp\" },\n\t            { sizeX: 1, sizeY: 1, row: 2, col: 3, class: \"md-whiteframe-1dp\" },\n\t            { sizeX: 1, sizeY: 1, row: 2, col: 4, class: \"md-whiteframe-1dp\" }\n\t        ];\n\t        this.gridsterOpts = {\n\t            draggable: {\n\t                start: function (event, $element, widget) {\n\t                    widget.class = \"md-whiteframe-16dp\";\n\t                },\n\t                stop: function (event, $element, widget) {\n\t                    widget.class = \"md-whiteframe-1dp\";\n\t                }\n\t            }\n\t        };\n\t        this.getDetaitInfo();\n\t        this.getChartInfo();\n\t    }\n\t    ContentController.prototype.doOpenIconInfo = function ($event, iconInfo) {\n\t        this.fxAction.doActionModel($event, this.iconInfoDetailForm, { key: iconInfo });\n\t    };\n\t    ContentController.prototype.getDetaitInfo = function () {\n\t        var _this = this;\n\t        var promise = this.fxAction.doAction('departTreeAction', null);\n\t        promise && promise.then(function (results) {\n\t            var nodes = [];\n\t            _.forEach(results, function (result) {\n\t                if (_.isArray(result)) {\n\t                    nodes = nodes.concat(result);\n\t                }\n\t            });\n\t            var nodesGroupByDepth = _.groupBy(_.keyBy(nodes, \"key\"), \"depth\");\n\t            var depth = 0, root = {};\n\t            var _loop_1 = function () {\n\t                var nodesIsDepth = nodesGroupByDepth[depth];\n\t                var parentIsDepth = nodesGroupByDepth[depth - 1];\n\t                if (nodesIsDepth && nodesIsDepth.length > 0) {\n\t                    switch (depth) {\n\t                        case 0:\n\t                            root = nodesIsDepth[0];\n\t                            break;\n\t                        case 1:\n\t                            root['nodes'] = nodesIsDepth;\n\t                            break;\n\t                        default:\n\t                            _.forEach(parentIsDepth, function (parentNode) {\n\t                                parentNode[\"nodes\"] = _.filter(nodesIsDepth, function (node) {\n\t                                    return node.lft > parentNode.lft && parentNode.rgt > node.rgt;\n\t                                });\n\t                            });\n\t                            break;\n\t                    }\n\t                }\n\t                else {\n\t                    return \"break\";\n\t                }\n\t                depth++;\n\t            };\n\t            while (true) {\n\t                var state_1 = _loop_1();\n\t                if (state_1 === \"break\")\n\t                    break;\n\t            }\n\t            _this.departs = root[\"nodes\"];\n\t        });\n\t        this.treeOptions = {\n\t            nodeChildren: \"nodes\",\n\t            dirSelectable: false,\n\t            templateUrl: 'treeControlExternalTemplate.html',\n\t            injectClasses: {\n\t                ul: \"a1\",\n\t                li: \"a2\",\n\t                liSelected: \"a7\",\n\t                iExpanded: \"a3\",\n\t                iCollapsed: \"a4\",\n\t                iLeaf: \"a5\",\n\t                label: \"a6\",\n\t                labelSelected: \"a8\"\n\t            }\n\t        };\n\t    };\n\t    ContentController.prototype.getChartInfo = function () {\n\t        var _this = this;\n\t        this.departChartOptions = {\n\t            chart: {\n\t                type: 'multiBarChart',\n\t                \"margin\": {\n\t                    \"top\": 50,\n\t                    \"right\": 20,\n\t                    \"bottom\": 50,\n\t                    \"left\": 50\n\t                },\n\t                x: function (d) {\n\t                    return d[0];\n\t                },\n\t                y: function (d) {\n\t                    return d[1];\n\t                },\n\t                stacked: true,\n\t                \"clipEdge\": true,\n\t                \"duration\": 500,\n\t                \"xAxis\": {\n\t                    \"axisLabel\": \"设备类型\",\n\t                    \"showMaxMin\": true\n\t                },\n\t                \"yAxis\": {\n\t                    \"axisLabel\": \"数量\",\n\t                    \"axisLabelDistance\": -20\n\t                }\n\t            }\n\t        };\n\t        this.fxAction.doAction(\"deviceChartAction\", {}).then(function (result) {\n\t            var dataMap = [];\n\t            var types = _.keyBy(result.deviceChart.aggregations.type_aggs.buckets, function (val) {\n\t                return val.key;\n\t            });\n\t            _.each(result.deviceChart.aggregations.depart_aggs.buckets, function (val, key) {\n\t                var data = {\n\t                    key: val.key,\n\t                    values: []\n\t                };\n\t                var buckets = _.keyBy(val.type_aggs.buckets, function (val) {\n\t                    return val.key;\n\t                });\n\t                _.forEach(types, function (t, key) {\n\t                    if (buckets[key]) {\n\t                        data.values.push([key, buckets[key].doc_count]);\n\t                    }\n\t                    else {\n\t                        data.values.push([key, 0]);\n\t                    }\n\t                });\n\t                dataMap.push(data);\n\t            });\n\t            _this.departChartData = dataMap;\n\t        });\n\t    };\n\t    return ContentController;\n\t}());\n\tContentController.$inject = [\"$rootScope\", \"$timeout\", \"materialUtils\", \"svgUtils\", \"fxAction\", \"iconInfoDetailForm\"];\n\texports.ContentController = ContentController;\n\n\n/***/ },\n\n/***/ 344:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar HomeController = (function () {\n\t    function HomeController($rootScope, materialUtils, toolbarUtils, fxAction) {\n\t        var _this = this;\n\t        this.$rootScope = $rootScope;\n\t        this.materialUtils = materialUtils;\n\t        this.toolbarUtils = toolbarUtils;\n\t        this.fxAction = fxAction;\n\t        $rootScope[\"isOpenMenu\"] = false;\n\t        this.toolbars = [\n\t            toolbarUtils.labelBuilder(\"\").attrBuilder({ flex: \"\" }).toValue(),\n\t            toolbarUtils.noneBuilder(\"icon\").className(\"md-margin\").iconBuilder(\"people\", {}, null, null, \"24px\").toValue(),\n\t            toolbarUtils.labelBuilder(\"{{$root.user.username}}\", \"md-subhead\").attrBuilder({}).toValue(),\n\t            toolbarUtils.menuBarBuilder().className(\"md-no-padding\").removeTooltip().items([\n\t                toolbarUtils.menuBuilder(\"\", \"md-icon-button\").attrBuilder({ \"md-position-mode\": \"left bottom\" }).iconBuilder(\"expand_more\").menuOptionsBuilder().items([\n\t                    toolbarUtils.menuItemBuilder(\"退出登录\", \"\", true).iconBuilder(\"power-settings\").btnClick(function ($event) {\n\t                        _this.doExit($event);\n\t                    }).toValue(),\n\t                ]).toValue()\n\t            ]).toValue()\n\t        ];\n\t    }\n\t    HomeController.prototype.doExit = function ($event) {\n\t        var _this = this;\n\t        this.fxAction.getModel('logout').then(function (model) {\n\t            var promise = _this.fxAction.doActionModel($event, model);\n\t            if (promise) {\n\t                promise.then(function () {\n\t                    console.log(\"logout\");\n\t                });\n\t            }\n\t        });\n\t    };\n\t    return HomeController;\n\t}());\n\tHomeController.$inject = [\"$rootScope\", \"materialUtils\", \"toolbarUtils\", \"fxAction\"];\n\texports.HomeController = HomeController;\n\n\n/***/ },\n\n/***/ 345:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar _ = __webpack_require__(3);\n\tvar SidenavLeftController = (function () {\n\t    function SidenavLeftController($rootScope, mdSideMenuSections, toolbarUtils, fxAction, $state, $stateParams, $timeout, fxSideMenuFactory) {\n\t        this.$rootScope = $rootScope;\n\t        this.mdSideMenuSections = mdSideMenuSections;\n\t        this.toolbarUtils = toolbarUtils;\n\t        this.fxAction = fxAction;\n\t        this.$state = $state;\n\t        this.$stateParams = $stateParams;\n\t        this.$timeout = $timeout;\n\t        this.fxSideMenuFactory = fxSideMenuFactory;\n\t        this.selectedNodes = {};\n\t        this.initModules().initToolbar();\n\t        this.doLinkBind = this.doLink.bind(this);\n\t        this.toolbar = [\n\t            toolbarUtils.labelBuilder(\"CMDB\").attrBuilder({ flex: \"\" }).toValue()\n\t        ];\n\t    }\n\t    SidenavLeftController.prototype.getModules = function () {\n\t        var _this = this;\n\t        var promise = this.fxAction.doAction('moduleMenuAction', null);\n\t        promise && promise.then(function (results) {\n\t            var nodes = [];\n\t            _.forEach(results, function (result) {\n\t                if (_.isArray(result)) {\n\t                    nodes = nodes.concat(result);\n\t                }\n\t            });\n\t            var nodesGroupByDepth = _.groupBy(_.keyBy(nodes, \"key\"), \"depth\");\n\t            var depth = 0, root = {};\n\t            var _loop_1 = function () {\n\t                var nodesIsDepth = nodesGroupByDepth[depth];\n\t                var parentIsDepth = nodesGroupByDepth[depth - 1];\n\t                if (nodesIsDepth && nodesIsDepth.length > 0) {\n\t                    switch (depth) {\n\t                        case 0:\n\t                            root = nodesIsDepth[0];\n\t                            break;\n\t                        case 1:\n\t                            root['nodes'] = nodesIsDepth;\n\t                            break;\n\t                        default:\n\t                            _.forEach(parentIsDepth, function (parentNode) {\n\t                                parentNode[\"nodes\"] = _.filter(nodesIsDepth, function (node) {\n\t                                    return node.lft > parentNode.lft && parentNode.rgt > node.rgt;\n\t                                });\n\t                            });\n\t                            break;\n\t                    }\n\t                }\n\t                else {\n\t                    return \"break\";\n\t                }\n\t                depth++;\n\t            };\n\t            while (true) {\n\t                var state_1 = _loop_1();\n\t                if (state_1 === \"break\")\n\t                    break;\n\t            }\n\t            _this.mdSideMenuSections.sections = root[\"nodes\"];\n\t            _this.modules = _this.mdSideMenuSections.sections;\n\t            _this.selectedNodes = _.keyBy(nodesGroupByDepth[1], \"key\") || {};\n\t            _this.fxSideMenuFactory.onStateChangeStart(null, _this.$state.current, _this.$state.params);\n\t        });\n\t    };\n\t    SidenavLeftController.prototype.initModules = function () {\n\t        this.getModules();\n\t        this.mdSideMenuSections.options = {\n\t            children: \"nodes\",\n\t            key: 'key',\n\t            dirSelectable: false,\n\t            orderBy: 'lft',\n\t            filterField: 'key'\n\t        };\n\t        return this;\n\t    };\n\t    SidenavLeftController.prototype.initToolbar = function () {\n\t        var _this = this;\n\t        this.toolbarBottom = [\n\t            this.toolbarUtils.layoutBuilder(\"\", \"row\", \"space-around center\").toolsBuilder([\n\t                this.toolbarUtils.btnBuilder(\"刷新\", \"md-icon-button\", false, \"top\").iconBuilder(\"refresh\").btnClick(function ($event) {\n\t                    _this.getModules();\n\t                }).toValue(),\n\t                this.toolbarUtils.btnBuilder(\"全部折叠\", \"md-icon-button\", false, \"top\").iconBuilder(\"dehaze\").btnClick(function ($event) {\n\t                    _.forEach(_this.selectedNodes, function (val, key) {\n\t                        delete _this.selectedNodes[key];\n\t                    });\n\t                }).toValue(),\n\t            ]).toValue()\n\t        ];\n\t        return this;\n\t    };\n\t    SidenavLeftController.prototype.doLink = function ($event, node) {\n\t        var _this = this;\n\t        if (node && node.link && node.key) {\n\t            this.$timeout(function () {\n\t                _this.$state.go(node.link, node);\n\t            }, 200);\n\t        }\n\t    };\n\t    return SidenavLeftController;\n\t}());\n\tSidenavLeftController.$inject = [\"$rootScope\", \"mdSideMenuSections\", \"toolbarUtils\", \"fxAction\", \"$state\", \"$stateParams\", \"$timeout\", \"fxSideMenuFactory\"];\n\texports.SidenavLeftController = SidenavLeftController;\n\n\n/***/ },\n\n/***/ 346:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__dirname) {\"use strict\";\n\tvar ngMaterial = __webpack_require__(7);\n\t__webpack_require__(178);\n\tvar ngMaterialIcons = __webpack_require__(19);\n\tvar _ = __webpack_require__(3);\n\tvar action_1 = __webpack_require__(15);\n\tvar router_1 = __webpack_require__(204);\n\tvar material_service_1 = __webpack_require__(16);\n\tvar svg_service_1 = __webpack_require__(208);\n\tvar toolbar_1 = __webpack_require__(203);\n\tvar sidemenu_1 = __webpack_require__(202);\n\t__webpack_require__(179);\n\tvar action_model_1 = __webpack_require__(5);\n\t__webpack_require__(193);\n\t__webpack_require__(26);\n\t__webpack_require__(177);\n\t__webpack_require__(24);\n\t__webpack_require__(35);\n\t__webpack_require__(175);\n\tvar module = angular.module(\"homeModule\", [action_1.default, toolbar_1.default, sidemenu_1.default, svg_service_1.default, material_service_1.default, ngMaterial, 'ui.router', 'nvd3', ngMaterialIcons, 'gridster', 'treeControl']);\n\tmodule.config([\n\t    \"$stateProvider\",\n\t    \"$urlRouterProvider\",\n\t    \"$httpProvider\",\n\t    \"$mdThemingProvider\",\n\t    \"$mdAriaProvider\",\n\t    \"$locationProvider\",\n\t    \"mdSideMenuSectionsProvider\",\n\t    function ($stateProvider, $urlRouterProvider, $httpProvider, $mdThemingProvider, $mdAriaProvider, $locationProvider, mdSideMenuSectionsProvider, cfpLoadingBarProvider) {\n\t        $mdThemingProvider.alwaysWatchTheme(true);\n\t        $mdAriaProvider.disableWarnings();\n\t        $mdThemingProvider.theme('default')\n\t            .primaryPalette('grey')\n\t            .accentPalette('blue')\n\t            .warnPalette('red');\n\t        router_1.initRouter($urlRouterProvider, $stateProvider);\n\t        mdSideMenuSectionsProvider.initWithTheme($mdThemingProvider);\n\t    }\n\t])\n\t    .run([\"$rootScope\", \"$state\", \"$q\", \"svgUtils\", \"fxAction\", \"fxSideMenuFactory\", function ($rootScope, $state, $q, svgUtils, fxAction) {\n\t        var state = {};\n\t        var handleResolve = function (isComplete) {\n\t            state.$$isFinish = true;\n\t            $state.go(state.toState.name, state.toParams, state.options);\n\t        };\n\t        $rootScope.$on(\"$stateRefresh\", function () {\n\t            state.$$isFinish = false;\n\t        });\n\t        $rootScope.$on(\"$stateChangeStart\", function (evt, toState, toParams, fromState, fromParams) {\n\t            console.log(\"$stateChangeStart\", evt, toState, toParams, fromState, fromParams);\n\t        });\n\t        $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams, options) {\n\t            if (!state.$$isFinish) {\n\t                _.extend(state, {\n\t                    toState: toState,\n\t                    toParams: toParams,\n\t                    fromState: fromState,\n\t                    fromParams: fromParams,\n\t                    options: options\n\t                });\n\t                event.preventDefault();\n\t                $q.all({\n\t                    mdi: svgUtils.loadSvgUrl(__dirname + 'svgs/mdi.svg'),\n\t                    weibo: svgUtils.loadSvgUrl(__dirname + 'svgs/weibo.svg'),\n\t                    configConfig: fxAction.doAction(\"configAction\", {}).then(function (result) {\n\t                        $rootScope[\"config\"] = result.configAction.config;\n\t                    }),\n\t                    userinfoAction: fxAction.doAction(\"userinfoAction\", {}).then(function (result) {\n\t                        result.userinfo && ($rootScope[\"user\"] = result.userinfo);\n\t                    })\n\t                }).then(function () { handleResolve(true); }, function () { handleResolve(false); });\n\t            }\n\t        });\n\t    }]);\n\tmodule.value(\"iconInfoDetailForm\", {\n\t    key: \"iconInfoDetailForm\",\n\t    icon: \"search\",\n\t    type: action_model_1.ActionType.form,\n\t    title: \"ICON详情\",\n\t    form: {\n\t        dataSchema: {\n\t            type: \"object\",\n\t            properties: {\n\t                key: {\n\t                    type: \"string\",\n\t                    title: \"KEY\"\n\t                }\n\t            }\n\t        },\n\t        formSchema: [{\n\t                key: \"key\",\n\t                type: \"string\",\n\t                placeHolder: \"KEY\",\n\t                htmlClass: \"md-block\"\n\t            }]\n\t    }\n\t});\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = \"\" + module.name;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"/\"))\n\n/***/ },\n\n/***/ 359:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"7af35d2f474641e3a73ea274191a9107.jpg\";\n\n/***/ }\n\n},[346]);\n\n\n/** WEBPACK FOOTER **\n ** page/home.bundle.js\n **/","/**\n * Created by NICK on 16/8/16.\n */\n\nimport * as _ from 'lodash';\nimport \"./styles/sidemenu.scss\";\n\nconst _name = \"fxSideMenu\", _module = `${_name}Module`;\n\ninterface IDirectiveScope extends ng.IScope {\n    node: Object;\n    $sideMenuTransclude: Object;\n}\n\nclass Controller {\n    static $inject = [\"$scope\", \"$compile\", \"$interpolate\", \"mdSideMenuSections\"];\n\n    template: any;\n    selectedNodes: Object;\n    doLink: Function;\n    options: Object = {};\n\n    constructor(private $scope, private $compile, private $interpolate, private mdSideMenuSections) {\n        this.template = $compile($interpolate(require(\"./tpls/sidemenu.jade\")())({\n            opts: mdSideMenuSections.options\n        }));\n\n        this.options = this.mdSideMenuSections.options;\n    }\n\n    doLinkPre($event, node) {\n        if (_.isFunction(this.doLink)) {\n            this.doLink($event, node);\n        }\n        console.log(node);\n    }\n\n    /**\n     * 显示和隐藏子菜单\n     * @param node   {Object} 菜单的数据\n     */\n    showChildren(node) {\n        let opts = this.mdSideMenuSections.options;\n\n        if (this.selectedNodes.hasOwnProperty(node[opts.key])) {\n            delete this.selectedNodes[node[opts.key]];\n        } else {\n            if (node[opts.children] && node[opts.children].length) {\n                this.selectedNodes[node[opts.key]] = node;\n            }\n        }\n    }\n\n    /**\n     * 子节点是否显示\n     * @param node {Object} 菜单的数据\n     * @returns {boolean}\n     */\n    isShowChildren(node) {\n        let opts = this.mdSideMenuSections.options;\n\n        return !!this.selectedNodes[node[opts.key]];\n    }\n\n    /**\n     * 判断是否是叶子节点\n     * @param node   {Object} 菜单的数据\n     * @returns {boolean}\n     */\n    isLeaf(node) {\n        let opts = this.mdSideMenuSections.options;\n\n        return node.rgt - node.lft == 1 || !node[opts.children] || node[opts.children].length == 0;\n    }\n\n    /**\n     * 是否选中\n     * @param node    {Object} 菜单的数据\n     * @returns {boolean}\n     */\n    isSelected(node) {\n        let opts = this.mdSideMenuSections.options;\n\n        return !!this.mdSideMenuSections.selectedNode && this.mdSideMenuSections.selectedNode[opts.key] == node[opts.key];\n    }\n\n}\n\n\n/**\n * sidemenu指令\n * @param mdSideMenuSections\n * @returns {{restrict: string, replace: boolean, require: string, transclude: boolean, controllerAs: string, scope: {modules: string}, bindToController: {selectedNodes: string}, controller: Controller, compile: (($ele:ng.IAugmentedJQuery, $attr:ng.IAttributes, childTranscludeFn:any)=>($scope:IDirectiveScope, $element:any, attrs:any, $ctrl:any)=>undefined)}}\n * @constructor\n */\nfunction Directive(mdSideMenuSections): ng.IDirective {\n    return {\n        restrict: 'EA',\n        replace: false,\n        require: _name,\n        transclude: true,\n        controllerAs: \"sideCtl\",\n        scope: {\n            modules: '='\n        },\n        bindToController: {\n            selectedNodes: '=',\n            doLink: '=?ngClick'\n        },\n        controller: Controller,\n        compile: ($ele: ng.IAugmentedJQuery, $attr: ng.IAttributes, childTranscludeFn) => {\n            return ($scope: IDirectiveScope, $element, attrs, $ctrl) => {\n                // 监听modules的变化,初始化根节点数据\n                $scope.$watch(\"modules\", function updateNodeOnRootScope(newValue) {\n                    let opts = mdSideMenuSections.options;\n\n                    if (_.isArray(newValue)) {\n                        if (angular.isDefined($scope.node) && angular.equals($scope.node[opts.children], newValue)) {\n                            return;\n                        }\n                        $scope.node = {};\n                        $scope.node[opts.children] = newValue;\n                    }\n                    else {\n                        if (angular.equals($scope.node, newValue)) {\n                            return;\n                        }\n                        $scope.node = newValue;\n                    }\n                });\n                // 应用模板\n                $ctrl[\"template\"]($scope, function (clone) {\n                    $element.html('').append(clone);\n                });\n                $scope.$sideMenuTransclude = childTranscludeFn;\n            };\n        }\n    };\n}\n\nexport const module = angular.module(_module, [\"ngAnimate\", \"ngMaterial\"]).directive(_name, [\"mdSideMenuSections\", Directive]);\nexport default `${module.name}`;\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/sidemenu/module.ts\n **/","/* nvd3 version 1.8.5 (https://github.com/novus/nvd3) 2016-12-01 */\n(function(){\n\n// set up main nv object\nvar nv = {};\n\n// the major global objects under the nv namespace\nnv.dev = false; //set false when in production\nnv.tooltip = nv.tooltip || {}; // For the tooltip system\nnv.utils = nv.utils || {}; // Utility subsystem\nnv.models = nv.models || {}; //stores all the possible models/components\nnv.charts = {}; //stores all the ready to use charts\nnv.logs = {}; //stores some statistics and potential error messages\nnv.dom = {}; //DOM manipulation functions\n\n// Node/CommonJS - require D3\nif (typeof(module) !== 'undefined' && typeof(exports) !== 'undefined' && typeof(d3) == 'undefined') {\n    d3 = require('d3');\n}\n\nnv.dispatch = d3.dispatch('render_start', 'render_end');\n\n// Function bind polyfill\n// Needed ONLY for phantomJS as it's missing until version 2.0 which is unreleased as of this comment\n// https://github.com/ariya/phantomjs/issues/10522\n// http://kangax.github.io/compat-table/es5/#Function.prototype.bind\n// phantomJS is used for running the test suite\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(this instanceof fNOP && oThis\n                        ? this\n                        : oThis,\n                    aArgs.concat(Array.prototype.slice.call(arguments)));\n            };\n\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n        return fBound;\n    };\n}\n\n//  Development render timers - disabled if dev = false\nif (nv.dev) {\n    nv.dispatch.on('render_start', function(e) {\n        nv.logs.startTime = +new Date();\n    });\n\n    nv.dispatch.on('render_end', function(e) {\n        nv.logs.endTime = +new Date();\n        nv.logs.totalTime = nv.logs.endTime - nv.logs.startTime;\n        nv.log('total', nv.logs.totalTime); // used for development, to keep track of graph generation times\n    });\n}\n\n// Logs all arguments, and returns the last so you can test things in place\n// Note: in IE8 console.log is an object not a function, and if modernizr is used\n// then calling Function.prototype.bind with with anything other than a function\n// causes a TypeError to be thrown.\nnv.log = function() {\n    if (nv.dev && window.console && console.log && console.log.apply)\n        console.log.apply(console, arguments);\n    else if (nv.dev && window.console && typeof console.log == \"function\" && Function.prototype.bind) {\n        var log = Function.prototype.bind.call(console.log, console);\n        log.apply(console, arguments);\n    }\n    return arguments[arguments.length - 1];\n};\n\n// print console warning, should be used by deprecated functions\nnv.deprecated = function(name, info) {\n    if (console && console.warn) {\n        console.warn('nvd3 warning: `' + name + '` has been deprecated. ', info || '');\n    }\n};\n\n// The nv.render function is used to queue up chart rendering\n// in non-blocking async functions.\n// When all queued charts are done rendering, nv.dispatch.render_end is invoked.\nnv.render = function render(step) {\n    // number of graphs to generate in each timeout loop\n    step = step || 1;\n\n    nv.render.active = true;\n    nv.dispatch.render_start();\n\n    var renderLoop = function() {\n        var chart, graph;\n\n        for (var i = 0; i < step && (graph = nv.render.queue[i]); i++) {\n            chart = graph.generate();\n            if (typeof graph.callback == typeof(Function)) graph.callback(chart);\n        }\n\n        nv.render.queue.splice(0, i);\n\n        if (nv.render.queue.length) {\n            setTimeout(renderLoop);\n        }\n        else {\n            nv.dispatch.render_end();\n            nv.render.active = false;\n        }\n    };\n\n    setTimeout(renderLoop);\n};\n\nnv.render.active = false;\nnv.render.queue = [];\n\n/*\nAdds a chart to the async rendering queue. This method can take arguments in two forms:\nnv.addGraph({\n    generate: <Function>\n    callback: <Function>\n})\n\nor\n\nnv.addGraph(<generate Function>, <callback Function>)\n\nThe generate function should contain code that creates the NVD3 model, sets options\non it, adds data to an SVG element, and invokes the chart model. The generate function\nshould return the chart model.  See examples/lineChart.html for a usage example.\n\nThe callback function is optional, and it is called when the generate function completes.\n*/\nnv.addGraph = function(obj) {\n    if (typeof arguments[0] === typeof(Function)) {\n        obj = {generate: arguments[0], callback: arguments[1]};\n    }\n\n    nv.render.queue.push(obj);\n\n    if (!nv.render.active) {\n        nv.render();\n    }\n};\n\n// Node/CommonJS exports\nif (typeof(module) !== 'undefined' && typeof(exports) !== 'undefined') {\n  module.exports = nv;\n}\n\nif (typeof(window) !== 'undefined') {\n  window.nv = nv;\n}\n/* Facade for queueing DOM write operations\r\n * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n * if available.\r\n * This could easily be extended to support alternate\r\n * implementations in the future.\r\n */\r\nnv.dom.write = function(callback) {\r\n\tif (window.fastdom !== undefined) {\r\n\t\treturn fastdom.mutate(callback);\r\n\t}\r\n\treturn callback();\r\n};\r\n\r\n/* Facade for queueing DOM read operations\r\n * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n * if available.\r\n * This could easily be extended to support alternate\r\n * implementations in the future.\r\n */\r\nnv.dom.read = function(callback) {\r\n\tif (window.fastdom !== undefined) {\r\n\t\treturn fastdom.measure(callback);\r\n\t}\r\n\treturn callback();\r\n};\r\n/* Utility class to handle creation of an interactive layer.\n This places a rectangle on top of the chart. When you mouse move over it, it sends a dispatch\n containing the X-coordinate. It can also render a vertical line where the mouse is located.\n\n dispatch.elementMousemove is the important event to latch onto.  It is fired whenever the mouse moves over\n the rectangle. The dispatch is given one object which contains the mouseX/Y location.\n It also has 'pointXValue', which is the conversion of mouseX to the x-axis scale.\n */\nnv.interactiveGuideline = function() {\n    \"use strict\";\n\n    var margin = { left: 0, top: 0 } //Pass the chart's top and left magins. Used to calculate the mouseX/Y.\n        ,   width = null\n        ,   height = null\n        ,   xScale = d3.scale.linear()\n        ,   dispatch = d3.dispatch('elementMousemove', 'elementMouseout', 'elementClick', 'elementDblclick', 'elementMouseDown', 'elementMouseUp')\n        ,   showGuideLine = true\n        ,   svgContainer = null // Must pass the chart's svg, we'll use its mousemove event.\n        ,   tooltip = nv.models.tooltip()\n        ,   isMSIE =  window.ActiveXObject// Checkt if IE by looking for activeX. (excludes IE11)\n    ;\n\n    tooltip\n        .duration(0)\n        .hideDelay(0)\n        .hidden(false);\n\n    function layer(selection) {\n        selection.each(function(data) {\n            var container = d3.select(this);\n            var availableWidth = (width || 960), availableHeight = (height || 400);\n            var wrap = container.selectAll(\"g.nv-wrap.nv-interactiveLineLayer\")\n                .data([data]);\n            var wrapEnter = wrap.enter()\n                .append(\"g\").attr(\"class\", \" nv-wrap nv-interactiveLineLayer\");\n            wrapEnter.append(\"g\").attr(\"class\",\"nv-interactiveGuideLine\");\n\n            if (!svgContainer) {\n                return;\n            }\n\n            function mouseHandler() {\n                var d3mouse = d3.mouse(this);\n                var mouseX = d3mouse[0];\n                var mouseY = d3mouse[1];\n                var subtractMargin = true;\n                var mouseOutAnyReason = false;\n                if (isMSIE) {\n                    /*\n                     D3.js (or maybe SVG.getScreenCTM) has a nasty bug in Internet Explorer 10.\n                     d3.mouse() returns incorrect X,Y mouse coordinates when mouse moving\n                     over a rect in IE 10.\n                     However, d3.event.offsetX/Y also returns the mouse coordinates\n                     relative to the triggering <rect>. So we use offsetX/Y on IE.\n                     */\n                    mouseX = d3.event.offsetX;\n                    mouseY = d3.event.offsetY;\n\n                    /*\n                     On IE, if you attach a mouse event listener to the <svg> container,\n                     it will actually trigger it for all the child elements (like <path>, <circle>, etc).\n                     When this happens on IE, the offsetX/Y is set to where ever the child element\n                     is located.\n                     As a result, we do NOT need to subtract margins to figure out the mouse X/Y\n                     position under this scenario. Removing the line below *will* cause\n                     the interactive layer to not work right on IE.\n                     */\n                    if(d3.event.target.tagName !== \"svg\") {\n                        subtractMargin = false;\n                    }\n\n                    if (d3.event.target.className.baseVal.match(\"nv-legend\")) {\n                        mouseOutAnyReason = true;\n                    }\n\n                }\n\n                if(subtractMargin) {\n                    mouseX -= margin.left;\n                    mouseY -= margin.top;\n                }\n\n                /* If mouseX/Y is outside of the chart's bounds,\n                 trigger a mouseOut event.\n                 */\n                if (d3.event.type === 'mouseout'\n                    || mouseX < 0 || mouseY < 0\n                    || mouseX > availableWidth || mouseY > availableHeight\n                    || (d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined)\n                    || mouseOutAnyReason\n                    ) {\n\n                    if (isMSIE) {\n                        if (d3.event.relatedTarget\n                            && d3.event.relatedTarget.ownerSVGElement === undefined\n                            && (d3.event.relatedTarget.className === undefined\n                                || d3.event.relatedTarget.className.match(tooltip.nvPointerEventsClass))) {\n\n                            return;\n                        }\n                    }\n                    dispatch.elementMouseout({\n                        mouseX: mouseX,\n                        mouseY: mouseY\n                    });\n                    layer.renderGuideLine(null); //hide the guideline\n                    tooltip.hidden(true);\n                    return;\n                } else {\n                    tooltip.hidden(false);\n                }\n\n\n                var scaleIsOrdinal = typeof xScale.rangeBands === 'function';\n                var pointXValue = undefined;\n\n                // Ordinal scale has no invert method\n                if (scaleIsOrdinal) {\n                    var elementIndex = d3.bisect(xScale.range(), mouseX) - 1;\n                    // Check if mouseX is in the range band\n                    if (xScale.range()[elementIndex] + xScale.rangeBand() >= mouseX) {\n                        pointXValue = xScale.domain()[d3.bisect(xScale.range(), mouseX) - 1];\n                    }\n                    else {\n                        dispatch.elementMouseout({\n                            mouseX: mouseX,\n                            mouseY: mouseY\n                        });\n                        layer.renderGuideLine(null); //hide the guideline\n                        tooltip.hidden(true);\n                        return;\n                    }\n                }\n                else {\n                    pointXValue = xScale.invert(mouseX);\n                }\n\n                dispatch.elementMousemove({\n                    mouseX: mouseX,\n                    mouseY: mouseY,\n                    pointXValue: pointXValue\n                });\n\n                //If user double clicks the layer, fire a elementDblclick\n                if (d3.event.type === \"dblclick\") {\n                    dispatch.elementDblclick({\n                        mouseX: mouseX,\n                        mouseY: mouseY,\n                        pointXValue: pointXValue\n                    });\n                }\n\n                // if user single clicks the layer, fire elementClick\n                if (d3.event.type === 'click') {\n                    dispatch.elementClick({\n                        mouseX: mouseX,\n                        mouseY: mouseY,\n                        pointXValue: pointXValue\n                    });\n                }\n\n                // if user presses mouse down the layer, fire elementMouseDown\n                if (d3.event.type === 'mousedown') {\n                \tdispatch.elementMouseDown({\n                \t\tmouseX: mouseX,\n                \t\tmouseY: mouseY,\n                \t\tpointXValue: pointXValue\n                \t});\n                }\n\n                // if user presses mouse down the layer, fire elementMouseUp\n                if (d3.event.type === 'mouseup') {\n                \tdispatch.elementMouseUp({\n                \t\tmouseX: mouseX,\n                \t\tmouseY: mouseY,\n                \t\tpointXValue: pointXValue\n                \t});\n                }\n            }\n\n            svgContainer\n                .on(\"touchmove\",mouseHandler)\n                .on(\"mousemove\",mouseHandler, true)\n                .on(\"mouseout\" ,mouseHandler,true)\n                .on(\"mousedown\" ,mouseHandler,true)\n                .on(\"mouseup\" ,mouseHandler,true)\n                .on(\"dblclick\" ,mouseHandler)\n                .on(\"click\", mouseHandler)\n            ;\n\n            layer.guideLine = null;\n            //Draws a vertical guideline at the given X postion.\n            layer.renderGuideLine = function(x) {\n                if (!showGuideLine) return;\n                if (layer.guideLine && layer.guideLine.attr(\"x1\") === x) return;\n                nv.dom.write(function() {\n                    var line = wrap.select(\".nv-interactiveGuideLine\")\n                        .selectAll(\"line\")\n                        .data((x != null) ? [nv.utils.NaNtoZero(x)] : [], String);\n                    line.enter()\n                        .append(\"line\")\n                        .attr(\"class\", \"nv-guideline\")\n                        .attr(\"x1\", function(d) { return d;})\n                        .attr(\"x2\", function(d) { return d;})\n                        .attr(\"y1\", availableHeight)\n                        .attr(\"y2\",0);\n                    line.exit().remove();\n                });\n            }\n        });\n    }\n\n    layer.dispatch = dispatch;\n    layer.tooltip = tooltip;\n\n    layer.margin = function(_) {\n        if (!arguments.length) return margin;\n        margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;\n        margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;\n        return layer;\n    };\n\n    layer.width = function(_) {\n        if (!arguments.length) return width;\n        width = _;\n        return layer;\n    };\n\n    layer.height = function(_) {\n        if (!arguments.length) return height;\n        height = _;\n        return layer;\n    };\n\n    layer.xScale = function(_) {\n        if (!arguments.length) return xScale;\n        xScale = _;\n        return layer;\n    };\n\n    layer.showGuideLine = function(_) {\n        if (!arguments.length) return showGuideLine;\n        showGuideLine = _;\n        return layer;\n    };\n\n    layer.svgContainer = function(_) {\n        if (!arguments.length) return svgContainer;\n        svgContainer = _;\n        return layer;\n    };\n\n    return layer;\n};\n\n/* Utility class that uses d3.bisect to find the index in a given array, where a search value can be inserted.\n This is different from normal bisectLeft; this function finds the nearest index to insert the search value.\n\n For instance, lets say your array is [1,2,3,5,10,30], and you search for 28.\n Normal d3.bisectLeft will return 4, because 28 is inserted after the number 10.  But interactiveBisect will return 5\n because 28 is closer to 30 than 10.\n\n Unit tests can be found in: interactiveBisectTest.html\n\n Has the following known issues:\n * Will not work if the data points move backwards (ie, 10,9,8,7, etc) or if the data points are in random order.\n * Won't work if there are duplicate x coordinate values.\n */\nnv.interactiveBisect = function (values, searchVal, xAccessor) {\n    \"use strict\";\n    if (! (values instanceof Array)) {\n        return null;\n    }\n    var _xAccessor;\n    if (typeof xAccessor !== 'function') {\n        _xAccessor = function(d) {\n            return d.x;\n        }\n    } else {\n        _xAccessor = xAccessor;\n    }\n    var _cmp = function(d, v) {\n        // Accessors are no longer passed the index of the element along with\n        // the element itself when invoked by d3.bisector.\n        //\n        // Starting at D3 v3.4.4, d3.bisector() started inspecting the\n        // function passed to determine if it should consider it an accessor\n        // or a comparator. This meant that accessors that take two arguments\n        // (expecting an index as the second parameter) are treated as\n        // comparators where the second argument is the search value against\n        // which the first argument is compared.\n        return _xAccessor(d) - v;\n    };\n\n    var bisect = d3.bisector(_cmp).left;\n    var index = d3.max([0, bisect(values,searchVal) - 1]);\n    var currentValue = _xAccessor(values[index]);\n\n    if (typeof currentValue === 'undefined') {\n        currentValue = index;\n    }\n\n    if (currentValue === searchVal) {\n        return index; //found exact match\n    }\n\n    var nextIndex = d3.min([index+1, values.length - 1]);\n    var nextValue = _xAccessor(values[nextIndex]);\n\n    if (typeof nextValue === 'undefined') {\n        nextValue = nextIndex;\n    }\n\n    if (Math.abs(nextValue - searchVal) >= Math.abs(currentValue - searchVal)) {\n        return index;\n    } else {\n        return nextIndex\n    }\n};\n\n/*\n Returns the index in the array \"values\" that is closest to searchVal.\n Only returns an index if searchVal is within some \"threshold\".\n Otherwise, returns null.\n */\nnv.nearestValueIndex = function (values, searchVal, threshold) {\n    \"use strict\";\n    var yDistMax = Infinity, indexToHighlight = null;\n    values.forEach(function(d,i) {\n        var delta = Math.abs(searchVal - d);\n        if ( d != null && delta <= yDistMax && delta < threshold) {\n            yDistMax = delta;\n            indexToHighlight = i;\n        }\n    });\n    return indexToHighlight;\n};\n\n/* Model which can be instantiated to handle tooltip rendering.\n Example usage:\n var tip = nv.models.tooltip().gravity('w').distance(23)\n .data(myDataObject);\n\n tip();    //just invoke the returned function to render tooltip.\n */\nnv.models.tooltip = function() {\n    \"use strict\";\n\n    /*\n    Tooltip data. If data is given in the proper format, a consistent tooltip is generated.\n    Example Format of data:\n    {\n        key: \"Date\",\n        value: \"August 2009\",\n        series: [\n            {key: \"Series 1\", value: \"Value 1\", color: \"#000\"},\n            {key: \"Series 2\", value: \"Value 2\", color: \"#00f\"}\n        ]\n    }\n    */\n    var id = \"nvtooltip-\" + Math.floor(Math.random() * 100000) // Generates a unique id when you create a new tooltip() object.\n        ,   data = null\n        ,   gravity = 'w'   // Can be 'n','s','e','w'. Determines how tooltip is positioned.\n        ,   distance = 25 // Distance to offset tooltip from the mouse location.\n        ,   snapDistance = 0   // Tolerance allowed before tooltip is moved from its current position (creates 'snapping' effect)\n        ,   classes = null  // Attaches additional CSS classes to the tooltip DIV that is created.\n        ,   hidden = true  // Start off hidden, toggle with hide/show functions below.\n        ,   hideDelay = 200  // Delay (in ms) before the tooltip hides after calling hide().\n        ,   tooltip = null // d3 select of the tooltip div.\n        ,   lastPosition = { left: null, top: null } // Last position the tooltip was in.\n        ,   enabled = true  // True -> tooltips are rendered. False -> don't render tooltips.\n        ,   duration = 100 // Tooltip movement duration, in ms.\n        ,   headerEnabled = true // If is to show the tooltip header.\n        ,   nvPointerEventsClass = \"nv-pointer-events-none\" // CSS class to specify whether element should not have mouse events.\n    ;\n\n    // Format function for the tooltip values column.\n    var valueFormatter = function(d, i) {\n        return d;\n    };\n\n    // Format function for the tooltip header value.\n    var headerFormatter = function(d) {\n        return d;\n    };\n\n    var keyFormatter = function(d, i) {\n        return d;\n    };\n\n    // By default, the tooltip model renders a beautiful table inside a DIV.\n    // You can override this function if a custom tooltip is desired.\n    var contentGenerator = function(d) {\n        if (d === null) {\n            return '';\n        }\n\n        var table = d3.select(document.createElement(\"table\"));\n        if (headerEnabled) {\n            var theadEnter = table.selectAll(\"thead\")\n                .data([d])\n                .enter().append(\"thead\");\n\n            theadEnter.append(\"tr\")\n                .append(\"td\")\n                .attr(\"colspan\", 3)\n                .append(\"strong\")\n                .classed(\"x-value\", true)\n                .html(headerFormatter(d.value));\n        }\n\n        var tbodyEnter = table.selectAll(\"tbody\")\n            .data([d])\n            .enter().append(\"tbody\");\n\n        var trowEnter = tbodyEnter.selectAll(\"tr\")\n                .data(function(p) { return p.series})\n                .enter()\n                .append(\"tr\")\n                .classed(\"highlight\", function(p) { return p.highlight});\n\n        trowEnter.append(\"td\")\n            .classed(\"legend-color-guide\",true)\n            .append(\"div\")\n            .style(\"background-color\", function(p) { return p.color});\n\n        trowEnter.append(\"td\")\n            .classed(\"key\",true)\n            .classed(\"total\",function(p) { return !!p.total})\n            .html(function(p, i) { return keyFormatter(p.key, i)});\n\n        trowEnter.append(\"td\")\n            .classed(\"value\",true)\n            .html(function(p, i) { return valueFormatter(p.value, i) });\n\n        trowEnter.filter(function (p,i) { return p.percent !== undefined }).append(\"td\")\n            .classed(\"percent\", true)\n            .html(function(p, i) { return \"(\" + d3.format('%')(p.percent) + \")\" });\n\n        trowEnter.selectAll(\"td\").each(function(p) {\n            if (p.highlight) {\n                var opacityScale = d3.scale.linear().domain([0,1]).range([\"#fff\",p.color]);\n                var opacity = 0.6;\n                d3.select(this)\n                    .style(\"border-bottom-color\", opacityScale(opacity))\n                    .style(\"border-top-color\", opacityScale(opacity))\n                ;\n            }\n        });\n\n        var html = table.node().outerHTML;\n        if (d.footer !== undefined)\n            html += \"<div class='footer'>\" + d.footer + \"</div>\";\n        return html;\n\n    };\n\n    /*\n     Function that returns the position (relative to the viewport/document.body)\n     the tooltip should be placed in.\n     Should return: {\n        left: <leftPos>,\n        top: <topPos>\n     }\n     */\n    var position = function() {\n        var pos = {\n            left: d3.event !== null ? d3.event.clientX : 0,\n            top: d3.event !== null ? d3.event.clientY : 0\n        };\n\n        if(getComputedStyle(document.body).transform != 'none') {\n            // Take the offset into account, as now the tooltip is relative\n            // to document.body.\n            var client = document.body.getBoundingClientRect();\n            pos.left -= client.left;\n            pos.top -= client.top;\n        }\n\n        return pos;\n    };\n\n    var dataSeriesExists = function(d) {\n        if (d && d.series) {\n            if (nv.utils.isArray(d.series)) {\n                return true;\n            }\n            // if object, it's okay just convert to array of the object\n            if (nv.utils.isObject(d.series)) {\n                d.series = [d.series];\n                return true;\n            }\n        }\n        return false;\n    };\n\n    // Calculates the gravity offset of the tooltip. Parameter is position of tooltip\n    // relative to the viewport.\n    var calcGravityOffset = function(pos) {\n        var height = tooltip.node().offsetHeight,\n            width = tooltip.node().offsetWidth,\n            clientWidth = document.documentElement.clientWidth, // Don't want scrollbars.\n            clientHeight = document.documentElement.clientHeight, // Don't want scrollbars.\n            left, top, tmp;\n\n        // calculate position based on gravity\n        switch (gravity) {\n            case 'e':\n                left = - width - distance;\n                top = - (height / 2);\n                if(pos.left + left < 0) left = distance;\n                if((tmp = pos.top + top) < 0) top -= tmp;\n                if((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n                break;\n            case 'w':\n                left = distance;\n                top = - (height / 2);\n                if (pos.left + left + width > clientWidth) left = - width - distance;\n                if ((tmp = pos.top + top) < 0) top -= tmp;\n                if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n                break;\n            case 'n':\n                left = - (width / 2) - 5; // - 5 is an approximation of the mouse's height.\n                top = distance;\n                if (pos.top + top + height > clientHeight) top = - height - distance;\n                if ((tmp = pos.left + left) < 0) left -= tmp;\n                if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n                break;\n            case 's':\n                left = - (width / 2);\n                top = - height - distance;\n                if (pos.top + top < 0) top = distance;\n                if ((tmp = pos.left + left) < 0) left -= tmp;\n                if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n                break;\n            case 'center':\n                left = - (width / 2);\n                top = - (height / 2);\n                break;\n            default:\n                left = 0;\n                top = 0;\n                break;\n        }\n\n        return { 'left': left, 'top': top };\n    };\n\n    /*\n     Positions the tooltip in the correct place, as given by the position() function.\n     */\n    var positionTooltip = function() {\n        nv.dom.read(function() {\n            var pos = position(),\n                gravityOffset = calcGravityOffset(pos),\n                left = pos.left + gravityOffset.left,\n                top = pos.top + gravityOffset.top;\n\n            // delay hiding a bit to avoid flickering\n            if (hidden) {\n                tooltip\n                    .interrupt()\n                    .transition()\n                    .delay(hideDelay)\n                    .duration(0)\n                    .style('opacity', 0);\n            } else {\n                // using tooltip.style('transform') returns values un-usable for tween\n                var old_translate = 'translate(' + lastPosition.left + 'px, ' + lastPosition.top + 'px)';\n                var new_translate = 'translate(' + Math.round(left) + 'px, ' + Math.round(top) + 'px)';\n                var translateInterpolator = d3.interpolateString(old_translate, new_translate);\n                var is_hidden = tooltip.style('opacity') < 0.1;\n\n                tooltip\n                    .interrupt() // cancel running transitions\n                    .transition()\n                    .duration(is_hidden ? 0 : duration)\n                    // using tween since some versions of d3 can't auto-tween a translate on a div\n                    .styleTween('transform', function (d) {\n                        return translateInterpolator;\n                    }, 'important')\n                    // Safari has its own `-webkit-transform` and does not support `transform`\n                    .styleTween('-webkit-transform', function (d) {\n                        return translateInterpolator;\n                    })\n                    .style('-ms-transform', new_translate)\n                    .style('opacity', 1);\n            }\n\n            lastPosition.left = left;\n            lastPosition.top = top;\n        });\n    };\n\n    // Creates new tooltip container, or uses existing one on DOM.\n    function initTooltip() {\n        if (!tooltip || !tooltip.node()) {\n            // Create new tooltip div if it doesn't exist on DOM.\n\n            var data = [1];\n            tooltip = d3.select(document.body).select('#'+id).data(data);\n\n            tooltip.enter().append('div')\n                   .attr(\"class\", \"nvtooltip \" + (classes ? classes : \"xy-tooltip\"))\n                   .attr(\"id\", id)\n                   .style(\"top\", 0).style(\"left\", 0)\n                   .style('opacity', 0)\n                   .style('position', 'fixed')\n                   .selectAll(\"div, table, td, tr\").classed(nvPointerEventsClass, true)\n                   .classed(nvPointerEventsClass, true);\n\n            tooltip.exit().remove()\n        }\n    }\n\n    // Draw the tooltip onto the DOM.\n    function nvtooltip() {\n        if (!enabled) return;\n        if (!dataSeriesExists(data)) return;\n\n        nv.dom.write(function () {\n            initTooltip();\n            // Generate data and set it into tooltip.\n            // Bonus - If you override contentGenerator and return falsey you can use something like\n            //         React or Knockout to bind the data for your tooltip.\n            var newContent = contentGenerator(data);\n            if (newContent) {\n                tooltip.node().innerHTML = newContent;\n            }\n\n            positionTooltip();\n        });\n\n        return nvtooltip;\n    }\n\n    nvtooltip.nvPointerEventsClass = nvPointerEventsClass;\n    nvtooltip.options = nv.utils.optionsFunc.bind(nvtooltip);\n\n    nvtooltip._options = Object.create({}, {\n        // simple read/write options\n        duration: {get: function(){return duration;}, set: function(_){duration=_;}},\n        gravity: {get: function(){return gravity;}, set: function(_){gravity=_;}},\n        distance: {get: function(){return distance;}, set: function(_){distance=_;}},\n        snapDistance: {get: function(){return snapDistance;}, set: function(_){snapDistance=_;}},\n        classes: {get: function(){return classes;}, set: function(_){classes=_;}},\n        enabled: {get: function(){return enabled;}, set: function(_){enabled=_;}},\n        hideDelay: {get: function(){return hideDelay;}, set: function(_){hideDelay=_;}},\n        contentGenerator: {get: function(){return contentGenerator;}, set: function(_){contentGenerator=_;}},\n        valueFormatter: {get: function(){return valueFormatter;}, set: function(_){valueFormatter=_;}},\n        headerFormatter: {get: function(){return headerFormatter;}, set: function(_){headerFormatter=_;}},\n        keyFormatter: {get: function(){return keyFormatter;}, set: function(_){keyFormatter=_;}},\n        headerEnabled: {get: function(){return headerEnabled;}, set: function(_){headerEnabled=_;}},\n        position: {get: function(){return position;}, set: function(_){position=_;}},\n\n        // Deprecated options\n        chartContainer: {get: function(){return document.body;}, set: function(_){\n            // deprecated after 1.8.3\n            nv.deprecated('chartContainer', 'feature removed after 1.8.3');\n        }},\n        fixedTop: {get: function(){return null;}, set: function(_){\n            // deprecated after 1.8.1\n            nv.deprecated('fixedTop', 'feature removed after 1.8.1');\n        }},\n        offset: {get: function(){return {left: 0, top: 0};}, set: function(_){\n            // deprecated after 1.8.1\n            nv.deprecated('offset', 'use chart.tooltip.distance() instead');\n        }},\n\n        // options with extra logic\n        hidden: {get: function(){return hidden;}, set: function(_){\n            if (hidden != _) {\n                hidden = !!_;\n                nvtooltip();\n            }\n        }},\n        data: {get: function(){return data;}, set: function(_){\n            // if showing a single data point, adjust data format with that\n            if (_.point) {\n                _.value = _.point.x;\n                _.series = _.series || {};\n                _.series.value = _.point.y;\n                _.series.color = _.point.color || _.series.color;\n            }\n            data = _;\n        }},\n\n        // read only properties\n        node: {get: function(){return tooltip.node();}, set: function(_){}},\n        id: {get: function(){return id;}, set: function(_){}}\n    });\n\n    nv.utils.initOptions(nvtooltip);\n    return nvtooltip;\n};\n\n\n/*\nGets the browser window size\n\nReturns object with height and width properties\n */\nnv.utils.windowSize = function() {\n    // Sane defaults\n    var size = {width: 640, height: 480};\n\n    // Most recent browsers use\n    if (window.innerWidth && window.innerHeight) {\n        size.width = window.innerWidth;\n        size.height = window.innerHeight;\n        return (size);\n    }\n\n    // IE can use depending on mode it is in\n    if (document.compatMode=='CSS1Compat' &&\n        document.documentElement &&\n        document.documentElement.offsetWidth ) {\n\n        size.width = document.documentElement.offsetWidth;\n        size.height = document.documentElement.offsetHeight;\n        return (size);\n    }\n\n    // Earlier IE uses Doc.body\n    if (document.body && document.body.offsetWidth) {\n        size.width = document.body.offsetWidth;\n        size.height = document.body.offsetHeight;\n        return (size);\n    }\n\n    return (size);\n};\n\n\n/* handle dumb browser quirks...  isinstance breaks if you use frames\ntypeof returns 'object' for null, NaN is a number, etc.\n */\nnv.utils.isArray = Array.isArray;\nnv.utils.isObject = function(a) {\n    return a !== null && typeof a === 'object';\n};\nnv.utils.isFunction = function(a) {\n    return typeof a === 'function';\n};\nnv.utils.isDate = function(a) {\n    return toString.call(a) === '[object Date]';\n};\nnv.utils.isNumber = function(a) {\n    return !isNaN(a) && typeof a === 'number';\n};\n\n\n/*\nBinds callback function to run when window is resized\n */\nnv.utils.windowResize = function(handler) {\n    if (window.addEventListener) {\n        window.addEventListener('resize', handler);\n    } else {\n        nv.log(\"ERROR: Failed to bind to window.resize with: \", handler);\n    }\n    // return object with clear function to remove the single added callback.\n    return {\n        callback: handler,\n        clear: function() {\n            window.removeEventListener('resize', handler);\n        }\n    }\n};\n\n\n/*\nBackwards compatible way to implement more d3-like coloring of graphs.\nCan take in nothing, an array, or a function/scale\nTo use a normal scale, get the range and pass that because we must be able\nto take two arguments and use the index to keep backward compatibility\n*/\nnv.utils.getColor = function(color) {\n    //if you pass in nothing, get default colors back\n    if (color === undefined) {\n        return nv.utils.defaultColor();\n\n    //if passed an array, turn it into a color scale\n    } else if(nv.utils.isArray(color)) {\n        var color_scale = d3.scale.ordinal().range(color);\n        return function(d, i) {\n            var key = i === undefined ? d : i;\n            return d.color || color_scale(key);\n        };\n\n    //if passed a function or scale, return it, or whatever it may be\n    //external libs, such as angularjs-nvd3-directives use this\n    } else {\n        //can't really help it if someone passes rubbish as color\n        return color;\n    }\n};\n\n\n/*\nDefault color chooser uses a color scale of 20 colors from D3\n https://github.com/mbostock/d3/wiki/Ordinal-Scales#categorical-colors\n */\nnv.utils.defaultColor = function() {\n    // get range of the scale so we'll turn it into our own function.\n    return nv.utils.getColor(d3.scale.category20().range());\n};\n\n\n/*\nReturns a color function that takes the result of 'getKey' for each series and\nlooks for a corresponding color from the dictionary\n*/\nnv.utils.customTheme = function(dictionary, getKey, defaultColors) {\n    // use default series.key if getKey is undefined\n    getKey = getKey || function(series) { return series.key };\n    defaultColors = defaultColors || d3.scale.category20().range();\n\n    // start at end of default color list and walk back to index 0\n    var defIndex = defaultColors.length;\n\n    return function(series, index) {\n        var key = getKey(series);\n        if (nv.utils.isFunction(dictionary[key])) {\n            return dictionary[key]();\n        } else if (dictionary[key] !== undefined) {\n            return dictionary[key];\n        } else {\n            // no match in dictionary, use a default color\n            if (!defIndex) {\n                // used all the default colors, start over\n                defIndex = defaultColors.length;\n            }\n            defIndex = defIndex - 1;\n            return defaultColors[defIndex];\n        }\n    };\n};\n\n\n/*\nFrom the PJAX example on d3js.org, while this is not really directly needed\nit's a very cool method for doing pjax, I may expand upon it a little bit,\nopen to suggestions on anything that may be useful\n*/\nnv.utils.pjax = function(links, content) {\n\n    var load = function(href) {\n        d3.html(href, function(fragment) {\n            var target = d3.select(content).node();\n            target.parentNode.replaceChild(\n                d3.select(fragment).select(content).node(),\n                target);\n            nv.utils.pjax(links, content);\n        });\n    };\n\n    d3.selectAll(links).on(\"click\", function() {\n        history.pushState(this.href, this.textContent, this.href);\n        load(this.href);\n        d3.event.preventDefault();\n    });\n\n    d3.select(window).on(\"popstate\", function() {\n        if (d3.event.state) {\n            load(d3.event.state);\n        }\n    });\n};\n\n\n/*\nFor when we want to approximate the width in pixels for an SVG:text element.\nMost common instance is when the element is in a display:none; container.\nForumla is : text.length * font-size * constant_factor\n*/\nnv.utils.calcApproxTextWidth = function (svgTextElem) {\n    if (nv.utils.isFunction(svgTextElem.style) && nv.utils.isFunction(svgTextElem.text)) {\n        var fontSize = parseInt(svgTextElem.style(\"font-size\").replace(\"px\",\"\"), 10);\n        var textLength = svgTextElem.text().length;\n        return nv.utils.NaNtoZero(textLength * fontSize * 0.5);\n    }\n    return 0;\n};\n\n\n/*\nNumbers that are undefined, null or NaN, convert them to zeros.\n*/\nnv.utils.NaNtoZero = function(n) {\n    if (!nv.utils.isNumber(n)\n        || isNaN(n)\n        || n === null\n        || n === Infinity\n        || n === -Infinity) {\n\n        return 0;\n    }\n    return n;\n};\n\n/*\nAdd a way to watch for d3 transition ends to d3\n*/\nd3.selection.prototype.watchTransition = function(renderWatch){\n    var args = [this].concat([].slice.call(arguments, 1));\n    return renderWatch.transition.apply(renderWatch, args);\n};\n\n\n/*\nHelper object to watch when d3 has rendered something\n*/\nnv.utils.renderWatch = function(dispatch, duration) {\n    if (!(this instanceof nv.utils.renderWatch)) {\n        return new nv.utils.renderWatch(dispatch, duration);\n    }\n\n    var _duration = duration !== undefined ? duration : 250;\n    var renderStack = [];\n    var self = this;\n\n    this.models = function(models) {\n        models = [].slice.call(arguments, 0);\n        models.forEach(function(model){\n            model.__rendered = false;\n            (function(m){\n                m.dispatch.on('renderEnd', function(arg){\n                    m.__rendered = true;\n                    self.renderEnd('model');\n                });\n            })(model);\n\n            if (renderStack.indexOf(model) < 0) {\n                renderStack.push(model);\n            }\n        });\n    return this;\n    };\n\n    this.reset = function(duration) {\n        if (duration !== undefined) {\n            _duration = duration;\n        }\n        renderStack = [];\n    };\n\n    this.transition = function(selection, args, duration) {\n        args = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n\n        if (args.length > 1) {\n            duration = args.pop();\n        } else {\n            duration = _duration !== undefined ? _duration : 250;\n        }\n        selection.__rendered = false;\n\n        if (renderStack.indexOf(selection) < 0) {\n            renderStack.push(selection);\n        }\n\n        if (duration === 0) {\n            selection.__rendered = true;\n            selection.delay = function() { return this; };\n            selection.duration = function() { return this; };\n            return selection;\n        } else {\n            if (selection.length === 0) {\n                selection.__rendered = true;\n            } else if (selection.every( function(d){ return !d.length; } )) {\n                selection.__rendered = true;\n            } else {\n                selection.__rendered = false;\n            }\n\n            var n = 0;\n            return selection\n                .transition()\n                .duration(duration)\n                .each(function(){ ++n; })\n                .each('end', function(d, i) {\n                    if (--n === 0) {\n                        selection.__rendered = true;\n                        self.renderEnd.apply(this, args);\n                    }\n                });\n        }\n    };\n\n    this.renderEnd = function() {\n        if (renderStack.every( function(d){ return d.__rendered; } )) {\n            renderStack.forEach( function(d){ d.__rendered = false; });\n            dispatch.renderEnd.apply(this, arguments);\n        }\n    }\n\n};\n\n\n/*\nTakes multiple objects and combines them into the first one (dst)\nexample:  nv.utils.deepExtend({a: 1}, {a: 2, b: 3}, {c: 4});\ngives:  {a: 2, b: 3, c: 4}\n*/\nnv.utils.deepExtend = function(dst){\n    var sources = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n    sources.forEach(function(source) {\n        for (var key in source) {\n            var isArray = nv.utils.isArray(dst[key]);\n            var isObject = nv.utils.isObject(dst[key]);\n            var srcObj = nv.utils.isObject(source[key]);\n\n            if (isObject && !isArray && srcObj) {\n                nv.utils.deepExtend(dst[key], source[key]);\n            } else {\n                dst[key] = source[key];\n            }\n        }\n    });\n};\n\n\n/*\nstate utility object, used to track d3 states in the models\n*/\nnv.utils.state = function(){\n    if (!(this instanceof nv.utils.state)) {\n        return new nv.utils.state();\n    }\n    var state = {};\n    var _self = this;\n    var _setState = function(){};\n    var _getState = function(){ return {}; };\n    var init = null;\n    var changed = null;\n\n    this.dispatch = d3.dispatch('change', 'set');\n\n    this.dispatch.on('set', function(state){\n        _setState(state, true);\n    });\n\n    this.getter = function(fn){\n        _getState = fn;\n        return this;\n    };\n\n    this.setter = function(fn, callback) {\n        if (!callback) {\n            callback = function(){};\n        }\n        _setState = function(state, update){\n            fn(state);\n            if (update) {\n                callback();\n            }\n        };\n        return this;\n    };\n\n    this.init = function(state){\n        init = init || {};\n        nv.utils.deepExtend(init, state);\n    };\n\n    var _set = function(){\n        var settings = _getState();\n\n        if (JSON.stringify(settings) === JSON.stringify(state)) {\n            return false;\n        }\n\n        for (var key in settings) {\n            if (state[key] === undefined) {\n                state[key] = {};\n            }\n            state[key] = settings[key];\n            changed = true;\n        }\n        return true;\n    };\n\n    this.update = function(){\n        if (init) {\n            _setState(init, false);\n            init = null;\n        }\n        if (_set.call(this)) {\n            this.dispatch.change(state);\n        }\n    };\n\n};\n\n\n/*\nSnippet of code you can insert into each nv.models.* to give you the ability to\ndo things like:\nchart.options({\n  showXAxis: true,\n  tooltips: true\n});\n\nTo enable in the chart:\nchart.options = nv.utils.optionsFunc.bind(chart);\n*/\nnv.utils.optionsFunc = function(args) {\n    if (args) {\n        d3.map(args).forEach((function(key,value) {\n            if (nv.utils.isFunction(this[key])) {\n                this[key](value);\n            }\n        }).bind(this));\n    }\n    return this;\n};\n\n\n/*\nnumTicks:  requested number of ticks\ndata:  the chart data\n\nreturns the number of ticks to actually use on X axis, based on chart data\nto avoid duplicate ticks with the same value\n*/\nnv.utils.calcTicksX = function(numTicks, data) {\n    // find max number of values from all data streams\n    var numValues = 1;\n    var i = 0;\n    for (i; i < data.length; i += 1) {\n        var stream_len = data[i] && data[i].values ? data[i].values.length : 0;\n        numValues = stream_len > numValues ? stream_len : numValues;\n    }\n    nv.log(\"Requested number of ticks: \", numTicks);\n    nv.log(\"Calculated max values to be: \", numValues);\n    // make sure we don't have more ticks than values to avoid duplicates\n    numTicks = numTicks > numValues ? numTicks = numValues - 1 : numTicks;\n    // make sure we have at least one tick\n    numTicks = numTicks < 1 ? 1 : numTicks;\n    // make sure it's an integer\n    numTicks = Math.floor(numTicks);\n    nv.log(\"Calculating tick count as: \", numTicks);\n    return numTicks;\n};\n\n\n/*\nreturns number of ticks to actually use on Y axis, based on chart data\n*/\nnv.utils.calcTicksY = function(numTicks, data) {\n    // currently uses the same logic but we can adjust here if needed later\n    return nv.utils.calcTicksX(numTicks, data);\n};\n\n\n/*\nAdd a particular option from an options object onto chart\nOptions exposed on a chart are a getter/setter function that returns chart\non set to mimic typical d3 option chaining, e.g. svg.option1('a').option2('b');\n\noption objects should be generated via Object.create() to provide\nthe option of manipulating data via get/set functions.\n*/\nnv.utils.initOption = function(chart, name) {\n    // if it's a call option, just call it directly, otherwise do get/set\n    if (chart._calls && chart._calls[name]) {\n        chart[name] = chart._calls[name];\n    } else {\n        chart[name] = function (_) {\n            if (!arguments.length) return chart._options[name];\n            chart._overrides[name] = true;\n            chart._options[name] = _;\n            return chart;\n        };\n        // calling the option as _option will ignore if set by option already\n        // so nvd3 can set options internally but the stop if set manually\n        chart['_' + name] = function(_) {\n            if (!arguments.length) return chart._options[name];\n            if (!chart._overrides[name]) {\n                chart._options[name] = _;\n            }\n            return chart;\n        }\n    }\n};\n\n\n/*\nAdd all options in an options object to the chart\n*/\nnv.utils.initOptions = function(chart) {\n    chart._overrides = chart._overrides || {};\n    var ops = Object.getOwnPropertyNames(chart._options || {});\n    var calls = Object.getOwnPropertyNames(chart._calls || {});\n    ops = ops.concat(calls);\n    for (var i in ops) {\n        nv.utils.initOption(chart, ops[i]);\n    }\n};\n\n\n/*\nInherit options from a D3 object\nd3.rebind makes calling the function on target actually call it on source\nAlso use _d3options so we can track what we inherit for documentation and chained inheritance\n*/\nnv.utils.inheritOptionsD3 = function(target, d3_source, oplist) {\n    target._d3options = oplist.concat(target._d3options || []);\n    oplist.unshift(d3_source);\n    oplist.unshift(target);\n    d3.rebind.apply(this, oplist);\n};\n\n\n/*\nRemove duplicates from an array\n*/\nnv.utils.arrayUnique = function(a) {\n    return a.sort().filter(function(item, pos) {\n        return !pos || item != a[pos - 1];\n    });\n};\n\n\n/*\nKeeps a list of custom symbols to draw from in addition to d3.svg.symbol\nNecessary since d3 doesn't let you extend its list -_-\nAdd new symbols by doing nv.utils.symbols.set('name', function(size){...});\n*/\nnv.utils.symbolMap = d3.map();\n\n\n/*\nReplaces d3.svg.symbol so that we can look both there and our own map\n */\nnv.utils.symbol = function() {\n    var type,\n        size = 64;\n    function symbol(d,i) {\n        var t = type.call(this,d,i);\n        var s = size.call(this,d,i);\n        if (d3.svg.symbolTypes.indexOf(t) !== -1) {\n            return d3.svg.symbol().type(t).size(s)();\n        } else {\n            return nv.utils.symbolMap.get(t)(s);\n        }\n    }\n    symbol.type = function(_) {\n        if (!arguments.length) return type;\n        type = d3.functor(_);\n        return symbol;\n    };\n    symbol.size = function(_) {\n        if (!arguments.length) return size;\n        size = d3.functor(_);\n        return symbol;\n    };\n    return symbol;\n};\n\n\n/*\nInherit option getter/setter functions from source to target\nd3.rebind makes calling the function on target actually call it on source\nAlso track via _inherited and _d3options so we can track what we inherit\nfor documentation generation purposes and chained inheritance\n*/\nnv.utils.inheritOptions = function(target, source) {\n    // inherit all the things\n    var ops = Object.getOwnPropertyNames(source._options || {});\n    var calls = Object.getOwnPropertyNames(source._calls || {});\n    var inherited = source._inherited || [];\n    var d3ops = source._d3options || [];\n    var args = ops.concat(calls).concat(inherited).concat(d3ops);\n    args.unshift(source);\n    args.unshift(target);\n    d3.rebind.apply(this, args);\n    // pass along the lists to keep track of them, don't allow duplicates\n    target._inherited = nv.utils.arrayUnique(ops.concat(calls).concat(inherited).concat(ops).concat(target._inherited || []));\n    target._d3options = nv.utils.arrayUnique(d3ops.concat(target._d3options || []));\n};\n\n\n/*\nRuns common initialize code on the svg before the chart builds\n*/\nnv.utils.initSVG = function(svg) {\n    svg.classed({'nvd3-svg':true});\n};\n\n\n/*\nSanitize and provide default for the container height.\n*/\nnv.utils.sanitizeHeight = function(height, container) {\n    return (height || parseInt(container.style('height'), 10) || 400);\n};\n\n\n/*\nSanitize and provide default for the container width.\n*/\nnv.utils.sanitizeWidth = function(width, container) {\n    return (width || parseInt(container.style('width'), 10) || 960);\n};\n\n\n/*\nCalculate the available height for a chart.\n*/\nnv.utils.availableHeight = function(height, container, margin) {\n    return Math.max(0,nv.utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n};\n\n/*\nCalculate the available width for a chart.\n*/\nnv.utils.availableWidth = function(width, container, margin) {\n    return Math.max(0,nv.utils.sanitizeWidth(width, container) - margin.left - margin.right);\n};\n\n/*\nClear any rendered chart components and display a chart's 'noData' message\n*/\nnv.utils.noData = function(chart, container) {\n    var opt = chart.options(),\n        margin = opt.margin(),\n        noData = opt.noData(),\n        data = (noData == null) ? [\"No Data Available.\"] : [noData],\n        height = nv.utils.availableHeight(null, container, margin),\n        width = nv.utils.availableWidth(null, container, margin),\n        x = margin.left + width/2,\n        y = margin.top + height/2;\n\n    //Remove any previously created chart components\n    container.selectAll('g').remove();\n\n    var noDataText = container.selectAll('.nv-noData').data(data);\n\n    noDataText.enter().append('text')\n        .attr('class', 'nvd3 nv-noData')\n        .attr('dy', '-.7em')\n        .style('text-anchor', 'middle');\n\n    noDataText\n        .attr('x', x)\n        .attr('y', y)\n        .text(function(t){ return t; });\n};\n\n/*\n Wrap long labels.\n */\nnv.utils.wrapTicks = function (text, width) {\n    text.each(function() {\n        var text = d3.select(this),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineNumber = 0,\n            lineHeight = 1.1,\n            y = text.attr(\"y\"),\n            dy = parseFloat(text.attr(\"dy\")),\n            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n        while (word = words.pop()) {\n            line.push(word);\n            tspan.text(line.join(\" \"));\n            if (tspan.node().getComputedTextLength() > width) {\n                line.pop();\n                tspan.text(line.join(\" \"));\n                line = [word];\n                tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n            }\n        }\n    });\n};\n\n/*\nCheck equality of 2 array\n*/\nnv.utils.arrayEquals = function (array1, array2) {\n    if (array1 === array2)\n        return true;\n\n    if (!array1 || !array2)\n        return false;\n\n    // compare lengths - can save a lot of time\n    if (array1.length != array2.length)\n        return false;\n\n    for (var i = 0,\n        l = array1.length; i < l; i++) {\n        // Check if we have nested arrays\n        if (array1[i] instanceof Array && array2[i] instanceof Array) {\n            // recurse into the nested arrays\n            if (!nv.arrayEquals(array1[i], array2[i]))\n                return false;\n        } else if (array1[i] != array2[i]) {\n            // Warning - two different object instances will never be equal: {x:20} != {x:20}\n            return false;\n        }\n    }\n    return true;\n};\nnv.models.axis = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var axis = d3.svg.axis();\n    var scale = d3.scale.linear();\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 75 //only used for tickLabel currently\n        , height = 60 //only used for tickLabel currently\n        , axisLabelText = null\n        , showMaxMin = true //TODO: showMaxMin should be disabled on all ordinal scaled axes\n        , rotateLabels = 0\n        , rotateYLabel = true\n        , staggerLabels = false\n        , isOrdinal = false\n        , ticks = null\n        , axisLabelDistance = 0\n        , fontSize = undefined\n        , duration = 250\n        , dispatch = d3.dispatch('renderEnd')\n        ;\n    axis\n        .scale(scale)\n        .orient('bottom')\n        .tickFormat(function(d) { return d })\n    ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-axis').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-axis');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            if (ticks !== null)\n                axis.ticks(ticks);\n            else if (axis.orient() == 'top' || axis.orient() == 'bottom')\n                axis.ticks(Math.abs(scale.range()[1] - scale.range()[0]) / 100);\n\n            //TODO: consider calculating width/height based on whether or not label is added, for reference in charts using this component\n            g.watchTransition(renderWatch, 'axis').call(axis);\n\n            scale0 = scale0 || axis.scale();\n\n            var fmt = axis.tickFormat();\n            if (fmt == null) {\n                fmt = scale0.tickFormat();\n            }\n\n            var axisLabel = g.selectAll('text.nv-axislabel')\n                .data([axisLabelText || null]);\n            axisLabel.exit().remove();\n\n            //only skip when fontSize is undefined so it can be cleared with a null or blank string\n            if (fontSize !== undefined) {\n                g.selectAll('g').select(\"text\").style('font-size', fontSize);\n            }\n\n            var xLabelMargin;\n            var axisMaxMin;\n            var w;\n            switch (axis.orient()) {\n                case 'top':\n                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n                  w = 0;\n                  if (scale.range().length === 1) {\n                    w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n                  } else if (scale.range().length === 2) {\n                    w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n                  } else if ( scale.range().length > 2){\n                    w = scale.range()[scale.range().length-1]+(scale.range()[1]-scale.range()[0]);\n                  };\n                    axisLabel\n                        .attr('text-anchor', 'middle')\n                        .attr('y', 0)\n                        .attr('x', w/2);\n                    if (showMaxMin) {\n                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n                            .data(scale.domain());\n                        axisMaxMin.enter().append('g').attr('class',function(d,i){\n                                return ['nv-axisMaxMin','nv-axisMaxMin-x',(i == 0 ? 'nv-axisMin-x':'nv-axisMax-x')].join(' ')\n                        }).append('text');\n                        axisMaxMin.exit().remove();\n                        axisMaxMin\n                            .attr('transform', function(d,i) {\n                                return 'translate(' + nv.utils.NaNtoZero(scale(d)) + ',0)'\n                            })\n                            .select('text')\n                            .attr('dy', '-0.5em')\n                            .attr('y', -axis.tickPadding())\n                            .attr('text-anchor', 'middle')\n                            .text(function(d,i) {\n                                var v = fmt(d);\n                                return ('' + v).match('NaN') ? '' : v;\n                            });\n                        axisMaxMin.watchTransition(renderWatch, 'min-max top')\n                            .attr('transform', function(d,i) {\n                                return 'translate(' + nv.utils.NaNtoZero(scale.range()[i]) + ',0)'\n                            });\n                    }\n                    break;\n                case 'bottom':\n                    xLabelMargin = axisLabelDistance + 36;\n                    var maxTextWidth = 30;\n                    var textHeight = 0;\n                    var xTicks = g.selectAll('g').select(\"text\");\n                    var rotateLabelsRule = '';\n                    if (rotateLabels%360) {\n                        //Reset transform on ticks so textHeight can be calculated correctly\n                        xTicks.attr('transform', ''); \n                        //Calculate the longest xTick width\n                        xTicks.each(function(d,i){\n                            var box = this.getBoundingClientRect();\n                            var width = box.width;\n                            textHeight = box.height;\n                            if(width > maxTextWidth) maxTextWidth = width;\n                        });\n                        rotateLabelsRule = 'rotate(' + rotateLabels + ' 0,' + (textHeight/2 + axis.tickPadding()) + ')';\n                        //Convert to radians before calculating sin. Add 30 to margin for healthy padding.\n                        var sin = Math.abs(Math.sin(rotateLabels*Math.PI/180));\n                        xLabelMargin = (sin ? sin*maxTextWidth : maxTextWidth)+30;\n                        //Rotate all xTicks\n                        xTicks\n                            .attr('transform', rotateLabelsRule)\n                            .style('text-anchor', rotateLabels%360 > 0 ? 'start' : 'end');\n                    } else {\n                        if (staggerLabels) {\n                            xTicks\n                                .attr('transform', function(d,i) {\n                                    return 'translate(0,' + (i % 2 == 0 ? '0' : '12') + ')'\n                                });\n                        } else {\n                            xTicks.attr('transform', \"translate(0,0)\");\n                        }\n                    }\n                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n                    w = 0;\n                    if (scale.range().length === 1) {\n                        w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n                    } else if (scale.range().length === 2) {\n                        w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n                    } else if ( scale.range().length > 2){\n                        w = scale.range()[scale.range().length-1]+(scale.range()[1]-scale.range()[0]);\n                    };\n                    axisLabel\n                        .attr('text-anchor', 'middle')\n                        .attr('y', xLabelMargin)\n                        .attr('x', w/2);\n                    if (showMaxMin) {\n                        //if (showMaxMin && !isOrdinal) {\n                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n                            //.data(scale.domain())\n                            .data([scale.domain()[0], scale.domain()[scale.domain().length - 1]]);\n                        axisMaxMin.enter().append('g').attr('class',function(d,i){\n                                return ['nv-axisMaxMin','nv-axisMaxMin-x',(i == 0 ? 'nv-axisMin-x':'nv-axisMax-x')].join(' ')\n                        }).append('text');\n                        axisMaxMin.exit().remove();\n                        axisMaxMin\n                            .attr('transform', function(d,i) {\n                                return 'translate(' + nv.utils.NaNtoZero((scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0))) + ',0)'\n                            })\n                            .select('text')\n                            .attr('dy', '.71em')\n                            .attr('y', axis.tickPadding())\n                            .attr('transform', rotateLabelsRule)\n                            .style('text-anchor', rotateLabels ? (rotateLabels%360 > 0 ? 'start' : 'end') : 'middle')\n                            .text(function(d,i) {\n                                var v = fmt(d);\n                                return ('' + v).match('NaN') ? '' : v;\n                            });\n                        axisMaxMin.watchTransition(renderWatch, 'min-max bottom')\n                            .attr('transform', function(d,i) {\n                                return 'translate(' + nv.utils.NaNtoZero((scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0))) + ',0)'\n                            });\n                    }\n\n                    break;\n                case 'right':\n                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n                    axisLabel\n                        .style('text-anchor', rotateYLabel ? 'middle' : 'begin')\n                        .attr('transform', rotateYLabel ? 'rotate(90)' : '')\n                        .attr('y', rotateYLabel ? (-Math.max(margin.right, width) + 12 - (axisLabelDistance || 0)) : -10) //TODO: consider calculating this based on largest tick width... OR at least expose this on chart\n                        .attr('x', rotateYLabel ? (d3.max(scale.range()) / 2) : axis.tickPadding());\n                    if (showMaxMin) {\n                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n                            .data(scale.domain());\n                       \taxisMaxMin.enter().append('g').attr('class',function(d,i){\n                                return ['nv-axisMaxMin','nv-axisMaxMin-y',(i == 0 ? 'nv-axisMin-y':'nv-axisMax-y')].join(' ')\n                        }).append('text')\n                            .style('opacity', 0);\n                        axisMaxMin.exit().remove();\n                        axisMaxMin\n                            .attr('transform', function(d,i) {\n                                return 'translate(0,' + nv.utils.NaNtoZero(scale(d)) + ')'\n                            })\n                            .select('text')\n                            .attr('dy', '.32em')\n                            .attr('y', 0)\n                            .attr('x', axis.tickPadding())\n                            .style('text-anchor', 'start')\n                            .text(function(d, i) {\n                                var v = fmt(d);\n                                return ('' + v).match('NaN') ? '' : v;\n                            });\n                        axisMaxMin.watchTransition(renderWatch, 'min-max right')\n                            .attr('transform', function(d,i) {\n                                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')'\n                            })\n                            .select('text')\n                            .style('opacity', 1);\n                    }\n                    break;\n                case 'left':\n                    /*\n                     //For dynamically placing the label. Can be used with dynamically-sized chart axis margins\n                     var yTicks = g.selectAll('g').select(\"text\");\n                     yTicks.each(function(d,i){\n                     var labelPadding = this.getBoundingClientRect().width + axis.tickPadding() + 16;\n                     if(labelPadding > width) width = labelPadding;\n                     });\n                     */\n                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n                    axisLabel\n                        .style('text-anchor', rotateYLabel ? 'middle' : 'end')\n                        .attr('transform', rotateYLabel ? 'rotate(-90)' : '')\n                        .attr('y', rotateYLabel ? (-Math.max(margin.left, width) + 25 - (axisLabelDistance || 0)) : -10)\n                        .attr('x', rotateYLabel ? (-d3.max(scale.range()) / 2) : -axis.tickPadding());\n                    if (showMaxMin) {\n                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n                            .data(scale.domain());\n                        axisMaxMin.enter().append('g').attr('class',function(d,i){\n                                return ['nv-axisMaxMin','nv-axisMaxMin-y',(i == 0 ? 'nv-axisMin-y':'nv-axisMax-y')].join(' ')\n                        }).append('text')\n                            .style('opacity', 0);\n                        axisMaxMin.exit().remove();\n                        axisMaxMin\n                            .attr('transform', function(d,i) {\n                                return 'translate(0,' + nv.utils.NaNtoZero(scale0(d)) + ')'\n                            })\n                            .select('text')\n                            .attr('dy', '.32em')\n                            .attr('y', 0)\n                            .attr('x', -axis.tickPadding())\n                            .attr('text-anchor', 'end')\n                            .text(function(d,i) {\n                                var v = fmt(d);\n                                return ('' + v).match('NaN') ? '' : v;\n                            });\n                        axisMaxMin.watchTransition(renderWatch, 'min-max right')\n                            .attr('transform', function(d,i) {\n                                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')'\n                            })\n                            .select('text')\n                            .style('opacity', 1);\n                    }\n                    break;\n            }\n            axisLabel.text(function(d) { return d });\n\n            if (showMaxMin && (axis.orient() === 'left' || axis.orient() === 'right')) {\n                //check if max and min overlap other values, if so, hide the values that overlap\n                g.selectAll('g') // the g's wrapping each tick\n                    .each(function(d,i) {\n                        d3.select(this).select('text').attr('opacity', 1);\n                        if (scale(d) < scale.range()[1] + 10 || scale(d) > scale.range()[0] - 10) { // 10 is assuming text height is 16... if d is 0, leave it!\n                            if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                                d3.select(this).attr('opacity', 0);\n\n                            d3.select(this).select('text').attr('opacity', 0); // Don't remove the ZERO line!!\n                        }\n                    });\n\n                //if Max and Min = 0 only show min, Issue #281\n                if (scale.domain()[0] == scale.domain()[1] && scale.domain()[0] == 0) {\n                    wrap.selectAll('g.nv-axisMaxMin').style('opacity', function (d, i) {\n                        return !i ? 1 : 0\n                    });\n                }\n            }\n\n            if (showMaxMin && (axis.orient() === 'top' || axis.orient() === 'bottom')) {\n                var maxMinRange = [];\n                wrap.selectAll('g.nv-axisMaxMin')\n                    .each(function(d,i) {\n                        try {\n                            if (i) // i== 1, max position\n                                maxMinRange.push(scale(d) - this.getBoundingClientRect().width - 4);  //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n                            else // i==0, min position\n                                maxMinRange.push(scale(d) + this.getBoundingClientRect().width + 4)\n                        }catch (err) {\n                            if (i) // i== 1, max position\n                                maxMinRange.push(scale(d) - 4);  //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n                            else // i==0, min position\n                                maxMinRange.push(scale(d) + 4);\n                        }\n                    });\n                // the g's wrapping each tick\n                g.selectAll('g').each(function(d, i) {\n                    if (scale(d) < maxMinRange[0] || scale(d) > maxMinRange[1]) {\n                        if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                            d3.select(this).remove();\n                        else\n                            d3.select(this).select('text').remove(); // Don't remove the ZERO line!!\n                    }\n                });\n            }\n\n            //Highlight zero tick line\n            g.selectAll('.tick')\n                .filter(function (d) {\n                    /*\n                    The filter needs to return only ticks at or near zero.\n                    Numbers like 0.00001 need to count as zero as well,\n                    and the arithmetic trick below solves that.\n                    */\n                    return !parseFloat(Math.round(d * 100000) / 1000000) && (d !== undefined)\n                }) \n                .classed('zero', true);\n            \n            //store old scales for use in transitions on update\n            scale0 = scale.copy();\n\n        });\n\n        renderWatch.renderEnd('axis immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.axis = axis;\n    chart.dispatch = dispatch;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        axisLabelDistance: {get: function(){return axisLabelDistance;}, set: function(_){axisLabelDistance=_;}},\n        staggerLabels:     {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n        rotateLabels:      {get: function(){return rotateLabels;}, set: function(_){rotateLabels=_;}},\n        rotateYLabel:      {get: function(){return rotateYLabel;}, set: function(_){rotateYLabel=_;}},\n        showMaxMin:        {get: function(){return showMaxMin;}, set: function(_){showMaxMin=_;}},\n        axisLabel:         {get: function(){return axisLabelText;}, set: function(_){axisLabelText=_;}},\n        height:            {get: function(){return height;}, set: function(_){height=_;}},\n        ticks:             {get: function(){return ticks;}, set: function(_){ticks=_;}},\n        width:             {get: function(){return width;}, set: function(_){width=_;}},\n        fontSize:          {get: function(){return fontSize;}, set: function(_){fontSize=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top !== undefined    ? _.top    : margin.top;\n            margin.right  = _.right !== undefined  ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left !== undefined   ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration=_;\n            renderWatch.reset(duration);\n        }},\n        scale: {get: function(){return scale;}, set: function(_){\n            scale = _;\n            axis.scale(scale);\n            isOrdinal = typeof scale.rangeBands === 'function';\n            nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    nv.utils.inheritOptionsD3(chart, axis, ['orient', 'tickValues', 'tickSubdivide', 'tickSize', 'tickPadding', 'tickFormat']);\n    nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n\n    return chart;\n};\nnv.models.boxPlot = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0},\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000), // Create semi-unique ID in case user doesn't select one\n        xScale = d3.scale.ordinal(),\n        yScale = d3.scale.linear(),\n        getX  = function(d) { return d.label }, // Default data model selectors.\n        getQ1 = function(d) { return d.values.Q1 },\n        getQ2 = function(d) { return d.values.Q2 },\n        getQ3 = function(d) { return d.values.Q3 },\n        getWl = function(d) { return d.values.whisker_low },\n        getWh = function(d) { return d.values.whisker_high },\n        getColor = function(d) { return d.color },\n        getOlItems  = function(d) { return d.values.outliers },\n        getOlValue = function(d, i, j) { return d },\n        getOlLabel = function(d, i, j) { return d },\n        getOlColor = function(d, i, j) { return undefined },\n        color = nv.utils.defaultColor(),\n        container = null,\n        xDomain, xRange,\n        yDomain, yRange,\n        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        duration = 250,\n        maxBoxWidth = null;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var xScale0, yScale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup Scales\n            xScale.domain(xDomain || data.map(function(d,i) { return getX(d,i); }))\n                .rangeBands(xRange || [0, availableWidth], 0.1);\n\n            // if we know yDomain, no need to calculate\n            var yData = []\n            if (!yDomain) {\n                // (y-range is based on quartiles, whiskers and outliers)\n                var values = [], yMin, yMax;\n                data.forEach(function (d, i) {\n                    var q1 = getQ1(d), q3 = getQ3(d), wl = getWl(d), wh = getWh(d);\n                    var olItems = getOlItems(d);\n                    if (olItems) {\n                        olItems.forEach(function (e, i) {\n                            values.push(getOlValue(e, i, undefined));\n                        });\n                    }\n                    if (wl) { values.push(wl) }\n                    if (q1) { values.push(q1) }\n                    if (q3) { values.push(q3) }\n                    if (wh) { values.push(wh) }\n                });\n                yMin = d3.min(values);\n                yMax = d3.max(values);\n                yData = [ yMin, yMax ] ;\n            }\n\n            yScale.domain(yDomain || yData);\n            yScale.range(yRange || [availableHeight, 0]);\n\n            //store old scales if they exist\n            xScale0 = xScale0 || xScale;\n            yScale0 = yScale0 || yScale.copy().range([yScale(0),yScale(0)]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap');\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var boxplots = wrap.selectAll('.nv-boxplot').data(function(d) { return d });\n            var boxEnter = boxplots.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n            boxplots\n                .attr('class', 'nv-boxplot')\n                .attr('transform', function(d,i,j) { return 'translate(' + (xScale(getX(d,i)) + xScale.rangeBand() * 0.05) + ', 0)'; })\n                .classed('hover', function(d) { return d.hover });\n            boxplots\n                .watchTransition(renderWatch, 'nv-boxplot: boxplots')\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', 0.75)\n                .delay(function(d,i) { return i * duration / data.length })\n                .attr('transform', function(d,i) {\n                    return 'translate(' + (xScale(getX(d,i)) + xScale.rangeBand() * 0.05) + ', 0)';\n                });\n            boxplots.exit().remove();\n\n            // ----- add the SVG elements for each boxPlot -----\n\n            // conditionally append whisker lines\n            boxEnter.each(function(d,i) {\n                var box = d3.select(this);\n                [getWl, getWh].forEach(function (f) {\n                    if (f(d) !== undefined && f(d) !== null) {\n                        var key = (f === getWl) ? 'low' : 'high';\n                        box.append('line')\n                          .style('stroke', getColor(d) || color(d,i))\n                          .attr('class', 'nv-boxplot-whisker nv-boxplot-' + key);\n                        box.append('line')\n                          .style('stroke', getColor(d) || color(d,i))\n                          .attr('class', 'nv-boxplot-tick nv-boxplot-' + key);\n                    }\n                });\n            });\n\n            var box_width = function() { return (maxBoxWidth === null ? xScale.rangeBand() * 0.9 : Math.min(75, xScale.rangeBand() * 0.9)); };\n            var box_left  = function() { return xScale.rangeBand() * 0.45 - box_width()/2; };\n            var box_right = function() { return xScale.rangeBand() * 0.45 + box_width()/2; };\n\n            // update whisker lines and ticks\n            [getWl, getWh].forEach(function (f) {\n                var key = (f === getWl) ? 'low' : 'high';\n                var endpoint = (f === getWl) ? getQ1 : getQ3;\n                boxplots.select('line.nv-boxplot-whisker.nv-boxplot-' + key)\n                  .watchTransition(renderWatch, 'nv-boxplot: boxplots')\n                    .attr('x1', xScale.rangeBand() * 0.45 )\n                    .attr('y1', function(d,i) { return yScale(f(d)); })\n                    .attr('x2', xScale.rangeBand() * 0.45 )\n                    .attr('y2', function(d,i) { return yScale(endpoint(d)); });\n                boxplots.select('line.nv-boxplot-tick.nv-boxplot-' + key)\n                  .watchTransition(renderWatch, 'nv-boxplot: boxplots')\n                    .attr('x1', box_left )\n                    .attr('y1', function(d,i) { return yScale(f(d)); })\n                    .attr('x2', box_right )\n                    .attr('y2', function(d,i) { return yScale(f(d)); });\n            });\n\n            [getWl, getWh].forEach(function (f) {\n                var key = (f === getWl) ? 'low' : 'high';\n                boxEnter.selectAll('.nv-boxplot-' + key)\n                  .on('mouseover', function(d,i,j) {\n                      d3.select(this).classed('hover', true);\n                      dispatch.elementMouseover({\n                          series: { key: f(d), color: getColor(d) || color(d,j) },\n                          e: d3.event\n                      });\n                  })\n                  .on('mouseout', function(d,i,j) {\n                      d3.select(this).classed('hover', false);\n                      dispatch.elementMouseout({\n                          series: { key: f(d), color: getColor(d) || color(d,j) },\n                          e: d3.event\n                      });\n                  })\n                  .on('mousemove', function(d,i) {\n                      dispatch.elementMousemove({e: d3.event});\n                  });\n            });\n\n            // boxes\n            boxEnter.append('rect')\n                .attr('class', 'nv-boxplot-box')\n                // tooltip events\n                .on('mouseover', function(d,i) {\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        key: getX(d),\n                        value: getX(d),\n                        series: [\n                            { key: 'Q3', value: getQ3(d), color: getColor(d) || color(d,i) },\n                            { key: 'Q2', value: getQ2(d), color: getColor(d) || color(d,i) },\n                            { key: 'Q1', value: getQ1(d), color: getColor(d) || color(d,i) }\n                        ],\n                        data: d,\n                        index: i,\n                        e: d3.event\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        key: getX(d),\n                        value: getX(d),\n                        series: [\n                            { key: 'Q3', value: getQ3(d), color: getColor(d) || color(d,i) },\n                            { key: 'Q2', value: getQ2(d), color: getColor(d) || color(d,i) },\n                            { key: 'Q1', value: getQ1(d), color: getColor(d) || color(d,i) }\n                        ],\n                        data: d,\n                        index: i,\n                        e: d3.event\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    dispatch.elementMousemove({e: d3.event});\n                });\n\n            // box transitions\n            boxplots.select('rect.nv-boxplot-box')\n              .watchTransition(renderWatch, 'nv-boxplot: boxes')\n                .attr('y', function(d,i) { return yScale(getQ3(d)); })\n                .attr('width', box_width)\n                .attr('x', box_left )\n                .attr('height', function(d,i) { return Math.abs(yScale(getQ3(d)) - yScale(getQ1(d))) || 1 })\n                .style('fill', function(d,i) { return getColor(d) || color(d,i) })\n                .style('stroke', function(d,i) { return getColor(d) || color(d,i) });\n\n            // median line\n            boxEnter.append('line').attr('class', 'nv-boxplot-median');\n\n            boxplots.select('line.nv-boxplot-median')\n              .watchTransition(renderWatch, 'nv-boxplot: boxplots line')\n                .attr('x1', box_left)\n                .attr('y1', function(d,i) { return yScale(getQ2(d)); })\n                .attr('x2', box_right)\n                .attr('y2', function(d,i) { return yScale(getQ2(d)); });\n\n            // outliers\n            var outliers = boxplots.selectAll('.nv-boxplot-outlier').data(function(d) {\n                return getOlItems(d) || [];\n            });\n            outliers.enter().append('circle')\n                .style('fill', function(d,i,j) { return getOlColor(d,i,j) || color(d,j) })\n                .style('stroke', function(d,i,j) { return getOlColor(d,i,j) || color(d,j) })\n                .style('z-index', 9000)\n                .on('mouseover', function(d,i,j) {\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        series: { key: getOlLabel(d,i,j), color: getOlColor(d,i,j) || color(d,j) },\n                        e: d3.event\n                    });\n                })\n                .on('mouseout', function(d,i,j) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        series: { key: getOlLabel(d,i,j), color: getOlColor(d,i,j) || color(d,j) },\n                        e: d3.event\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    dispatch.elementMousemove({e: d3.event});\n                });\n            outliers.attr('class', 'nv-boxplot-outlier');\n            outliers\n              .watchTransition(renderWatch, 'nv-boxplot: nv-boxplot-outlier')\n                .attr('cx', xScale.rangeBand() * 0.45)\n                .attr('cy', function(d,i,j) { return yScale(getOlValue(d,i,j)); })\n                .attr('r', '3');\n            outliers.exit().remove();\n\n            //store old scales for use in transitions on update\n            xScale0 = xScale.copy();\n            yScale0 = yScale.copy();\n        });\n\n        renderWatch.renderEnd('nv-boxplot immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:       {get: function(){return width;}, set: function(_){width=_;}},\n        height:      {get: function(){return height;}, set: function(_){height=_;}},\n        maxBoxWidth: {get: function(){return maxBoxWidth;}, set: function(_){maxBoxWidth=_;}},\n        x:           {get: function(){return getX;}, set: function(_){getX=_;}},\n        q1: {get: function(){return getQ1;}, set: function(_){getQ1=_;}},\n        q2: {get: function(){return getQ2;}, set: function(_){getQ2=_;}},\n        q3: {get: function(){return getQ3;}, set: function(_){getQ3=_;}},\n        wl: {get: function(){return getWl;}, set: function(_){getWl=_;}},\n        wh: {get: function(){return getWh;}, set: function(_){getWh=_;}},\n        itemColor:    {get: function(){return getColor;}, set: function(_){getColor=_;}},\n        outliers:     {get: function(){return getOlItems;}, set: function(_){getOlItems=_;}},\n        outlierValue: {get: function(){return getOlValue;}, set: function(_){getOlValue=_;}},\n        outlierLabel: {get: function(){return getOlLabel;}, set: function(_){getOlLabel=_;}},\n        outlierColor: {get: function(){return getOlColor;}, set: function(_){getOlColor=_;}},\n        xScale:  {get: function(){return xScale;}, set: function(_){xScale=_;}},\n        yScale:  {get: function(){return yScale;}, set: function(_){yScale=_;}},\n        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        id:          {get: function(){return id;}, set: function(_){id=_;}},\n        // rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n        y: {\n            get: function() {\n                console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n                return {};\n            },\n            set: function(_) {\n                console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n            }\n        },\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\nnv.models.boxPlotChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var boxplot = nv.models.boxPlot(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis();\n\n    var margin = {top: 15, right: 10, bottom: 50, left: 60},\n        width = null,\n        height = null,\n        color = nv.utils.getColor(),\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        staggerLabels = false,\n        tooltip = nv.models.tooltip(),\n        x, y,\n        noData = 'No Data Available.',\n        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n        duration = 250;\n\n    xAxis\n        .orient('bottom')\n        .showMaxMin(false)\n        .tickFormat(function(d) { return d })\n    ;\n    yAxis\n        .orient((rightAlignYAxis) ? 'right' : 'left')\n        .tickFormat(d3.format(',.1f'))\n    ;\n\n    tooltip.duration(0);\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(boxplot);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this), that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = (width  || parseInt(container.style('width')) || 960) - margin.left - margin.right;\n            var availableHeight = (height || parseInt(container.style('height')) || 400) - margin.top - margin.bottom;\n\n            chart.update = function() {\n                dispatch.beforeUpdate();\n                container.transition().duration(duration).call(chart);\n            };\n            chart.container = this;\n\n            // TODO still need to find a way to validate quartile data presence using boxPlot callbacks.\n            // Display No Data message if there's nothing to show. (quartiles required at minimum).\n            if (!data || !data.length) {\n                var noDataText = container.selectAll('.nv-noData').data([noData]);\n\n                noDataText.enter().append('text')\n                    .attr('class', 'nvd3 nv-noData')\n                    .attr('dy', '-.7em')\n                    .style('text-anchor', 'middle');\n\n                noDataText\n                    .attr('x', margin.left + availableWidth / 2)\n                    .attr('y', margin.top + availableHeight / 2)\n                    .text(function(d) { return d });\n\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = boxplot.xScale();\n            y = boxplot.yScale().clamp(true);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-boxPlotWithAxes').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-boxPlotWithAxes').append('g');\n            var defsEnter = gEnter.append('defs');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis')\n                .append('g').attr('class', 'nv-zeroLine')\n                .append('line');\n\n            gEnter.append('g').attr('class', 'nv-barsWrap');\n            g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            if (rightAlignYAxis) {\n                g.select('.nv-y.nv-axis')\n                    .attr('transform', 'translate(' + availableWidth + ',0)');\n            }\n\n            // Main Chart Component(s)\n            boxplot.width(availableWidth).height(availableHeight);\n\n            var barsWrap = g.select('.nv-barsWrap')\n                .datum(data.filter(function(d) { return !d.disabled }))\n\n            barsWrap.transition().call(boxplot);\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-x-label-clip-' + boxplot.id())\n                .append('rect');\n\n            g.select('#nv-x-label-clip-' + boxplot.id() + ' rect')\n                .attr('width', x.rangeBand() * (staggerLabels ? 2 : 1))\n                .attr('height', 16)\n                .attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2 ));\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    .ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n\n                g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n                g.select('.nv-x.nv-axis').call(xAxis);\n\n                var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n                if (staggerLabels) {\n                    xTicks\n                        .selectAll('text')\n                        .attr('transform', function(d,i,j) { return 'translate(0,' + (j % 2 === 0 ? '5' : '17') + ')' })\n                }\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    .ticks( Math.floor(availableHeight/36) ) // can't use nv.utils.calcTicksY with Object data\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis').call(yAxis);\n            }\n\n            // Zero line\n            g.select('.nv-zeroLine line')\n                .attr('x1',0)\n                .attr('x2',availableWidth)\n                .attr('y1', y(0))\n                .attr('y2', y(0))\n            ;\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n        });\n\n        renderWatch.renderEnd('nv-boxplot chart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    boxplot.dispatch.on('elementMouseover.tooltip', function(evt) {\n        tooltip.data(evt).hidden(false);\n    });\n\n    boxplot.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.data(evt).hidden(true);\n    });\n\n    boxplot.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.boxplot = boxplot;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        staggerLabels: {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n        showXAxis: {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis: {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        tooltipContent:    {get: function(){return tooltip;}, set: function(_){tooltip=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            boxplot.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            boxplot.color(color);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( (_) ? 'right' : 'left');\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, boxplot);\n    nv.utils.initOptions(chart);\n\n    return chart;\n}\n\n// Chart design based on the recommendations of Stephen Few. Implementation\n// based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n// http://projects.instantcognition.com/protovis/bulletchart/\n\nnv.models.bullet = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , orient = 'left' // TODO top & bottom\n        , reverse = false\n        , ranges = function(d) { return d.ranges }\n        , markers = function(d) { return d.markers ? d.markers : [] }\n        , markerLines = function(d) { return d.markerLines ? d.markerLines : [0] }\n        , measures = function(d) { return d.measures }\n        , rangeLabels = function(d) { return d.rangeLabels ? d.rangeLabels : [] }\n        , markerLabels = function(d) { return d.markerLabels ? d.markerLabels : []  }\n        , markerLineLabels = function(d) { return d.markerLineLabels ? d.markerLineLabels : []  }\n        , measureLabels = function(d) { return d.measureLabels ? d.measureLabels : []  }\n        , forceX = [0] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n        , width = 380\n        , height = 30\n        , container = null\n        , tickFormat = null\n        , color = nv.utils.getColor(['#1f77b4'])\n        , dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove')\n        , defaultRangeLabels = [\"Maximum\", \"Mean\", \"Minimum\"]\n        , legacyRangeClassNames = [\"Max\", \"Avg\", \"Min\"]\n        , duration = 1000\n        ;\n\n    function sortLabels(labels, values){\n        var lz = labels.slice();\n        labels.sort(function(a, b){\n            var iA = lz.indexOf(a);\n            var iB = lz.indexOf(b);\n            return d3.descending(values[iA], values[iB]);\n        });\n    };\n\n    function chart(selection) {\n        selection.each(function(d, i) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            var rangez = ranges.call(this, d, i).slice(),\n                markerz = markers.call(this, d, i).slice(),\n                markerLinez = markerLines.call(this, d, i).slice(),\n                measurez = measures.call(this, d, i).slice(),\n                rangeLabelz = rangeLabels.call(this, d, i).slice(),\n                markerLabelz = markerLabels.call(this, d, i).slice(),\n                markerLineLabelz = markerLineLabels.call(this, d, i).slice(),\n                measureLabelz = measureLabels.call(this, d, i).slice();\n\n            // Sort labels according to their sorted values\n            sortLabels(rangeLabelz, rangez);\n            sortLabels(markerLabelz, markerz);\n            sortLabels(markerLineLabelz, markerLinez);\n            sortLabels(measureLabelz, measurez);\n\n            // sort values descending\n            rangez.sort(d3.descending);\n            markerz.sort(d3.descending);\n            markerLinez.sort(d3.descending);\n            measurez.sort(d3.descending);\n\n            // Setup Scales\n            // Compute the new x-scale.\n            var x1 = d3.scale.linear()\n                .domain( d3.extent(d3.merge([forceX, rangez])) )\n                .range(reverse ? [availableWidth, 0] : [0, availableWidth]);\n\n            // Retrieve the old x-scale, if this is an update.\n            var x0 = this.__chart__ || d3.scale.linear()\n                .domain([0, Infinity])\n                .range(x1.range());\n\n            // Stash the new scale.\n            this.__chart__ = x1;\n\n            var rangeMin = d3.min(rangez), //rangez[2]\n                rangeMax = d3.max(rangez), //rangez[0]\n                rangeAvg = rangez[1];\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-bullet').data([d]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bullet');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            for(var i=0,il=rangez.length; i<il; i++){\n                var rangeClassNames = 'nv-range nv-range'+i;\n                if(i <= 2){\n                    rangeClassNames = rangeClassNames + ' nv-range'+legacyRangeClassNames[i];\n                }\n                gEnter.append('rect').attr('class', rangeClassNames);\n            }\n\n            gEnter.append('rect').attr('class', 'nv-measure');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var w0 = function(d) { return Math.abs(x0(d) - x0(0)) }, // TODO: could optimize by precalculating x0(0) and x1(0)\n                w1 = function(d) { return Math.abs(x1(d) - x1(0)) };\n            var xp0 = function(d) { return d < 0 ? x0(d) : x0(0) },\n                xp1 = function(d) { return d < 0 ? x1(d) : x1(0) };\n\n            for(var i=0,il=rangez.length; i<il; i++){\n                var range = rangez[i];\n                g.select('rect.nv-range'+i)\n                    .datum(range)\n                    .attr('height', availableHeight)\n                    .transition()\n                    .duration(duration)\n                    .attr('width', w1(range))\n                    .attr('x', xp1(range))\n            }\n\n            g.select('rect.nv-measure')\n                .style('fill', color)\n                .attr('height', availableHeight / 3)\n                .attr('y', availableHeight / 3)\n                .on('mouseover', function() {\n                    dispatch.elementMouseover({\n                        value: measurez[0],\n                        label: measureLabelz[0] || 'Current',\n                        color: d3.select(this).style(\"fill\")\n                    })\n                })\n                .on('mousemove', function() {\n                    dispatch.elementMousemove({\n                        value: measurez[0],\n                        label: measureLabelz[0] || 'Current',\n                        color: d3.select(this).style(\"fill\")\n                    })\n                })\n                .on('mouseout', function() {\n                    dispatch.elementMouseout({\n                        value: measurez[0],\n                        label: measureLabelz[0] || 'Current',\n                        color: d3.select(this).style(\"fill\")\n                    })\n                })\n                .transition()\n                .duration(duration)\n                .attr('width', measurez < 0 ?\n                    x1(0) - x1(measurez[0])\n                    : x1(measurez[0]) - x1(0))\n                .attr('x', xp1(measurez));\n\n            var h3 =  availableHeight / 6;\n\n            var markerData = markerz.map( function(marker, index) {\n                return {value: marker, label: markerLabelz[index]}\n            });\n            gEnter\n              .selectAll(\"path.nv-markerTriangle\")\n              .data(markerData)\n              .enter()\n              .append('path')\n              .attr('class', 'nv-markerTriangle')\n              .attr('d', 'M0,' + h3 + 'L' + h3 + ',' + (-h3) + ' ' + (-h3) + ',' + (-h3) + 'Z')\n              .on('mouseover', function(d) {\n                dispatch.elementMouseover({\n                  value: d.value,\n                  label: d.label || 'Previous',\n                  color: d3.select(this).style(\"fill\"),\n                  pos: [x1(d.value), availableHeight/2]\n                })\n\n              })\n              .on('mousemove', function(d) {\n                  dispatch.elementMousemove({\n                      value: d.value,\n                      label: d.label || 'Previous',\n                      color: d3.select(this).style(\"fill\")\n                  })\n              })\n              .on('mouseout', function(d, i) {\n                  dispatch.elementMouseout({\n                      value: d.value,\n                      label: d.label || 'Previous',\n                      color: d3.select(this).style(\"fill\")\n                  })\n              });\n\n            g.selectAll(\"path.nv-markerTriangle\")\n              .data(markerData)\n              .transition()\n              .duration(duration)\n              .attr('transform', function(d) { return 'translate(' + x1(d.value) + ',' + (availableHeight / 2) + ')' });\n\n            var markerLinesData = markerLinez.map( function(marker, index) {\n                return {value: marker, label: markerLineLabelz[index]}\n            });\n            gEnter\n              .selectAll(\"line.nv-markerLine\")\n              .data(markerLinesData)\n              .enter()\n              .append('line')\n              .attr('cursor', '')\n              .attr('class', 'nv-markerLine')\n              .attr('x1', function(d) { return x1(d.value) })\n              .attr('y1', '2')\n              .attr('x2', function(d) { return x1(d.value) })\n              .attr('y2', availableHeight - 2)\n              .on('mouseover', function(d) {\n                dispatch.elementMouseover({\n                  value: d.value,\n                  label: d.label || 'Previous',\n                  color: d3.select(this).style(\"fill\"),\n                  pos: [x1(d.value), availableHeight/2]\n                })\n\n              })\n              .on('mousemove', function(d) {\n                  dispatch.elementMousemove({\n                      value: d.value,\n                      label: d.label || 'Previous',\n                      color: d3.select(this).style(\"fill\")\n                  })\n              })\n              .on('mouseout', function(d, i) {\n                  dispatch.elementMouseout({\n                      value: d.value,\n                      label: d.label || 'Previous',\n                      color: d3.select(this).style(\"fill\")\n                  })\n              });\n\n            g.selectAll(\"line.nv-markerLine\")\n              .data(markerLinesData)\n              .transition()\n              .duration(duration)\n              .attr('x1', function(d) { return x1(d.value) })\n              .attr('x2', function(d) { return x1(d.value) });\n\n            wrap.selectAll('.nv-range')\n                .on('mouseover', function(d,i) {\n                    var label = rangeLabelz[i] || defaultRangeLabels[i];\n                    dispatch.elementMouseover({\n                        value: d,\n                        label: label,\n                        color: d3.select(this).style(\"fill\")\n                    })\n                })\n                .on('mousemove', function() {\n                    dispatch.elementMousemove({\n                        value: measurez[0],\n                        label: measureLabelz[0] || 'Previous',\n                        color: d3.select(this).style(\"fill\")\n                    })\n                })\n                .on('mouseout', function(d,i) {\n                    var label = rangeLabelz[i] || defaultRangeLabels[i];\n                    dispatch.elementMouseout({\n                        value: d,\n                        label: label,\n                        color: d3.select(this).style(\"fill\")\n                    })\n                });\n        });\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        ranges:      {get: function(){return ranges;}, set: function(_){ranges=_;}}, // ranges (bad, satisfactory, good)\n        markers:     {get: function(){return markers;}, set: function(_){markers=_;}}, // markers (previous, goal)\n        measures: {get: function(){return measures;}, set: function(_){measures=_;}}, // measures (actual, forecast)\n        forceX:      {get: function(){return forceX;}, set: function(_){forceX=_;}},\n        width:    {get: function(){return width;}, set: function(_){width=_;}},\n        height:    {get: function(){return height;}, set: function(_){height=_;}},\n        tickFormat:    {get: function(){return tickFormat;}, set: function(_){tickFormat=_;}},\n        duration:    {get: function(){return duration;}, set: function(_){duration=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        orient: {get: function(){return orient;}, set: function(_){ // left, right, top, bottom\n            orient = _;\n            reverse = orient == 'right' || orient == 'bottom';\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\n\n\n\n// Chart design based on the recommendations of Stephen Few. Implementation\n// based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n// http://projects.instantcognition.com/protovis/bulletchart/\nnv.models.bulletChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bullet = nv.models.bullet();\n    var tooltip = nv.models.tooltip();\n\n    var orient = 'left' // TODO top & bottom\n        , reverse = false\n        , margin = {top: 5, right: 40, bottom: 20, left: 120}\n        , ranges = function(d) { return d.ranges }\n        , markers = function(d) { return d.markers ? d.markers : [] }\n        , measures = function(d) { return d.measures }\n        , width = null\n        , height = 55\n        , tickFormat = null\n        , ticks = null\n        , noData = null\n        , dispatch = d3.dispatch()\n        ;\n\n    tooltip\n        .duration(0)\n        .headerEnabled(false);\n\n    function chart(selection) {\n        selection.each(function(d, i) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = height - margin.top - margin.bottom,\n                that = this;\n\n            chart.update = function() { chart(selection) };\n            chart.container = this;\n\n            // Display No Data message if there's nothing to show.\n            if (!d || !ranges.call(this, d, i)) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            var rangez = ranges.call(this, d, i).slice().sort(d3.descending),\n                markerz = markers.call(this, d, i).slice().sort(d3.descending),\n                measurez = measures.call(this, d, i).slice().sort(d3.descending);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-bulletChart').data([d]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bulletChart');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-bulletWrap');\n            gEnter.append('g').attr('class', 'nv-titles');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Compute the new x-scale.\n            var x1 = d3.scale.linear()\n                .domain([0, Math.max(rangez[0], (markerz[0] || 0), measurez[0])])  // TODO: need to allow forceX and forceY, and xDomain, yDomain\n                .range(reverse ? [availableWidth, 0] : [0, availableWidth]);\n\n            // Retrieve the old x-scale, if this is an update.\n            var x0 = this.__chart__ || d3.scale.linear()\n                .domain([0, Infinity])\n                .range(x1.range());\n\n            // Stash the new scale.\n            this.__chart__ = x1;\n\n            var w0 = function(d) { return Math.abs(x0(d) - x0(0)) }, // TODO: could optimize by precalculating x0(0) and x1(0)\n                w1 = function(d) { return Math.abs(x1(d) - x1(0)) };\n\n            var title = gEnter.select('.nv-titles').append('g')\n                .attr('text-anchor', 'end')\n                .attr('transform', 'translate(-6,' + (height - margin.top - margin.bottom) / 2 + ')');\n            title.append('text')\n                .attr('class', 'nv-title')\n                .text(function(d) { return d.title; });\n\n            title.append('text')\n                .attr('class', 'nv-subtitle')\n                .attr('dy', '1em')\n                .text(function(d) { return d.subtitle; });\n\n            bullet\n                .width(availableWidth)\n                .height(availableHeight);\n\n            var bulletWrap = g.select('.nv-bulletWrap');\n            d3.transition(bulletWrap).call(bullet);\n\n            // Compute the tick format.\n            var format = tickFormat || x1.tickFormat( availableWidth / 100 );\n\n            // Update the tick groups.\n            var tick = g.selectAll('g.nv-tick')\n                .data(x1.ticks( ticks ? ticks : (availableWidth / 50) ), function(d) {\n                    return this.textContent || format(d);\n                });\n\n            // Initialize the ticks with the old scale, x0.\n            var tickEnter = tick.enter().append('g')\n                .attr('class', 'nv-tick')\n                .attr('transform', function(d) { return 'translate(' + x0(d) + ',0)' })\n                .style('opacity', 1e-6);\n\n            tickEnter.append('line')\n                .attr('y1', availableHeight)\n                .attr('y2', availableHeight * 7 / 6);\n\n            tickEnter.append('text')\n                .attr('text-anchor', 'middle')\n                .attr('dy', '1em')\n                .attr('y', availableHeight * 7 / 6)\n                .text(format);\n\n            // Transition the updating ticks to the new scale, x1.\n            var tickUpdate = d3.transition(tick)\n                .transition()\n                .duration(bullet.duration())\n                .attr('transform', function(d) { return 'translate(' + x1(d) + ',0)' })\n                .style('opacity', 1);\n\n            tickUpdate.select('line')\n                .attr('y1', availableHeight)\n                .attr('y2', availableHeight * 7 / 6);\n\n            tickUpdate.select('text')\n                .attr('y', availableHeight * 7 / 6);\n\n            // Transition the exiting ticks to the new scale, x1.\n            d3.transition(tick.exit())\n                .transition()\n                .duration(bullet.duration())\n                .attr('transform', function(d) { return 'translate(' + x1(d) + ',0)' })\n                .style('opacity', 1e-6)\n                .remove();\n        });\n\n        d3.timer.flush();\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    bullet.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt['series'] = {\n            key: evt.label,\n            value: evt.value,\n            color: evt.color\n        };\n        tooltip.data(evt).hidden(false);\n    });\n\n    bullet.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    bullet.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.bullet = bullet;\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        ranges:      {get: function(){return ranges;}, set: function(_){ranges=_;}}, // ranges (bad, satisfactory, good)\n        markers:     {get: function(){return markers;}, set: function(_){markers=_;}}, // markers (previous, goal)\n        measures: {get: function(){return measures;}, set: function(_){measures=_;}}, // measures (actual, forecast)\n        width:    {get: function(){return width;}, set: function(_){width=_;}},\n        height:    {get: function(){return height;}, set: function(_){height=_;}},\n        tickFormat:    {get: function(){return tickFormat;}, set: function(_){tickFormat=_;}},\n        ticks:    {get: function(){return ticks;}, set: function(_){ticks=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        orient: {get: function(){return orient;}, set: function(_){ // left, right, top, bottom\n            orient = _;\n            reverse = orient == 'right' || orient == 'bottom';\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, bullet);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\n\n\nnv.models.candlestickBar = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = null\n        , height = null\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container\n        , x = d3.scale.linear()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , getOpen = function(d) { return d.open }\n        , getClose = function(d) { return d.close }\n        , getHigh = function(d) { return d.high }\n        , getLow = function(d) { return d.low }\n        , forceX = []\n        , forceY = []\n        , padData     = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n        , clipEdge = true\n        , color = nv.utils.defaultColor()\n        , interactive = false\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    function chart(selection) {\n        selection.each(function(data) {\n            container = d3.select(this);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            nv.utils.initSVG(container);\n\n            // Width of the candlestick bars.\n            var barWidth = (availableWidth / data[0].values.length) * .45;\n\n            // Setup Scales\n            x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX) ));\n\n            if (padData)\n                x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n            else\n                x.range(xRange || [5 + barWidth / 2, availableWidth - barWidth / 2 - 5]);\n\n            y.domain(yDomain || [\n                    d3.min(data[0].values.map(getLow).concat(forceY)),\n                    d3.max(data[0].values.map(getHigh).concat(forceY))\n                ]\n            ).range(yRange || [availableHeight, 0]);\n\n            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n            if (x.domain()[0] === x.domain()[1])\n                x.domain()[0] ?\n                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n                    : x.domain([-1,1]);\n\n            if (y.domain()[0] === y.domain()[1])\n                y.domain()[0] ?\n                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n                    : y.domain([-1,1]);\n\n            // Setup containers and skeleton of chart\n            var wrap = d3.select(this).selectAll('g.nv-wrap.nv-candlestickBar').data([data[0].values]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-candlestickBar');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-ticks');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            container\n                .on('click', function(d,i) {\n                    dispatch.chartClick({\n                        data: d,\n                        index: i,\n                        pos: d3.event,\n                        id: id\n                    });\n                });\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-chart-clip-path-' + id)\n                .append('rect');\n\n            wrap.select('#nv-chart-clip-path-' + id + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            g   .attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n\n            var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick')\n                .data(function(d) { return d });\n            ticks.exit().remove();\n\n            var tickGroups = ticks.enter().append('g');\n\n            // The colors are currently controlled by CSS.\n            ticks\n                .attr('class', function(d, i, j) { return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i});\n\n            var lines = tickGroups.append('line')\n                .attr('class', 'nv-candlestick-lines')\n                .attr('transform', function(d, i) { return 'translate(' + x(getX(d, i)) + ',0)'; })\n                .attr('x1', 0)\n                .attr('y1', function(d, i) { return y(getHigh(d, i)); })\n                .attr('x2', 0)\n                .attr('y2', function(d, i) { return y(getLow(d, i)); });\n\n            var rects = tickGroups.append('rect')\n                .attr('class', 'nv-candlestick-rects nv-bars')\n                .attr('transform', function(d, i) {\n                    return 'translate(' + (x(getX(d, i)) - barWidth/2) + ','\n                    + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? (y(getClose(d, i)) - y(getOpen(d, i))) : 0))\n                    + ')';\n                })\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('width', barWidth)\n                .attr('height', function(d, i) {\n                    var open = getOpen(d, i);\n                    var close = getClose(d, i);\n                    return open > close ? y(close) - y(open) : y(open) - y(close);\n                });\n\n            ticks.select('.nv-candlestick-lines').transition()\n                .attr('transform', function(d, i) { return 'translate(' + x(getX(d, i)) + ',0)'; })\n                .attr('x1', 0)\n                .attr('y1', function(d, i) { return y(getHigh(d, i)); })\n                .attr('x2', 0)\n                .attr('y2', function(d, i) { return y(getLow(d, i)); });\n\n            ticks.select('.nv-candlestick-rects').transition()\n                .attr('transform', function(d, i) {\n                    return 'translate(' + (x(getX(d, i)) - barWidth/2) + ','\n                    + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? (y(getClose(d, i)) - y(getOpen(d, i))) : 0))\n                    + ')';\n                })\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('width', barWidth)\n                .attr('height', function(d, i) {\n                    var open = getOpen(d, i);\n                    var close = getClose(d, i);\n                    return open > close ? y(close) - y(open) : y(open) - y(close);\n                });\n        });\n\n        return chart;\n    }\n\n\n    //Create methods to allow outside functions to highlight a specific bar.\n    chart.highlightPoint = function(pointIndex, isHoverOver) {\n        chart.clearHighlights();\n        container.select(\".nv-candlestickBar .nv-tick-0-\" + pointIndex)\n            .classed(\"hover\", isHoverOver)\n        ;\n    };\n\n    chart.clearHighlights = function() {\n        container.select(\".nv-candlestickBar .nv-tick.hover\")\n            .classed(\"hover\", false)\n        ;\n    };\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:    {get: function(){return width;}, set: function(_){width=_;}},\n        height:   {get: function(){return height;}, set: function(_){height=_;}},\n        xScale:   {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:   {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain:  {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain:  {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:   {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:   {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        forceX:   {get: function(){return forceX;}, set: function(_){forceX=_;}},\n        forceY:   {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        padData:  {get: function(){return padData;}, set: function(_){padData=_;}},\n        clipEdge: {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        id:       {get: function(){return id;}, set: function(_){id=_;}},\n        interactive: {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\n        x:     {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:     {get: function(){return getY;}, set: function(_){getY=_;}},\n        open:  {get: function(){return getOpen();}, set: function(_){getOpen=_;}},\n        close: {get: function(){return getClose();}, set: function(_){getClose=_;}},\n        high:  {get: function(){return getHigh;}, set: function(_){getHigh=_;}},\n        low:   {get: function(){return getLow;}, set: function(_){getLow=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    != undefined ? _.top    : margin.top;\n            margin.right  = _.right  != undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   != undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\n\nnv.models.cumulativeLineChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , legend = nv.models.legend()\n        , controls = nv.models.legend()\n        , interactiveLayer = nv.interactiveGuideline()\n        , tooltip = nv.models.tooltip()\n        ;\n\n    var margin = {top: 30, right: 30, bottom: 50, left: 60}\n        , marginTop = null\n        , color = nv.utils.defaultColor()\n        , width = null\n        , height = null\n        , showLegend = true\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , showControls = true\n        , useInteractiveGuideline = false\n        , rescaleY = true\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , id = lines.id()\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , average = function(d) { return d.average }\n        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n        , transitionDuration = 250\n        , duration = 250\n        , noErrorCheck = false  //if set to TRUE, will bypass an error check in the indexify function.\n        ;\n\n    state.index = 0;\n    state.rescaleY = rescaleY;\n\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient((rightAlignYAxis) ? 'right' : 'left');\n\n    tooltip.valueFormatter(function(d, i) {\n        return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function(d, i) {\n        return xAxis.tickFormat()(d, i);\n    });\n\n    controls.updateState(false);\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var dx = d3.scale.linear()\n        , index = {i: 0, x: 0}\n        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n        ;\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled }),\n                index: index.i,\n                rescaleY: rescaleY\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.index !== undefined)\n                index.i = state.index;\n            if (state.rescaleY !== undefined)\n                rescaleY = state.rescaleY;\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(lines);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n            container.classed('nv-chart-' + id, true);\n            var that = this;\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() {\n                if (duration === 0)\n                    container.call(chart);\n                else\n                    container.transition().duration(duration).call(chart)\n            };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disableddisabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            var indexDrag = d3.behavior.drag()\n                .on('dragstart', dragStart)\n                .on('drag', dragMove)\n                .on('dragend', dragEnd);\n\n\n            function dragStart(d,i) {\n                d3.select(chart.container)\n                    .style('cursor', 'ew-resize');\n            }\n\n            function dragMove(d,i) {\n                index.x = d3.event.x;\n                index.i = Math.round(dx.invert(index.x));\n                updateZero();\n            }\n\n            function dragEnd(d,i) {\n                d3.select(chart.container)\n                    .style('cursor', 'auto');\n\n                // update state and send stateChange with new index\n                state.index = index.i;\n                dispatch.stateChange(state);\n            }\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = lines.xScale();\n            y = lines.yScale();\n\n            if (!rescaleY) {\n                var seriesDomains = data\n                    .filter(function(series) { return !series.disabled })\n                    .map(function(series,i) {\n                        var initialDomain = d3.extent(series.values, lines.y());\n\n                        //account for series being disabled when losing 95% or more\n                        if (initialDomain[0] < -.95) initialDomain[0] = -.95;\n\n                        return [\n                                (initialDomain[0] - initialDomain[1]) / (1 + initialDomain[1]),\n                                (initialDomain[1] - initialDomain[0]) / (1 + initialDomain[0])\n                        ];\n                    });\n\n                var completeDomain = [\n                    d3.min(seriesDomains, function(d) { return d[0] }),\n                    d3.max(seriesDomains, function(d) { return d[1] })\n                ];\n\n                lines.yDomain(completeDomain);\n            } else {\n                lines.yDomain(null);\n            }\n\n            dx.domain([0, data[0].values.length - 1]) //Assumes all series have same length\n                .range([0, availableWidth])\n                .clamp(true);\n\n            var data = indexify(index.i, data);\n\n            // Setup containers and skeleton of chart\n            var interactivePointerEvents = (useInteractiveGuideline) ? \"none\" : \"all\";\n            var wrap = container.selectAll('g.nv-wrap.nv-cumulativeLine').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-cumulativeLine').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-interactive');\n            gEnter.append('g').attr('class', 'nv-x nv-axis').style(\"pointer-events\",\"none\");\n            gEnter.append('g').attr('class', 'nv-y nv-axis');\n            gEnter.append('g').attr('class', 'nv-background');\n            gEnter.append('g').attr('class', 'nv-linesWrap').style(\"pointer-events\",interactivePointerEvents);\n            gEnter.append('g').attr('class', 'nv-avgLinesWrap').style(\"pointer-events\",\"none\");\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth);\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                g.select('.nv-legendWrap')\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n            }\n\n            // Controls\n            if (!showControls) {\n                 g.select('.nv-controlsWrap').selectAll('*').remove();\n            } else {\n                var controlsData = [\n                    { key: 'Re-scale y-axis', disabled: !rescaleY }\n                ];\n\n                controls\n                    .width(140)\n                    .color(['#444', '#444', '#444'])\n                    .rightAlign(false)\n                    .margin({top: 5, right: 0, bottom: 5, left: 20})\n                ;\n\n                g.select('.nv-controlsWrap')\n                    .datum(controlsData)\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n                    .call(controls);\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            // Show error if series goes below 100%\n            var tempDisabled = data.filter(function(d) { return d.tempDisabled });\n\n            wrap.select('.tempDisabled').remove(); //clean-up and prevent duplicates\n            if (tempDisabled.length) {\n                wrap.append('text').attr('class', 'tempDisabled')\n                    .attr('x', availableWidth / 2)\n                    .attr('y', '-.71em')\n                    .style('text-anchor', 'end')\n                    .text(tempDisabled.map(function(d) { return d.key }).join(', ') + ' values cannot be calculated for this time period.');\n            }\n\n            //Set up interactive layer\n            if (useInteractiveGuideline) {\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left:margin.left,top:margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n\n            gEnter.select('.nv-background')\n                .append('rect');\n\n            g.select('.nv-background rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            lines\n                //.x(function(d) { return d.x })\n                .y(function(d) { return d.display.y })\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled && !data[i].tempDisabled; }));\n\n            var linesWrap = g.select('.nv-linesWrap')\n                .datum(data.filter(function(d) { return  !d.disabled && !d.tempDisabled }));\n\n            linesWrap.call(lines);\n\n            //Store a series index number in the data array.\n            data.forEach(function(d,i) {\n                d.seriesIndex = i;\n            });\n\n            var avgLineData = data.filter(function(d) {\n                return !d.disabled && !!average(d);\n            });\n\n            var avgLines = g.select(\".nv-avgLinesWrap\").selectAll(\"line\")\n                .data(avgLineData, function(d) { return d.key; });\n\n            var getAvgLineY = function(d) {\n                //If average lines go off the svg element, clamp them to the svg bounds.\n                var yVal = y(average(d));\n                if (yVal < 0) return 0;\n                if (yVal > availableHeight) return availableHeight;\n                return yVal;\n            };\n\n            avgLines.enter()\n                .append('line')\n                .style('stroke-width',2)\n                .style('stroke-dasharray','10,10')\n                .style('stroke',function (d,i) {\n                    return lines.color()(d,d.seriesIndex);\n                })\n                .attr('x1',0)\n                .attr('x2',availableWidth)\n                .attr('y1', getAvgLineY)\n                .attr('y2', getAvgLineY);\n\n            avgLines\n                .style('stroke-opacity',function(d){\n                    //If average lines go offscreen, make them transparent\n                    var yVal = y(average(d));\n                    if (yVal < 0 || yVal > availableHeight) return 0;\n                    return 1;\n                })\n                .attr('x1',0)\n                .attr('x2',availableWidth)\n                .attr('y1', getAvgLineY)\n                .attr('y2', getAvgLineY);\n\n            avgLines.exit().remove();\n\n            //Create index line\n            var indexLine = linesWrap.selectAll('.nv-indexLine')\n                .data([index]);\n            indexLine.enter().append('rect').attr('class', 'nv-indexLine')\n                .attr('width', 3)\n                .attr('x', -2)\n                .attr('fill', 'red')\n                .attr('fill-opacity', .5)\n                .style(\"pointer-events\",\"all\")\n                .call(indexDrag);\n\n            indexLine\n                .attr('transform', function(d) { return 'translate(' + dx(d.i) + ',0)' })\n                .attr('height', availableHeight);\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/70, data) )\n                    .tickSize(-availableHeight, 0);\n\n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n                g.select('.nv-x.nv-axis')\n                    .call(xAxis);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis')\n                    .call(yAxis);\n            }\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            function updateZero() {\n                indexLine\n                    .data([index]);\n\n                //When dragging the index line, turn off line transitions.\n                // Then turn them back on when done dragging.\n                var oldDuration = chart.duration();\n                chart.duration(0);\n                chart.update();\n                chart.duration(oldDuration);\n            }\n\n            g.select('.nv-background rect')\n                .on('click', function() {\n                    index.x = d3.mouse(this)[0];\n                    index.i = Math.round(dx.invert(index.x));\n\n                    // update state and send stateChange with new index\n                    state.index = index.i;\n                    dispatch.stateChange(state);\n\n                    updateZero();\n                });\n\n            lines.dispatch.on('elementClick', function(e) {\n                index.i = e.pointIndex;\n                index.x = dx(index.i);\n\n                // update state and send stateChange with new index\n                state.index = index.i;\n                dispatch.stateChange(state);\n\n                updateZero();\n            });\n\n            controls.dispatch.on('legendClick', function(d,i) {\n                d.disabled = !d.disabled;\n                rescaleY = !d.disabled;\n\n                state.rescaleY = rescaleY;\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                lines.clearHighlights();\n                var singlePoint, pointIndex, pointXLocation, allData = [];\n\n                data\n                    .filter(function(series, i) {\n                        series.seriesIndex = i;\n                        return !series.disabled;\n                    })\n                    .forEach(function(series,i) {\n                        pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n                        lines.highlightPoint(i, pointIndex, true);\n                        var point = series.values[pointIndex];\n                        if (typeof point === 'undefined') return;\n                        if (typeof singlePoint === 'undefined') singlePoint = point;\n                        if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n                        allData.push({\n                            key: series.key,\n                            value: chart.y()(point, pointIndex),\n                            color: color(series,series.seriesIndex)\n                        });\n                    });\n\n                //Highlight the tooltip entry based on which point the mouse is closest to.\n                if (allData.length > 2) {\n                    var yValue = chart.yScale().invert(e.mouseY);\n                    var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n                    var threshold = 0.03 * domainExtent;\n                    var indexToHighlight = nv.nearestValueIndex(allData.map(function(d){return d.value}),yValue,threshold);\n                    if (indexToHighlight !== null)\n                        allData[indexToHighlight].highlight = true;\n                }\n\n                var xValue = xAxis.tickFormat()(chart.x()(singlePoint,pointIndex), pointIndex);\n                interactiveLayer.tooltip\n                    .valueFormatter(function(d,i) {\n                        return yAxis.tickFormat()(d);\n                    })\n                    .data(\n                    {\n                        value: xValue,\n                        series: allData\n                    }\n                )();\n\n                interactiveLayer.renderGuideLine(pointXLocation);\n            });\n\n            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                lines.clearHighlights();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n\n                    state.disabled = e.disabled;\n                }\n\n                if (typeof e.index !== 'undefined') {\n                    index.i = e.index;\n                    index.x = dx(index.i);\n\n                    state.index = e.index;\n\n                    indexLine\n                        .data([index]);\n                }\n\n                if (typeof e.rescaleY !== 'undefined') {\n                    rescaleY = e.rescaleY;\n                }\n\n                chart.update();\n            });\n\n        });\n\n        renderWatch.renderEnd('cumulativeLineChart immediate');\n\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    lines.dispatch.on('elementMouseover.tooltip', function(evt) {\n        var point = {\n            x: chart.x()(evt.point),\n            y: chart.y()(evt.point),\n            color: evt.point.color\n        };\n        evt.point = point;\n        tooltip.data(evt).hidden(false);\n    });\n\n    lines.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true)\n    });\n\n    //============================================================\n    // Functions\n    //------------------------------------------------------------\n\n    var indexifyYGetter = null;\n    /* Normalize the data according to an index point. */\n    function indexify(idx, data) {\n        if (!indexifyYGetter) indexifyYGetter = lines.y();\n        return data.map(function(line, i) {\n            if (!line.values) {\n                return line;\n            }\n            var indexValue = line.values[idx];\n            if (indexValue == null) {\n                return line;\n            }\n            var v = indexifyYGetter(indexValue, idx);\n\n            //TODO: implement check below, and disable series if series loses 100% or more cause divide by 0 issue\n            if (v < -.95 && !noErrorCheck) {\n                //if a series loses more than 100%, calculations fail.. anything close can cause major distortion (but is mathematically correct till it hits 100)\n\n                line.tempDisabled = true;\n                return line;\n            }\n\n            line.tempDisabled = false;\n\n            line.values = line.values.map(function(point, pointIndex) {\n                point.display = {'y': (indexifyYGetter(point, pointIndex) - v) / (1 + v) };\n                return point;\n            });\n\n            return line;\n        })\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.state = state;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        rescaleY:     {get: function(){return rescaleY;}, set: function(_){rescaleY=_;}},\n        showControls:     {get: function(){return showControls;}, set: function(_){showControls=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        average: {get: function(){return average;}, set: function(_){average=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        showXAxis:    {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        noErrorCheck:    {get: function(){return noErrorCheck;}, set: function(_){noErrorCheck=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n        }},\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = _;\n            if (_ === true) {\n                chart.interactive(false);\n                chart.useVoronoi(false);\n            }\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( (_) ? 'right' : 'left');\n        }},\n        duration:    {get: function(){return duration;}, set: function(_){\n            duration = _;\n            lines.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n            renderWatch.reset(duration);\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n//TODO: consider deprecating by adding necessary features to multiBar model\nnv.models.discreteBar = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 960\n        , height = 500\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container\n        , x = d3.scale.ordinal()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n        , color = nv.utils.defaultColor()\n        , showValues = false\n        , valueFormat = d3.format(',.2f')\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n        , rectClass = 'discreteBar'\n        , duration = 250\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            //add series index to each data point for reference\n            data.forEach(function(series, i) {\n                series.values.forEach(function(point) {\n                    point.series = i;\n                });\n            });\n\n            // Setup Scales\n            // remap and flatten the data for use in calculating the scales' domains\n            var seriesData = (xDomain && yDomain) ? [] : // if we know xDomain and yDomain, no need to calculate\n                data.map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d,i), y: getY(d,i), y0: d.y0 }\n                    })\n                });\n\n            x   .domain(xDomain || d3.merge(seriesData).map(function(d) { return d.x }))\n                .rangeBands(xRange || [0, availableWidth], .1);\n            y   .domain(yDomain || d3.extent(d3.merge(seriesData).map(function(d) { return d.y }).concat(forceY)));\n\n            // If showValues, pad the Y axis range to account for label height\n            if (showValues) y.range(yRange || [availableHeight - (y.domain()[0] < 0 ? 12 : 0), y.domain()[1] > 0 ? 12 : 0]);\n            else y.range(yRange || [availableHeight, 0]);\n\n            //store old scales if they exist\n            x0 = x0 || x;\n            y0 = y0 || y.copy().range([y(0),y(0)]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-discretebar').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discretebar');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-groups');\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            //TODO: by definition, the discrete bar should not have multiple groups, will modify/remove later\n            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n                .data(function(d) { return d }, function(d) { return d.key });\n            groups.enter().append('g')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6);\n            groups.exit()\n                .watchTransition(renderWatch, 'discreteBar: exit groups')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6)\n                .remove();\n            groups\n                .attr('class', function(d,i) { return 'nv-group nv-series-' + i })\n                .classed('hover', function(d) { return d.hover });\n            groups\n                .watchTransition(renderWatch, 'discreteBar: groups')\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', .75);\n\n            var bars = groups.selectAll('g.nv-bar')\n                .data(function(d) { return d.values });\n            bars.exit().remove();\n\n            var barsEnter = bars.enter().append('g')\n                .attr('transform', function(d,i,j) {\n                    return 'translate(' + (x(getX(d,i)) + x.rangeBand() * .05 ) + ', ' + y(0) + ')'\n                })\n                .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    dispatch.elementMousemove({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('click', function(d,i) {\n                    var element = this;\n                    dispatch.elementClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\"),\n                        event: d3.event,\n                        element: element\n                    });\n                    d3.event.stopPropagation();\n                })\n                .on('dblclick', function(d,i) {\n                    dispatch.elementDblClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                    d3.event.stopPropagation();\n                });\n\n            barsEnter.append('rect')\n                .attr('height', 0)\n                .attr('width', x.rangeBand() * .9 / data.length )\n\n            if (showValues) {\n                barsEnter.append('text')\n                    .attr('text-anchor', 'middle')\n                ;\n\n                bars.select('text')\n                    .text(function(d,i) { return valueFormat(getY(d,i)) })\n                    .watchTransition(renderWatch, 'discreteBar: bars text')\n                    .attr('x', x.rangeBand() * .9 / 2)\n                    .attr('y', function(d,i) { return getY(d,i) < 0 ? y(getY(d,i)) - y(0) + 12 : -4 })\n\n                ;\n            } else {\n                bars.selectAll('text').remove();\n            }\n\n            bars\n                .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive' })\n                .style('fill', function(d,i) { return d.color || color(d,i) })\n                .style('stroke', function(d,i) { return d.color || color(d,i) })\n                .select('rect')\n                .attr('class', rectClass)\n                .watchTransition(renderWatch, 'discreteBar: bars rect')\n                .attr('width', x.rangeBand() * .9 / data.length);\n            bars.watchTransition(renderWatch, 'discreteBar: bars')\n                //.delay(function(d,i) { return i * 1200 / data[0].values.length })\n                .attr('transform', function(d,i) {\n                    var left = x(getX(d,i)) + x.rangeBand() * .05,\n                        top = getY(d,i) < 0 ?\n                            y(0) :\n                                y(0) - y(getY(d,i)) < 1 ?\n                            y(0) - 1 : //make 1 px positive bars show up above y=0\n                            y(getY(d,i));\n\n                    return 'translate(' + left + ', ' + top + ')'\n                })\n                .select('rect')\n                .attr('height', function(d,i) {\n                    return  Math.max(Math.abs(y(getY(d,i)) - y(0)), 1)\n                });\n\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n\n        });\n\n        renderWatch.renderEnd('discreteBar immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:   {get: function(){return width;}, set: function(_){width=_;}},\n        height:  {get: function(){return height;}, set: function(_){height=_;}},\n        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        showValues: {get: function(){return showValues;}, set: function(_){showValues=_;}},\n        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        valueFormat:    {get: function(){return valueFormat;}, set: function(_){valueFormat=_;}},\n        id:          {get: function(){return id;}, set: function(_){id=_;}},\n        rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.discreteBarChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var discretebar = nv.models.discreteBar()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n\t, legend = nv.models.legend()\n        , tooltip = nv.models.tooltip()\n        ;\n\n    var margin = {top: 15, right: 10, bottom: 50, left: 60}\n        , marginTop = null\n        , width = null\n        , height = null\n        , color = nv.utils.getColor()\n\t, showLegend = false\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , staggerLabels = false\n        , wrapLabels = false\n        , rotateLabels = 0\n        , x\n        , y\n        , noData = null\n        , dispatch = d3.dispatch('beforeUpdate','renderEnd')\n        , duration = 250\n        ;\n\n    xAxis\n        .orient('bottom')\n        .showMaxMin(false)\n        .tickFormat(function(d) { return d })\n    ;\n    yAxis\n        .orient((rightAlignYAxis) ? 'right' : 'left')\n        .tickFormat(d3.format(',.1f'))\n    ;\n\n    tooltip\n        .duration(0)\n        .headerEnabled(false)\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        })\n        .keyFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(discretebar);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() {\n                dispatch.beforeUpdate();\n                container.transition().duration(duration).call(chart);\n            };\n            chart.container = this;\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container);\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = discretebar.xScale();\n            y = discretebar.yScale().clamp(true);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-discreteBarWithAxes').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discreteBarWithAxes').append('g');\n            var defsEnter = gEnter.append('defs');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis')\n                .append('g').attr('class', 'nv-zeroLine')\n                .append('line');\n\n            gEnter.append('g').attr('class', 'nv-barsWrap');\n\t    gEnter.append('g').attr('class', 'nv-legendWrap');\n\n            g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth);\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                wrap.select('.nv-legendWrap')\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n            }\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            // Main Chart Component(s)\n            discretebar\n                .width(availableWidth)\n                .height(availableHeight);\n\n            var barsWrap = g.select('.nv-barsWrap')\n                .datum(data.filter(function(d) { return !d.disabled }));\n\n            barsWrap.transition().call(discretebar);\n\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-x-label-clip-' + discretebar.id())\n                .append('rect');\n\n            g.select('#nv-x-label-clip-' + discretebar.id() + ' rect')\n                .attr('width', x.rangeBand() * (staggerLabels ? 2 : 1))\n                .attr('height', 16)\n                .attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2 ));\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n\n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + (y.range()[0] + ((discretebar.showValues() && y.domain()[0] < 0) ? 16 : 0)) + ')');\n                g.select('.nv-x.nv-axis').call(xAxis);\n\n                var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n                if (staggerLabels) {\n                    xTicks\n                        .selectAll('text')\n                        .attr('transform', function(d,i,j) { return 'translate(0,' + (j % 2 == 0 ? '5' : '17') + ')' })\n                }\n\n                if (rotateLabels) {\n                    xTicks\n                        .selectAll('.tick text')\n                        .attr('transform', 'rotate(' + rotateLabels + ' 0,0)')\n                        .style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n                }\n\n                if (wrapLabels) {\n                    g.selectAll('.tick text')\n                        .call(nv.utils.wrapTicks, chart.xAxis.rangeBand())\n                }\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis').call(yAxis);\n            }\n\n            // Zero line\n            g.select(\".nv-zeroLine line\")\n                .attr(\"x1\",0)\n                .attr(\"x2\",(rightAlignYAxis) ? -availableWidth : availableWidth)\n                .attr(\"y1\", y(0))\n                .attr(\"y2\", y(0))\n            ;\n        });\n\n        renderWatch.renderEnd('discreteBar chart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    discretebar.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt['series'] = {\n            key: chart.x()(evt.data),\n            value: chart.y()(evt.data),\n            color: evt.color\n        };\n        tooltip.data(evt).hidden(false);\n    });\n\n    discretebar.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    discretebar.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.discretebar = discretebar;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\tshowLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        staggerLabels: {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n        rotateLabels:  {get: function(){return rotateLabels;}, set: function(_){rotateLabels=_;}},\n        wrapLabels:  {get: function(){return wrapLabels;}, set: function(_){wrapLabels=!!_;}},\n        showXAxis: {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis: {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            discretebar.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            discretebar.color(color);\n\t    legend.color(color);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( (_) ? 'right' : 'left');\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, discretebar);\n    nv.utils.initOptions(chart);\n\n    return chart;\n}\n\nnv.models.distribution = function() {\n    \"use strict\";\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 400 //technically width or height depending on x or y....\n        , size = 8\n        , axis = 'x' // 'x' or 'y'... horizontal or vertical\n        , getData = function(d) { return d[axis] }  // defaults d.x or d.y\n        , color = nv.utils.defaultColor()\n        , scale = d3.scale.linear()\n        , domain\n        , duration = 250\n        , dispatch = d3.dispatch('renderEnd')\n        ;\n\n    //============================================================\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    //============================================================\n\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableLength = width - (axis === 'x' ? margin.left + margin.right : margin.top + margin.bottom),\n                naxis = axis == 'x' ? 'y' : 'x',\n                container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            //------------------------------------------------------------\n            // Setup Scales\n\n            scale0 = scale0 || scale;\n\n            //------------------------------------------------------------\n\n\n            //------------------------------------------------------------\n            // Setup containers and skeleton of chart\n\n            var wrap = container.selectAll('g.nv-distribution').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-distribution');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\n            //------------------------------------------------------------\n\n\n            var distWrap = g.selectAll('g.nv-dist')\n                .data(function(d) { return d }, function(d) { return d.key });\n\n            distWrap.enter().append('g');\n            distWrap\n                .attr('class', function(d,i) { return 'nv-dist nv-series-' + i })\n                .style('stroke', function(d,i) { return color(d, i) });\n\n            var dist = distWrap.selectAll('line.nv-dist' + axis)\n                .data(function(d) { return d.values })\n            dist.enter().append('line')\n                .attr(axis + '1', function(d,i) { return scale0(getData(d,i)) })\n                .attr(axis + '2', function(d,i) { return scale0(getData(d,i)) })\n            renderWatch.transition(distWrap.exit().selectAll('line.nv-dist' + axis), 'dist exit')\n                // .transition()\n                .attr(axis + '1', function(d,i) { return scale(getData(d,i)) })\n                .attr(axis + '2', function(d,i) { return scale(getData(d,i)) })\n                .style('stroke-opacity', 0)\n                .remove();\n            dist\n                .attr('class', function(d,i) { return 'nv-dist' + axis + ' nv-dist' + axis + '-' + i })\n                .attr(naxis + '1', 0)\n                .attr(naxis + '2', size);\n            renderWatch.transition(dist, 'dist')\n                // .transition()\n                .attr(axis + '1', function(d,i) { return scale(getData(d,i)) })\n                .attr(axis + '2', function(d,i) { return scale(getData(d,i)) })\n\n\n            scale0 = scale.copy();\n\n        });\n        renderWatch.renderEnd('distribution immediate');\n        return chart;\n    }\n\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart.dispatch = dispatch;\n\n    chart.margin = function(_) {\n        if (!arguments.length) return margin;\n        margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;\n        margin.right  = typeof _.right  != 'undefined' ? _.right  : margin.right;\n        margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n        margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;\n        return chart;\n    };\n\n    chart.width = function(_) {\n        if (!arguments.length) return width;\n        width = _;\n        return chart;\n    };\n\n    chart.axis = function(_) {\n        if (!arguments.length) return axis;\n        axis = _;\n        return chart;\n    };\n\n    chart.size = function(_) {\n        if (!arguments.length) return size;\n        size = _;\n        return chart;\n    };\n\n    chart.getData = function(_) {\n        if (!arguments.length) return getData;\n        getData = d3.functor(_);\n        return chart;\n    };\n\n    chart.scale = function(_) {\n        if (!arguments.length) return scale;\n        scale = _;\n        return chart;\n    };\n\n    chart.color = function(_) {\n        if (!arguments.length) return color;\n        color = nv.utils.getColor(_);\n        return chart;\n    };\n\n    chart.duration = function(_) {\n        if (!arguments.length) return duration;\n        duration = _;\n        renderWatch.reset(duration);\n        return chart;\n    };\n    //============================================================\n\n\n    return chart;\n}\nnv.models.focus = function(content) {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var content = content || nv.models.line()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , brush = d3.svg.brush()\n        ;\n\n    var margin = {top: 10, right: 0, bottom: 30, left: 0}\n        , color = nv.utils.defaultColor()\n        , width = null\n        , height = 70\n        , showXAxis = true\n        , showYAxis = false\n        , rightAlignYAxis = false\n        , ticks = null\n        , x\n        , y\n        , brushExtent = null\n        , duration = 250\n        , dispatch = d3.dispatch('brush', 'onBrush', 'renderEnd')\n        , syncBrushing = true\n        ;\n\n    content.interactive(false);\n    content.pointActive(function(d) { return false; });\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(content);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = height - margin.top - margin.bottom;\n\n            chart.update = function() { \n                if( duration === 0 ) {\n                    container.call( chart );\n                } else {\n                    container.transition().duration(duration).call(chart);\n                }\n            };\n            chart.container = this;\n\n            // Setup Scales\n            x = content.xScale();\n            y = content.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-focus').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-focus').append('g');\n            var g = wrap.select('g');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            gEnter.append('g').attr('class', 'nv-background').append('rect');\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis');\n            gEnter.append('g').attr('class', 'nv-contentWrap');\n            gEnter.append('g').attr('class', 'nv-brushBackground');\n            gEnter.append('g').attr('class', 'nv-x nv-brush');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            g.select('.nv-background rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n                \n            content\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled; }));\n\n            var contentWrap = g.select('.nv-contentWrap')\n                .datum(data.filter(function(d) { return !d.disabled; }));\n\n            d3.transition(contentWrap).call(content);\n            \n            // Setup Brush\n            brush\n                .x(x)\n                .on('brush', function() {\n                    onBrush(syncBrushing);\n                });\n\n            brush.on('brushend', function () {\n                if (!syncBrushing) {\n                    dispatch.onBrush(brush.empty() ? x.domain() : brush.extent());\n                }\n            });\n\n            if (brushExtent) brush.extent(brushExtent);\n\n            var brushBG = g.select('.nv-brushBackground').selectAll('g')\n                .data([brushExtent || brush.extent()]);\n    \n            var brushBGenter = brushBG.enter()\n                .append('g');\n\n            brushBGenter.append('rect')\n                .attr('class', 'left')\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('height', availableHeight);\n\n            brushBGenter.append('rect')\n                .attr('class', 'right')\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('height', availableHeight);\n\n            var gBrush = g.select('.nv-x.nv-brush')\n                .call(brush);\n            gBrush.selectAll('rect')\n                .attr('height', availableHeight);\n            gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n\n            onBrush(true);\n\n            g.select('.nv-background rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            if (showXAxis) {\n                xAxis.scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n  \n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n                d3.transition(g.select('.nv-x.nv-axis'))\n                    .call(xAxis);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                d3.transition(g.select('.nv-y.nv-axis'))\n                    .call(yAxis);\n            }\n            \n            g.select('.nv-x.nv-axis')\n                .attr('transform', 'translate(0,' + y.range()[0] + ')');\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            //============================================================\n            // Functions\n            //------------------------------------------------------------\n    \n            // Taken from crossfilter (http://square.github.com/crossfilter/)\n            function resizePath(d) {\n                var e = +(d == 'e'),\n                    x = e ? 1 : -1,\n                    y = availableHeight / 3;\n                return 'M' + (0.5 * x) + ',' + y\n                    + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6)\n                    + 'V' + (2 * y - 6)\n                    + 'A6,6 0 0 ' + e + ' ' + (0.5 * x) + ',' + (2 * y)\n                    + 'Z'\n                    + 'M' + (2.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8)\n                    + 'M' + (4.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8);\n            }\n    \n    \n            function updateBrushBG() {\n                if (!brush.empty()) brush.extent(brushExtent);\n                brushBG\n                    .data([brush.empty() ? x.domain() : brushExtent])\n                    .each(function(d,i) {\n                        var leftWidth = x(d[0]) - x.range()[0],\n                            rightWidth = availableWidth - x(d[1]);\n                        d3.select(this).select('.left')\n                            .attr('width',  leftWidth < 0 ? 0 : leftWidth);\n    \n                        d3.select(this).select('.right')\n                            .attr('x', x(d[1]))\n                            .attr('width', rightWidth < 0 ? 0 : rightWidth);\n                    });\n            }\n\n\n            function onBrush(shouldDispatch) {\n                brushExtent = brush.empty() ? null : brush.extent();\n                var extent = brush.empty() ? x.domain() : brush.extent();\n                dispatch.brush({extent: extent, brush: brush});\n                updateBrushBG();\n                if (shouldDispatch) {\n                    dispatch.onBrush(extent);\n                }\n            }\n        });\n\n        renderWatch.renderEnd('focus immediate');\n        return chart;\n    }\n\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.content = content;\n    chart.brush = brush;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        brushExtent: {get: function(){return brushExtent;}, set: function(_){brushExtent=_;}},\n        syncBrushing: {get: function(){return syncBrushing;}, set: function(_){syncBrushing=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            content.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            content.color(color);\n        }},\n        interpolate: {get: function(){return content.interpolate();}, set: function(_){\n            content.interpolate(_);\n        }},\n        xTickFormat: {get: function(){return xAxis.tickFormat();}, set: function(_){\n            xAxis.tickFormat(_);\n        }},\n        yTickFormat: {get: function(){return yAxis.tickFormat();}, set: function(_){\n            yAxis.tickFormat(_);\n        }},\n        x: {get: function(){return content.x();}, set: function(_){\n            content.x(_);\n        }},\n        y: {get: function(){return content.y();}, set: function(_){\n            content.y(_);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, content);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\nnv.models.forceDirectedGraph = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n    var margin = {top: 2, right: 0, bottom: 2, left: 0}\n        , width = 400\n        , height = 32\n        , container = null\n        , dispatch = d3.dispatch('renderEnd')\n        , color = nv.utils.getColor(['#000'])\n        , tooltip      = nv.models.tooltip()\n        , noData = null\n        // Force directed graph specific parameters [default values]\n        , linkStrength = 0.1\n        , friction = 0.9\n        , linkDist = 30\n        , charge = -120\n        , gravity = 0.1\n        , theta = 0.8\n        , alpha = 0.1\n        , radius = 5\n        // These functions allow to add extra attributes to ndes and links\n        ,nodeExtras = function(nodes) { /* Do nothing */ }\n        ,linkExtras = function(links) { /* Do nothing */ }\n        ;\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n        renderWatch.reset();\n\n        selection.each(function(data) {\n          container = d3.select(this);\n          nv.utils.initSVG(container);\n\n          var availableWidth = nv.utils.availableWidth(width, container, margin),\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n\n          container\n                  .attr(\"width\", availableWidth)\n                  .attr(\"height\", availableHeight);\n\n          // Display No Data message if there's nothing to show.\n          if (!data || !data.links || !data.nodes) {\n              nv.utils.noData(chart, container)\n              return chart;\n          } else {\n              container.selectAll('.nv-noData').remove();\n          }\n          container.selectAll('*').remove();\n\n          // Collect names of all fields in the nodes\n          var nodeFieldSet = new Set();\n          data.nodes.forEach(function(node) {\n            var keys = Object.keys(node);\n            keys.forEach(function(key) {\n              nodeFieldSet.add(key);\n            });\n          });\n\n          var force = d3.layout.force()\n                .nodes(data.nodes)\n                .links(data.links)\n                .size([availableWidth, availableHeight])\n                .linkStrength(linkStrength)\n                .friction(friction)\n                .linkDistance(linkDist)\n                .charge(charge)\n                .gravity(gravity)\n                .theta(theta)\n                .alpha(alpha)\n                .start();\n\n          var link = container.selectAll(\".link\")\n                .data(data.links)\n                .enter().append(\"line\")\n                .attr(\"class\", \"nv-force-link\")\n                .style(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n\n          var node = container.selectAll(\".node\")\n                .data(data.nodes)\n                .enter()\n                .append(\"g\")\n                .attr(\"class\", \"nv-force-node\")\n                .call(force.drag);\n\n          node\n            .append(\"circle\")\n            .attr(\"r\", radius)\n            .style(\"fill\", function(d) { return color(d) } )\n            .on(\"mouseover\", function(evt) {\n              container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex)\n                  .attr('y1', evt.py);\n              container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex)\n                  .attr('x2', evt.px);\n\n              // Add 'series' object to\n              var nodeColor = color(evt);\n              evt.series = [];\n              nodeFieldSet.forEach(function(field) {\n                evt.series.push({\n                  color: nodeColor,\n                  key:   field,\n                  value: evt[field]\n                });\n              });\n              tooltip.data(evt).hidden(false);\n            })\n            .on(\"mouseout\",  function(d) {\n              tooltip.hidden(true);\n            });\n\n          tooltip.headerFormatter(function(d) {return \"Node\";});\n\n          // Apply extra attributes to nodes and links (if any)\n          linkExtras(link);\n          nodeExtras(node);\n\n          force.on(\"tick\", function() {\n              link.attr(\"x1\", function(d) { return d.source.x; })\n                  .attr(\"y1\", function(d) { return d.source.y; })\n                  .attr(\"x2\", function(d) { return d.target.x; })\n                  .attr(\"y2\", function(d) { return d.target.y; });\n\n              node.attr(\"transform\", function(d) {\n                return \"translate(\" + d.x + \", \" + d.y + \")\";\n              });\n            });\n        });\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:     {get: function(){return width;}, set: function(_){width=_;}},\n        height:    {get: function(){return height;}, set: function(_){height=_;}},\n\n        // Force directed graph specific parameters\n        linkStrength:{get: function(){return linkStrength;}, set: function(_){linkStrength=_;}},\n        friction:    {get: function(){return friction;}, set: function(_){friction=_;}},\n        linkDist:    {get: function(){return linkDist;}, set: function(_){linkDist=_;}},\n        charge:      {get: function(){return charge;}, set: function(_){charge=_;}},\n        gravity:     {get: function(){return gravity;}, set: function(_){gravity=_;}},\n        theta:       {get: function(){return theta;}, set: function(_){theta=_;}},\n        alpha:       {get: function(){return alpha;}, set: function(_){alpha=_;}},\n        radius:      {get: function(){return radius;}, set: function(_){radius=_;}},\n\n        //functor options\n        x: {get: function(){return getX;}, set: function(_){getX=d3.functor(_);}},\n        y: {get: function(){return getY;}, set: function(_){getY=d3.functor(_);}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        nodeExtras: {get: function(){return nodeExtras;}, set: function(_){\n            nodeExtras = _;\n        }},\n        linkExtras: {get: function(){return linkExtras;}, set: function(_){\n            linkExtras = _;\n        }}\n    });\n\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n    nv.utils.initOptions(chart);\n    return chart;\n};\nnv.models.furiousLegend = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 5, right: 0, bottom: 5, left: 0}\n        , width = 400\n        , height = 20\n        , getKey = function(d) { return d.key }\n        , keyFormatter = function (d) { return d }\n        , color = nv.utils.getColor()\n        , maxKeyLength = 20 //default value for key lengths\n        , align = true\n        , padding = 28 //define how much space between legend items. - recommend 32 for furious version\n        , rightAlign = true\n        , updateState = true   //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n        , radioButtonMode = false   //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n        , expanded = false\n        , dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange')\n        , vers = 'classic' //Options are \"classic\" and \"furious\"\n        ;\n\n    function chart(selection) {\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-legend').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n            var g = wrap.select('g');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var series = g.selectAll('.nv-series')\n                .data(function(d) {\n                    if(vers != 'furious') return d;\n\n                    return d.filter(function(n) {\n                        return expanded ? true : !n.disengaged;\n                    });\n                });\n            var seriesEnter = series.enter().append('g').attr('class', 'nv-series')\n\n            var seriesShape;\n\n            if(vers == 'classic') {\n                seriesEnter.append('circle')\n                    .style('stroke-width', 2)\n                    .attr('class','nv-legend-symbol')\n                    .attr('r', 5);\n\n                seriesShape = series.select('circle');\n            } else if (vers == 'furious') {\n                seriesEnter.append('rect')\n                    .style('stroke-width', 2)\n                    .attr('class','nv-legend-symbol')\n                    .attr('rx', 3)\n                    .attr('ry', 3);\n\n                seriesShape = series.select('rect');\n\n                seriesEnter.append('g')\n                    .attr('class', 'nv-check-box')\n                    .property('innerHTML','<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>')\n                    .attr('transform', 'translate(-10,-8)scale(0.5)');\n\n                var seriesCheckbox = series.select('.nv-check-box');\n\n                seriesCheckbox.each(function(d,i) {\n                    d3.select(this).selectAll('path')\n                        .attr('stroke', setTextColor(d,i));\n                });\n            }\n\n            seriesEnter.append('text')\n                .attr('text-anchor', 'start')\n                .attr('class','nv-legend-text')\n                .attr('dy', '.32em')\n                .attr('dx', '8');\n\n            var seriesText = series.select('text.nv-legend-text');\n\n            series\n                .on('mouseover', function(d,i) {\n                    dispatch.legendMouseover(d,i);  //TODO: Make consistent with other event objects\n                })\n                .on('mouseout', function(d,i) {\n                    dispatch.legendMouseout(d,i);\n                })\n                .on('click', function(d,i) {\n                    dispatch.legendClick(d,i);\n                    // make sure we re-get data in case it was modified\n                    var data = series.data();\n                    if (updateState) {\n                        if(vers =='classic') {\n                            if (radioButtonMode) {\n                                //Radio button mode: set every series to disabled,\n                                //  and enable the clicked series.\n                                data.forEach(function(series) { series.disabled = true});\n                                d.disabled = false;\n                            }\n                            else {\n                                d.disabled = !d.disabled;\n                                if (data.every(function(series) { return series.disabled})) {\n                                    //the default behavior of NVD3 legends is, if every single series\n                                    // is disabled, turn all series' back on.\n                                    data.forEach(function(series) { series.disabled = false});\n                                }\n                            }\n                        } else if(vers == 'furious') {\n                            if(expanded) {\n                                d.disengaged = !d.disengaged;\n                                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                                d.disabled = d.disengaged || d.userDisabled;\n                            } else if (!expanded) {\n                                d.disabled = !d.disabled;\n                                d.userDisabled = d.disabled;\n                                var engaged = data.filter(function(d) { return !d.disengaged; });\n                                if (engaged.every(function(series) { return series.userDisabled })) {\n                                    //the default behavior of NVD3 legends is, if every single series\n                                    // is disabled, turn all series' back on.\n                                    data.forEach(function(series) {\n                                        series.disabled = series.userDisabled = false;\n                                    });\n                                }\n                            }\n                        }\n                        dispatch.stateChange({\n                            disabled: data.map(function(d) { return !!d.disabled }),\n                            disengaged: data.map(function(d) { return !!d.disengaged })\n                        });\n\n                    }\n                })\n                .on('dblclick', function(d,i) {\n                    if(vers == 'furious' && expanded) return;\n                    dispatch.legendDblclick(d,i);\n                    if (updateState) {\n                        // make sure we re-get data in case it was modified\n                        var data = series.data();\n                        //the default behavior of NVD3 legends, when double clicking one,\n                        // is to set all other series' to false, and make the double clicked series enabled.\n                        data.forEach(function(series) {\n                            series.disabled = true;\n                            if(vers == 'furious') series.userDisabled = series.disabled;\n                        });\n                        d.disabled = false;\n                        if(vers == 'furious') d.userDisabled = d.disabled;\n                        dispatch.stateChange({\n                            disabled: data.map(function(d) { return !!d.disabled })\n                        });\n                    }\n                });\n\n            series.classed('nv-disabled', function(d) { return d.userDisabled });\n            series.exit().remove();\n\n            seriesText\n                .attr('fill', setTextColor)\n                .text(function (d) { return keyFormatter(getKey(d)) });\n\n            //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n            // NEW ALIGNING CODE, TODO: clean up\n\n            var versPadding;\n            switch(vers) {\n                case 'furious' :\n                    versPadding = 23;\n                    break;\n                case 'classic' :\n                    versPadding = 20;\n            }\n\n            if (align) {\n\n                var seriesWidths = [];\n                series.each(function(d,i) {\n                    var legendText;\n                    if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n                        var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n                        legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n                        d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n                    } else {\n                        legendText = d3.select(this).select('text');\n                    }\n                    var nodeTextLength;\n                    try {\n                        nodeTextLength = legendText.node().getComputedTextLength();\n                        // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n                        if(nodeTextLength <= 0) throw Error();\n                    }\n                    catch(e) {\n                        nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n                    }\n\n                    seriesWidths.push(nodeTextLength + padding);\n                });\n\n                var seriesPerRow = 0;\n                var legendWidth = 0;\n                var columnWidths = [];\n\n                while ( legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n                    columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n                    legendWidth += seriesWidths[seriesPerRow++];\n                }\n                if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n                while ( legendWidth > availableWidth && seriesPerRow > 1 ) {\n                    columnWidths = [];\n                    seriesPerRow--;\n\n                    for (var k = 0; k < seriesWidths.length; k++) {\n                        if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0) )\n                            columnWidths[k % seriesPerRow] = seriesWidths[k];\n                    }\n\n                    legendWidth = columnWidths.reduce(function(prev, cur, index, array) {\n                        return prev + cur;\n                    });\n                }\n\n                var xPositions = [];\n                for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n                    xPositions[i] = curX;\n                    curX += columnWidths[i];\n                }\n\n                series\n                    .attr('transform', function(d, i) {\n                        return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n                    });\n\n                //position legend as far right as possible within the total width\n                if (rightAlign) {\n                    g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n                }\n                else {\n                    g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n                }\n\n                height = margin.top + margin.bottom + (Math.ceil(seriesWidths.length / seriesPerRow) * versPadding);\n\n            } else {\n\n                var ypos = 5,\n                    newxpos = 5,\n                    maxwidth = 0,\n                    xpos;\n                series\n                    .attr('transform', function(d, i) {\n                        var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n                        xpos = newxpos;\n\n                        if (width < margin.left + margin.right + xpos + length) {\n                            newxpos = xpos = 5;\n                            ypos += versPadding;\n                        }\n\n                        newxpos += length;\n                        if (newxpos > maxwidth) maxwidth = newxpos;\n\n                        return 'translate(' + xpos + ',' + ypos + ')';\n                    });\n\n                //position legend as far right as possible within the total width\n                g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n\n                height = margin.top + margin.bottom + ypos + 15;\n            }\n\n            if(vers == 'furious') {\n                // Size rectangles after text is placed\n                seriesShape\n                    .attr('width', function(d,i) {\n                        return seriesText[0][i].getComputedTextLength() + 27;\n                    })\n                    .attr('height', 18)\n                    .attr('y', -9)\n                    .attr('x', -15)\n            }\n\n            seriesShape\n                .style('fill', setBGColor)\n                .style('stroke', function(d,i) { return d.color || color(d, i) });\n        });\n\n        function setTextColor(d,i) {\n            if(vers != 'furious') return '#000';\n            if(expanded) {\n                return d.disengaged ? color(d,i) : '#fff';\n            } else if (!expanded) {\n                return !!d.disabled ? color(d,i) : '#fff';\n            }\n        }\n\n        function setBGColor(d,i) {\n            if(expanded && vers == 'furious') {\n                return d.disengaged ? '#fff' : color(d,i);\n            } else {\n                return !!d.disabled ? '#fff' : color(d,i);\n            }\n        }\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:          {get: function(){return width;}, set: function(_){width=_;}},\n        height:         {get: function(){return height;}, set: function(_){height=_;}},\n        key:            {get: function(){return getKey;}, set: function(_){getKey=_;}},\n        keyFormatter:   {get: function(){return keyFormatter;}, set: function(_){keyFormatter=_;}},\n        align:          {get: function(){return align;}, set: function(_){align=_;}},\n        rightAlign:     {get: function(){return rightAlign;}, set: function(_){rightAlign=_;}},\n        maxKeyLength:   {get: function(){return maxKeyLength;}, set: function(_){maxKeyLength=_;}},\n        padding:        {get: function(){return padding;}, set: function(_){padding=_;}},\n        updateState:    {get: function(){return updateState;}, set: function(_){updateState=_;}},\n        radioButtonMode:{get: function(){return radioButtonMode;}, set: function(_){radioButtonMode=_;}},\n        expanded:       {get: function(){return expanded;}, set: function(_){expanded=_;}},\n        vers:           {get: function(){return vers;}, set: function(_){vers=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n//TODO: consider deprecating and using multibar with single series for this\nnv.models.historicalBar = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = null\n        , height = null\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , x = d3.scale.linear()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , forceX = []\n        , forceY = [0]\n        , padData = false\n        , clipEdge = true\n        , color = nv.utils.defaultColor()\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n        , interactive = true\n        ;\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n        selection.each(function(data) {\n            renderWatch.reset();\n\n            container = d3.select(this);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            nv.utils.initSVG(container);\n\n            // Setup Scales\n            x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX) ));\n\n            if (padData)\n                x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n            else\n                x.range(xRange || [0, availableWidth]);\n\n            y.domain(yDomain || d3.extent(data[0].values.map(getY).concat(forceY) ))\n                .range(yRange || [availableHeight, 0]);\n\n            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n            if (x.domain()[0] === x.domain()[1])\n                x.domain()[0] ?\n                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n                    : x.domain([-1,1]);\n\n            if (y.domain()[0] === y.domain()[1])\n                y.domain()[0] ?\n                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n                    : y.domain([-1,1]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-historicalBar-' + id).data([data[0].values]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBar-' + id);\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-bars');\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            container\n                .on('click', function(d,i) {\n                    dispatch.chartClick({\n                        data: d,\n                        index: i,\n                        pos: d3.event,\n                        id: id\n                    });\n                });\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-chart-clip-path-' + id)\n                .append('rect');\n\n            wrap.select('#nv-chart-clip-path-' + id + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n\n            var bars = wrap.select('.nv-bars').selectAll('.nv-bar')\n                .data(function(d) { return d }, function(d,i) {return getX(d,i)});\n            bars.exit().remove();\n\n            bars.enter().append('rect')\n                .attr('x', 0 )\n                .attr('y', function(d,i) {  return nv.utils.NaNtoZero(y(Math.max(0, getY(d,i)))) })\n                .attr('height', function(d,i) { return nv.utils.NaNtoZero(Math.abs(y(getY(d,i)) - y(0))) })\n                .attr('transform', function(d,i) { return 'translate(' + (x(getX(d,i)) - availableWidth / data[0].values.length * .45) + ',0)'; })\n                .on('mouseover', function(d,i) {\n                    if (!interactive) return;\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n\n                })\n                .on('mouseout', function(d,i) {\n                    if (!interactive) return;\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    if (!interactive) return;\n                    dispatch.elementMousemove({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('click', function(d,i) {\n                    if (!interactive) return;\n                    var element = this;\n                    dispatch.elementClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\"),\n                        event: d3.event,\n                        element: element\n                    });\n                    d3.event.stopPropagation();\n                })\n                .on('dblclick', function(d,i) {\n                    if (!interactive) return;\n                    dispatch.elementDblClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                    d3.event.stopPropagation();\n                });\n\n            bars\n                .attr('fill', function(d,i) { return color(d, i); })\n                .attr('class', function(d,i,j) { return (getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive') + ' nv-bar-' + j + '-' + i })\n                .watchTransition(renderWatch, 'bars')\n                .attr('transform', function(d,i) { return 'translate(' + (x(getX(d,i)) - availableWidth / data[0].values.length * .45) + ',0)'; })\n                //TODO: better width calculations that don't assume always uniform data spacing;w\n                .attr('width', (availableWidth / data[0].values.length) * .9 );\n\n            bars.watchTransition(renderWatch, 'bars')\n                .attr('y', function(d,i) {\n                    var rval = getY(d,i) < 0 ?\n                        y(0) :\n                            y(0) - y(getY(d,i)) < 1 ?\n                        y(0) - 1 :\n                        y(getY(d,i));\n                    return nv.utils.NaNtoZero(rval);\n                })\n                .attr('height', function(d,i) { return nv.utils.NaNtoZero(Math.max(Math.abs(y(getY(d,i)) - y(0)),1)) });\n\n        });\n\n        renderWatch.renderEnd('historicalBar immediate');\n        return chart;\n    }\n\n    //Create methods to allow outside functions to highlight a specific bar.\n    chart.highlightPoint = function(pointIndex, isHoverOver) {\n        container\n            .select(\".nv-bars .nv-bar-0-\" + pointIndex)\n            .classed(\"hover\", isHoverOver)\n        ;\n    };\n\n    chart.clearHighlights = function() {\n        container\n            .select(\".nv-bars .nv-bar.hover\")\n            .classed(\"hover\", false)\n        ;\n    };\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:   {get: function(){return width;}, set: function(_){width=_;}},\n        height:  {get: function(){return height;}, set: function(_){height=_;}},\n        forceX:  {get: function(){return forceX;}, set: function(_){forceX=_;}},\n        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        padData: {get: function(){return padData;}, set: function(_){padData=_;}},\n        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        clipEdge:    {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        id:          {get: function(){return id;}, set: function(_){id=_;}},\n        interactive: {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.historicalBarChart = function(bar_model) {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bars = bar_model || nv.models.historicalBar()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , legend = nv.models.legend()\n        , interactiveLayer = nv.interactiveGuideline()\n        , tooltip = nv.models.tooltip()\n        ;\n\n\n    var margin = {top: 30, right: 90, bottom: 50, left: 90}\n        , marginTop = null\n        , color = nv.utils.defaultColor()\n        , width = null\n        , height = null\n        , showLegend = false\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , useInteractiveGuideline = false\n        , x\n        , y\n        , state = {}\n        , defaultState = null\n        , noData = null\n        , dispatch = d3.dispatch('tooltipHide', 'stateChange', 'changeState', 'renderEnd')\n        , transitionDuration = 250\n        ;\n\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient( (rightAlignYAxis) ? 'right' : 'left');\n    tooltip\n        .duration(0)\n        .headerEnabled(false)\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        })\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n        selection.each(function(data) {\n            renderWatch.reset();\n            renderWatch.models(bars);\n            if (showXAxis) renderWatch.models(xAxis);\n            if (showYAxis) renderWatch.models(yAxis);\n\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() { container.transition().duration(transitionDuration).call(chart) };\n            chart.container = this;\n\n            //set state.disabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display noData message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = bars.xScale();\n            y = bars.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-historicalBarChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBarChart').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis');\n            gEnter.append('g').attr('class', 'nv-barsWrap');\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n            gEnter.append('g').attr('class', 'nv-interactive');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth);\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                wrap.select('.nv-legendWrap')\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n            }\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            //Set up interactive layer\n            if (useInteractiveGuideline) {\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left:margin.left, top:margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n            bars\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled }));\n\n            var barsWrap = g.select('.nv-barsWrap')\n                .datum(data.filter(function(d) { return !d.disabled }));\n            barsWrap.transition().call(bars);\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n\n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n                g.select('.nv-x.nv-axis')\n                    .transition()\n                    .call(xAxis);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis')\n                    .transition()\n                    .call(yAxis);\n            }\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                bars.clearHighlights();\n\n                var singlePoint, pointIndex, pointXLocation, allData = [];\n                data\n                    .filter(function(series, i) {\n                        series.seriesIndex = i;\n                        return !series.disabled;\n                    })\n                    .forEach(function(series,i) {\n                        pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n                        bars.highlightPoint(pointIndex,true);\n                        var point = series.values[pointIndex];\n                        if (point === undefined) return;\n                        if (singlePoint === undefined) singlePoint = point;\n                        if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n                        allData.push({\n                            key: series.key,\n                            value: chart.y()(point, pointIndex),\n                            color: color(series,series.seriesIndex),\n                            data: series.values[pointIndex]\n                        });\n                    });\n\n                var xValue = xAxis.tickFormat()(chart.x()(singlePoint,pointIndex));\n                interactiveLayer.tooltip\n                    .valueFormatter(function(d,i) {\n                        return yAxis.tickFormat()(d);\n                    })\n                    .data({\n                        value: xValue,\n                        index: pointIndex,\n                        series: allData\n                    })();\n\n                interactiveLayer.renderGuideLine(pointXLocation);\n\n            });\n\n            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                dispatch.tooltipHide();\n                bars.clearHighlights();\n            });\n\n            legend.dispatch.on('legendClick', function(d,i) {\n                d.disabled = !d.disabled;\n\n                if (!data.filter(function(d) { return !d.disabled }).length) {\n                    data.map(function(d) {\n                        d.disabled = false;\n                        wrap.selectAll('.nv-series').classed('disabled', false);\n                        return d;\n                    });\n                }\n\n                state.disabled = data.map(function(d) { return !!d.disabled });\n                dispatch.stateChange(state);\n\n                selection.transition().call(chart);\n            });\n\n            legend.dispatch.on('legendDblclick', function(d) {\n                //Double clicking should always enable current series, and disabled all others.\n                data.forEach(function(d) {\n                    d.disabled = true;\n                });\n                d.disabled = false;\n\n                state.disabled = data.map(function(d) { return !!d.disabled });\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n\n                    state.disabled = e.disabled;\n                }\n\n                chart.update();\n            });\n        });\n\n        renderWatch.renderEnd('historicalBarChart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    bars.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt['series'] = {\n            key: chart.x()(evt.data),\n            value: chart.y()(evt.data),\n            color: evt.color\n        };\n        tooltip.data(evt).hidden(false);\n    });\n\n    bars.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    bars.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.bars = bars;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        showXAxis: {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis: {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n            bars.color(color);\n        }},\n        duration:    {get: function(){return transitionDuration;}, set: function(_){\n            transitionDuration=_;\n            renderWatch.reset(transitionDuration);\n            yAxis.duration(transitionDuration);\n            xAxis.duration(transitionDuration);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( (_) ? 'right' : 'left');\n        }},\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = _;\n            if (_ === true) {\n                chart.interactive(false);\n            }\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, bars);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\n\n// ohlcChart is just a historical chart with ohlc bars and some tweaks\nnv.models.ohlcBarChart = function() {\n    var chart = nv.models.historicalBarChart(nv.models.ohlcBar());\n\n    // special default tooltip since we show multiple values per x\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function(data) {\n        // we assume only one series exists for this chart\n        var d = data.series[0].data;\n        // match line colors as defined in nv.d3.css\n        var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n        return '' +\n            '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' +\n            '<table>' +\n            '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' +\n            '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' +\n            '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' +\n            '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' +\n            '</table>';\n    });\n    return chart;\n};\n\n// candlestickChart is just a historical chart with candlestick bars and some tweaks\nnv.models.candlestickBarChart = function() {\n    var chart = nv.models.historicalBarChart(nv.models.candlestickBar());\n\n    // special default tooltip since we show multiple values per x\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function(data) {\n        // we assume only one series exists for this chart\n        var d = data.series[0].data;\n        // match line colors as defined in nv.d3.css\n        var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n        return '' +\n            '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' +\n            '<table>' +\n            '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' +\n            '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' +\n            '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' +\n            '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' +\n            '</table>';\n    });\n    return chart;\n};\nnv.models.legend = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 5, right: 0, bottom: 5, left: 0}\n        , width = 400\n        , height = 20\n        , getKey = function(d) { return d.key }\n        , keyFormatter = function (d) { return d }\n        , color = nv.utils.getColor()\n        , maxKeyLength = 20 //default value for key lengths\n        , align = true\n        , padding = 32 //define how much space between legend items. - recommend 32 for furious version\n        , rightAlign = true\n        , updateState = true   //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n        , radioButtonMode = false   //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n        , expanded = false\n        , dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange')\n        , vers = 'classic' //Options are \"classic\" and \"furious\"\n        ;\n\n    function chart(selection) {\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-legend').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n            var g = wrap.select('g');\n\n            if (rightAlign)\n                wrap.attr('transform', 'translate(' + (- margin.right) + ',' + margin.top + ')');\n            else\n                wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var series = g.selectAll('.nv-series')\n                .data(function(d) {\n                    if(vers != 'furious') return d;\n\n                    return d.filter(function(n) {\n                        return expanded ? true : !n.disengaged;\n                    });\n                });\n\n            var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n            var seriesShape;\n\n            var versPadding;\n            switch(vers) {\n                case 'furious' :\n                    versPadding = 23;\n                    break;\n                case 'classic' :\n                    versPadding = 20;\n            }\n\n            if(vers == 'classic') {\n                seriesEnter.append('circle')\n                    .style('stroke-width', 2)\n                    .attr('class','nv-legend-symbol')\n                    .attr('r', 5);\n\n                seriesShape = series.select('.nv-legend-symbol');\n            } else if (vers == 'furious') {\n                seriesEnter.append('rect')\n                    .style('stroke-width', 2)\n                    .attr('class','nv-legend-symbol')\n                    .attr('rx', 3)\n                    .attr('ry', 3);\n                seriesShape = series.select('.nv-legend-symbol');\n\n                seriesEnter.append('g')\n                    .attr('class', 'nv-check-box')\n                    .property('innerHTML','<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>')\n                    .attr('transform', 'translate(-10,-8)scale(0.5)');\n\n                var seriesCheckbox = series.select('.nv-check-box');\n\n                seriesCheckbox.each(function(d,i) {\n                    d3.select(this).selectAll('path')\n                        .attr('stroke', setTextColor(d,i));\n                });\n            }\n\n            seriesEnter.append('text')\n                .attr('text-anchor', 'start')\n                .attr('class','nv-legend-text')\n                .attr('dy', '.32em')\n                .attr('dx', '8');\n\n            var seriesText = series.select('text.nv-legend-text');\n\n            series\n                .on('mouseover', function(d,i) {\n                    dispatch.legendMouseover(d,i);  //TODO: Make consistent with other event objects\n                })\n                .on('mouseout', function(d,i) {\n                    dispatch.legendMouseout(d,i);\n                })\n                .on('click', function(d,i) {\n                    dispatch.legendClick(d,i);\n                    // make sure we re-get data in case it was modified\n                    var data = series.data();\n                    if (updateState) {\n                        if(vers =='classic') {\n                            if (radioButtonMode) {\n                                //Radio button mode: set every series to disabled,\n                                //  and enable the clicked series.\n                                data.forEach(function(series) { series.disabled = true});\n                                d.disabled = false;\n                            }\n                            else {\n                                d.disabled = !d.disabled;\n                                if (data.every(function(series) { return series.disabled})) {\n                                    //the default behavior of NVD3 legends is, if every single series\n                                    // is disabled, turn all series' back on.\n                                    data.forEach(function(series) { series.disabled = false});\n                                }\n                            }\n                        } else if(vers == 'furious') {\n                            if(expanded) {\n                                d.disengaged = !d.disengaged;\n                                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                                d.disabled = d.disengaged || d.userDisabled;\n                            } else if (!expanded) {\n                                d.disabled = !d.disabled;\n                                d.userDisabled = d.disabled;\n                                var engaged = data.filter(function(d) { return !d.disengaged; });\n                                if (engaged.every(function(series) { return series.userDisabled })) {\n                                    //the default behavior of NVD3 legends is, if every single series\n                                    // is disabled, turn all series' back on.\n                                    data.forEach(function(series) {\n                                        series.disabled = series.userDisabled = false;\n                                    });\n                                }\n                            }\n                        }\n                        dispatch.stateChange({\n                            disabled: data.map(function(d) { return !!d.disabled }),\n                            disengaged: data.map(function(d) { return !!d.disengaged })\n                        });\n\n                    }\n                })\n                .on('dblclick', function(d,i) {\n                    if(vers == 'furious' && expanded) return;\n                    dispatch.legendDblclick(d,i);\n                    if (updateState) {\n                        // make sure we re-get data in case it was modified\n                        var data = series.data();\n                        //the default behavior of NVD3 legends, when double clicking one,\n                        // is to set all other series' to false, and make the double clicked series enabled.\n                        data.forEach(function(series) {\n                            series.disabled = true;\n                            if(vers == 'furious') series.userDisabled = series.disabled;\n                        });\n                        d.disabled = false;\n                        if(vers == 'furious') d.userDisabled = d.disabled;\n                        dispatch.stateChange({\n                            disabled: data.map(function(d) { return !!d.disabled })\n                        });\n                    }\n                });\n\n            series.classed('nv-disabled', function(d) { return d.userDisabled });\n            series.exit().remove();\n\n            seriesText\n                .attr('fill', setTextColor)\n                .text(function (d) { return keyFormatter(getKey(d)) });\n\n            //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n            // NEW ALIGNING CODE, TODO: clean up\n            var legendWidth = 0;\n            if (align) {\n\n                var seriesWidths = [];\n                series.each(function(d,i) {\n                    var legendText;\n                    if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n                        var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n                        legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n                        d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n                    } else {\n                        legendText = d3.select(this).select('text');\n                    }\n                    var nodeTextLength;\n                    try {\n                        nodeTextLength = legendText.node().getComputedTextLength();\n                        // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n                        if(nodeTextLength <= 0) throw Error();\n                    }\n                    catch(e) {\n                        nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n                    }\n\n                    seriesWidths.push(nodeTextLength + padding);\n                });\n\n                var seriesPerRow = 0;\n                var columnWidths = [];\n                legendWidth = 0;\n\n                while ( legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n                    columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n                    legendWidth += seriesWidths[seriesPerRow++];\n                }\n                if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n                while ( legendWidth > availableWidth && seriesPerRow > 1 ) {\n                    columnWidths = [];\n                    seriesPerRow--;\n\n                    for (var k = 0; k < seriesWidths.length; k++) {\n                        if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0) )\n                            columnWidths[k % seriesPerRow] = seriesWidths[k];\n                    }\n\n                    legendWidth = columnWidths.reduce(function(prev, cur, index, array) {\n                        return prev + cur;\n                    });\n                }\n\n                var xPositions = [];\n                for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n                    xPositions[i] = curX;\n                    curX += columnWidths[i];\n                }\n\n                series\n                    .attr('transform', function(d, i) {\n                        return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n                    });\n\n                //position legend as far right as possible within the total width\n                if (rightAlign) {\n                    g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n                }\n                else {\n                    g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n                }\n\n                height = margin.top + margin.bottom + (Math.ceil(seriesWidths.length / seriesPerRow) * versPadding);\n\n            } else {\n\n                var ypos = 5,\n                    newxpos = 5,\n                    maxwidth = 0,\n                    xpos;\n                series\n                    .attr('transform', function(d, i) {\n                        var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n                        xpos = newxpos;\n\n                        if (width < margin.left + margin.right + xpos + length) {\n                            newxpos = xpos = 5;\n                            ypos += versPadding;\n                        }\n\n                        newxpos += length;\n                        if (newxpos > maxwidth) maxwidth = newxpos;\n\n                        if(legendWidth < xpos + maxwidth) {\n                            legendWidth = xpos + maxwidth;\n                        }\n                        return 'translate(' + xpos + ',' + ypos + ')';\n                    });\n\n                //position legend as far right as possible within the total width\n                g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n\n                height = margin.top + margin.bottom + ypos + 15;\n            }\n\n            if(vers == 'furious') {\n                // Size rectangles after text is placed\n                seriesShape\n                    .attr('width', function(d,i) {\n                        return seriesText[0][i].getComputedTextLength() + 27;\n                    })\n                    .attr('height', 18)\n                    .attr('y', -9)\n                    .attr('x', -15);\n\n                // The background for the expanded legend (UI)\n                gEnter.insert('rect',':first-child')\n                    .attr('class', 'nv-legend-bg')\n                    .attr('fill', '#eee')\n                    // .attr('stroke', '#444')\n                    .attr('opacity',0);\n\n                var seriesBG = g.select('.nv-legend-bg');\n\n                seriesBG\n                .transition().duration(300)\n                    .attr('x', -versPadding )\n                    .attr('width', legendWidth + versPadding - 12)\n                    .attr('height', height + 10)\n                    .attr('y', -margin.top - 10)\n                    .attr('opacity', expanded ? 1 : 0);\n\n\n            }\n\n            seriesShape\n                .style('fill', setBGColor)\n                .style('fill-opacity', setBGOpacity)\n                .style('stroke', setBGColor);\n        });\n\n        function setTextColor(d,i) {\n            if(vers != 'furious') return '#000';\n            if(expanded) {\n                return d.disengaged ? '#000' : '#fff';\n            } else if (!expanded) {\n                if(!d.color) d.color = color(d,i);\n                return !!d.disabled ? d.color : '#fff';\n            }\n        }\n\n        function setBGColor(d,i) {\n            if(expanded && vers == 'furious') {\n                return d.disengaged ? '#eee' : d.color || color(d,i);\n            } else {\n                return d.color || color(d,i);\n            }\n        }\n\n\n        function setBGOpacity(d,i) {\n            if(expanded && vers == 'furious') {\n                return 1;\n            } else {\n                return !!d.disabled ? 0 : 1;\n            }\n        }\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:          {get: function(){return width;}, set: function(_){width=_;}},\n        height:         {get: function(){return height;}, set: function(_){height=_;}},\n        key:            {get: function(){return getKey;}, set: function(_){getKey=_;}},\n        keyFormatter:   {get: function(){return keyFormatter;}, set: function(_){keyFormatter=_;}},\n        align:          {get: function(){return align;}, set: function(_){align=_;}},\n        maxKeyLength:   {get: function(){return maxKeyLength;}, set: function(_){maxKeyLength=_;}},\n        rightAlign:     {get: function(){return rightAlign;}, set: function(_){rightAlign=_;}},\n        padding:        {get: function(){return padding;}, set: function(_){padding=_;}},\n        updateState:    {get: function(){return updateState;}, set: function(_){updateState=_;}},\n        radioButtonMode:{get: function(){return radioButtonMode;}, set: function(_){radioButtonMode=_;}},\n        expanded:       {get: function(){return expanded;}, set: function(_){expanded=_;}},\n        vers:           {get: function(){return vers;}, set: function(_){vers=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.line = function() {\n    \"use strict\";\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var  scatter = nv.models.scatter()\n        ;\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 960\n        , height = 500\n        , container = null\n        , strokeWidth = 1.5\n        , color = nv.utils.defaultColor() // a function that returns a color\n        , getX = function(d) { return d.x } // accessor to get the x value from a data point\n        , getY = function(d) { return d.y } // accessor to get the y value from a data point\n        , defined = function(d,i) { return !isNaN(getY(d,i)) && getY(d,i) !== null } // allows a line to be not continuous when it is not defined\n        , isArea = function(d) { return d.area } // decides if a line is an area or just a line\n        , clipEdge = false // if true, masks lines within x and y scale\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , interpolate = \"linear\" // controls the line interpolation\n        , duration = 250\n        , dispatch = d3.dispatch('elementClick', 'elementMouseover', 'elementMouseout', 'renderEnd')\n        ;\n\n    scatter\n        .pointSize(16) // default size\n        .pointDomain([16,256]) //set to speed up calculation, needs to be unset if there is a custom size accessor\n    ;\n\n    //============================================================\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0 //used to store previous scales\n        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n        ;\n\n    //============================================================\n\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(scatter);\n        selection.each(function(data) {\n            container = d3.select(this);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n            nv.utils.initSVG(container);\n\n            // Setup Scales\n            x = scatter.xScale();\n            y = scatter.yScale();\n\n            x0 = x0 || x;\n            y0 = y0 || y;\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-line').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-line');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-groups');\n            gEnter.append('g').attr('class', 'nv-scatterWrap');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            scatter\n                .width(availableWidth)\n                .height(availableHeight);\n\n            var scatterWrap = wrap.select('.nv-scatterWrap');\n            scatterWrap.call(scatter);\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-edge-clip-' + scatter.id())\n                .append('rect');\n\n            wrap.select('#nv-edge-clip-' + scatter.id() + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', (availableHeight > 0) ? availableHeight : 0);\n\n            g   .attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n            scatterWrap\n                .attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n\n            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n                .data(function(d) { return d }, function(d) { return d.key });\n            groups.enter().append('g')\n                .style('stroke-opacity', 1e-6)\n                .style('stroke-width', function(d) { return d.strokeWidth || strokeWidth })\n                .style('fill-opacity', 1e-6);\n\n            groups.exit().remove();\n\n            groups\n                .attr('class', function(d,i) {\n                    return (d.classed || '') + ' nv-group nv-series-' + i;\n                })\n                .classed('hover', function(d) { return d.hover })\n                .style('fill', function(d,i){ return color(d, i) })\n                .style('stroke', function(d,i){ return color(d, i)});\n            groups.watchTransition(renderWatch, 'line: groups')\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', function(d) { return d.fillOpacity || .5});\n\n            var areaPaths = groups.selectAll('path.nv-area')\n                .data(function(d) { return isArea(d) ? [d] : [] }); // this is done differently than lines because I need to check if series is an area\n            areaPaths.enter().append('path')\n                .attr('class', 'nv-area')\n                .attr('d', function(d) {\n                    return d3.svg.area()\n                        .interpolate(interpolate)\n                        .defined(defined)\n                        .x(function(d,i) { return nv.utils.NaNtoZero(x0(getX(d,i))) })\n                        .y0(function(d,i) { return nv.utils.NaNtoZero(y0(getY(d,i))) })\n                        .y1(function(d,i) { return y0( y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0] ) })\n                        //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n                        .apply(this, [d.values])\n                });\n            groups.exit().selectAll('path.nv-area')\n                .remove();\n\n            areaPaths.watchTransition(renderWatch, 'line: areaPaths')\n                .attr('d', function(d) {\n                    return d3.svg.area()\n                        .interpolate(interpolate)\n                        .defined(defined)\n                        .x(function(d,i) { return nv.utils.NaNtoZero(x(getX(d,i))) })\n                        .y0(function(d,i) { return nv.utils.NaNtoZero(y(getY(d,i))) })\n                        .y1(function(d,i) { return y( y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0] ) })\n                        //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n                        .apply(this, [d.values])\n                });\n\n            var linePaths = groups.selectAll('path.nv-line')\n                .data(function(d) { return [d.values] });\n\n            linePaths.enter().append('path')\n                .attr('class', 'nv-line')\n                .attr('d',\n                    d3.svg.line()\n                    .interpolate(interpolate)\n                    .defined(defined)\n                    .x(function(d,i) { return nv.utils.NaNtoZero(x0(getX(d,i))) })\n                    .y(function(d,i) { return nv.utils.NaNtoZero(y0(getY(d,i))) })\n            );\n\n            linePaths.watchTransition(renderWatch, 'line: linePaths')\n                .attr('d',\n                    d3.svg.line()\n                    .interpolate(interpolate)\n                    .defined(defined)\n                    .x(function(d,i) { return nv.utils.NaNtoZero(x(getX(d,i))) })\n                    .y(function(d,i) { return nv.utils.NaNtoZero(y(getY(d,i))) })\n            );\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n        });\n        renderWatch.renderEnd('line immediate');\n        return chart;\n    }\n\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    // Pass through events\n    scatter.dispatch.on('elementClick', function(){ dispatch.elementClick.apply(this, arguments); });\n    scatter.dispatch.on('elementMouseover', function(){ dispatch.elementMouseover.apply(this, arguments); });\n    scatter.dispatch.on('elementMouseout', function(){ dispatch.elementMouseout.apply(this, arguments); });\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        defined: {get: function(){return defined;}, set: function(_){defined=_;}},\n        interpolate:      {get: function(){return interpolate;}, set: function(_){interpolate=_;}},\n        clipEdge:    {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            scatter.duration(duration);\n        }},\n        isArea: {get: function(){return isArea;}, set: function(_){\n            isArea = d3.functor(_);\n        }},\n        x: {get: function(){return getX;}, set: function(_){\n            getX = _;\n            scatter.x(_);\n        }},\n        y: {get: function(){return getY;}, set: function(_){\n            getY = _;\n            scatter.y(_);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            scatter.color(color);\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\nnv.models.lineChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , legend = nv.models.legend()\n        , interactiveLayer = nv.interactiveGuideline()\n        , tooltip = nv.models.tooltip()\n        , focus = nv.models.focus(nv.models.line())\n        ;\n\n    var margin = {top: 30, right: 20, bottom: 50, left: 60}\n        , marginTop = null\n        , color = nv.utils.defaultColor()\n        , width = null\n        , height = null\n        , showLegend = true\n        , legendPosition = 'top'\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , useInteractiveGuideline = false\n        , x\n        , y\n        , focusEnable = false\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , dispatch = d3.dispatch('tooltipShow', 'tooltipHide', 'stateChange', 'changeState', 'renderEnd')\n        , duration = 250\n        ;\n\n    // set options on sub-objects for this chart\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n\n    lines.clipEdge(true).duration(0);\n\n    tooltip.valueFormatter(function(d, i) {\n        return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function(d, i) {\n        return xAxis.tickFormat()(d, i);\n    });\n\n    interactiveLayer.tooltip.valueFormatter(function(d, i) {\n        return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function(d, i) {\n        return xAxis.tickFormat()(d, i);\n    });\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled; })\n            };\n        };\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        };\n    };\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(lines);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            chart.update = function() {\n                if( duration === 0 ) {\n                    container.call( chart );\n                } else {\n                    container.transition().duration(duration).call(chart);\n                }\n            };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disabled\n            state.disabled = data.map(function(d) { return !!d.disabled; });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display noData message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length; }).length) {\n                nv.utils.noData(chart, container);\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            /* Update `main' graph on brush update. */\n            focus.dispatch.on(\"onBrush\", function(extent) {\n                onBrush(extent);\n            });\n\n            // Setup Scales\n            x = lines.xScale();\n            y = lines.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-lineChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-lineChart').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n\n            var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n            focusEnter.append('g').attr('class', 'nv-background').append('rect');\n            focusEnter.append('g').attr('class', 'nv-x nv-axis');\n            focusEnter.append('g').attr('class', 'nv-y nv-axis');\n            focusEnter.append('g').attr('class', 'nv-linesWrap');\n            focusEnter.append('g').attr('class', 'nv-interactive');\n\n            var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth);\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (legendPosition === 'bottom') {\n                    wrap.select('.nv-legendWrap')\n                        .attr('transform', 'translate(0,' + availableHeight +')');\n                } else if (legendPosition === 'top') {\n                    if (!marginTop && legend.height() !== margin.top) {\n                        margin.top = legend.height();\n                        availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n                    }\n\n                    wrap.select('.nv-legendWrap')\n                        .attr('transform', 'translate(0,' + (-margin.top) +')');\n                }\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            //Set up interactive layer\n            if (useInteractiveGuideline) {\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left:margin.left, top:margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n\n            g.select('.nv-focus .nv-background rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            lines\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled; }));\n\n            var linesWrap = g.select('.nv-linesWrap')\n                .datum(data.filter(function(d) { return !d.disabled; }));\n\n\n            // Setup Main (Focus) Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks(nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n            }\n\n            //============================================================\n            // Update Axes\n            //============================================================\n            function updateXAxis() {\n              if(showXAxis) {\n                g.select('.nv-focus .nv-x.nv-axis')\n                  .transition()\n                  .duration(duration)\n                  .call(xAxis)\n                ;\n              }\n            }\n\n            function updateYAxis() {\n              if(showYAxis) {\n                g.select('.nv-focus .nv-y.nv-axis')\n                  .transition()\n                  .duration(duration)\n                  .call(yAxis)\n                ;\n              }\n            }\n\n            g.select('.nv-focus .nv-x.nv-axis')\n                .attr('transform', 'translate(0,' + availableHeight + ')');\n\n            //============================================================\n            // Update Focus\n            //============================================================\n            if(!focusEnable) {\n                linesWrap.call(lines);\n                updateXAxis();\n                updateYAxis();\n            } else {\n                focus.width(availableWidth);\n                g.select('.nv-focusWrap')\n                    .attr('transform', 'translate(0,' + ( availableHeight + margin.bottom + focus.margin().top) + ')')\n                    .datum(data.filter(function(d) { return !d.disabled; }))\n                    .call(focus);\n                var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n                if(extent !== null){\n                    onBrush(extent);\n                }\n            }\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                lines.clearHighlights();\n                var singlePoint, pointIndex, pointXLocation, allData = [];\n                data\n                    .filter(function(series, i) {\n                        series.seriesIndex = i;\n                        return !series.disabled && !series.disableTooltip;\n                    })\n                    .forEach(function(series,i) {\n                        var extent = focusEnable ? (focus.brush.empty() ? focus.xScale().domain() : focus.brush.extent()) : x.domain();\n                        var currentValues = series.values.filter(function(d,i) {\n                            // Checks if the x point is between the extents, handling case where extent[0] is greater than extent[1]\n                            // (e.g. x domain is manually set to reverse the x-axis)\n                            if(extent[0] <= extent[1]) {\n                                return lines.x()(d,i) >= extent[0] && lines.x()(d,i) <= extent[1];\n                            } else {\n                                return lines.x()(d,i) >= extent[1] && lines.x()(d,i) <= extent[0];\n                            }\n                        });\n\n                        pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, lines.x());\n                        var point = currentValues[pointIndex];\n                        var pointYValue = chart.y()(point, pointIndex);\n                        if (pointYValue !== null) {\n                            lines.highlightPoint(i, pointIndex, true);\n                        }\n                        if (point === undefined) return;\n                        if (singlePoint === undefined) singlePoint = point;\n                        if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n                        allData.push({\n                            key: series.key,\n                            value: pointYValue,\n                            color: color(series,series.seriesIndex),\n                            data: point\n                        });\n                    });\n                //Highlight the tooltip entry based on which point the mouse is closest to.\n                if (allData.length > 2) {\n                    var yValue = chart.yScale().invert(e.mouseY);\n                    var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n                    var threshold = 0.03 * domainExtent;\n                    var indexToHighlight = nv.nearestValueIndex(allData.map(function(d){return d.value;}),yValue,threshold);\n                    if (indexToHighlight !== null)\n                        allData[indexToHighlight].highlight = true;\n                }\n\n                var defaultValueFormatter = function(d,i) {\n                    return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n                };\n\n                interactiveLayer.tooltip\n                    .valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter)\n                    .data({\n                        value: chart.x()( singlePoint,pointIndex ),\n                        index: pointIndex,\n                        series: allData\n                    })();\n\n                interactiveLayer.renderGuideLine(pointXLocation);\n\n            });\n\n            interactiveLayer.dispatch.on('elementClick', function(e) {\n                var pointXLocation, allData = [];\n\n                data.filter(function(series, i) {\n                    series.seriesIndex = i;\n                    return !series.disabled;\n                }).forEach(function(series) {\n                    var pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n                    var point = series.values[pointIndex];\n                    if (typeof point === 'undefined') return;\n                    if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n                    var yPos = chart.yScale()(chart.y()(point,pointIndex));\n                    allData.push({\n                        point: point,\n                        pointIndex: pointIndex,\n                        pos: [pointXLocation, yPos],\n                        seriesIndex: series.seriesIndex,\n                        series: series\n                    });\n                });\n\n                lines.dispatch.elementClick(allData);\n            });\n\n            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                lines.clearHighlights();\n            });\n\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n\n                    state.disabled = e.disabled;\n                }\n                chart.update();\n            });\n\n            //============================================================\n            // Functions\n            //------------------------------------------------------------\n\n            // Taken from crossfilter (http://square.github.com/crossfilter/)\n            function resizePath(d) {\n                var e = +(d == 'e'),\n                    x = e ? 1 : -1,\n                    y = availableHeight / 3;\n                return 'M' + (0.5 * x) + ',' + y\n                    + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6)\n                    + 'V' + (2 * y - 6)\n                    + 'A6,6 0 0 ' + e + ' ' + (0.5 * x) + ',' + (2 * y)\n                    + 'Z'\n                    + 'M' + (2.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8)\n                    + 'M' + (4.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8);\n            }\n\n            function onBrush(extent) {\n                // Update Main (Focus)\n                var focusLinesWrap = g.select('.nv-focus .nv-linesWrap')\n                    .datum(\n                    data.filter(function(d) { return !d.disabled; })\n                        .map(function(d,i) {\n                            return {\n                                key: d.key,\n                                area: d.area,\n                                classed: d.classed,\n                                values: d.values.filter(function(d,i) {\n                                    return lines.x()(d,i) >= extent[0] && lines.x()(d,i) <= extent[1];\n                                }),\n                                disableTooltip: d.disableTooltip\n                            };\n                        })\n                );\n                focusLinesWrap.transition().duration(duration).call(lines);\n\n                // Update Main (Focus) Axes\n                updateXAxis();\n                updateYAxis();\n            }\n        });\n\n        renderWatch.renderEnd('lineChart immediate');\n        return chart;\n    }\n\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    lines.dispatch.on('elementMouseover.tooltip', function(evt) {\n        if(!evt.series.disableTooltip){\n            tooltip.data(evt).hidden(false);\n        }\n    });\n\n    lines.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.focus = focus;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.state = state;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        legendPosition: {get: function(){return legendPosition;}, set: function(_){legendPosition=_;}},\n        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        // Focus options, mostly passed onto focus model.\n        focusEnable:    {get: function(){return focusEnable;}, set: function(_){focusEnable=_;}},\n        focusHeight:     {get: function(){return focus.height();}, set: function(_){focus.height(_);}},\n        focusShowAxisX:    {get: function(){return focus.showXAxis();}, set: function(_){focus.showXAxis(_);}},\n        focusShowAxisY:    {get: function(){return focus.showYAxis();}, set: function(_){focus.showYAxis(_);}},\n        brushExtent: {get: function(){return focus.brushExtent();}, set: function(_){focus.brushExtent(_);}},\n\n        // options that require extra logic in the setter\n        focusMargin: {get: function(){return focus.margin}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            focus.margin.right  = _.right  !== undefined ? _.right  : focus.margin.right;\n            focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n            focus.margin.left   = _.left   !== undefined ? _.left   : focus.margin.left;\n        }},\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            lines.duration(duration);\n            focus.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n            lines.color(color);\n            focus.color(color);\n        }},\n        interpolate: {get: function(){return lines.interpolate();}, set: function(_){\n            lines.interpolate(_);\n            focus.interpolate(_);\n        }},\n        xTickFormat: {get: function(){return xAxis.tickFormat();}, set: function(_){\n            xAxis.tickFormat(_);\n            focus.xTickFormat(_);\n        }},\n        yTickFormat: {get: function(){return yAxis.tickFormat();}, set: function(_){\n            yAxis.tickFormat(_);\n            focus.yTickFormat(_);\n        }},\n        x: {get: function(){return lines.x();}, set: function(_){\n            lines.x(_);\n            focus.x(_);\n        }},\n        y: {get: function(){return lines.y();}, set: function(_){\n            lines.y(_);\n            focus.y(_);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n        }},\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = _;\n            if (useInteractiveGuideline) {\n                lines.interactive(false);\n                lines.useVoronoi(false);\n            }\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.lineWithFocusChart = function() {\n  return nv.models.lineChart()\n    .margin({ bottom: 30 })\n    .focusEnable( true );\n};\nnv.models.linePlusBarChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line()\n        , lines2 = nv.models.line()\n        , bars = nv.models.historicalBar()\n        , bars2 = nv.models.historicalBar()\n        , xAxis = nv.models.axis()\n        , x2Axis = nv.models.axis()\n        , y1Axis = nv.models.axis()\n        , y2Axis = nv.models.axis()\n        , y3Axis = nv.models.axis()\n        , y4Axis = nv.models.axis()\n        , legend = nv.models.legend()\n        , brush = d3.svg.brush()\n        , tooltip = nv.models.tooltip()\n        ;\n\n    var margin = {top: 30, right: 30, bottom: 30, left: 60}\n        , marginTop = null\n        , margin2 = {top: 0, right: 30, bottom: 20, left: 60}\n        , width = null\n        , height = null\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , color = nv.utils.defaultColor()\n        , showLegend = true\n        , focusEnable = true\n        , focusShowAxisY = false\n        , focusShowAxisX = true\n        , focusHeight = 50\n        , extent\n        , brushExtent = null\n        , x\n        , x2\n        , y1\n        , y2\n        , y3\n        , y4\n        , noData = null\n        , dispatch = d3.dispatch('brush', 'stateChange', 'changeState')\n        , transitionDuration = 0\n        , state = nv.utils.state()\n        , defaultState = null\n        , legendLeftAxisHint = ' (left axis)'\n        , legendRightAxisHint = ' (right axis)'\n        , switchYAxisOrder = false\n        ;\n\n    lines.clipEdge(true);\n    lines2.interactive(false);\n    // We don't want any points emitted for the focus chart's scatter graph.\n    lines2.pointActive(function(d) { return false });\n    xAxis.orient('bottom').tickPadding(5);\n    y1Axis.orient('left');\n    y2Axis.orient('right');\n    x2Axis.orient('bottom').tickPadding(5);\n    y3Axis.orient('left');\n    y4Axis.orient('right');\n\n    tooltip.headerEnabled(true).headerFormatter(function(d, i) {\n        return xAxis.tickFormat()(d, i);\n    });\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var getBarsAxis = function() {\n        return switchYAxisOrder\n            ? { main: y2Axis, focus: y4Axis }\n            : { main: y1Axis, focus: y3Axis }\n    }\n\n    var getLinesAxis = function() {\n        return switchYAxisOrder\n            ? { main: y1Axis, focus: y3Axis }\n            : { main: y2Axis, focus: y4Axis }\n    }\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled })\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    var allDisabled = function(data) {\n      return data.every(function(series) {\n        return series.disabled;\n      });\n    }\n\n    function chart(selection) {\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight1 = nv.utils.availableHeight(height, container, margin)\n                    - (focusEnable ? focusHeight : 0),\n                availableHeight2 = focusHeight - margin2.top - margin2.bottom;\n\n            chart.update = function() { container.transition().duration(transitionDuration).call(chart); };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disableddisabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            var dataBars = data.filter(function(d) { return !d.disabled && d.bar });\n            var dataLines = data.filter(function(d) { return !d.bar }); // removed the !d.disabled clause here to fix Issue #240\n\n            if (dataBars.length && !switchYAxisOrder) {\n                x = bars.xScale();\n            } else {\n                x = lines.xScale();\n            }\n\n            x2 = x2Axis.scale();\n\n            // select the scales and series based on the position of the yAxis\n            y1 = switchYAxisOrder ? lines.yScale() : bars.yScale();\n            y2 = switchYAxisOrder ? bars.yScale() : lines.yScale();\n            y3 = switchYAxisOrder ? lines2.yScale() : bars2.yScale();\n            y4 = switchYAxisOrder ? bars2.yScale() : lines2.yScale();\n\n            var series1 = data\n                .filter(function(d) { return !d.disabled && (switchYAxisOrder ? !d.bar : d.bar) })\n                .map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d,i), y: getY(d,i) }\n                    })\n                });\n\n            var series2 = data\n                .filter(function(d) { return !d.disabled && (switchYAxisOrder ? d.bar : !d.bar) })\n                .map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d,i), y: getY(d,i) }\n                    })\n                });\n\n            x.range([0, availableWidth]);\n\n            x2  .domain(d3.extent(d3.merge(series1.concat(series2)), function(d) { return d.x } ))\n                .range([0, availableWidth]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-linePlusBar').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-linePlusBar').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n\n            // this is the main chart\n            var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n            focusEnter.append('g').attr('class', 'nv-x nv-axis');\n            focusEnter.append('g').attr('class', 'nv-y1 nv-axis');\n            focusEnter.append('g').attr('class', 'nv-y2 nv-axis');\n            focusEnter.append('g').attr('class', 'nv-barsWrap');\n            focusEnter.append('g').attr('class', 'nv-linesWrap');\n\n            // context chart is where you can focus in\n            var contextEnter = gEnter.append('g').attr('class', 'nv-context');\n            contextEnter.append('g').attr('class', 'nv-x nv-axis');\n            contextEnter.append('g').attr('class', 'nv-y1 nv-axis');\n            contextEnter.append('g').attr('class', 'nv-y2 nv-axis');\n            contextEnter.append('g').attr('class', 'nv-barsWrap');\n            contextEnter.append('g').attr('class', 'nv-linesWrap');\n            contextEnter.append('g').attr('class', 'nv-brushBackground');\n            contextEnter.append('g').attr('class', 'nv-x nv-brush');\n\n            //============================================================\n            // Legend\n            //------------------------------------------------------------\n\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n                var legendXPosition = legend.align() ? legendWidth : 0;\n\n                legend.width(legendWidth);\n\n                g.select('.nv-legendWrap')\n                    .datum(data.map(function(series) {\n                        series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n                        if(switchYAxisOrder) {\n                            series.key = series.originalKey + (series.bar ? legendRightAxisHint : legendLeftAxisHint);\n                        } else {\n                            series.key = series.originalKey + (series.bar ? legendLeftAxisHint : legendRightAxisHint);\n                        }\n                        return series;\n                    }))\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    // FIXME: shouldn't this be \"- (focusEnabled ? focusHeight : 0)\"?\n                    availableHeight1 = nv.utils.availableHeight(height, container, margin) - focusHeight;\n                }\n\n                g.select('.nv-legendWrap')\n                    .attr('transform', 'translate(' + legendXPosition + ',' + (-margin.top) +')');\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            //============================================================\n            // Context chart (focus chart) components\n            //------------------------------------------------------------\n\n            // hide or show the focus context chart\n            g.select('.nv-context').style('display', focusEnable ? 'initial' : 'none');\n\n            bars2\n                .width(availableWidth)\n                .height(availableHeight2)\n                .color(data.map(function (d, i) {\n                    return d.color || color(d, i);\n                }).filter(function (d, i) {\n                    return !data[i].disabled && data[i].bar\n                }));\n            lines2\n                .width(availableWidth)\n                .height(availableHeight2)\n                .color(data.map(function (d, i) {\n                    return d.color || color(d, i);\n                }).filter(function (d, i) {\n                    return !data[i].disabled && !data[i].bar\n                }));\n\n            var bars2Wrap = g.select('.nv-context .nv-barsWrap')\n                .datum(dataBars.length ? dataBars : [\n                    {values: []}\n                ]);\n            var lines2Wrap = g.select('.nv-context .nv-linesWrap')\n                .datum(allDisabled(dataLines) ?\n                       [{values: []}] :\n                       dataLines.filter(function(dataLine) {\n                         return !dataLine.disabled;\n                       }));\n\n            g.select('.nv-context')\n                .attr('transform', 'translate(0,' + ( availableHeight1 + margin.bottom + margin2.top) + ')');\n\n            bars2Wrap.transition().call(bars2);\n            lines2Wrap.transition().call(lines2);\n\n            // context (focus chart) axis controls\n            if (focusShowAxisX) {\n                x2Axis\n                    ._ticks( nv.utils.calcTicksX(availableWidth / 100, data))\n                    .tickSize(-availableHeight2, 0);\n                g.select('.nv-context .nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y3.range()[0] + ')');\n                g.select('.nv-context .nv-x.nv-axis').transition()\n                    .call(x2Axis);\n            }\n\n            if (focusShowAxisY) {\n                y3Axis\n                    .scale(y3)\n                    ._ticks( availableHeight2 / 36 )\n                    .tickSize( -availableWidth, 0);\n                y4Axis\n                    .scale(y4)\n                    ._ticks( availableHeight2 / 36 )\n                    .tickSize(dataBars.length ? 0 : -availableWidth, 0); // Show the y2 rules only if y1 has none\n\n                g.select('.nv-context .nv-y3.nv-axis')\n                    .style('opacity', dataBars.length ? 1 : 0)\n                    .attr('transform', 'translate(0,' + x2.range()[0] + ')');\n                g.select('.nv-context .nv-y2.nv-axis')\n                    .style('opacity', dataLines.length ? 1 : 0)\n                    .attr('transform', 'translate(' + x2.range()[1] + ',0)');\n\n                g.select('.nv-context .nv-y1.nv-axis').transition()\n                    .call(y3Axis);\n                g.select('.nv-context .nv-y2.nv-axis').transition()\n                    .call(y4Axis);\n            }\n\n            // Setup Brush\n            brush.x(x2).on('brush', onBrush);\n\n            if (brushExtent) brush.extent(brushExtent);\n\n            var brushBG = g.select('.nv-brushBackground').selectAll('g')\n                .data([brushExtent || brush.extent()]);\n\n            var brushBGenter = brushBG.enter()\n                .append('g');\n\n            brushBGenter.append('rect')\n                .attr('class', 'left')\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('height', availableHeight2);\n\n            brushBGenter.append('rect')\n                .attr('class', 'right')\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('height', availableHeight2);\n\n            var gBrush = g.select('.nv-x.nv-brush')\n                .call(brush);\n            gBrush.selectAll('rect')\n                //.attr('y', -5)\n                .attr('height', availableHeight2);\n            gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n                    state.disabled = e.disabled;\n                }\n                chart.update();\n            });\n\n            //============================================================\n            // Functions\n            //------------------------------------------------------------\n\n            // Taken from crossfilter (http://square.github.com/crossfilter/)\n            function resizePath(d) {\n                var e = +(d == 'e'),\n                    x = e ? 1 : -1,\n                    y = availableHeight2 / 3;\n                return 'M' + (.5 * x) + ',' + y\n                    + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6)\n                    + 'V' + (2 * y - 6)\n                    + 'A6,6 0 0 ' + e + ' ' + (.5 * x) + ',' + (2 * y)\n                    + 'Z'\n                    + 'M' + (2.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8)\n                    + 'M' + (4.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8);\n            }\n\n\n            function updateBrushBG() {\n                if (!brush.empty()) brush.extent(brushExtent);\n                brushBG\n                    .data([brush.empty() ? x2.domain() : brushExtent])\n                    .each(function(d,i) {\n                        var leftWidth = x2(d[0]) - x2.range()[0],\n                            rightWidth = x2.range()[1] - x2(d[1]);\n                        d3.select(this).select('.left')\n                            .attr('width',  leftWidth < 0 ? 0 : leftWidth);\n\n                        d3.select(this).select('.right')\n                            .attr('x', x2(d[1]))\n                            .attr('width', rightWidth < 0 ? 0 : rightWidth);\n                    });\n            }\n\n            function onBrush() {\n                brushExtent = brush.empty() ? null : brush.extent();\n                extent = brush.empty() ? x2.domain() : brush.extent();\n                dispatch.brush({extent: extent, brush: brush});\n                updateBrushBG();\n\n                // Prepare Main (Focus) Bars and Lines\n                bars\n                    .width(availableWidth)\n                    .height(availableHeight1)\n                    .color(data.map(function(d,i) {\n                        return d.color || color(d, i);\n                    }).filter(function(d,i) { return !data[i].disabled && data[i].bar }));\n\n                lines\n                    .width(availableWidth)\n                    .height(availableHeight1)\n                    .color(data.map(function(d,i) {\n                        return d.color || color(d, i);\n                    }).filter(function(d,i) { return !data[i].disabled && !data[i].bar }));\n\n                var focusBarsWrap = g.select('.nv-focus .nv-barsWrap')\n                    .datum(!dataBars.length ? [{values:[]}] :\n                        dataBars\n                            .map(function(d,i) {\n                                return {\n                                    key: d.key,\n                                    values: d.values.filter(function(d,i) {\n                                        return bars.x()(d,i) >= extent[0] && bars.x()(d,i) <= extent[1];\n                                    })\n                                }\n                            })\n                );\n\n                var focusLinesWrap = g.select('.nv-focus .nv-linesWrap')\n                    .datum(allDisabled(dataLines) ? [{values:[]}] :\n                           dataLines\n                           .filter(function(dataLine) { return !dataLine.disabled; })\n                           .map(function(d,i) {\n                                return {\n                                    area: d.area,\n                                    fillOpacity: d.fillOpacity,\n                                    strokeWidth: d.strokeWidth,\n                                    key: d.key,\n                                    values: d.values.filter(function(d,i) {\n                                        return lines.x()(d,i) >= extent[0] && lines.x()(d,i) <= extent[1];\n                                    })\n                                }\n                            })\n                );\n\n                // Update Main (Focus) X Axis\n                if (dataBars.length && !switchYAxisOrder) {\n                    x = bars.xScale();\n                } else {\n                    x = lines.xScale();\n                }\n\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight1, 0);\n\n                xAxis.domain([Math.ceil(extent[0]), Math.floor(extent[1])]);\n\n                g.select('.nv-x.nv-axis').transition().duration(transitionDuration)\n                    .call(xAxis);\n\n                // Update Main (Focus) Bars and Lines\n                focusBarsWrap.transition().duration(transitionDuration).call(bars);\n                focusLinesWrap.transition().duration(transitionDuration).call(lines);\n\n                // Setup and Update Main (Focus) Y Axes\n                g.select('.nv-focus .nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y1.range()[0] + ')');\n\n                y1Axis\n                    .scale(y1)\n                    ._ticks( nv.utils.calcTicksY(availableHeight1/36, data) )\n                    .tickSize(-availableWidth, 0);\n                y2Axis\n                    .scale(y2)\n                    ._ticks( nv.utils.calcTicksY(availableHeight1/36, data) );\n\n                // Show the y2 rules only if y1 has none\n                if(!switchYAxisOrder) {\n                    y2Axis.tickSize(dataBars.length ? 0 : -availableWidth, 0);\n                } else {\n                    y2Axis.tickSize(dataLines.length ? 0 : -availableWidth, 0);\n                }\n\n                // Calculate opacity of the axis\n                var barsOpacity = dataBars.length ? 1 : 0;\n                var linesOpacity = dataLines.length && !allDisabled(dataLines) ? 1 : 0;\n\n                var y1Opacity = switchYAxisOrder ? linesOpacity : barsOpacity;\n                var y2Opacity = switchYAxisOrder ? barsOpacity : linesOpacity;\n\n                g.select('.nv-focus .nv-y1.nv-axis')\n                    .style('opacity', y1Opacity);\n                g.select('.nv-focus .nv-y2.nv-axis')\n                    .style('opacity', y2Opacity)\n                    .attr('transform', 'translate(' + x.range()[1] + ',0)');\n\n                g.select('.nv-focus .nv-y1.nv-axis').transition().duration(transitionDuration)\n                    .call(y1Axis);\n                g.select('.nv-focus .nv-y2.nv-axis').transition().duration(transitionDuration)\n                    .call(y2Axis);\n            }\n\n            onBrush();\n\n        });\n\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    lines.dispatch.on('elementMouseover.tooltip', function(evt) {\n        tooltip\n            .duration(100)\n            .valueFormatter(function(d, i) {\n                return getLinesAxis().main.tickFormat()(d, i);\n            })\n            .data(evt)\n            .hidden(false);\n    });\n\n    lines.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true)\n    });\n\n    bars.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt.value = chart.x()(evt.data);\n        evt['series'] = {\n            value: chart.y()(evt.data),\n            color: evt.color\n        };\n        tooltip\n            .duration(0)\n            .valueFormatter(function(d, i) {\n                return getBarsAxis().main.tickFormat()(d, i);\n            })\n            .data(evt)\n            .hidden(false);\n    });\n\n    bars.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    bars.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines = lines;\n    chart.lines2 = lines2;\n    chart.bars = bars;\n    chart.bars2 = bars2;\n    chart.xAxis = xAxis;\n    chart.x2Axis = x2Axis;\n    chart.y1Axis = y1Axis;\n    chart.y2Axis = y2Axis;\n    chart.y3Axis = y3Axis;\n    chart.y4Axis = y4Axis;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        brushExtent:    {get: function(){return brushExtent;}, set: function(_){brushExtent=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        focusEnable:    {get: function(){return focusEnable;}, set: function(_){focusEnable=_;}},\n        focusHeight:    {get: function(){return focusHeight;}, set: function(_){focusHeight=_;}},\n        focusShowAxisX:    {get: function(){return focusShowAxisX;}, set: function(_){focusShowAxisX=_;}},\n        focusShowAxisY:    {get: function(){return focusShowAxisY;}, set: function(_){focusShowAxisY=_;}},\n        legendLeftAxisHint:    {get: function(){return legendLeftAxisHint;}, set: function(_){legendLeftAxisHint=_;}},\n        legendRightAxisHint:    {get: function(){return legendRightAxisHint;}, set: function(_){legendRightAxisHint=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        focusMargin: {get: function(){return margin2;}, set: function(_){\n            margin2.top    = _.top    !== undefined ? _.top    : margin2.top;\n            margin2.right  = _.right  !== undefined ? _.right  : margin2.right;\n            margin2.bottom = _.bottom !== undefined ? _.bottom : margin2.bottom;\n            margin2.left   = _.left   !== undefined ? _.left   : margin2.left;\n        }},\n        duration: {get: function(){return transitionDuration;}, set: function(_){\n            transitionDuration = _;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n        }},\n        x: {get: function(){return getX;}, set: function(_){\n            getX = _;\n            lines.x(_);\n            lines2.x(_);\n            bars.x(_);\n            bars2.x(_);\n        }},\n        y: {get: function(){return getY;}, set: function(_){\n            getY = _;\n            lines.y(_);\n            lines2.y(_);\n            bars.y(_);\n            bars2.y(_);\n        }},\n        switchYAxisOrder:    {get: function(){return switchYAxisOrder;}, set: function(_){\n            // Switch the tick format for the yAxis\n            if(switchYAxisOrder !== _) {\n                var y1 = y1Axis;\n                y1Axis = y2Axis;\n                y2Axis = y1;\n\n                var y3 = y3Axis;\n                y3Axis = y4Axis;\n                y4Axis = y3;\n            }\n            switchYAxisOrder=_;\n\n            y1Axis.orient('left');\n            y2Axis.orient('right');\n            y3Axis.orient('left');\n            y4Axis.orient('right');\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.multiBar = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 960\n        , height = 500\n        , x = d3.scale.ordinal()\n        , y = d3.scale.linear()\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n        , clipEdge = true\n        , stacked = false\n        , stackOffset = 'zero' // options include 'silhouette', 'wiggle', 'expand', 'zero', or a custom function\n        , color = nv.utils.defaultColor()\n        , hideable = false\n        , barColor = null // adding the ability to set the color for each rather than the whole group\n        , disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n        , duration = 500\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , groupSpacing = 0.1\n        , fillOpacity = 0.75\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0 //used to store previous scales\n        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n        ;\n\n    var last_datalength = 0;\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n            var nonStackableCount = 0;\n            // This function defines the requirements for render complete\n            var endFn = function(d, i) {\n                if (d.series === data.length - 1 && i === data[0].values.length - 1)\n                    return true;\n                return false;\n            };\n\n            if(hideable && data.length) hideable = [{\n                values: data[0].values.map(function(d) {\n                        return {\n                            x: d.x,\n                            y: 0,\n                            series: d.series,\n                            size: 0.01\n                        };}\n                )}];\n\n            if (stacked) {\n                var parsed = d3.layout.stack()\n                    .offset(stackOffset)\n                    .values(function(d){ return d.values })\n                    .y(getY)\n                (!data.length && hideable ? hideable : data);\n\n                parsed.forEach(function(series, i){\n                    // if series is non-stackable, use un-parsed data\n                    if (series.nonStackable) {\n                        data[i].nonStackableSeries = nonStackableCount++;\n                        parsed[i] = data[i];\n                    } else {\n                        // don't stack this seires on top of the nonStackable seriees\n                        if (i > 0 && parsed[i - 1].nonStackable){\n                            parsed[i].values.map(function(d,j){\n                                d.y0 -= parsed[i - 1].values[j].y;\n                                d.y1 = d.y0 + d.y;\n                            });\n                        }\n                    }\n                });\n                data = parsed;\n            }\n            //add series index and key to each data point for reference\n            data.forEach(function(series, i) {\n                series.values.forEach(function(point) {\n                    point.series = i;\n                    point.key = series.key;\n                });\n            });\n\n            // HACK for negative value stacking\n            if (stacked && data.length > 0) {\n                data[0].values.map(function(d,i) {\n                    var posBase = 0, negBase = 0;\n                    data.map(function(d, idx) {\n                        if (!data[idx].nonStackable) {\n                            var f = d.values[i]\n                            f.size = Math.abs(f.y);\n                            if (f.y<0)  {\n                                f.y1 = negBase;\n                                negBase = negBase - f.size;\n                            } else\n                            {\n                                f.y1 = f.size + posBase;\n                                posBase = posBase + f.size;\n                            }\n                        }\n\n                    });\n                });\n            }\n            // Setup Scales\n            // remap and flatten the data for use in calculating the scales' domains\n            var seriesData = (xDomain && yDomain) ? [] : // if we know xDomain and yDomain, no need to calculate\n                data.map(function(d, idx) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d,i), y: getY(d,i), y0: d.y0, y1: d.y1, idx:idx }\n                    })\n                });\n\n            x.domain(xDomain || d3.merge(seriesData).map(function(d) { return d.x }))\n                .rangeBands(xRange || [0, availableWidth], groupSpacing);\n\n            y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function(d) {\n                var domain = d.y;\n                // increase the domain range if this series is stackable\n                if (stacked && !data[d.idx].nonStackable) {\n                    if (d.y > 0){\n                        domain = d.y1\n                    } else {\n                        domain = d.y1 + d.y\n                    }\n                }\n                return domain;\n            }).concat(forceY)))\n            .range(yRange || [availableHeight, 0]);\n\n            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n            if (x.domain()[0] === x.domain()[1])\n                x.domain()[0] ?\n                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n                    : x.domain([-1,1]);\n\n            if (y.domain()[0] === y.domain()[1])\n                y.domain()[0] ?\n                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n                    : y.domain([-1,1]);\n\n            x0 = x0 || x;\n            y0 = y0 || y;\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-multibar').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibar');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-groups');\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-edge-clip-' + id)\n                .append('rect');\n            wrap.select('#nv-edge-clip-' + id + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\n            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n                .data(function(d) { return d }, function(d,i) { return i });\n            groups.enter().append('g')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6);\n\n            var exitTransition = renderWatch\n                .transition(groups.exit().selectAll('rect.nv-bar'), 'multibarExit', Math.min(100, duration))\n                .attr('y', function(d, i, j) {\n                    var yVal = y0(0) || 0;\n                    if (stacked) {\n                        if (data[d.series] && !data[d.series].nonStackable) {\n                            yVal = y0(d.y0);\n                        }\n                    }\n                    return yVal;\n                })\n                .attr('height', 0)\n                .remove();\n            if (exitTransition.delay)\n                exitTransition.delay(function(d,i) {\n                    var delay = i * (duration / (last_datalength + 1)) - i;\n                    return delay;\n                });\n            groups\n                .attr('class', function(d,i) { return 'nv-group nv-series-' + i })\n                .classed('hover', function(d) { return d.hover })\n                .style('fill', function(d,i){ return color(d, i) })\n                .style('stroke', function(d,i){ return color(d, i) });\n            groups\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', fillOpacity);\n\n            var bars = groups.selectAll('rect.nv-bar')\n                .data(function(d) { return (hideable && !data.length) ? hideable.values : d.values });\n            bars.exit().remove();\n\n            var barsEnter = bars.enter().append('rect')\n                    .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive'})\n                    .attr('x', function(d,i,j) {\n                        return stacked && !data[j].nonStackable ? 0 : (j * x.rangeBand() / data.length )\n                    })\n                    .attr('y', function(d,i,j) { return y0(stacked && !data[j].nonStackable ? d.y0 : 0) || 0 })\n                    .attr('height', 0)\n                    .attr('width', function(d,i,j) { return x.rangeBand() / (stacked && !data[j].nonStackable ? 1 : data.length) })\n                    .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',0)'; })\n                ;\n            bars\n                .style('fill', function(d,i,j){ return color(d, j, i);  })\n                .style('stroke', function(d,i,j){ return color(d, j, i); })\n                .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    dispatch.elementMousemove({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('click', function(d,i) {\n                    var element = this;\n                    dispatch.elementClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\"),\n                        event: d3.event,\n                        element: element\n                    });\n                    d3.event.stopPropagation();\n                })\n                .on('dblclick', function(d,i) {\n                    dispatch.elementDblClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                    d3.event.stopPropagation();\n                });\n            bars\n                .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive'})\n                .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',0)'; })\n\n            if (barColor) {\n                if (!disabled) disabled = data.map(function() { return true });\n                bars\n                    .style('fill', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); })\n                    .style('stroke', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); });\n            }\n\n            var barSelection =\n                bars.watchTransition(renderWatch, 'multibar', Math.min(250, duration))\n                    .delay(function(d,i) {\n                        return i * duration / data[0].values.length;\n                    });\n            if (stacked){\n                barSelection\n                    .attr('y', function(d,i,j) {\n                        var yVal = 0;\n                        // if stackable, stack it on top of the previous series\n                        if (!data[j].nonStackable) {\n                            yVal = y(d.y1);\n                        } else {\n                            if (getY(d,i) < 0){\n                                yVal = y(0);\n                            } else {\n                                if (y(0) - y(getY(d,i)) < -1){\n                                    yVal = y(0) - 1;\n                                } else {\n                                    yVal = y(getY(d, i)) || 0;\n                                }\n                            }\n                        }\n                        return yVal;\n                    })\n                    .attr('height', function(d,i,j) {\n                        if (!data[j].nonStackable) {\n                            return Math.max(Math.abs(y(d.y+d.y0) - y(d.y0)), 0);\n                        } else {\n                            return Math.max(Math.abs(y(getY(d,i)) - y(0)), 0) || 0;\n                        }\n                    })\n                    .attr('x', function(d,i,j) {\n                        var width = 0;\n                        if (data[j].nonStackable) {\n                            width = d.series * x.rangeBand() / data.length;\n                            if (data.length !== nonStackableCount){\n                                width = data[j].nonStackableSeries * x.rangeBand()/(nonStackableCount*2);\n                            }\n                        }\n                        return width;\n                    })\n                    .attr('width', function(d,i,j){\n                        if (!data[j].nonStackable) {\n                            return x.rangeBand();\n                        } else {\n                            // if all series are nonStacable, take the full width\n                            var width = (x.rangeBand() / nonStackableCount);\n                            // otherwise, nonStackable graph will be only taking the half-width\n                            // of the x rangeBand\n                            if (data.length !== nonStackableCount) {\n                                width = x.rangeBand()/(nonStackableCount*2);\n                            }\n                            return width;\n                        }\n                    });\n            }\n            else {\n                barSelection\n                    .attr('x', function(d,i) {\n                        return d.series * x.rangeBand() / data.length;\n                    })\n                    .attr('width', x.rangeBand() / data.length)\n                    .attr('y', function(d,i) {\n                        return getY(d,i) < 0 ?\n                            y(0) :\n                                y(0) - y(getY(d,i)) < 1 ?\n                            y(0) - 1 :\n                            y(getY(d,i)) || 0;\n                    })\n                    .attr('height', function(d,i) {\n                        return Math.max(Math.abs(y(getY(d,i)) - y(0)),1) || 0;\n                    });\n            }\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n\n            // keep track of the last data value length for transition calculations\n            if (data[0] && data[0].values) {\n                last_datalength = data[0].values.length;\n            }\n\n        });\n\n        renderWatch.renderEnd('multibar immediate');\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:   {get: function(){return width;}, set: function(_){width=_;}},\n        height:  {get: function(){return height;}, set: function(_){height=_;}},\n        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        stacked: {get: function(){return stacked;}, set: function(_){stacked=_;}},\n        stackOffset: {get: function(){return stackOffset;}, set: function(_){stackOffset=_;}},\n        clipEdge:    {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        disabled:    {get: function(){return disabled;}, set: function(_){disabled=_;}},\n        id:          {get: function(){return id;}, set: function(_){id=_;}},\n        hideable:    {get: function(){return hideable;}, set: function(_){hideable=_;}},\n        groupSpacing:{get: function(){return groupSpacing;}, set: function(_){groupSpacing=_;}},\n        fillOpacity: {get: function(){return fillOpacity;}, set: function(_){fillOpacity=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        barColor:  {get: function(){return barColor;}, set: function(_){\n            barColor = _ ? nv.utils.getColor(_) : null;\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\nnv.models.multiBarChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBar()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , interactiveLayer = nv.interactiveGuideline()\n        , legend = nv.models.legend()\n        , controls = nv.models.legend()\n        , tooltip = nv.models.tooltip()\n        ;\n\n    var margin = {top: 30, right: 20, bottom: 50, left: 60}\n        , marginTop = null\n        , width = null\n        , height = null\n        , color = nv.utils.defaultColor()\n        , showControls = true\n        , controlLabels = {}\n        , showLegend = true\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , reduceXTicks = true // if false a tick will show for every data point\n        , staggerLabels = false\n        , wrapLabels = false\n        , rotateLabels = 0\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n        , controlWidth = function() { return showControls ? 180 : 0 }\n        , duration = 250\n        , useInteractiveGuideline = false\n        ;\n\n    state.stacked = false // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(false);\n    xAxis\n        .orient('bottom')\n        .tickPadding(7)\n        .showMaxMin(false)\n        .tickFormat(function(d) { return d })\n    ;\n    yAxis\n        .orient((rightAlignYAxis) ? 'right' : 'left')\n        .tickFormat(d3.format(',.1f'))\n    ;\n\n    tooltip\n        .duration(0)\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        })\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n    interactiveLayer.tooltip\n        .valueFormatter(function(d, i) {\n            return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n        })\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n    interactiveLayer.tooltip\n        .valueFormatter(function (d, i) {\n            return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n        })\n        .headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n    interactiveLayer.tooltip\n        .duration(0)\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        })\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n    controls.updateState(false);\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var stacked = false;\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled }),\n                stacked: stacked\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.stacked !== undefined)\n                stacked = state.stacked;\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(multibar);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() {\n                if (duration === 0)\n                    container.call(chart);\n                else\n                    container.transition()\n                        .duration(duration)\n                        .call(chart);\n            };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disableddisabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display noData message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = multibar.xScale();\n            y = multibar.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-multiBarWithLegend').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarWithLegend').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis');\n            gEnter.append('g').attr('class', 'nv-barsWrap');\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n            gEnter.append('g').attr('class', 'nv-controlsWrap');\n            gEnter.append('g').attr('class', 'nv-interactive');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth - controlWidth());\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                g.select('.nv-legendWrap')\n                    .attr('transform', 'translate(' + controlWidth() + ',' + (-margin.top) +')');\n            }\n\n            // Controls\n            if (!showControls) {\n                 g.select('.nv-controlsWrap').selectAll('*').remove();\n            } else {\n                var controlsData = [\n                    { key: controlLabels.grouped || 'Grouped', disabled: multibar.stacked() },\n                    { key: controlLabels.stacked || 'Stacked', disabled: !multibar.stacked() }\n                ];\n\n                controls.width(controlWidth()).color(['#444', '#444', '#444']);\n                g.select('.nv-controlsWrap')\n                    .datum(controlsData)\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n                    .call(controls);\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            // Main Chart Component(s)\n            multibar\n                .disabled(data.map(function(series) { return series.disabled }))\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled }));\n\n\n            var barsWrap = g.select('.nv-barsWrap')\n                .datum(data.filter(function(d) { return !d.disabled }));\n\n            barsWrap.call(multibar);\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n\n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n                g.select('.nv-x.nv-axis')\n                    .call(xAxis);\n\n                var xTicks = g.select('.nv-x.nv-axis > g').selectAll('g');\n\n                xTicks\n                    .selectAll('line, text')\n                    .style('opacity', 1)\n\n                if (staggerLabels) {\n                    var getTranslate = function(x,y) {\n                        return \"translate(\" + x + \",\" + y + \")\";\n                    };\n\n                    var staggerUp = 5, staggerDown = 17;  //pixels to stagger by\n                    // Issue #140\n                    xTicks\n                        .selectAll(\"text\")\n                        .attr('transform', function(d,i,j) {\n                            return  getTranslate(0, (j % 2 == 0 ? staggerUp : staggerDown));\n                        });\n\n                    var totalInBetweenTicks = d3.selectAll(\".nv-x.nv-axis .nv-wrap g g text\")[0].length;\n                    g.selectAll(\".nv-x.nv-axis .nv-axisMaxMin text\")\n                        .attr(\"transform\", function(d,i) {\n                            return getTranslate(0, (i === 0 || totalInBetweenTicks % 2 !== 0) ? staggerDown : staggerUp);\n                        });\n                }\n\n                if (wrapLabels) {\n                    g.selectAll('.tick text')\n                        .call(nv.utils.wrapTicks, chart.xAxis.rangeBand())\n                }\n\n                if (reduceXTicks)\n                    xTicks\n                        .filter(function(d,i) {\n                            return i % Math.ceil(data[0].values.length / (availableWidth / 100)) !== 0;\n                        })\n                        .selectAll('text, line')\n                        .style('opacity', 0);\n\n                if(rotateLabels)\n                    xTicks\n                        .selectAll('.tick text')\n                        .attr('transform', 'rotate(' + rotateLabels + ' 0,0)')\n                        .style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n\n                g.select('.nv-x.nv-axis').selectAll('g.nv-axisMaxMin text')\n                    .style('opacity', 1);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis')\n                    .call(yAxis);\n            }\n\n            //Set up interactive layer\n            if (useInteractiveGuideline) {\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left:margin.left, top:margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            controls.dispatch.on('legendClick', function(d,i) {\n                if (!d.disabled) return;\n                controlsData = controlsData.map(function(s) {\n                    s.disabled = true;\n                    return s;\n                });\n                d.disabled = false;\n\n                switch (d.key) {\n                    case 'Grouped':\n                    case controlLabels.grouped:\n                        multibar.stacked(false);\n                        break;\n                    case 'Stacked':\n                    case controlLabels.stacked:\n                        multibar.stacked(true);\n                        break;\n                }\n\n                state.stacked = multibar.stacked();\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n                    state.disabled = e.disabled;\n                }\n                if (typeof e.stacked !== 'undefined') {\n                    multibar.stacked(e.stacked);\n                    state.stacked = e.stacked;\n                    stacked = e.stacked;\n                }\n                chart.update();\n            });\n\n            if (useInteractiveGuideline) {\n                interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                    if (e.pointXValue == undefined) return;\n\n                    var singlePoint, pointIndex, pointXLocation, xValue, allData = [];\n                    data\n                        .filter(function(series, i) {\n                            series.seriesIndex = i;\n                            return !series.disabled;\n                        })\n                        .forEach(function(series,i) {\n                            pointIndex = x.domain().indexOf(e.pointXValue)\n\n                            var point = series.values[pointIndex];\n                            if (point === undefined) return;\n\n                            xValue = point.x;\n                            if (singlePoint === undefined) singlePoint = point;\n                            if (pointXLocation === undefined) pointXLocation = e.mouseX\n                            allData.push({\n                                key: series.key,\n                                value: chart.y()(point, pointIndex),\n                                color: color(series,series.seriesIndex),\n                                data: series.values[pointIndex]\n                            });\n                        });\n\n                    interactiveLayer.tooltip\n                        .data({\n                            value: xValue,\n                            index: pointIndex,\n                            series: allData\n                        })();\n\n                    interactiveLayer.renderGuideLine(pointXLocation);\n                });\n\n                interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                    interactiveLayer.tooltip.hidden(true);\n                });\n            }\n            else {\n                multibar.dispatch.on('elementMouseover.tooltip', function(evt) {\n                    evt.value = chart.x()(evt.data);\n                    evt['series'] = {\n                        key: evt.data.key,\n                        value: chart.y()(evt.data),\n                        color: evt.color\n                    };\n                    tooltip.data(evt).hidden(false);\n                });\n\n                multibar.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true);\n                });\n\n                multibar.dispatch.on('elementMousemove.tooltip', function(evt) {\n                    tooltip();\n                });\n            }\n        });\n\n        renderWatch.renderEnd('multibarchart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        showControls: {get: function(){return showControls;}, set: function(_){showControls=_;}},\n        controlLabels: {get: function(){return controlLabels;}, set: function(_){controlLabels=_;}},\n        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        reduceXTicks:    {get: function(){return reduceXTicks;}, set: function(_){reduceXTicks=_;}},\n        rotateLabels:    {get: function(){return rotateLabels;}, set: function(_){rotateLabels=_;}},\n        staggerLabels:    {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n        wrapLabels:   {get: function(){return wrapLabels;}, set: function(_){wrapLabels=!!_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            multibar.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n            renderWatch.reset(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n        }},\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = _;\n        }},\n        barColor:  {get: function(){return multibar.barColor;}, set: function(_){\n            multibar.barColor(_);\n            legend.color(function(d,i) {return d3.rgb('#ccc').darker(i * 1.5).toString();})\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.multiBarHorizontal = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 960\n        , height = 500\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , x = d3.scale.ordinal()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , getYerr = function(d) { return d.yErr }\n        , forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n        , color = nv.utils.defaultColor()\n        , barColor = null // adding the ability to set the color for each rather than the whole group\n        , disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n        , stacked = false\n        , showValues = false\n        , showBarLabels = false\n        , valuePadding = 60\n        , groupSpacing = 0.1\n        , fillOpacity = 0.75\n        , valueFormat = d3.format(',.2f')\n        , delay = 1200\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , duration = 250\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0; //used to store previous scales\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            if (stacked)\n                data = d3.layout.stack()\n                    .offset('zero')\n                    .values(function(d){ return d.values })\n                    .y(getY)\n                (data);\n\n            //add series index and key to each data point for reference\n            data.forEach(function(series, i) {\n                series.values.forEach(function(point) {\n                    point.series = i;\n                    point.key = series.key;\n                });\n            });\n\n            // HACK for negative value stacking\n            if (stacked)\n                data[0].values.map(function(d,i) {\n                    var posBase = 0, negBase = 0;\n                    data.map(function(d) {\n                        var f = d.values[i]\n                        f.size = Math.abs(f.y);\n                        if (f.y<0)  {\n                            f.y1 = negBase - f.size;\n                            negBase = negBase - f.size;\n                        } else\n                        {\n                            f.y1 = posBase;\n                            posBase = posBase + f.size;\n                        }\n                    });\n                });\n\n            // Setup Scales\n            // remap and flatten the data for use in calculating the scales' domains\n            var seriesData = (xDomain && yDomain) ? [] : // if we know xDomain and yDomain, no need to calculate\n                data.map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d,i), y: getY(d,i), y0: d.y0, y1: d.y1 }\n                    })\n                });\n\n            x.domain(xDomain || d3.merge(seriesData).map(function(d) { return d.x }))\n                .rangeBands(xRange || [0, availableHeight], groupSpacing);\n\n            y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function(d) { return stacked ? (d.y > 0 ? d.y1 + d.y : d.y1 ) : d.y }).concat(forceY)))\n\n            if (showValues && !stacked)\n                y.range(yRange || [(y.domain()[0] < 0 ? valuePadding : 0), availableWidth - (y.domain()[1] > 0 ? valuePadding : 0) ]);\n            else\n                y.range(yRange || [0, availableWidth]);\n\n            x0 = x0 || x;\n            y0 = y0 || d3.scale.linear().domain(y.domain()).range([y(0),y(0)]);\n\n            // Setup containers and skeleton of chart\n            var wrap = d3.select(this).selectAll('g.nv-wrap.nv-multibarHorizontal').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibarHorizontal');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-groups');\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n                .data(function(d) { return d }, function(d,i) { return i });\n            groups.enter().append('g')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6);\n            groups.exit().watchTransition(renderWatch, 'multibarhorizontal: exit groups')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6)\n                .remove();\n            groups\n                .attr('class', function(d,i) { return 'nv-group nv-series-' + i })\n                .classed('hover', function(d) { return d.hover })\n                .style('fill', function(d,i){ return color(d, i) })\n                .style('stroke', function(d,i){ return color(d, i) });\n            groups.watchTransition(renderWatch, 'multibarhorizontal: groups')\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', fillOpacity);\n\n            var bars = groups.selectAll('g.nv-bar')\n                .data(function(d) { return d.values });\n            bars.exit().remove();\n\n            var barsEnter = bars.enter().append('g')\n                .attr('transform', function(d,i,j) {\n                    return 'translate(' + y0(stacked ? d.y0 : 0) + ',' + (stacked ? 0 : (j * x.rangeBand() / data.length ) + x(getX(d,i))) + ')'\n                });\n\n            barsEnter.append('rect')\n                .attr('width', 0)\n                .attr('height', x.rangeBand() / (stacked ? 1 : data.length) )\n\n            bars\n                .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    dispatch.elementMouseout({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    dispatch.elementMousemove({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('click', function(d,i) {\n                    var element = this;\n                    dispatch.elementClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\"),\n                        event: d3.event,\n                        element: element\n                    });\n                    d3.event.stopPropagation();\n                })\n                .on('dblclick', function(d,i) {\n                    dispatch.elementDblClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                    d3.event.stopPropagation();\n                });\n\n            if (getYerr(data[0],0)) {\n                barsEnter.append('polyline');\n\n                bars.select('polyline')\n                    .attr('fill', 'none')\n                    .attr('points', function(d,i) {\n                        var xerr = getYerr(d,i)\n                            , mid = 0.8 * x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n                        xerr = xerr.length ? xerr : [-Math.abs(xerr), Math.abs(xerr)];\n                        xerr = xerr.map(function(e) { return y(e) - y(0); });\n                        var a = [[xerr[0],-mid], [xerr[0],mid], [xerr[0],0], [xerr[1],0], [xerr[1],-mid], [xerr[1],mid]];\n                        return a.map(function (path) { return path.join(',') }).join(' ');\n                    })\n                    .attr('transform', function(d,i) {\n                        var mid = x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n                        return 'translate(' + (getY(d,i) < 0 ? 0 : y(getY(d,i)) - y(0)) + ', ' + mid + ')'\n                    });\n            }\n\n            barsEnter.append('text');\n\n            if (showValues && !stacked) {\n                bars.select('text')\n                    .attr('text-anchor', function(d,i) { return getY(d,i) < 0 ? 'end' : 'start' })\n                    .attr('y', x.rangeBand() / (data.length * 2))\n                    .attr('dy', '.32em')\n                    .text(function(d,i) {\n                        var t = valueFormat(getY(d,i))\n                            , yerr = getYerr(d,i);\n                        if (yerr === undefined)\n                            return t;\n                        if (!yerr.length)\n                            return t + '±' + valueFormat(Math.abs(yerr));\n                        return t + '+' + valueFormat(Math.abs(yerr[1])) + '-' + valueFormat(Math.abs(yerr[0]));\n                    });\n                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n                    .select('text')\n                    .attr('x', function(d,i) { return getY(d,i) < 0 ? -4 : y(getY(d,i)) - y(0) + 4 })\n            } else {\n                bars.selectAll('text').text('');\n            }\n\n            if (showBarLabels && !stacked) {\n                barsEnter.append('text').classed('nv-bar-label',true);\n                bars.select('text.nv-bar-label')\n                    .attr('text-anchor', function(d,i) { return getY(d,i) < 0 ? 'start' : 'end' })\n                    .attr('y', x.rangeBand() / (data.length * 2))\n                    .attr('dy', '.32em')\n                    .text(function(d,i) { return getX(d,i) });\n                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n                    .select('text.nv-bar-label')\n                    .attr('x', function(d,i) { return getY(d,i) < 0 ? y(0) - y(getY(d,i)) + 4 : -4 });\n            }\n            else {\n                bars.selectAll('text.nv-bar-label').text('');\n            }\n\n            bars\n                .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive'})\n\n            if (barColor) {\n                if (!disabled) disabled = data.map(function() { return true });\n                bars\n                    .style('fill', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); })\n                    .style('stroke', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); });\n            }\n\n            if (stacked)\n                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n                    .attr('transform', function(d,i) {\n                        return 'translate(' + y(d.y1) + ',' + x(getX(d,i)) + ')'\n                    })\n                    .select('rect')\n                    .attr('width', function(d,i) {\n                        return Math.abs(y(getY(d,i) + d.y0) - y(d.y0)) || 0\n                    })\n                    .attr('height', x.rangeBand() );\n            else\n                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n                    .attr('transform', function(d,i) {\n                        //TODO: stacked must be all positive or all negative, not both?\n                        return 'translate(' +\n                            (getY(d,i) < 0 ? y(getY(d,i)) : y(0))\n                            + ',' +\n                            (d.series * x.rangeBand() / data.length\n                                +\n                                x(getX(d,i)) )\n                            + ')'\n                    })\n                    .select('rect')\n                    .attr('height', x.rangeBand() / data.length )\n                    .attr('width', function(d,i) {\n                        return Math.max(Math.abs(y(getY(d,i)) - y(0)),1) || 0\n                    });\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n\n        });\n\n        renderWatch.renderEnd('multibarHorizontal immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:   {get: function(){return width;}, set: function(_){width=_;}},\n        height:  {get: function(){return height;}, set: function(_){height=_;}},\n        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n        yErr:       {get: function(){return getYerr;}, set: function(_){getYerr=_;}},\n        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        stacked: {get: function(){return stacked;}, set: function(_){stacked=_;}},\n        showValues: {get: function(){return showValues;}, set: function(_){showValues=_;}},\n        // this shows the group name, seems pointless?\n        //showBarLabels:    {get: function(){return showBarLabels;}, set: function(_){showBarLabels=_;}},\n        disabled:     {get: function(){return disabled;}, set: function(_){disabled=_;}},\n        id:           {get: function(){return id;}, set: function(_){id=_;}},\n        valueFormat:  {get: function(){return valueFormat;}, set: function(_){valueFormat=_;}},\n        valuePadding: {get: function(){return valuePadding;}, set: function(_){valuePadding=_;}},\n        groupSpacing: {get: function(){return groupSpacing;}, set: function(_){groupSpacing=_;}},\n        fillOpacity:  {get: function(){return fillOpacity;}, set: function(_){fillOpacity=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        barColor:  {get: function(){return barColor;}, set: function(_){\n            barColor = _ ? nv.utils.getColor(_) : null;\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.multiBarHorizontalChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBarHorizontal()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , legend = nv.models.legend().height(30)\n        , controls = nv.models.legend().height(30)\n        , tooltip = nv.models.tooltip()\n        ;\n\n    var margin = {top: 30, right: 20, bottom: 50, left: 60}\n        , marginTop = null\n        , width = null\n        , height = null\n        , color = nv.utils.defaultColor()\n        , showControls = true\n        , controlLabels = {}\n        , showLegend = true\n        , showXAxis = true\n        , showYAxis = true\n        , stacked = false\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd')\n        , controlWidth = function() { return showControls ? 180 : 0 }\n        , duration = 250\n        ;\n\n    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(stacked);\n\n    xAxis\n        .orient('left')\n        .tickPadding(5)\n        .showMaxMin(false)\n        .tickFormat(function(d) { return d })\n    ;\n    yAxis\n        .orient('bottom')\n        .tickFormat(d3.format(',.1f'))\n    ;\n\n    tooltip\n        .duration(0)\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        })\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n    controls.updateState(false);\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled }),\n                stacked: stacked\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.stacked !== undefined)\n                stacked = state.stacked;\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(multibar);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() { container.transition().duration(duration).call(chart) };\n            chart.container = this;\n\n            stacked = multibar.stacked();\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disableddisabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = multibar.xScale();\n            y = multibar.yScale().clamp(true);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-multiBarHorizontalChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarHorizontalChart').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis')\n                .append('g').attr('class', 'nv-zeroLine')\n                .append('line');\n            gEnter.append('g').attr('class', 'nv-barsWrap');\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth - controlWidth());\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                g.select('.nv-legendWrap')\n                    .attr('transform', 'translate(' + controlWidth() + ',' + (-margin.top) +')');\n            }\n\n            // Controls\n            if (!showControls) {\n                 g.select('.nv-controlsWrap').selectAll('*').remove();\n            } else {\n                var controlsData = [\n                    { key: controlLabels.grouped || 'Grouped', disabled: multibar.stacked() },\n                    { key: controlLabels.stacked || 'Stacked', disabled: !multibar.stacked() }\n                ];\n\n                controls.width(controlWidth()).color(['#444', '#444', '#444']);\n                g.select('.nv-controlsWrap')\n                    .datum(controlsData)\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n                    .call(controls);\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Main Chart Component(s)\n            multibar\n                .disabled(data.map(function(series) { return series.disabled }))\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled }));\n\n            var barsWrap = g.select('.nv-barsWrap')\n                .datum(data.filter(function(d) { return !d.disabled }));\n\n            barsWrap.transition().call(multibar);\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/24, data) )\n                    .tickSize(-availableWidth, 0);\n\n                g.select('.nv-x.nv-axis').call(xAxis);\n\n                var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\n                xTicks\n                    .selectAll('line, text');\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize( -availableHeight, 0);\n\n                g.select('.nv-y.nv-axis')\n                    .attr('transform', 'translate(0,' + availableHeight + ')');\n                g.select('.nv-y.nv-axis').call(yAxis);\n            }\n\n            // Zero line\n            g.select(\".nv-zeroLine line\")\n                .attr(\"x1\", y(0))\n                .attr(\"x2\", y(0))\n                .attr(\"y1\", 0)\n                .attr(\"y2\", -availableHeight)\n            ;\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            controls.dispatch.on('legendClick', function(d,i) {\n                if (!d.disabled) return;\n                controlsData = controlsData.map(function(s) {\n                    s.disabled = true;\n                    return s;\n                });\n                d.disabled = false;\n\n                switch (d.key) {\n                    case 'Grouped':\n                    case controlLabels.grouped:\n                        multibar.stacked(false);\n                        break;\n                    case 'Stacked':\n                    case controlLabels.stacked:\n                        multibar.stacked(true);\n                        break;\n                }\n\n                state.stacked = multibar.stacked();\n                dispatch.stateChange(state);\n                stacked = multibar.stacked();\n\n                chart.update();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n\n                    state.disabled = e.disabled;\n                }\n\n                if (typeof e.stacked !== 'undefined') {\n                    multibar.stacked(e.stacked);\n                    state.stacked = e.stacked;\n                    stacked = e.stacked;\n                }\n\n                chart.update();\n            });\n        });\n        renderWatch.renderEnd('multibar horizontal chart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    multibar.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt.value = chart.x()(evt.data);\n        evt['series'] = {\n            key: evt.data.key,\n            value: chart.y()(evt.data),\n            color: evt.color\n        };\n        tooltip.data(evt).hidden(false);\n    });\n\n    multibar.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    multibar.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        showControls: {get: function(){return showControls;}, set: function(_){showControls=_;}},\n        controlLabels: {get: function(){return controlLabels;}, set: function(_){controlLabels=_;}},\n        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            multibar.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n        }},\n        barColor:  {get: function(){return multibar.barColor;}, set: function(_){\n            multibar.barColor(_);\n            legend.color(function(d,i) {return d3.rgb('#ccc').darker(i * 1.5).toString();})\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\nnv.models.multiChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 30, right: 20, bottom: 50, left: 60},\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        noData = null,\n        yDomain1,\n        yDomain2,\n        getX = function(d) { return d.x },\n        getY = function(d) { return d.y},\n        interpolate = 'linear',\n        useVoronoi = true,\n        interactiveLayer = nv.interactiveGuideline(),\n        useInteractiveGuideline = false,\n        legendRightAxisHint = ' (right axis)',\n        duration = 250\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x = d3.scale.linear(),\n        yScale1 = d3.scale.linear(),\n        yScale2 = d3.scale.linear(),\n\n        lines1 = nv.models.line().yScale(yScale1).duration(duration),\n        lines2 = nv.models.line().yScale(yScale2).duration(duration),\n\n        scatters1 = nv.models.scatter().yScale(yScale1).duration(duration),\n        scatters2 = nv.models.scatter().yScale(yScale2).duration(duration),\n\n        bars1 = nv.models.multiBar().stacked(false).yScale(yScale1).duration(duration),\n        bars2 = nv.models.multiBar().stacked(false).yScale(yScale2).duration(duration),\n\n        stack1 = nv.models.stackedArea().yScale(yScale1).duration(duration),\n        stack2 = nv.models.stackedArea().yScale(yScale2).duration(duration),\n\n        xAxis = nv.models.axis().scale(x).orient('bottom').tickPadding(5).duration(duration),\n        yAxis1 = nv.models.axis().scale(yScale1).orient('left').duration(duration),\n        yAxis2 = nv.models.axis().scale(yScale2).orient('right').duration(duration),\n\n        legend = nv.models.legend().height(30),\n        tooltip = nv.models.tooltip(),\n        dispatch = d3.dispatch();\n\n    var charts = [lines1, lines2, scatters1, scatters2, bars1, bars2, stack1, stack2];\n\n    function chart(selection) {\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n\n            chart.update = function() { container.transition().call(chart); };\n            chart.container = this;\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            var dataLines1 = data.filter(function(d) {return d.type == 'line' && d.yAxis == 1});\n            var dataLines2 = data.filter(function(d) {return d.type == 'line' && d.yAxis == 2});\n            var dataScatters1 = data.filter(function(d) {return d.type == 'scatter' && d.yAxis == 1});\n            var dataScatters2 = data.filter(function(d) {return d.type == 'scatter' && d.yAxis == 2});\n            var dataBars1 =  data.filter(function(d) {return d.type == 'bar'  && d.yAxis == 1});\n            var dataBars2 =  data.filter(function(d) {return d.type == 'bar'  && d.yAxis == 2});\n            var dataStack1 = data.filter(function(d) {return d.type == 'area' && d.yAxis == 1});\n            var dataStack2 = data.filter(function(d) {return d.type == 'area' && d.yAxis == 2});\n\n            // Display noData message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container);\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            var series1 = data.filter(function(d) {return !d.disabled && d.yAxis == 1})\n                .map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d), y: getY(d) }\n                    })\n                });\n\n            var series2 = data.filter(function(d) {return !d.disabled && d.yAxis == 2})\n                .map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d), y: getY(d) }\n                    })\n                });\n\n            x   .domain(d3.extent(d3.merge(series1.concat(series2)), function(d) { return d.x }))\n                .range([0, availableWidth]);\n\n            var wrap = container.selectAll('g.wrap.multiChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'wrap nvd3 multiChart').append('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y1 nv-axis');\n            gEnter.append('g').attr('class', 'nv-y2 nv-axis');\n            gEnter.append('g').attr('class', 'stack1Wrap');\n            gEnter.append('g').attr('class', 'stack2Wrap');\n            gEnter.append('g').attr('class', 'bars1Wrap');\n            gEnter.append('g').attr('class', 'bars2Wrap');\n            gEnter.append('g').attr('class', 'scatters1Wrap');\n            gEnter.append('g').attr('class', 'scatters2Wrap');\n            gEnter.append('g').attr('class', 'lines1Wrap');\n            gEnter.append('g').attr('class', 'lines2Wrap');\n            gEnter.append('g').attr('class', 'legendWrap');\n            gEnter.append('g').attr('class', 'nv-interactive');\n\n            var g = wrap.select('g');\n\n            var color_array = data.map(function(d,i) {\n                return data[i].color || color(d, i);\n            });\n\n            // Legend\n            if (!showLegend) {\n                g.select('.legendWrap').selectAll('*').remove();\n            } else {\n                var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n                var legendXPosition = legend.align() ? legendWidth : 0;\n\n                legend.width(legendWidth);\n                legend.color(color_array);\n\n                g.select('.legendWrap')\n                    .datum(data.map(function(series) {\n                        series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n                        series.key = series.originalKey + (series.yAxis == 1 ? '' : legendRightAxisHint);\n                        return series;\n                    }))\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                g.select('.legendWrap')\n                    .attr('transform', 'translate(' + legendXPosition + ',' + (-margin.top) +')');\n            }\n\n            lines1\n                .width(availableWidth)\n                .height(availableHeight)\n                .interpolate(interpolate)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'line'}));\n            lines2\n                .width(availableWidth)\n                .height(availableHeight)\n                .interpolate(interpolate)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'line'}));\n            scatters1\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'scatter'}));\n            scatters2\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'scatter'}));\n            bars1\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'bar'}));\n            bars2\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'bar'}));\n            stack1\n                .width(availableWidth)\n                .height(availableHeight)\n                .interpolate(interpolate)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'area'}));\n            stack2\n                .width(availableWidth)\n                .height(availableHeight)\n                .interpolate(interpolate)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'area'}));\n\n            g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var lines1Wrap = g.select('.lines1Wrap')\n                .datum(dataLines1.filter(function(d){return !d.disabled}));\n            var scatters1Wrap = g.select('.scatters1Wrap')\n                .datum(dataScatters1.filter(function(d){return !d.disabled}));\n            var bars1Wrap = g.select('.bars1Wrap')\n                .datum(dataBars1.filter(function(d){return !d.disabled}));\n            var stack1Wrap = g.select('.stack1Wrap')\n                .datum(dataStack1.filter(function(d){return !d.disabled}));\n            var lines2Wrap = g.select('.lines2Wrap')\n                .datum(dataLines2.filter(function(d){return !d.disabled}));\n            var scatters2Wrap = g.select('.scatters2Wrap')\n                .datum(dataScatters2.filter(function(d){return !d.disabled}));\n            var bars2Wrap = g.select('.bars2Wrap')\n                .datum(dataBars2.filter(function(d){return !d.disabled}));\n            var stack2Wrap = g.select('.stack2Wrap')\n                .datum(dataStack2.filter(function(d){return !d.disabled}));\n\n            var extraValue1 = dataStack1.length ? dataStack1.map(function(a){return a.values}).reduce(function(a,b){\n                return a.map(function(aVal,i){return {x: aVal.x, y: aVal.y + b[i].y}})\n            }).concat([{x:0, y:0}]) : [];\n            var extraValue2 = dataStack2.length ? dataStack2.map(function(a){return a.values}).reduce(function(a,b){\n                return a.map(function(aVal,i){return {x: aVal.x, y: aVal.y + b[i].y}})\n            }).concat([{x:0, y:0}]) : [];\n\n            yScale1 .domain(yDomain1 || d3.extent(d3.merge(series1).concat(extraValue1), function(d) { return d.y } ))\n                .range([0, availableHeight]);\n\n            yScale2 .domain(yDomain2 || d3.extent(d3.merge(series2).concat(extraValue2), function(d) { return d.y } ))\n                .range([0, availableHeight]);\n\n            lines1.yDomain(yScale1.domain());\n            scatters1.yDomain(yScale1.domain());\n            bars1.yDomain(yScale1.domain());\n            stack1.yDomain(yScale1.domain());\n\n            lines2.yDomain(yScale2.domain());\n            scatters2.yDomain(yScale2.domain());\n            bars2.yDomain(yScale2.domain());\n            stack2.yDomain(yScale2.domain());\n\n            if(dataStack1.length){d3.transition(stack1Wrap).call(stack1);}\n            if(dataStack2.length){d3.transition(stack2Wrap).call(stack2);}\n\n            if(dataBars1.length){d3.transition(bars1Wrap).call(bars1);}\n            if(dataBars2.length){d3.transition(bars2Wrap).call(bars2);}\n\n            if(dataLines1.length){d3.transition(lines1Wrap).call(lines1);}\n            if(dataLines2.length){d3.transition(lines2Wrap).call(lines2);}\n\n            if(dataScatters1.length){d3.transition(scatters1Wrap).call(scatters1);}\n            if(dataScatters2.length){d3.transition(scatters2Wrap).call(scatters2);}\n\n            xAxis\n                ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                .tickSize(-availableHeight, 0);\n\n            g.select('.nv-x.nv-axis')\n                .attr('transform', 'translate(0,' + availableHeight + ')');\n            d3.transition(g.select('.nv-x.nv-axis'))\n                .call(xAxis);\n\n            yAxis1\n                ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                .tickSize( -availableWidth, 0);\n\n\n            d3.transition(g.select('.nv-y1.nv-axis'))\n                .call(yAxis1);\n\n            yAxis2\n                ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                .tickSize( -availableWidth, 0);\n\n            d3.transition(g.select('.nv-y2.nv-axis'))\n                .call(yAxis2);\n\n            g.select('.nv-y1.nv-axis')\n                .classed('nv-disabled', series1.length ? false : true)\n                .attr('transform', 'translate(' + x.range()[0] + ',0)');\n\n            g.select('.nv-y2.nv-axis')\n                .classed('nv-disabled', series2.length ? false : true)\n                .attr('transform', 'translate(' + x.range()[1] + ',0)');\n\n            legend.dispatch.on('stateChange', function(newState) {\n                chart.update();\n            });\n\n            if(useInteractiveGuideline){\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left:margin.left, top:margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n\n            //============================================================\n            // Event Handling/Dispatching\n            //------------------------------------------------------------\n\n            function mouseover_line(evt) {\n                var yaxis = data[evt.seriesIndex].yAxis === 2 ? yAxis2 : yAxis1;\n                evt.value = evt.point.x;\n                evt.series = {\n                    value: evt.point.y,\n                    color: evt.point.color,\n                    key: evt.series.key\n                };\n                tooltip\n                    .duration(0)\n                    .headerFormatter(function(d, i) {\n                    \treturn xAxis.tickFormat()(d, i);\n                    })\n                    .valueFormatter(function(d, i) {\n                        return yaxis.tickFormat()(d, i);\n                    })\n                    .data(evt)\n                    .hidden(false);\n            }\n\n            function mouseover_scatter(evt) {\n                var yaxis = data[evt.seriesIndex].yAxis === 2 ? yAxis2 : yAxis1;\n                evt.value = evt.point.x;\n                evt.series = {\n                    value: evt.point.y,\n                    color: evt.point.color,\n                    key: evt.series.key\n                };\n                tooltip\n                    .duration(100)\n                    .headerFormatter(function(d, i) {\n                    \treturn xAxis.tickFormat()(d, i);\n                    })\n                    .valueFormatter(function(d, i) {\n                        return yaxis.tickFormat()(d, i);\n                    })\n                    .data(evt)\n                    .hidden(false);\n            }\n\n            function mouseover_stack(evt) {\n                var yaxis = data[evt.seriesIndex].yAxis === 2 ? yAxis2 : yAxis1;\n                evt.point['x'] = stack1.x()(evt.point);\n                evt.point['y'] = stack1.y()(evt.point);\n                tooltip\n                    .duration(0)\n                    .headerFormatter(function(d, i) {\n                    \treturn xAxis.tickFormat()(d, i);\n                    })\n                    .valueFormatter(function(d, i) {\n                        return yaxis.tickFormat()(d, i);\n                    })\n                    .data(evt)\n                    .hidden(false);\n            }\n\n            function mouseover_bar(evt) {\n                var yaxis = data[evt.data.series].yAxis === 2 ? yAxis2 : yAxis1;\n\n                evt.value = bars1.x()(evt.data);\n                evt['series'] = {\n                    value: bars1.y()(evt.data),\n                    color: evt.color,\n                    key: evt.data.key\n                };\n                tooltip\n                    .duration(0)\n                    .headerFormatter(function(d, i) {\n                    \treturn xAxis.tickFormat()(d, i);\n                    })\n                    .valueFormatter(function(d, i) {\n                        return yaxis.tickFormat()(d, i);\n                    })\n                    .data(evt)\n                    .hidden(false);\n            }\n\n\n\n            function clearHighlights() {\n              for(var i=0, il=charts.length; i < il; i++){\n                var chart = charts[i];\n                try {\n                  chart.clearHighlights();\n                } catch(e){}\n              }\n            }\n\n            function highlightPoint(serieIndex, pointIndex, b){\n              for(var i=0, il=charts.length; i < il; i++){\n                var chart = charts[i];\n                try {\n                  chart.highlightPoint(serieIndex, pointIndex, b);\n                } catch(e){}\n              }\n            }\n\n            if(useInteractiveGuideline){\n                interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                    clearHighlights();\n                    var singlePoint, pointIndex, pointXLocation, allData = [];\n                    data\n                    .filter(function(series, i) {\n                        series.seriesIndex = i;\n                        return !series.disabled;\n                    })\n                    .forEach(function(series,i) {\n                        var extent = x.domain();\n                        var currentValues = series.values.filter(function(d,i) {\n                            return chart.x()(d,i) >= extent[0] && chart.x()(d,i) <= extent[1];\n                        });\n\n                        pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, chart.x());\n                        var point = currentValues[pointIndex];\n                        var pointYValue = chart.y()(point, pointIndex);\n                        if (pointYValue !== null) {\n                            highlightPoint(i, pointIndex, true);\n                        }\n                        if (point === undefined) return;\n                        if (singlePoint === undefined) singlePoint = point;\n                        if (pointXLocation === undefined) pointXLocation = x(chart.x()(point,pointIndex));\n                        allData.push({\n                            key: series.key,\n                            value: pointYValue,\n                            color: color(series,series.seriesIndex),\n                            data: point,\n                            yAxis: series.yAxis == 2 ? yAxis2 : yAxis1\n                        });\n                    });\n\n                    var defaultValueFormatter = function(d,i) {\n                        var yAxis = allData[i].yAxis;\n                        return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n                    };\n\n                    interactiveLayer.tooltip\n                        .headerFormatter(function(d, i) {\n                            return xAxis.tickFormat()(d, i);\n                        })\n                        .valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter)\n                        .data({\n                            value: chart.x()( singlePoint,pointIndex ),\n                            index: pointIndex,\n                            series: allData\n                        })();\n\n                    interactiveLayer.renderGuideLine(pointXLocation);\n                });\n\n                interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                    clearHighlights();\n                });\n            } else {\n                lines1.dispatch.on('elementMouseover.tooltip', mouseover_line);\n                lines2.dispatch.on('elementMouseover.tooltip', mouseover_line);\n                lines1.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n                lines2.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n\n                scatters1.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n                scatters2.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n                scatters1.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n                scatters2.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n\n                stack1.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n                stack2.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n                stack1.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n                stack2.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n\n                bars1.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n                bars2.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n\n                bars1.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true);\n                });\n                bars2.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true);\n                });\n                bars1.dispatch.on('elementMousemove.tooltip', function(evt) {\n                    tooltip();\n                });\n                bars2.dispatch.on('elementMousemove.tooltip', function(evt) {\n                    tooltip();\n                });\n            }\n        });\n\n        return chart;\n    }\n\n    //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines1 = lines1;\n    chart.lines2 = lines2;\n    chart.scatters1 = scatters1;\n    chart.scatters2 = scatters2;\n    chart.bars1 = bars1;\n    chart.bars2 = bars2;\n    chart.stack1 = stack1;\n    chart.stack2 = stack2;\n    chart.xAxis = xAxis;\n    chart.yAxis1 = yAxis1;\n    chart.yAxis2 = yAxis2;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        yDomain1:      {get: function(){return yDomain1;}, set: function(_){yDomain1=_;}},\n        yDomain2:    {get: function(){return yDomain2;}, set: function(_){yDomain2=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        interpolate:    {get: function(){return interpolate;}, set: function(_){interpolate=_;}},\n        legendRightAxisHint:    {get: function(){return legendRightAxisHint;}, set: function(_){legendRightAxisHint=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        x: {get: function(){return getX;}, set: function(_){\n            getX = _;\n            lines1.x(_);\n            lines2.x(_);\n            scatters1.x(_);\n            scatters2.x(_);\n            bars1.x(_);\n            bars2.x(_);\n            stack1.x(_);\n            stack2.x(_);\n        }},\n        y: {get: function(){return getY;}, set: function(_){\n            getY = _;\n            lines1.y(_);\n            lines2.y(_);\n            scatters1.y(_);\n            scatters2.y(_);\n            stack1.y(_);\n            stack2.y(_);\n            bars1.y(_);\n            bars2.y(_);\n        }},\n        useVoronoi: {get: function(){return useVoronoi;}, set: function(_){\n            useVoronoi=_;\n            lines1.useVoronoi(_);\n            lines2.useVoronoi(_);\n            stack1.useVoronoi(_);\n            stack2.useVoronoi(_);\n        }},\n\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = _;\n            if (useInteractiveGuideline) {\n                lines1.interactive(false);\n                lines1.useVoronoi(false);\n                lines2.interactive(false);\n                lines2.useVoronoi(false);\n                stack1.interactive(false);\n                stack1.useVoronoi(false);\n                stack2.interactive(false);\n                stack2.useVoronoi(false);\n                scatters1.interactive(false);\n                scatters2.interactive(false);\n            }\n        }},\n\n        duration: {get: function(){return duration;}, set: function(_) {\n            duration = _;\n            [lines1, lines2, stack1, stack2, scatters1, scatters2, xAxis, yAxis1, yAxis2].forEach(function(model){\n              model.duration(duration);\n            });\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.ohlcBar = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = null\n        , height = null\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , x = d3.scale.linear()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , getOpen = function(d) { return d.open }\n        , getClose = function(d) { return d.close }\n        , getHigh = function(d) { return d.high }\n        , getLow = function(d) { return d.low }\n        , forceX = []\n        , forceY = []\n        , padData     = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n        , clipEdge = true\n        , color = nv.utils.defaultColor()\n        , interactive = false\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    function chart(selection) {\n        selection.each(function(data) {\n            container = d3.select(this);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            nv.utils.initSVG(container);\n\n            // ohlc bar width.\n            var w = (availableWidth / data[0].values.length) * .9;\n\n            // Setup Scales\n            x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX) ));\n\n            if (padData)\n                x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n            else\n                x.range(xRange || [5 + w/2, availableWidth - w/2 - 5]);\n\n            y.domain(yDomain || [\n                    d3.min(data[0].values.map(getLow).concat(forceY)),\n                    d3.max(data[0].values.map(getHigh).concat(forceY))\n                ]\n            ).range(yRange || [availableHeight, 0]);\n\n            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n            if (x.domain()[0] === x.domain()[1])\n                x.domain()[0] ?\n                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n                    : x.domain([-1,1]);\n\n            if (y.domain()[0] === y.domain()[1])\n                y.domain()[0] ?\n                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n                    : y.domain([-1,1]);\n\n            // Setup containers and skeleton of chart\n            var wrap = d3.select(this).selectAll('g.nv-wrap.nv-ohlcBar').data([data[0].values]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-ohlcBar');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-ticks');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            container\n                .on('click', function(d,i) {\n                    dispatch.chartClick({\n                        data: d,\n                        index: i,\n                        pos: d3.event,\n                        id: id\n                    });\n                });\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-chart-clip-path-' + id)\n                .append('rect');\n\n            wrap.select('#nv-chart-clip-path-' + id + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            g   .attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n\n            var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick')\n                .data(function(d) { return d });\n            ticks.exit().remove();\n\n            ticks.enter().append('path')\n                .attr('class', function(d,i,j) { return (getOpen(d,i) > getClose(d,i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i })\n                .attr('d', function(d,i) {\n                    return 'm0,0l0,'\n                        + (y(getOpen(d,i))\n                            - y(getHigh(d,i)))\n                        + 'l'\n                        + (-w/2)\n                        + ',0l'\n                        + (w/2)\n                        + ',0l0,'\n                        + (y(getLow(d,i)) - y(getOpen(d,i)))\n                        + 'l0,'\n                        + (y(getClose(d,i))\n                            - y(getLow(d,i)))\n                        + 'l'\n                        + (w/2)\n                        + ',0l'\n                        + (-w/2)\n                        + ',0z';\n                })\n                .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',' + y(getHigh(d,i)) + ')'; })\n                .attr('fill', function(d,i) { return color[0]; })\n                .attr('stroke', function(d,i) { return color[0]; })\n                .attr('x', 0 )\n                .attr('y', function(d,i) {  return y(Math.max(0, getY(d,i))) })\n                .attr('height', function(d,i) { return Math.abs(y(getY(d,i)) - y(0)) });\n\n            // the bar colors are controlled by CSS currently\n            ticks.attr('class', function(d,i,j) {\n                return (getOpen(d,i) > getClose(d,i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n            });\n\n            d3.transition(ticks)\n                .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',' + y(getHigh(d,i)) + ')'; })\n                .attr('d', function(d,i) {\n                    var w = (availableWidth / data[0].values.length) * .9;\n                    return 'm0,0l0,'\n                        + (y(getOpen(d,i))\n                            - y(getHigh(d,i)))\n                        + 'l'\n                        + (-w/2)\n                        + ',0l'\n                        + (w/2)\n                        + ',0l0,'\n                        + (y(getLow(d,i))\n                            - y(getOpen(d,i)))\n                        + 'l0,'\n                        + (y(getClose(d,i))\n                            - y(getLow(d,i)))\n                        + 'l'\n                        + (w/2)\n                        + ',0l'\n                        + (-w/2)\n                        + ',0z';\n                });\n        });\n\n        return chart;\n    }\n\n\n    //Create methods to allow outside functions to highlight a specific bar.\n    chart.highlightPoint = function(pointIndex, isHoverOver) {\n        chart.clearHighlights();\n        container.select(\".nv-ohlcBar .nv-tick-0-\" + pointIndex)\n            .classed(\"hover\", isHoverOver)\n        ;\n    };\n\n    chart.clearHighlights = function() {\n        container.select(\".nv-ohlcBar .nv-tick.hover\")\n            .classed(\"hover\", false)\n        ;\n    };\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:    {get: function(){return width;}, set: function(_){width=_;}},\n        height:   {get: function(){return height;}, set: function(_){height=_;}},\n        xScale:   {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:   {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain:  {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain:  {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:   {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:   {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        forceX:   {get: function(){return forceX;}, set: function(_){forceX=_;}},\n        forceY:   {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        padData:  {get: function(){return padData;}, set: function(_){padData=_;}},\n        clipEdge: {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        id:       {get: function(){return id;}, set: function(_){id=_;}},\n        interactive: {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\n        x:     {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:     {get: function(){return getY;}, set: function(_){getY=_;}},\n        open:  {get: function(){return getOpen();}, set: function(_){getOpen=_;}},\n        close: {get: function(){return getClose();}, set: function(_){getClose=_;}},\n        high:  {get: function(){return getHigh;}, set: function(_){getHigh=_;}},\n        low:   {get: function(){return getLow;}, set: function(_){getLow=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    != undefined ? _.top    : margin.top;\n            margin.right  = _.right  != undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   != undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\n// Code adapted from Jason Davies' \"Parallel Coordinates\"\n// http://bl.ocks.org/jasondavies/1341281\nnv.models.parallelCoordinates = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 30, right: 0, bottom: 10, left: 0}\n        , width = null\n        , height = null\n        , availableWidth = null\n        , availableHeight = null\n        , x = d3.scale.ordinal()\n        , y = {}\n        , undefinedValuesLabel = \"undefined values\"\n        , dimensionData = []\n        , enabledDimensions = []\n        , dimensionNames = []\n        , displayBrush = true\n        , color = nv.utils.defaultColor()\n        , filters = []\n        , active = []\n        , dragging = []\n        , axisWithUndefinedValues = []\n        , lineTension = 1\n        , foreground\n        , background\n        , dimensions\n        , line = d3.svg.line()\n        , axis = d3.svg.axis()\n        , dispatch = d3.dispatch('brushstart', 'brush', 'brushEnd', 'dimensionsOrder', \"stateChange\", 'elementClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd', 'activeChanged')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var container = d3.select(this);\n            availableWidth = nv.utils.availableWidth(width, container, margin);\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            nv.utils.initSVG(container);\n\n           //Convert old data to new format (name, values)\n            if (data[0].values === undefined) {\n                var newData = [];\n                data.forEach(function (d) {\n                        var val = {};\n                        var key = Object.keys(d);\n                        key.forEach(function (k) { if (k !== \"name\") val[k] = d[k] });\n                        newData.push({ key: d.name, values: val });\n                });\n                data = newData;\n            }\n\n            var dataValues = data.map(function (d) {return d.values});\n            if (active.length === 0) {\n                active = data;\n            }; //set all active before first brush call\n            \n            dimensionNames = dimensionData.sort(function (a, b) { return a.currentPosition - b.currentPosition; }).map(function (d) { return d.key });\n            enabledDimensions = dimensionData.filter(function (d) { return !d.disabled; });\n            \n            // Setup Scales\n            x.rangePoints([0, availableWidth], 1).domain(enabledDimensions.map(function (d) { return d.key; }));\n\n            //Set as true if all values on an axis are missing.\n            // Extract the list of dimensions and create a scale for each.\n            var oldDomainMaxValue = {};\n            var displayMissingValuesline = false;\n            var currentTicks = [];\n            \n            dimensionNames.forEach(function(d) {\n                var extent = d3.extent(dataValues, function (p) { return +p[d]; });\n                var min = extent[0];\n                var max = extent[1];\n                var onlyUndefinedValues = false;\n                //If there is no values to display on an axis, set the extent to 0\n                if (isNaN(min) || isNaN(max)) {\n                    onlyUndefinedValues = true;\n                    min = 0;\n                    max = 0;\n                }\n                //Scale axis if there is only one value\n                if (min === max) {\n                    min = min - 1;\n                    max = max + 1;\n                }\n                var f = filters.filter(function (k) { return k.dimension == d; });\n                if (f.length !== 0) {\n                    //If there is only NaN values, keep the existing domain.\n                    if (onlyUndefinedValues) {\n                        min = y[d].domain()[0];\n                        max = y[d].domain()[1];\n                    }\n                        //If the brush extent is > max (< min), keep the extent value.\n                    else if (!f[0].hasOnlyNaN && displayBrush) {\n                        min = min > f[0].extent[0] ? f[0].extent[0] : min;\n                        max = max < f[0].extent[1] ? f[0].extent[1] : max;\n                    }\n                        //If there is NaN values brushed be sure the brush extent is on the domain.\n                    else if (f[0].hasNaN) {\n                        max = max < f[0].extent[1] ? f[0].extent[1] : max;\n                        oldDomainMaxValue[d] = y[d].domain()[1];\n                        displayMissingValuesline = true;\n                    }\n                }\n                //Use 90% of (availableHeight - 12) for the axis range, 12 reprensenting the space necessary to display \"undefined values\" text.\n                //The remaining 10% are used to display the missingValue line.\n                y[d] = d3.scale.linear()\n                    .domain([min, max])\n                    .range([(availableHeight - 12) * 0.9, 0]);\n\n                axisWithUndefinedValues = [];\n                y[d].brush = d3.svg.brush().y(y[d]).on('brushstart', brushstart).on('brush', brush).on('brushend', brushend);\n            });\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinates').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinates');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-parallelCoordinates background');\n            gEnter.append('g').attr('class', 'nv-parallelCoordinates foreground');\n            gEnter.append('g').attr('class', 'nv-parallelCoordinates missingValuesline');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            line.interpolate('cardinal').tension(lineTension);\n            axis.orient('left');\n            var axisDrag = d3.behavior.drag()\n                        .on('dragstart', dragStart)\n                        .on('drag', dragMove)\n                        .on('dragend', dragEnd);\n\n            //Add missing value line at the bottom of the chart\n            var missingValuesline, missingValueslineText;\n            var step = x.range()[1] - x.range()[0];\n            step = isNaN(step) ? x.range()[0] : step;\n            if (!isNaN(step)) {\n                var lineData = [0 + step / 2, availableHeight - 12, availableWidth - step / 2, availableHeight - 12];\n                missingValuesline = wrap.select('.missingValuesline').selectAll('line').data([lineData]);\n                missingValuesline.enter().append('line');\n                missingValuesline.exit().remove();\n                missingValuesline.attr(\"x1\", function(d) { return d[0]; })\n                        .attr(\"y1\", function(d) { return d[1]; })\n                        .attr(\"x2\", function(d) { return d[2]; })\n                        .attr(\"y2\", function(d) { return d[3]; });\n    \n                //Add the text \"undefined values\" under the missing value line\n                missingValueslineText = wrap.select('.missingValuesline').selectAll('text').data([undefinedValuesLabel]);\n                missingValueslineText.append('text').data([undefinedValuesLabel]);\n                missingValueslineText.enter().append('text');\n                missingValueslineText.exit().remove();\n                missingValueslineText.attr(\"y\", availableHeight)\n                        //To have the text right align with the missingValues line, substract 92 representing the text size.\n                        .attr(\"x\", availableWidth - 92 - step / 2)\n                        .text(function(d) { return d; });\n            }\n            // Add grey background lines for context.\n            background = wrap.select('.background').selectAll('path').data(data);\n            background.enter().append('path');\n            background.exit().remove();\n            background.attr('d', path);\n\n            // Add blue foreground lines for focus.\n            foreground = wrap.select('.foreground').selectAll('path').data(data);\n            foreground.enter().append('path')\n            foreground.exit().remove();\n            foreground.attr('d', path)\n                .style(\"stroke-width\", function (d, i) {\n                if (isNaN(d.strokeWidth)) { d.strokeWidth = 1;} return d.strokeWidth;})\n                .attr('stroke', function (d, i) { return d.color || color(d, i); });\n            foreground.on(\"mouseover\", function (d, i) {\n                d3.select(this).classed('hover', true).style(\"stroke-width\", d.strokeWidth + 2 + \"px\").style(\"stroke-opacity\", 1);\n                dispatch.elementMouseover({\n                    label: d.name,\n                    color: d.color || color(d, i),\n                    values: d.values,\n                    dimensions: enabledDimensions\n                });\n\n            });\n            foreground.on(\"mouseout\", function (d, i) {\n                d3.select(this).classed('hover', false).style(\"stroke-width\", d.strokeWidth + \"px\").style(\"stroke-opacity\", 0.7);\n                dispatch.elementMouseout({\n                    label: d.name,\n                    index: i\n                });\n            });\n            foreground.on('mousemove', function (d, i) {\n                dispatch.elementMousemove();\n            });\n            foreground.on('click', function (d) {\n                dispatch.elementClick({\n                    id: d.id\n                });\n            });\n            // Add a group element for each dimension.\n            dimensions = g.selectAll('.dimension').data(enabledDimensions);\n            var dimensionsEnter = dimensions.enter().append('g').attr('class', 'nv-parallelCoordinates dimension');\n\n            dimensions.attr('transform', function(d) { return 'translate(' + x(d.key) + ',0)'; });\n            dimensionsEnter.append('g').attr('class', 'nv-axis');\n\n            // Add an axis and title.\n            dimensionsEnter.append('text')\n                .attr('class', 'nv-label')\n                .style(\"cursor\", \"move\")\n                .attr('dy', '-1em')\n                .attr('text-anchor', 'middle')\n                .on(\"mouseover\", function(d, i) {\n                    dispatch.elementMouseover({\n                        label: d.tooltip || d.key,\n                        color: d.color \n                    });\n                })\n                .on(\"mouseout\", function(d, i) {\n                    dispatch.elementMouseout({\n                        label: d.tooltip\n                    });\n                })\n                .on('mousemove', function (d, i) {\n                    dispatch.elementMousemove();\n                })\n                .call(axisDrag);\n\n            dimensionsEnter.append('g').attr('class', 'nv-brushBackground');\n            dimensions.exit().remove();\n            dimensions.select('.nv-label').text(function (d) { return d.key });\n\n            // Add and store a brush for each axis.\n            restoreBrush(displayBrush);\n\n            var actives = dimensionNames.filter(function (p) { return !y[p].brush.empty(); }),\n                    extents = actives.map(function (p) { return y[p].brush.extent(); });\n            var formerActive = active.slice(0);\n\n            //Restore active values\n            active = [];\n            foreground.style(\"display\", function (d) {\n                var isActive = actives.every(function (p, i) {\n                    if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) {\n                        return true;\n                    }\n                    return (extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1]) && !isNaN(parseFloat(d.values[p]));\n                });\n                if (isActive)\n                    active.push(d);\n                return !isActive ? \"none\" : null;\n\n            });\n\n            if (filters.length > 0 || !nv.utils.arrayEquals(active, formerActive)) {\n               dispatch.activeChanged(active);\n            }\n\n            // Returns the path for a given data point.\n            function path(d) {\n                return line(enabledDimensions.map(function (p) {\n                    //If value if missing, put the value on the missing value line\n                    if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key])) || displayMissingValuesline) {\n                        var domain = y[p.key].domain();\n                        var range = y[p.key].range();\n                        var min = domain[0] - (domain[1] - domain[0]) / 9;\n\n                        //If it's not already the case, allow brush to select undefined values\n                        if (axisWithUndefinedValues.indexOf(p.key) < 0) {\n\n                            var newscale = d3.scale.linear().domain([min, domain[1]]).range([availableHeight - 12, range[1]]);\n                            y[p.key].brush.y(newscale);\n                            axisWithUndefinedValues.push(p.key);\n                        }\n                        if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key]))) {\n                            return [x(p.key), y[p.key](min)];\n                        }\n                    }\n\n                    //If parallelCoordinate contain missing values show the missing values line otherwise, hide it.\n                    if (missingValuesline !== undefined) {\n                        if (axisWithUndefinedValues.length > 0 || displayMissingValuesline) {\n                            missingValuesline.style(\"display\", \"inline\");\n                            missingValueslineText.style(\"display\", \"inline\");\n                        } else {\n                            missingValuesline.style(\"display\", \"none\");\n                            missingValueslineText.style(\"display\", \"none\");\n                        }\n                    }\n                    return [x(p.key), y[p.key](d.values[p.key])];\n                }));\n            }\n\n            function restoreBrush(visible) {\n                filters.forEach(function (f) {\n                    //If filter brushed NaN values, keep the brush on the bottom of the axis.\n                    var brushDomain = y[f.dimension].brush.y().domain();\n                    if (f.hasOnlyNaN) {\n                        f.extent[1] = (y[f.dimension].domain()[1] - brushDomain[0]) * (f.extent[1] - f.extent[0]) / (oldDomainMaxValue[f.dimension] - f.extent[0]) + brushDomain[0];\n                    }\n                    if (f.hasNaN) {\n                        f.extent[0] = brushDomain[0];\n                    }\n                    if (visible)\n                        y[f.dimension].brush.extent(f.extent);\n                });\n                \n                dimensions.select('.nv-brushBackground')\n                    .each(function (d) {\n                        d3.select(this).call(y[d.key].brush);\n\n                    })\n                    .selectAll('rect')\n                    .attr('x', -8)\n                    .attr('width', 16);\n                \n                updateTicks();\n            }\n            \n            // Handles a brush event, toggling the display of foreground lines.\n            function brushstart() {\n                //If brush aren't visible, show it before brushing again.\n                if (displayBrush === false) {\n                    displayBrush = true;\n                    restoreBrush(true);\n                }\n            }\n            \n            // Handles a brush event, toggling the display of foreground lines.\n            function brush() {\n                actives = dimensionNames.filter(function (p) { return !y[p].brush.empty(); });\n                extents = actives.map(function(p) { return y[p].brush.extent(); });\n\n                filters = []; //erase current filters\n                actives.forEach(function(d,i) {\n                    filters[i] = {\n                        dimension: d,\n                        extent: extents[i],\n                        hasNaN: false,\n                        hasOnlyNaN: false\n                    }\n                });\n\n                active = []; //erase current active list\n                foreground.style('display', function(d) {\n                    var isActive = actives.every(function(p, i) {\n                        if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) return true;\n                        return (extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1]) && !isNaN(parseFloat(d.values[p]));\n                    });\n                    if (isActive) active.push(d);\n                    return isActive ? null : 'none';\n                });\n                \n                updateTicks();\n                \n                dispatch.brush({\n                    filters: filters,\n                    active: active\n                });\n            }\n            function brushend() {\n                var hasActiveBrush = actives.length > 0 ? true : false;\n                filters.forEach(function (f) {\n                    if (f.extent[0] === y[f.dimension].brush.y().domain()[0] && axisWithUndefinedValues.indexOf(f.dimension) >= 0)\n                        f.hasNaN = true;\n                    if (f.extent[1] < y[f.dimension].domain()[0])\n                        f.hasOnlyNaN = true;\n                });\n                dispatch.brushEnd(active, hasActiveBrush);\n            }           \n            function updateTicks() {\n                dimensions.select('.nv-axis')\n                    .each(function (d, i) {\n                        var f = filters.filter(function (k) { return k.dimension == d.key; });\n                        currentTicks[d.key] = y[d.key].domain();\n                        \n                        //If brush are available, display brush extent\n                        if (f.length != 0 && displayBrush)\n                        {\n                            currentTicks[d.key] = [];\n                            if (f[0].extent[1] > y[d.key].domain()[0]) \n                                currentTicks[d.key] = [f[0].extent[1]];\n                            if (f[0].extent[0] >= y[d.key].domain()[0])\n                                currentTicks[d.key].push(f[0].extent[0]);    \n                        }\n                            \n                        d3.select(this).call(axis.scale(y[d.key]).tickFormat(d.format).tickValues(currentTicks[d.key]));\n                });\n            }\n            function dragStart(d) {\n                dragging[d.key] = this.parentNode.__origin__ = x(d.key);\n                background.attr(\"visibility\", \"hidden\");\n            }\n            function dragMove(d) {\n                dragging[d.key] = Math.min(availableWidth, Math.max(0, this.parentNode.__origin__ += d3.event.x));\n                foreground.attr(\"d\", path);\n                enabledDimensions.sort(function (a, b) { return dimensionPosition(a.key) - dimensionPosition(b.key); });\n                enabledDimensions.forEach(function (d, i) { return d.currentPosition = i; });\n                x.domain(enabledDimensions.map(function (d) { return d.key; }));\n                dimensions.attr(\"transform\", function(d) { return \"translate(\" + dimensionPosition(d.key) + \")\"; });\n            }\n            function dragEnd(d, i) {\n                delete this.parentNode.__origin__;\n                delete dragging[d.key];\n                d3.select(this.parentNode).attr(\"transform\", \"translate(\" + x(d.key) + \")\");\n                foreground\n                  .attr(\"d\", path);\n                background\n                  .attr(\"d\", path)\n                  .attr(\"visibility\", null);\n\n                dispatch.dimensionsOrder(enabledDimensions);\n            }\n            function dimensionPosition(d) {\n                var v = dragging[d];\n                return v == null ? x(d) : v;\n            }\n        });\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:         {get: function(){return width;},           set: function(_){width= _;}},\n        height:        {get: function(){return height;},          set: function(_){height= _;}},\n        dimensionData: { get: function () { return dimensionData; }, set: function (_) { dimensionData = _; } },\n        displayBrush: { get: function () { return displayBrush; }, set: function (_) { displayBrush = _; } },\n        filters: { get: function () { return filters; }, set: function (_) { filters = _; } },\n        active: { get: function () { return active; }, set: function (_) { active = _; } },\n        lineTension:   {get: function(){return lineTension;},     set: function(_){lineTension = _;}},\n        undefinedValuesLabel : {get: function(){return undefinedValuesLabel;}, set: function(_){undefinedValuesLabel=_;}},\n        \n        // deprecated options\n        dimensions: {get: function () { return dimensionData.map(function (d){return d.key}); }, set: function (_) {\n            // deprecated after 1.8.1\n            nv.deprecated('dimensions', 'use dimensionData instead');\n            if (dimensionData.length === 0) {\n                _.forEach(function (k) { dimensionData.push({ key: k }) })\n            } else {\n                _.forEach(function (k, i) { dimensionData[i].key= k })\n            }\n        }},\n        dimensionNames: {get: function () { return dimensionData.map(function (d){return d.key}); }, set: function (_) {\n            // deprecated after 1.8.1\n            nv.deprecated('dimensionNames', 'use dimensionData instead');\n            dimensionNames = [];\n            if (dimensionData.length === 0) {\n                _.forEach(function (k) { dimensionData.push({ key: k }) })\n            } else {\n                _.forEach(function (k, i) { dimensionData[i].key = k })\n            }\n \n        }},\n        dimensionFormats: {get: function () { return dimensionData.map(function (d) { return d.format }); }, set: function (_) {\n            // deprecated after 1.8.1\n            nv.deprecated('dimensionFormats', 'use dimensionData instead');\n            if (dimensionData.length === 0) {\n                _.forEach(function (f) { dimensionData.push({ format: f }) })\n            } else {\n                _.forEach(function (f, i) { dimensionData[i].format = f })\n            }\n\n        }},\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    =  _.top    !== undefined ? _.top    : margin.top;\n            margin.right  =  _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom =  _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   =  _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n};\nnv.models.parallelCoordinatesChart = function () {\n        \"use strict\";\n        //============================================================\n        // Public Variables with Default Settings\n        //------------------------------------------------------------\n\n        var parallelCoordinates = nv.models.parallelCoordinates()\n        var legend = nv.models.legend()\n        var tooltip = nv.models.tooltip();\n        var dimensionTooltip = nv.models.tooltip();\n\n        var margin = { top: 0, right: 0, bottom: 0, left: 0 }\n        , marginTop = null\n        , width = null\n        , height = null\n        , showLegend = true\n        , color = nv.utils.defaultColor()\n        , state = nv.utils.state()\n        , dimensionData = []\n        , displayBrush = true\n        , defaultState = null\n        , noData = null\n        , nanValue = \"undefined\"\n        , dispatch = d3.dispatch('dimensionsOrder', 'brushEnd', 'stateChange', 'changeState', 'renderEnd')\n        , controlWidth = function () { return showControls ? 180 : 0 }\n        ;\n\n\t    //============================================================\n\n\t\t//============================================================\n        // Private Variables\n        //------------------------------------------------------------\n\n        var renderWatch = nv.utils.renderWatch(dispatch);\n\n        var stateGetter = function(data) {\n            return function() {\n                return {\n                    active: data.map(function(d) { return !d.disabled })\n                };\n            }\n        };\n\n        var stateSetter = function(data) {\n            return function(state) {\n                if(state.active !== undefined) {\n                    data.forEach(function(series, i) {\n                        series.disabled = !state.active[i];\n                    });\n                }\n            }\n        };\n\n        tooltip.contentGenerator(function(data) {\n            var str = '<table><thead><tr><td class=\"legend-color-guide\"><div style=\"background-color:' + data.color + '\"></div></td><td><strong>' + data.key + '</strong></td></tr></thead>';\n            if(data.series.length !== 0)\n            {\n                str = str + '<tbody><tr><td height =\"10px\"></td></tr>';\n                data.series.forEach(function(d){\n                    str = str + '<tr><td class=\"legend-color-guide\"><div style=\"background-color:' + d.color + '\"></div></td><td class=\"key\">' + d.key + '</td><td class=\"value\">' + d.value + '</td></tr>';\n                });\n                str = str + '</tbody>';\n            }\n            str = str + '</table>';\n            return str;\n        });\n\n        //============================================================\n        // Chart function\n        //------------------------------------------------------------\n\n        function chart(selection) {\n            renderWatch.reset();\n            renderWatch.models(parallelCoordinates);\n\n            selection.each(function(data) {\n                var container = d3.select(this);\n                nv.utils.initSVG(container);\n\n                var that = this;\n\n                var availableWidth = nv.utils.availableWidth(width, container, margin),\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\n                chart.update = function() { container.call(chart); };\n                chart.container = this;\n\n                state.setter(stateSetter(dimensionData), chart.update)\n                    .getter(stateGetter(dimensionData))\n                    .update();\n\n                //set state.disabled\n                state.disabled = dimensionData.map(function (d) { return !!d.disabled });\n\n                //Keep dimensions position in memory\n                dimensionData = dimensionData.map(function (d) {d.disabled = !!d.disabled; return d});\n                dimensionData.forEach(function (d, i) {\n                    d.originalPosition = isNaN(d.originalPosition) ? i : d.originalPosition;\n                    d.currentPosition = isNaN(d.currentPosition) ? i : d.currentPosition;\n                });\n\n               if (!defaultState) {\n                    var key;\n                    defaultState = {};\n                    for(key in state) {\n                        if(state[key] instanceof Array)\n                            defaultState[key] = state[key].slice(0);\n                        else\n                            defaultState[key] = state[key];\n                    }\n                }\n\n                // Display No Data message if there's nothing to show.\n                if(!data || !data.length) {\n                    nv.utils.noData(chart, container);\n                    return chart;\n                } else {\n                    container.selectAll('.nv-noData').remove();\n                }\n\n                //------------------------------------------------------------\n                // Setup containers and skeleton of chart\n\n                var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinatesChart').data([data]);\n                var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinatesChart').append('g');\n\n                var g = wrap.select('g');\n\n                gEnter.append('g').attr('class', 'nv-parallelCoordinatesWrap');\n                gEnter.append('g').attr('class', 'nv-legendWrap');\n\n                g.select(\"rect\")\n                    .attr(\"width\", availableWidth)\n                    .attr(\"height\", (availableHeight > 0) ? availableHeight : 0);\n\n                // Legend\n                if (!showLegend) {\n                    g.select('.nv-legendWrap').selectAll('*').remove();\n                } else {\n                    legend.width(availableWidth)\n                        .color(function (d) { return \"rgb(188,190,192)\"; });\n\n                    g.select('.nv-legendWrap')\n                        .datum(dimensionData.sort(function (a, b) { return a.originalPosition - b.originalPosition; }))\n                        .call(legend);\n\n                    if (!marginTop && legend.height() !== margin.top) {\n                        margin.top = legend.height();\n                        availableHeight = nv.utils.availableHeight(height, container, margin);\n                    }\n                    wrap.select('.nv-legendWrap')\n                       .attr('transform', 'translate( 0 ,' + (-margin.top) + ')');\n                }\n                wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n                // Main Chart Component(s)\n                parallelCoordinates\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .dimensionData(dimensionData)\n                    .displayBrush(displayBrush);\n\n\t\t        var parallelCoordinatesWrap = g.select('.nv-parallelCoordinatesWrap ')\n                  .datum(data);\n\n\t\t        parallelCoordinatesWrap.transition().call(parallelCoordinates);\n\n\t\t\t\t//============================================================\n                // Event Handling/Dispatching (in chart's scope)\n                //------------------------------------------------------------\n                //Display reset brush button\n\t\t        parallelCoordinates.dispatch.on('brushEnd', function (active, hasActiveBrush) {\n\t\t            if (hasActiveBrush) {\n\t\t                displayBrush = true;\n\t\t                dispatch.brushEnd(active);\n\t\t            } else {\n\n\t\t                displayBrush = false;\n\t\t            }\n\t\t        });\n\n\t\t        legend.dispatch.on('stateChange', function(newState) {\n\t\t            for(var key in newState) {\n\t\t                state[key] = newState[key];\n\t\t            }\n\t\t            dispatch.stateChange(state);\n\t\t            chart.update();\n\t\t        });\n\n                //Update dimensions order and display reset sorting button\n\t\t        parallelCoordinates.dispatch.on('dimensionsOrder', function (e) {\n\t\t            dimensionData.sort(function (a, b) { return a.currentPosition - b.currentPosition; });\n\t\t            var isSorted = false;\n\t\t            dimensionData.forEach(function (d, i) {\n\t\t                d.currentPosition = i;\n\t\t                if (d.currentPosition !== d.originalPosition)\n\t\t                    isSorted = true;\n\t\t            });\n\t\t            dispatch.dimensionsOrder(dimensionData, isSorted);\n\t\t        });\n\n\t\t\t\t// Update chart from a state object passed to event handler\n                dispatch.on('changeState', function (e) {\n\n                    if (typeof e.disabled !== 'undefined') {\n                        dimensionData.forEach(function (series, i) {\n                            series.disabled = e.disabled[i];\n                        });\n                        state.disabled = e.disabled;\n                    }\n                    chart.update();\n                });\n            });\n\n            renderWatch.renderEnd('parraleleCoordinateChart immediate');\n            return chart;\n        }\n\n\t\t//============================================================\n        // Event Handling/Dispatching (out of chart's scope)\n        //------------------------------------------------------------\n\n        parallelCoordinates.dispatch.on('elementMouseover.tooltip', function (evt) {\n            var tp = {\n                key: evt.label,\n                color: evt.color,\n                series: []\n             }\n            if(evt.values){\n                Object.keys(evt.values).forEach(function (d) {\n                    var dim = evt.dimensions.filter(function (dd) {return dd.key === d;})[0];\n                    if(dim){\n                        var v;\n                        if (isNaN(evt.values[d]) || isNaN(parseFloat(evt.values[d]))) {\n                            v = nanValue;\n                        } else {\n                            v = dim.format(evt.values[d]);\n                        }\n                        tp.series.push({ idx: dim.currentPosition, key: d, value: v, color: dim.color });\n                    }\n                });\n                tp.series.sort(function(a,b) {return a.idx - b.idx});\n             }\n            tooltip.data(tp).hidden(false);\n        });\n\n        parallelCoordinates.dispatch.on('elementMouseout.tooltip', function(evt) {\n            tooltip.hidden(true)\n        });\n\n        parallelCoordinates.dispatch.on('elementMousemove.tooltip', function () {\n            tooltip();\n        });\n\t\t //============================================================\n        // Expose Public Variables\n        //------------------------------------------------------------\n\n\t\t// expose chart's sub-components\n        chart.dispatch = dispatch;\n        chart.parallelCoordinates = parallelCoordinates;\n        chart.legend = legend;\n        chart.tooltip = tooltip;\n        chart.options = nv.utils.optionsFunc.bind(chart);\n\n        chart._options = Object.create({}, {\n            // simple options, just get/set the necessary values\n            width: { get: function () { return width; }, set: function (_) { width = _; } },\n            height: { get: function () { return height; }, set: function (_) { height = _; } },\n            showLegend: { get: function () { return showLegend; }, set: function (_) { showLegend = _; } },\n            defaultState: { get: function () { return defaultState; }, set: function (_) { defaultState = _; } },\n            dimensionData: { get: function () { return dimensionData; }, set: function (_) { dimensionData = _; } },\n            displayBrush: { get: function () { return displayBrush; }, set: function (_) { displayBrush = _; } },\n            noData: { get: function () { return noData; }, set: function (_) { noData = _; } },\n            nanValue: { get: function () { return nanValue; }, set: function (_) { nanValue = _; } },\n\n            // options that require extra logic in the setter\n            margin: {\n                get: function () { return margin; },\n                set: function (_) {\n                    if (_.top !== undefined) {\n                        margin.top = _.top;\n                        marginTop = _.top;\n                    }\n                    margin.right = _.right !== undefined ? _.right : margin.right;\n                    margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n                    margin.left = _.left !== undefined ? _.left : margin.left;\n                }\n            },\n            color: {get: function(){return color;}, set: function(_){\n                    color = nv.utils.getColor(_);\n                    legend.color(color);\n                    parallelCoordinates.color(color);\n                }}\n        });\n\n        nv.utils.inheritOptions(chart, parallelCoordinates);\n        nv.utils.initOptions(chart);\n\n        return chart;\n    };\nnv.models.pie = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 500\n        , height = 500\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , color = nv.utils.defaultColor()\n        , valueFormat = d3.format(',.2f')\n        , showLabels = true\n        , labelsOutside = false\n        , labelType = \"key\"\n        , labelThreshold = .02 //if slice percentage is under this, don't show label\n        , donut = false\n        , title = false\n        , growOnHover = true\n        , titleOffset = 0\n        , labelSunbeamLayout = false\n        , startAngle = false\n        , padAngle = false\n        , endAngle = false\n        , cornerRadius = 0\n        , donutRatio = 0.5\n        , duration = 250\n        , arcsRadius = []\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n        ;\n\n    var arcs = [];\n    var arcsOver = [];\n\n    //============================================================\n    // chart function\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right\n                , availableHeight = height - margin.top - margin.bottom\n                , radius = Math.min(availableWidth, availableHeight) / 2\n                , arcsRadiusOuter = []\n                , arcsRadiusInner = []\n                ;\n\n            container = d3.select(this)\n            if (arcsRadius.length === 0) {\n                var outer = radius - radius / 5;\n                var inner = donutRatio * radius;\n                for (var i = 0; i < data[0].length; i++) {\n                    arcsRadiusOuter.push(outer);\n                    arcsRadiusInner.push(inner);\n                }\n            } else {\n                if(growOnHover){\n                    arcsRadiusOuter = arcsRadius.map(function (d) { return (d.outer - d.outer / 5) * radius; });\n                    arcsRadiusInner = arcsRadius.map(function (d) { return (d.inner - d.inner / 5) * radius; });\n                    donutRatio = d3.min(arcsRadius.map(function (d) { return (d.inner - d.inner / 5); }));\n                } else {\n                    arcsRadiusOuter = arcsRadius.map(function (d) { return d.outer * radius; });\n                    arcsRadiusInner = arcsRadius.map(function (d) { return d.inner * radius; });\n                    donutRatio = d3.min(arcsRadius.map(function (d) { return d.inner; }));\n                }\n            }\n            nv.utils.initSVG(container);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('.nv-wrap.nv-pie').data(data);\n            var wrapEnter = wrap.enter().append('g').attr('class','nvd3 nv-wrap nv-pie nv-chart-' + id);\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n            var g_pie = gEnter.append('g').attr('class', 'nv-pie');\n            gEnter.append('g').attr('class', 'nv-pieLabels');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n            g.select('.nv-pie').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n            g.select('.nv-pieLabels').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n\n            //\n            container.on('click', function(d,i) {\n                dispatch.chartClick({\n                    data: d,\n                    index: i,\n                    pos: d3.event,\n                    id: id\n                });\n            });\n\n            arcs = [];\n            arcsOver = [];\n            for (var i = 0; i < data[0].length; i++) {\n\n                var arc = d3.svg.arc().outerRadius(arcsRadiusOuter[i]);\n                var arcOver = d3.svg.arc().outerRadius(arcsRadiusOuter[i] + 5);\n\n                if (startAngle !== false) {\n                    arc.startAngle(startAngle);\n                    arcOver.startAngle(startAngle);\n                }\n                if (endAngle !== false) {\n                    arc.endAngle(endAngle);\n                    arcOver.endAngle(endAngle);\n                }\n                if (donut) {\n                    arc.innerRadius(arcsRadiusInner[i]);\n                    arcOver.innerRadius(arcsRadiusInner[i]);\n                }\n\n                if (arc.cornerRadius && cornerRadius) {\n                    arc.cornerRadius(cornerRadius);\n                    arcOver.cornerRadius(cornerRadius);\n                }\n\n                arcs.push(arc);\n                arcsOver.push(arcOver);\n            }\n\n            // Setup the Pie chart and choose the data element\n            var pie = d3.layout.pie()\n                .sort(null)\n                .value(function(d) { return d.disabled ? 0 : getY(d) });\n\n            // padAngle added in d3 3.5\n            if (pie.padAngle && padAngle) {\n                pie.padAngle(padAngle);\n            }\n\n            // if title is specified and donut, put it in the middle\n            if (donut && title) {\n                g_pie.append(\"text\").attr('class', 'nv-pie-title');\n\n                wrap.select('.nv-pie-title')\n                    .style(\"text-anchor\", \"middle\")\n                    .text(function (d) {\n                        return title;\n                    })\n                    .style(\"font-size\", (Math.min(availableWidth, availableHeight)) * donutRatio * 2 / (title.length + 2) + \"px\")\n                    .attr(\"dy\", \"0.35em\") // trick to vertically center text\n                    .attr('transform', function(d, i) {\n                        return 'translate(0, '+ titleOffset + ')';\n                    });\n            }\n\n            var slices = wrap.select('.nv-pie').selectAll('.nv-slice').data(pie);\n            var pieLabels = wrap.select('.nv-pieLabels').selectAll('.nv-label').data(pie);\n\n            slices.exit().remove();\n            pieLabels.exit().remove();\n\n            var ae = slices.enter().append('g');\n            ae.attr('class', 'nv-slice');\n            ae.on('mouseover', function(d, i) {\n                d3.select(this).classed('hover', true);\n                if (growOnHover) {\n                    d3.select(this).select(\"path\").transition()\n                        .duration(70)\n                        .attr(\"d\", arcsOver[i]);\n                }\n                dispatch.elementMouseover({\n                    data: d.data,\n                    index: i,\n                    color: d3.select(this).style(\"fill\"),\n                    percent: (d.endAngle - d.startAngle) / (2 * Math.PI)\n                });\n            });\n            ae.on('mouseout', function(d, i) {\n                d3.select(this).classed('hover', false);\n                if (growOnHover) {\n                    d3.select(this).select(\"path\").transition()\n                        .duration(50)\n                        .attr(\"d\", arcs[i]);\n                }\n                dispatch.elementMouseout({data: d.data, index: i});\n            });\n            ae.on('mousemove', function(d, i) {\n                dispatch.elementMousemove({data: d.data, index: i});\n            });\n            ae.on('click', function(d, i) {\n                var element = this;\n                dispatch.elementClick({\n                    data: d.data,\n                    index: i,\n                    color: d3.select(this).style(\"fill\"),\n                    event: d3.event,\n                    element: element\n                });\n            });\n            ae.on('dblclick', function(d, i) {\n                dispatch.elementDblClick({\n                    data: d.data,\n                    index: i,\n                    color: d3.select(this).style(\"fill\")\n                });\n            });\n\n            slices.attr('fill', function(d,i) { return color(d.data, i); });\n            slices.attr('stroke', function(d,i) { return color(d.data, i); });\n\n            var paths = ae.append('path').each(function(d) {\n                this._current = d;\n            });\n\n            slices.select('path')\n                .transition()\n                .duration(duration)\n                .attr('d', function (d, i) { return arcs[i](d); })\n                .attrTween('d', arcTween);\n\n            if (showLabels) {\n                // This does the normal label\n                var labelsArc = [];\n                for (var i = 0; i < data[0].length; i++) {\n                    labelsArc.push(arcs[i]);\n\n                    if (labelsOutside) {\n                        if (donut) {\n                            labelsArc[i] = d3.svg.arc().outerRadius(arcs[i].outerRadius());\n                            if (startAngle !== false) labelsArc[i].startAngle(startAngle);\n                            if (endAngle !== false) labelsArc[i].endAngle(endAngle);\n                        }\n                    } else if (!donut) {\n                            labelsArc[i].innerRadius(0);\n                    }\n                }\n\n                pieLabels.enter().append(\"g\").classed(\"nv-label\",true).each(function(d,i) {\n                    var group = d3.select(this);\n\n                    group.attr('transform', function (d, i) {\n                        if (labelSunbeamLayout) {\n                            d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n                            d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n                            var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n                            if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                                rotateAngle -= 90;\n                            } else {\n                                rotateAngle += 90;\n                            }\n                            return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n                        } else {\n                            d.outerRadius = radius + 10; // Set Outer Coordinate\n                            d.innerRadius = radius + 15; // Set Inner Coordinate\n                            return 'translate(' + labelsArc[i].centroid(d) + ')'\n                        }\n                    });\n\n                    group.append('rect')\n                        .style('stroke', '#fff')\n                        .style('fill', '#fff')\n                        .attr(\"rx\", 3)\n                        .attr(\"ry\", 3);\n\n                    group.append('text')\n                        .style('text-anchor', labelSunbeamLayout ? ((d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end') : 'middle') //center the text on it's origin or begin/end if orthogonal aligned\n                        .style('fill', '#000')\n                });\n\n                var labelLocationHash = {};\n                var avgHeight = 14;\n                var avgWidth = 140;\n                var createHashKey = function(coordinates) {\n                    return Math.floor(coordinates[0]/avgWidth) * avgWidth + ',' + Math.floor(coordinates[1]/avgHeight) * avgHeight;\n                };\n                var getSlicePercentage = function(d) {\n                    return (d.endAngle - d.startAngle) / (2 * Math.PI);\n                };\n\n                pieLabels.watchTransition(renderWatch, 'pie labels').attr('transform', function (d, i) {\n                    if (labelSunbeamLayout) {\n                        d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n                        d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n                        var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n                        if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                            rotateAngle -= 90;\n                        } else {\n                            rotateAngle += 90;\n                        }\n                        return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n                    } else {\n                        d.outerRadius = radius + 10; // Set Outer Coordinate\n                        d.innerRadius = radius + 15; // Set Inner Coordinate\n\n                        /*\n                        Overlapping pie labels are not good. What this attempts to do is, prevent overlapping.\n                        Each label location is hashed, and if a hash collision occurs, we assume an overlap.\n                        Adjust the label's y-position to remove the overlap.\n                        */\n                        var center = labelsArc[i].centroid(d);\n                        var percent = getSlicePercentage(d);\n                        if (d.value && percent >= labelThreshold) {\n                            var hashKey = createHashKey(center);\n                            if (labelLocationHash[hashKey]) {\n                                center[1] -= avgHeight;\n                            }\n                            labelLocationHash[createHashKey(center)] = true;\n                        }\n                        return 'translate(' + center + ')'\n                    }\n                });\n\n                pieLabels.select(\".nv-label text\")\n                    .style('text-anchor', function(d,i) {\n                        //center the text on it's origin or begin/end if orthogonal aligned\n                        return labelSunbeamLayout ? ((d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end') : 'middle';\n                    })\n                    .text(function(d, i) {\n                        var percent = getSlicePercentage(d);\n                        var label = '';\n                        if (!d.value || percent < labelThreshold) return '';\n\n                        if(typeof labelType === 'function') {\n                            label = labelType(d, i, {\n                                'key': getX(d.data),\n                                'value': getY(d.data),\n                                'percent': valueFormat(percent)\n                            });\n                        } else {\n                            switch (labelType) {\n                                case 'key':\n                                    label = getX(d.data);\n                                    break;\n                                case 'value':\n                                    label = valueFormat(getY(d.data));\n                                    break;\n                                case 'percent':\n                                    label = d3.format('%')(percent);\n                                    break;\n                            }\n                        }\n                        return label;\n                    })\n                ;\n            }\n\n\n            // Computes the angle of an arc, converting from radians to degrees.\n            function angle(d) {\n                var a = (d.startAngle + d.endAngle) * 90 / Math.PI - 90;\n                return a > 90 ? a - 180 : a;\n            }\n\n            function arcTween(a, idx) {\n                a.endAngle = isNaN(a.endAngle) ? 0 : a.endAngle;\n                a.startAngle = isNaN(a.startAngle) ? 0 : a.startAngle;\n                if (!donut) a.innerRadius = 0;\n                var i = d3.interpolate(this._current, a);\n                this._current = i(0);\n                return function (t) {\n                    return arcs[idx](i(t));\n                };\n            }\n        });\n\n        renderWatch.renderEnd('pie immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        arcsRadius: { get: function () { return arcsRadius; }, set: function (_) { arcsRadius = _; } },\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLabels: {get: function(){return showLabels;}, set: function(_){showLabels=_;}},\n        title:      {get: function(){return title;}, set: function(_){title=_;}},\n        titleOffset:    {get: function(){return titleOffset;}, set: function(_){titleOffset=_;}},\n        labelThreshold: {get: function(){return labelThreshold;}, set: function(_){labelThreshold=_;}},\n        valueFormat:    {get: function(){return valueFormat;}, set: function(_){valueFormat=_;}},\n        x:          {get: function(){return getX;}, set: function(_){getX=_;}},\n        id:         {get: function(){return id;}, set: function(_){id=_;}},\n        endAngle:   {get: function(){return endAngle;}, set: function(_){endAngle=_;}},\n        startAngle: {get: function(){return startAngle;}, set: function(_){startAngle=_;}},\n        padAngle:   {get: function(){return padAngle;}, set: function(_){padAngle=_;}},\n        cornerRadius: {get: function(){return cornerRadius;}, set: function(_){cornerRadius=_;}},\n        donutRatio:   {get: function(){return donutRatio;}, set: function(_){donutRatio=_;}},\n        labelsOutside: {get: function(){return labelsOutside;}, set: function(_){labelsOutside=_;}},\n        labelSunbeamLayout: {get: function(){return labelSunbeamLayout;}, set: function(_){labelSunbeamLayout=_;}},\n        donut:              {get: function(){return donut;}, set: function(_){donut=_;}},\n        growOnHover:        {get: function(){return growOnHover;}, set: function(_){growOnHover=_;}},\n\n        // depreciated after 1.7.1\n        pieLabelsOutside: {get: function(){return labelsOutside;}, set: function(_){\n            labelsOutside=_;\n            nv.deprecated('pieLabelsOutside', 'use labelsOutside instead');\n        }},\n        // depreciated after 1.7.1\n        donutLabelsOutside: {get: function(){return labelsOutside;}, set: function(_){\n            labelsOutside=_;\n            nv.deprecated('donutLabelsOutside', 'use labelsOutside instead');\n        }},\n        // deprecated after 1.7.1\n        labelFormat: {get: function(){ return valueFormat;}, set: function(_) {\n            valueFormat=_;\n            nv.deprecated('labelFormat','use valueFormat instead');\n        }},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;\n            margin.right  = typeof _.right  != 'undefined' ? _.right  : margin.right;\n            margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n            margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }},\n        y: {get: function(){return getY;}, set: function(_){\n            getY=d3.functor(_);\n        }},\n        color: {get: function(){return color;}, set: function(_){\n            color=nv.utils.getColor(_);\n        }},\n        labelType:          {get: function(){return labelType;}, set: function(_){\n            labelType= _ || 'key';\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\nnv.models.pieChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var pie = nv.models.pie();\n    var legend = nv.models.legend();\n    var tooltip = nv.models.tooltip();\n\n    var margin = {top: 30, right: 20, bottom: 20, left: 20}\n        , marginTop = null\n        , width = null\n        , height = null\n        , showTooltipPercent = false\n        , showLegend = true\n        , legendPosition = \"top\"\n        , color = nv.utils.defaultColor()\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , duration = 250\n        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd')\n        ;\n\n    tooltip\n        .duration(0)\n        .headerEnabled(false)\n        .valueFormatter(function(d, i) {\n            return pie.valueFormat()(d, i);\n        });\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled })\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.active !== undefined) {\n                data.forEach(function (series, i) {\n                    series.disabled = !state.active[i];\n                });\n            }\n        }\n    };\n\n    //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(pie);\n\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            var that = this;\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() { container.transition().call(chart); };\n            chart.container = this;\n\n            state.setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            //set state.disabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length) {\n                nv.utils.noData(chart, container);\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-pieChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pieChart').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-pieWrap');\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                if (legendPosition === \"top\") {\n                    legend.width( availableWidth ).key(pie.x());\n\n                    wrap.select('.nv-legendWrap')\n                        .datum(data)\n                        .call(legend);\n\n                    if (!marginTop && legend.height() !== margin.top) {\n                        margin.top = legend.height();\n                        availableHeight = nv.utils.availableHeight(height, container, margin);\n                    }\n\n                    wrap.select('.nv-legendWrap')\n                        .attr('transform', 'translate(0,' + (-margin.top) +')');\n                } else if (legendPosition === \"right\") {\n                    var legendWidth = nv.models.legend().width();\n                    if (availableWidth / 2 < legendWidth) {\n                        legendWidth = (availableWidth / 2)\n                    }\n                    legend.height(availableHeight).key(pie.x());\n                    legend.width(legendWidth);\n                    availableWidth -= legend.width();\n\n                    wrap.select('.nv-legendWrap')\n                        .datum(data)\n                        .call(legend)\n                        .attr('transform', 'translate(' + (availableWidth) +',0)');\n                }\n            }\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Main Chart Component(s)\n            pie.width(availableWidth).height(availableHeight);\n            var pieWrap = g.select('.nv-pieWrap').datum([data]);\n            d3.transition(pieWrap).call(pie);\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState) {\n                    state[key] = newState[key];\n                }\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n                    state.disabled = e.disabled;\n                }\n                chart.update();\n            });\n        });\n\n        renderWatch.renderEnd('pieChart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    pie.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt['series'] = {\n            key: chart.x()(evt.data),\n            value: chart.y()(evt.data),\n            color: evt.color,\n            percent: evt.percent\n        };\n        if (!showTooltipPercent) {\n            delete evt.percent;\n            delete evt.series.percent;\n        }\n        tooltip.data(evt).hidden(false);\n    });\n\n    pie.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    pie.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.legend = legend;\n    chart.dispatch = dispatch;\n    chart.pie = pie;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    // use Object get/set functionality to map between vars and chart functions\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:              {get: function(){return width;},                set: function(_){width=_;}},\n        height:             {get: function(){return height;},               set: function(_){height=_;}},\n        noData:             {get: function(){return noData;},               set: function(_){noData=_;}},\n        showTooltipPercent: {get: function(){return showTooltipPercent;},   set: function(_){showTooltipPercent=_;}},\n        showLegend:         {get: function(){return showLegend;},           set: function(_){showLegend=_;}},\n        legendPosition:     {get: function(){return legendPosition;},       set: function(_){legendPosition=_;}},\n        defaultState:       {get: function(){return defaultState;},         set: function(_){defaultState=_;}},\n\n        // options that require extra logic in the setter\n        color: {get: function(){return color;}, set: function(_){\n            color = _;\n            legend.color(color);\n            pie.color(color);\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            pie.duration(duration);\n        }},\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }}\n    });\n    nv.utils.inheritOptions(chart, pie);\n    nv.utils.initOptions(chart);\n    return chart;\n};\nnv.models.sankey = function() {\n    'use strict';\n\n    // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sankey = {},\n        nodeWidth = 24,\n        nodePadding = 8,\n        size = [1, 1],\n        nodes = [],\n        links = [],\n        sinksRight = true;\n\n    var layout = function(iterations) {\n        computeNodeLinks();\n        computeNodeValues();\n        computeNodeBreadths();\n        computeNodeDepths(iterations);\n    };\n\n    var relayout = function() {\n        computeLinkDepths();\n    };\n\n    // SVG path data generator, to be used as 'd' attribute on 'path' element selection.\n    var link = function() {\n        var curvature = .5;\n\n        function link(d) {\n\n            var x0 = d.source.x + d.source.dx,\n                x1 = d.target.x,\n                xi = d3.interpolateNumber(x0, x1),\n                x2 = xi(curvature),\n                x3 = xi(1 - curvature),\n                y0 = d.source.y + d.sy + d.dy / 2,\n                y1 = d.target.y + d.ty + d.dy / 2;\n            var linkPath = 'M' + x0 + ',' + y0\n                + 'C' + x2 + ',' + y0\n                + ' ' + x3 + ',' + y1\n                + ' ' + x1 + ',' + y1;\n            return linkPath;\n        }\n\n        link.curvature = function(_) {\n            if (!arguments.length) return curvature;\n            curvature = +_;\n            return link;\n        };\n\n        return link;\n    };\n\n    // Y-position of the middle of a node.\n    var center = function(node) {\n        return node.y + node.dy / 2;\n    };\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    // Populate the sourceLinks and targetLinks for each node.\n    // Also, if the source and target are not objects, assume they are indices.\n    function computeNodeLinks() {\n        nodes.forEach(function(node) {\n            // Links that have this node as source.\n            node.sourceLinks = [];\n            // Links that have this node as target.\n            node.targetLinks = [];\n        });\n        links.forEach(function(link) {\n            var source = link.source,\n                target = link.target;\n            if (typeof source === 'number') source = link.source = nodes[link.source];\n            if (typeof target === 'number') target = link.target = nodes[link.target];\n            source.sourceLinks.push(link);\n            target.targetLinks.push(link);\n        });\n    }\n\n    // Compute the value (size) of each node by summing the associated links.\n    function computeNodeValues() {\n        nodes.forEach(function(node) {\n            node.value = Math.max(\n                d3.sum(node.sourceLinks, value),\n                d3.sum(node.targetLinks, value)\n            );\n        });\n    }\n\n    // Iteratively assign the breadth (x-position) for each node.\n    // Nodes are assigned the maximum breadth of incoming neighbors plus one;\n    // nodes with no incoming links are assigned breadth zero, while\n    // nodes with no outgoing links are assigned the maximum breadth.\n    function computeNodeBreadths() {\n        //\n        var remainingNodes = nodes,\n            nextNodes,\n            x = 0;\n\n        // Work from left to right.\n        // Keep updating the breath (x-position) of nodes that are target of recently updated nodes.\n        //\n        while (remainingNodes.length && x < nodes.length) {\n            nextNodes = [];\n            remainingNodes.forEach(function(node) {\n                node.x = x;\n                node.dx = nodeWidth;\n                node.sourceLinks.forEach(function(link) {\n                    if (nextNodes.indexOf(link.target) < 0) {\n                        nextNodes.push(link.target);\n                    }\n                });\n            });\n            remainingNodes = nextNodes;\n            ++x;\n            //\n        }\n\n        // Optionally move pure sinks always to the right.\n        if (sinksRight) {\n            moveSinksRight(x);\n        }\n\n        scaleNodeBreadths((size[0] - nodeWidth) / (x - 1));\n    }\n\n    function moveSourcesRight() {\n        nodes.forEach(function(node) {\n            if (!node.targetLinks.length) {\n                node.x = d3.min(node.sourceLinks, function(d) { return d.target.x; }) - 1;\n            }\n        });\n    }\n\n    function moveSinksRight(x) {\n        nodes.forEach(function(node) {\n            if (!node.sourceLinks.length) {\n                node.x = x - 1;\n            }\n        });\n    }\n\n    function scaleNodeBreadths(kx) {\n        nodes.forEach(function(node) {\n            node.x *= kx;\n        });\n    }\n\n    // Compute the depth (y-position) for each node.\n    function computeNodeDepths(iterations) {\n        // Group nodes by breath.\n        var nodesByBreadth = d3.nest()\n            .key(function(d) { return d.x; })\n            .sortKeys(d3.ascending)\n            .entries(nodes)\n            .map(function(d) { return d.values; });\n\n        //\n        initializeNodeDepth();\n        resolveCollisions();\n        computeLinkDepths();\n        for (var alpha = 1; iterations > 0; --iterations) {\n            relaxRightToLeft(alpha *= .99);\n            resolveCollisions();\n            computeLinkDepths();\n            relaxLeftToRight(alpha);\n            resolveCollisions();\n            computeLinkDepths();\n        }\n\n        function initializeNodeDepth() {\n            // Calculate vertical scaling factor.\n            var ky = d3.min(nodesByBreadth, function(nodes) {\n                return (size[1] - (nodes.length - 1) * nodePadding) / d3.sum(nodes, value);\n            });\n\n            nodesByBreadth.forEach(function(nodes) {\n                nodes.forEach(function(node, i) {\n                    node.y = i;\n                    node.dy = node.value * ky;\n                });\n            });\n\n            links.forEach(function(link) {\n                link.dy = link.value * ky;\n            });\n        }\n\n        function relaxLeftToRight(alpha) {\n            nodesByBreadth.forEach(function(nodes, breadth) {\n                nodes.forEach(function(node) {\n                    if (node.targetLinks.length) {\n                        // Value-weighted average of the y-position of source node centers linked to this node.\n                        var y = d3.sum(node.targetLinks, weightedSource) / d3.sum(node.targetLinks, value);\n                        node.y += (y - center(node)) * alpha;\n                    }\n                });\n            });\n\n            function weightedSource(link) {\n                return (link.source.y + link.sy + link.dy / 2) * link.value;\n            }\n        }\n\n        function relaxRightToLeft(alpha) {\n            nodesByBreadth.slice().reverse().forEach(function(nodes) {\n                nodes.forEach(function(node) {\n                    if (node.sourceLinks.length) {\n                        // Value-weighted average of the y-positions of target nodes linked to this node.\n                        var y = d3.sum(node.sourceLinks, weightedTarget) / d3.sum(node.sourceLinks, value);\n                        node.y += (y - center(node)) * alpha;\n                    }\n                });\n            });\n\n            function weightedTarget(link) {\n                return (link.target.y + link.ty + link.dy / 2) * link.value;\n            }\n        }\n\n        function resolveCollisions() {\n            nodesByBreadth.forEach(function(nodes) {\n                var node,\n                    dy,\n                    y0 = 0,\n                    n = nodes.length,\n                    i;\n\n                // Push any overlapping nodes down.\n                nodes.sort(ascendingDepth);\n                for (i = 0; i < n; ++i) {\n                    node = nodes[i];\n                    dy = y0 - node.y;\n                    if (dy > 0) node.y += dy;\n                    y0 = node.y + node.dy + nodePadding;\n                }\n\n                // If the bottommost node goes outside the bounds, push it back up.\n                dy = y0 - nodePadding - size[1];\n                if (dy > 0) {\n                    y0 = node.y -= dy;\n\n                    // Push any overlapping nodes back up.\n                    for (i = n - 2; i >= 0; --i) {\n                        node = nodes[i];\n                        dy = node.y + node.dy + nodePadding - y0;\n                        if (dy > 0) node.y -= dy;\n                        y0 = node.y;\n                    }\n                }\n            });\n        }\n\n        function ascendingDepth(a, b) {\n            return a.y - b.y;\n        }\n    }\n\n    // Compute y-offset of the source endpoint (sy) and target endpoints (ty) of links,\n    // relative to the source/target node's y-position.\n    function computeLinkDepths() {\n        nodes.forEach(function(node) {\n            node.sourceLinks.sort(ascendingTargetDepth);\n            node.targetLinks.sort(ascendingSourceDepth);\n        });\n        nodes.forEach(function(node) {\n            var sy = 0, ty = 0;\n            node.sourceLinks.forEach(function(link) {\n                link.sy = sy;\n                sy += link.dy;\n            });\n            node.targetLinks.forEach(function(link) {\n                link.ty = ty;\n                ty += link.dy;\n            });\n        });\n\n        function ascendingSourceDepth(a, b) {\n            return a.source.y - b.source.y;\n        }\n\n        function ascendingTargetDepth(a, b) {\n            return a.target.y - b.target.y;\n        }\n    }\n\n    // Value property accessor.\n    function value(x) {\n        return x.value;\n    }\n\n    sankey.options = nv.utils.optionsFunc.bind(sankey);\n    sankey._options = Object.create({}, {\n        nodeWidth:    {get: function(){return nodeWidth;},   set: function(_){nodeWidth=+_;}},\n        nodePadding:  {get: function(){return nodePadding;}, set: function(_){nodePadding=_;}},\n        nodes:        {get: function(){return nodes;},       set: function(_){nodes=_;}},\n        links:        {get: function(){return links ;},      set: function(_){links=_;}},\n        size:         {get: function(){return size;},        set: function(_){size=_;}},\n        sinksRight:   {get: function(){return sinksRight;},  set: function(_){sinksRight=_;}},\n\n        layout:       {get: function(){layout(32);},         set: function(_){layout(_);}},\n        relayout:     {get: function(){relayout();},         set: function(_){}},\n        center:       {get: function(){return center();},    set: function(_){\n            if(typeof _ === 'function'){\n                center=_;\n            }\n        }},\n        link:         {get: function(){return link();},      set: function(_){\n            if(typeof _ === 'function'){\n                link=_;\n            }\n            return link();\n        }}\n    });\n\n    nv.utils.initOptions(sankey);\n\n    return sankey;\n};\nnv.models.sankeyChart = function() {\n    \"use strict\";\n\n    // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 5, right: 0, bottom: 5, left: 0}\n        , sankey = nv.models.sankey()\n        , width = 600\n        , height = 400\n        , nodeWidth = 36\n        , nodePadding =  40\n        , units = 'units'\n        , center = undefined\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var formatNumber = d3.format(',.0f');    // zero decimal places\n    var format = function(d) {\n        return formatNumber(d) + ' ' + units;\n    };\n    var color = d3.scale.category20();\n    var linkTitle = function(d){\n        return d.source.name + ' → ' + d.target.name + '\\n' + format(d.value);\n    };\n    var nodeFillColor = function(d){\n        return d.color = color(d.name.replace(/ .*/, ''));\n    };\n    var nodeStrokeColor = function(d){\n        return d3.rgb(d.color).darker(2);\n    };\n    var nodeTitle = function(d){\n        return d.name + '\\n' + format(d.value);\n    };\n\n    var showError = function(element, message) {\n        element.append('text')\n            .attr('x', 0)\n            .attr('y', 0)\n            .attr('class', 'nvd3-sankey-chart-error')\n            .attr('text-anchor', 'middle')\n            .text(message);\n    };\n\n    function chart(selection) {\n        selection.each(function(data) {\n\n            var testData = {\n                nodes:\n                    [\n                        {'node': 1, 'name': 'Test 1'},\n                        {'node': 2, 'name': 'Test 2'},\n                        {'node': 3, 'name': 'Test 3'},\n                        {'node': 4, 'name': 'Test 4'},\n                        {'node': 5, 'name': 'Test 5'},\n                        {'node': 6, 'name': 'Test 6'}\n                    ],\n                links:\n                    [\n                        {'source': 0, 'target': 1, 'value': 2295},\n                        {'source': 0, 'target': 5, 'value': 1199},\n                        {'source': 1, 'target': 2, 'value': 1119},\n                        {'source': 1, 'target': 5, 'value': 1176},\n                        {'source': 2, 'target': 3, 'value': 487},\n                        {'source': 2, 'target': 5, 'value': 632},\n                        {'source': 3, 'target': 4, 'value': 301},\n                        {'source': 3, 'target': 5, 'value': 186}\n                    ]\n            };\n\n            // Error handling\n            var isDataValid = false;\n            var dataAvailable = false;\n\n            // check if data is valid\n            if(\n                (typeof data['nodes'] === 'object' && data['nodes'].length) >= 0 &&\n                (typeof data['links'] === 'object' && data['links'].length) >= 0\n            ){\n                isDataValid = true;\n            }\n\n            // check if data is available\n            if(\n                data['nodes'] && data['nodes'].length > 0 &&\n                data['links'] && data['links'].length > 0\n            ) {\n                dataAvailable = true;\n            }\n\n            // show error\n            if(!isDataValid) {\n                console.error('NVD3 Sankey chart error:', 'invalid data format for', data);\n                console.info('Valid data format is: ', testData, JSON.stringify(testData));\n                showError(selection, 'Error loading chart, data is invalid');\n                return false;\n            }\n\n            // TODO use nv.utils.noData\n            if(!dataAvailable) {\n                showError(selection, 'No data available');\n                return false;\n            }\n\n            // No errors, continue\n\n            // append the svg canvas to the page\n            var svg = selection.append('svg')\n                .attr('width', width)\n                .attr('height', height)\n                .append('g')\n                .attr('class', 'nvd3 nv-wrap nv-sankeyChart');\n\n            // Set the sankey diagram properties\n            sankey\n                .nodeWidth(nodeWidth)\n                .nodePadding(nodePadding)\n                .size([width, height]);\n\n            var path = sankey.link();\n\n            sankey\n                .nodes(data.nodes)\n                .links(data.links)\n                .layout(32)\n                .center(center);\n\n            // add in the links\n            var link = svg.append('g').selectAll('.link')\n                .data(data.links)\n                .enter().append('path')\n                .attr('class', 'link')\n                .attr('d', path)\n                .style('stroke-width', function(d) { return Math.max(1, d.dy); })\n            .sort(function(a,b) { return b.dy - a.dy; });\n\n            // add the link titles\n            link.append('title')\n                .text(linkTitle);\n\n            // add in the nodes\n            var node = svg.append('g').selectAll('.node')\n                .data(data.nodes)\n                .enter().append('g')\n                .attr('class', 'node')\n                .attr('transform', function(d) { return 'translate(' + d.x + ',' + d.y + ')'; })\n                .call(\n                    d3.behavior\n                        .drag()\n                        .origin(function(d) { return d; })\n                        .on('dragstart', function() {\n                            this.parentNode.appendChild(this);\n                        })\n                        .on('drag', dragmove)\n                );\n\n            // add the rectangles for the nodes\n            node.append('rect')\n                .attr('height', function(d) { return d.dy; })\n                .attr('width', sankey.nodeWidth())\n                .style('fill', nodeFillColor)\n                .style('stroke', nodeStrokeColor)\n                .append('title')\n                .text(nodeTitle);\n\n            // add in the title for the nodes\n            node.append('text')\n                .attr('x', -6)\n                .attr('y', function(d) { return d.dy / 2; })\n                .attr('dy', '.35em')\n                .attr('text-anchor', 'end')\n                .attr('transform', null)\n                .text(function(d) { return d.name; })\n                .filter(function(d) { return d.x < width / 2; })\n                .attr('x', 6 + sankey.nodeWidth())\n                .attr('text-anchor', 'start');\n\n            // the function for moving the nodes\n            function dragmove(d) {\n                d3.select(this).attr('transform',\n                'translate(' + d.x + ',' + (\n                    d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))\n                ) + ')');\n                sankey.relayout();\n                link.attr('d', path);\n            }\n        });\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        units:           {get: function(){return units;},       set: function(_){units=_;}},\n        width:           {get: function(){return width;},       set: function(_){width=_;}},\n        height:          {get: function(){return height;},      set: function(_){height=_;}},\n        format:          {get: function(){return format;},      set: function(_){format=_;}},\n        linkTitle:       {get: function(){return linkTitle;},   set: function(_){linkTitle=_;}},\n        nodeWidth:       {get: function(){return nodeWidth;},   set: function(_){nodeWidth=_;}},\n        nodePadding:     {get: function(){return nodePadding;}, set: function(_){nodePadding=_;}},\n        center:          {get: function(){return center},       set: function(_){center=_}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        nodeStyle: {get: function(){return {};}, set: function(_){\n            nodeFillColor   = _.fillColor   !== undefined ? _.fillColor   : nodeFillColor;\n            nodeStrokeColor = _.strokeColor !== undefined ? _.strokeColor : nodeStrokeColor;\n            nodeTitle       = _.title       !== undefined ? _.title       : nodeTitle;\n        }}\n\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.scatter = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin       = {top: 0, right: 0, bottom: 0, left: 0}\n        , width        = null\n        , height       = null\n        , color        = nv.utils.defaultColor() // chooses color\n        , pointBorderColor = null\n        , id           = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't select one\n        , container    = null\n        , x            = d3.scale.linear()\n        , y            = d3.scale.linear()\n        , z            = d3.scale.linear() //linear because d3.svg.shape.size is treated as area\n        , getX         = function(d) { return d.x } // accessor to get the x value\n        , getY         = function(d) { return d.y } // accessor to get the y value\n        , getSize      = function(d) { return d.size || 1} // accessor to get the point size\n        , getShape     = function(d) { return d.shape || 'circle' } // accessor to get point shape\n        , forceX       = [] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n        , forceY       = [] // List of numbers to Force into the Y scale\n        , forceSize    = [] // List of numbers to Force into the Size scale\n        , interactive  = true // If true, plots a voronoi overlay for advanced point intersection\n        , pointActive  = function(d) { return !d.notActive } // any points that return false will be filtered out\n        , padData      = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n        , padDataOuter = .1 //outerPadding to imitate ordinal scale outer padding\n        , clipEdge     = false // if true, masks points within x and y scale\n        , clipVoronoi  = true // if true, masks each point with a circle... can turn off to slightly increase performance\n        , showVoronoi  = false // display the voronoi areas\n        , clipRadius   = function() { return 25 } // function to get the radius for voronoi point clips\n        , xDomain      = null // Override x domain (skips the calculation from data)\n        , yDomain      = null // Override y domain\n        , xRange       = null // Override x range\n        , yRange       = null // Override y range\n        , sizeDomain   = null // Override point size domain\n        , sizeRange    = null\n        , singlePoint  = false\n        , dispatch     = d3.dispatch('elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'renderEnd')\n        , useVoronoi   = true\n        , duration     = 250\n        , interactiveUpdateDelay = 300\n        , showLabels    = false\n        ;\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0, z0 // used to store previous scales\n        , width0\n        , height0\n        , timeoutID\n        , needsUpdate = false // Flag for when the points are visually updating, but the interactive layer is behind, to disable tooltips\n        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n        , _sizeRange_def = [16, 256]\n        , _cache = {}\n        ;\n\n    function getCache(d) {\n        var key, val;\n        key = d[0].series + ':' + d[1];\n        val = _cache[key] = _cache[key] || {};\n        return val;\n    }\n\n    function delCache(d) {\n        var key, val;\n        key = d[0].series + ':' + d[1];\n        delete _cache[key];\n    }\n\n    function getDiffs(d) {\n        var i, key, val,\n            cache = getCache(d),\n            diffs = false;\n        for (i = 1; i < arguments.length; i += 2) {\n            key = arguments[i];\n            val = arguments[i + 1](d[0], d[1]);\n            if (cache[key] !== val || !cache.hasOwnProperty(key)) {\n                cache[key] = val;\n                diffs = true;\n            }\n        }\n        return diffs;\n    }\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            container = d3.select(this);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            nv.utils.initSVG(container);\n\n            //add series index to each data point for reference\n            data.forEach(function(series, i) {\n                series.values.forEach(function(point) {\n                    point.series = i;\n                });\n            });\n\n            // Setup Scales\n            var logScale = chart.yScale().name === d3.scale.log().name ? true : false;\n            // remap and flatten the data for use in calculating the scales' domains\n            var seriesData = (xDomain && yDomain && sizeDomain) ? [] : // if we know xDomain and yDomain and sizeDomain, no need to calculate.... if Size is constant remember to set sizeDomain to speed up performance\n                d3.merge(\n                    data.map(function(d) {\n                        return d.values.map(function(d,i) {\n                            return { x: getX(d,i), y: getY(d,i), size: getSize(d,i) }\n                        })\n                    })\n                );\n\n            x   .domain(xDomain || d3.extent(seriesData.map(function(d) { return d.x; }).concat(forceX)))\n\n            if (padData && data[0])\n                x.range(xRange || [(availableWidth * padDataOuter +  availableWidth) / (2 *data[0].values.length), availableWidth - availableWidth * (1 + padDataOuter) / (2 * data[0].values.length)  ]);\n            //x.range([availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n            else\n                x.range(xRange || [0, availableWidth]);\n\n             if (logScale) {\n                    var min = d3.min(seriesData.map(function(d) { if (d.y !== 0) return d.y; }));\n                    y.clamp(true)\n                        .domain(yDomain || d3.extent(seriesData.map(function(d) {\n                            if (d.y !== 0) return d.y;\n                            else return min * 0.1;\n                        }).concat(forceY)))\n                        .range(yRange || [availableHeight, 0]);\n                } else {\n                        y.domain(yDomain || d3.extent(seriesData.map(function (d) { return d.y;}).concat(forceY)))\n                        .range(yRange || [availableHeight, 0]);\n                }\n\n            z   .domain(sizeDomain || d3.extent(seriesData.map(function(d) { return d.size }).concat(forceSize)))\n                .range(sizeRange || _sizeRange_def);\n\n            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n            singlePoint = x.domain()[0] === x.domain()[1] || y.domain()[0] === y.domain()[1];\n\n            if (x.domain()[0] === x.domain()[1])\n                x.domain()[0] ?\n                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n                    : x.domain([-1,1]);\n\n            if (y.domain()[0] === y.domain()[1])\n                y.domain()[0] ?\n                    y.domain([y.domain()[0] - y.domain()[0] * 0.01, y.domain()[1] + y.domain()[1] * 0.01])\n                    : y.domain([-1,1]);\n\n            if ( isNaN(x.domain()[0])) {\n                x.domain([-1,1]);\n            }\n\n            if ( isNaN(y.domain()[0])) {\n                y.domain([-1,1]);\n            }\n\n            x0 = x0 || x;\n            y0 = y0 || y;\n            z0 = z0 || z;\n\n            var scaleDiff = x(1) !== x0(1) || y(1) !== y0(1) || z(1) !== z0(1);\n\n            width0 = width0 || width;\n            height0 = height0 || height;\n\n            var sizeDiff = width0 !== width || height0 !== height;\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-scatter').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatter nv-chart-' + id);\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            wrap.classed('nv-single-point', singlePoint);\n            gEnter.append('g').attr('class', 'nv-groups');\n            gEnter.append('g').attr('class', 'nv-point-paths');\n            wrapEnter.append('g').attr('class', 'nv-point-clips');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-edge-clip-' + id)\n                .append('rect')\n                .attr('transform', 'translate( -10, -10)');\n                \n            wrap.select('#nv-edge-clip-' + id + ' rect')\n                .attr('width', availableWidth + 20)\n                .attr('height', (availableHeight > 0) ? availableHeight + 20 : 0);\n\n            g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\n            function updateInteractiveLayer() {\n                // Always clear needs-update flag regardless of whether or not\n                // we will actually do anything (avoids needless invocations).\n                needsUpdate = false;\n\n                if (!interactive) return false;\n\n                // inject series and point index for reference into voronoi\n                if (useVoronoi === true) {\n                    var vertices = d3.merge(data.map(function(group, groupIndex) {\n                            return group.values\n                                .map(function(point, pointIndex) {\n                                    // *Adding noise to make duplicates very unlikely\n                                    // *Injecting series and point index for reference\n                                    /* *Adding a 'jitter' to the points, because there's an issue in d3.geom.voronoi.\n                                     */\n                                    var pX = getX(point,pointIndex);\n                                    var pY = getY(point,pointIndex);\n\n                                    return [nv.utils.NaNtoZero(x(pX))+ Math.random() * 1e-4,\n                                            nv.utils.NaNtoZero(y(pY))+ Math.random() * 1e-4,\n                                        groupIndex,\n                                        pointIndex, point]; //temp hack to add noise until I think of a better way so there are no duplicates\n                                })\n                                .filter(function(pointArray, pointIndex) {\n                                    return pointActive(pointArray[4], pointIndex); // Issue #237.. move filter to after map, so pointIndex is correct!\n                                })\n                        })\n                    );\n\n                    if (vertices.length == 0) return false;  // No active points, we're done\n                    if (vertices.length < 3) {\n                        // Issue #283 - Adding 2 dummy points to the voronoi b/c voronoi requires min 3 points to work\n                        vertices.push([x.range()[0] - 20, y.range()[0] - 20, null, null]);\n                        vertices.push([x.range()[1] + 20, y.range()[1] + 20, null, null]);\n                        vertices.push([x.range()[0] - 20, y.range()[0] + 20, null, null]);\n                        vertices.push([x.range()[1] + 20, y.range()[1] - 20, null, null]);\n                    }\n\n                    // keep voronoi sections from going more than 10 outside of graph\n                    // to avoid overlap with other things like legend etc\n                    var bounds = d3.geom.polygon([\n                        [-10,-10],\n                        [-10,height + 10],\n                        [width + 10,height + 10],\n                        [width + 10,-10]\n                    ]);\n\n                    var voronoi = d3.geom.voronoi(vertices).map(function(d, i) {\n                        return {\n                            'data': bounds.clip(d),\n                            'series': vertices[i][2],\n                            'point': vertices[i][3]\n                        }\n                    });\n\n                    // nuke all voronoi paths on reload and recreate them\n                    wrap.select('.nv-point-paths').selectAll('path').remove();\n                    var pointPaths = wrap.select('.nv-point-paths').selectAll('path').data(voronoi);\n                    var vPointPaths = pointPaths\n                        .enter().append(\"svg:path\")\n                        .attr(\"d\", function(d) {\n                            if (!d || !d.data || d.data.length === 0)\n                                return 'M 0 0';\n                            else\n                                return \"M\" + d.data.join(\",\") + \"Z\";\n                        })\n                        .attr(\"id\", function(d,i) {\n                            return \"nv-path-\"+i; })\n                        .attr(\"clip-path\", function(d,i) { return \"url(#nv-clip-\"+id+\"-\"+i+\")\"; })\n                        ;\n\n                    // good for debugging point hover issues\n                    if (showVoronoi) {\n                        vPointPaths.style(\"fill\", d3.rgb(230, 230, 230))\n                            .style('fill-opacity', 0.4)\n                            .style('stroke-opacity', 1)\n                            .style(\"stroke\", d3.rgb(200,200,200));\n                    }\n\n                    if (clipVoronoi) {\n                        // voronoi sections are already set to clip,\n                        // just create the circles with the IDs they expect\n                        wrap.select('.nv-point-clips').selectAll('*').remove(); // must do * since it has sub-dom\n                        var pointClips = wrap.select('.nv-point-clips').selectAll('clipPath').data(vertices);\n                        var vPointClips = pointClips\n                            .enter().append(\"svg:clipPath\")\n                            .attr(\"id\", function(d, i) { return \"nv-clip-\"+id+\"-\"+i;})\n                            .append(\"svg:circle\")\n                            .attr('cx', function(d) { return d[0]; })\n                            .attr('cy', function(d) { return d[1]; })\n                            .attr('r', clipRadius);\n                    }\n\n                    var mouseEventCallback = function(el, d, mDispatch) {\n                        if (needsUpdate) return 0;\n                        var series = data[d.series];\n                        if (series === undefined) return;\n                        var point  = series.values[d.point];\n                        point['color'] = color(series, d.series);\n\n                        // standardize attributes for tooltip.\n                        point['x'] = getX(point);\n                        point['y'] = getY(point);\n\n                        // can't just get box of event node since it's actually a voronoi polygon\n                        var box = container.node().getBoundingClientRect();\n                        var scrollTop  = window.pageYOffset || document.documentElement.scrollTop;\n                        var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n\n                        var pos = {\n                            left: x(getX(point, d.point)) + box.left + scrollLeft + margin.left + 10,\n                            top: y(getY(point, d.point)) + box.top + scrollTop + margin.top + 10\n                        };\n\n                        mDispatch({\n                            point: point,\n                            series: series,\n                            pos: pos,\n                            relativePos: [x(getX(point, d.point)) + margin.left, y(getY(point, d.point)) + margin.top],\n                            seriesIndex: d.series,\n                            pointIndex: d.point,\n                            event: d3.event,\n                            element: el\n                        });\n                    };\n\n                    pointPaths\n                        .on('click', function(d) {\n                            mouseEventCallback(this, d, dispatch.elementClick);\n                        })\n                        .on('dblclick', function(d) {\n                            mouseEventCallback(this, d, dispatch.elementDblClick);\n                        })\n                        .on('mouseover', function(d) {\n                            mouseEventCallback(this, d, dispatch.elementMouseover);\n                        })\n                        .on('mouseout', function(d, i) {\n                            mouseEventCallback(this, d, dispatch.elementMouseout);\n                        });\n\n                } else {\n                    // add event handlers to points instead voronoi paths\n                    wrap.select('.nv-groups').selectAll('.nv-group')\n                        .selectAll('.nv-point')\n                        //.data(dataWithPoints)\n                        //.style('pointer-events', 'auto') // recativate events, disabled by css\n                        .on('click', function(d,i) {\n                            //nv.log('test', d, i);\n                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n                            var series = data[d.series],\n                                point  = series.values[i];\n                            var element = this;\n                            dispatch.elementClick({\n                                point: point,\n                                series: series,\n                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top], //TODO: make this pos base on the page\n                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                                seriesIndex: d.series,\n                                pointIndex: i,\n                                event: d3.event,\n                                element: element\n                            });\n                        })\n                        .on('dblclick', function(d,i) {\n                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n                            var series = data[d.series],\n                                point  = series.values[i];\n\n                            dispatch.elementDblClick({\n                                point: point,\n                                series: series,\n                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],//TODO: make this pos base on the page\n                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                                seriesIndex: d.series,\n                                pointIndex: i\n                            });\n                        })\n                        .on('mouseover', function(d,i) {\n                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n                            var series = data[d.series],\n                                point  = series.values[i];\n\n                            dispatch.elementMouseover({\n                                point: point,\n                                series: series,\n                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],//TODO: make this pos base on the page\n                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                                seriesIndex: d.series,\n                                pointIndex: i,\n                                color: color(d, i)\n                            });\n                        })\n                        .on('mouseout', function(d,i) {\n                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n                            var series = data[d.series],\n                                point  = series.values[i];\n\n                            dispatch.elementMouseout({\n                                point: point,\n                                series: series,\n                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],//TODO: make this pos base on the page\n                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                                seriesIndex: d.series,\n                                pointIndex: i,\n                                color: color(d, i)\n                            });\n                        });\n                }\n            }\n\n            needsUpdate = true;\n            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n                .data(function(d) { return d }, function(d) { return d.key });\n            groups.enter().append('g')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6);\n            groups.exit()\n                .remove();\n            groups\n                .attr('class', function(d,i) {\n                    return (d.classed || '') + ' nv-group nv-series-' + i;\n                })\n                .classed('nv-noninteractive', !interactive)\n                .classed('hover', function(d) { return d.hover });\n            groups.watchTransition(renderWatch, 'scatter: groups')\n                .style('fill', function(d,i) { return color(d, i) })\n                .style('stroke', function(d,i) { return d.pointBorderColor || pointBorderColor || color(d, i) })\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', .5);\n\n            // create the points, maintaining their IDs from the original data set\n            var points = groups.selectAll('path.nv-point')\n                .data(function(d) {\n                    return d.values.map(\n                        function (point, pointIndex) {\n                            return [point, pointIndex]\n                        }).filter(\n                            function(pointArray, pointIndex) {\n                                return pointActive(pointArray[0], pointIndex)\n                            })\n                    });\n            points.enter().append('path')\n                .attr('class', function (d) {\n                    return 'nv-point nv-point-' + d[1];\n                })\n                .style('fill', function (d) { return d.color })\n                .style('stroke', function (d) { return d.color })\n                .attr('transform', function(d) {\n                    return 'translate(' + nv.utils.NaNtoZero(x0(getX(d[0],d[1]))) + ',' + nv.utils.NaNtoZero(y0(getY(d[0],d[1]))) + ')'\n                })\n                .attr('d',\n                    nv.utils.symbol()\n                    .type(function(d) { return getShape(d[0]); })\n                    .size(function(d) { return z(getSize(d[0],d[1])) })\n            );\n            points.exit().each(delCache).remove();\n            groups.exit().selectAll('path.nv-point')\n                .watchTransition(renderWatch, 'scatter exit')\n                .attr('transform', function(d) {\n                    return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0],d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')'\n                })\n                .remove();\n            // Update points position only if \"x\" or \"y\" have changed\n            points.filter(function (d) { return scaleDiff || sizeDiff || getDiffs(d, 'x', getX, 'y', getY); })\n                .watchTransition(renderWatch, 'scatter points')\n                .attr('transform', function(d) {\n                    //nv.log(d, getX(d[0],d[1]), x(getX(d[0],d[1])));\n                    return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0],d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')'\n                });\n            // Update points appearance only if \"shape\" or \"size\" have changed\n            points.filter(function (d) { return scaleDiff || sizeDiff || getDiffs(d, 'shape', getShape, 'size', getSize); })\n                .watchTransition(renderWatch, 'scatter points')\n                .attr('d',\n                    nv.utils.symbol()\n                    .type(function(d) { return getShape(d[0]); })\n                    .size(function(d) { return z(getSize(d[0],d[1])) })\n            );\n\n            // add label a label to scatter chart\n            if(showLabels)\n            {\n                var titles =  groups.selectAll('.nv-label')\n                    .data(function(d) {\n                        return d.values.map(\n                            function (point, pointIndex) {\n                                return [point, pointIndex]\n                            }).filter(\n                                function(pointArray, pointIndex) {\n                                    return pointActive(pointArray[0], pointIndex)\n                                })\n                        });\n\n                titles.enter().append('text')\n                    .style('fill', function (d,i) {\n                        return d.color })\n                    .style('stroke-opacity', 0)\n                    .style('fill-opacity', 1)\n                    .attr('transform', function(d) {\n                        var dx = nv.utils.NaNtoZero(x0(getX(d[0],d[1]))) + Math.sqrt(z(getSize(d[0],d[1]))/Math.PI) + 2;\n                        return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y0(getY(d[0],d[1]))) + ')';\n                    })\n                    .text(function(d,i){\n                        return d[0].label;});\n\n                titles.exit().remove();\n                groups.exit().selectAll('path.nv-label')\n                    .watchTransition(renderWatch, 'scatter exit')\n                    .attr('transform', function(d) {\n                        var dx = nv.utils.NaNtoZero(x(getX(d[0],d[1])))+ Math.sqrt(z(getSize(d[0],d[1]))/Math.PI)+2;\n                        return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')';\n                    })\n                    .remove();\n               titles.each(function(d) {\n                  d3.select(this)\n                    .classed('nv-label', true)\n                    .classed('nv-label-' + d[1], false)\n                    .classed('hover',false);\n                });\n                titles.watchTransition(renderWatch, 'scatter labels')\n                    .attr('transform', function(d) {\n                        var dx = nv.utils.NaNtoZero(x(getX(d[0],d[1])))+ Math.sqrt(z(getSize(d[0],d[1]))/Math.PI)+2;\n                        return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')'\n                    });\n            }\n\n            // Delay updating the invisible interactive layer for smoother animation\n            if( interactiveUpdateDelay )\n            {\n                clearTimeout(timeoutID); // stop repeat calls to updateInteractiveLayer\n                timeoutID = setTimeout(updateInteractiveLayer, interactiveUpdateDelay );\n            }\n            else\n            {\n                updateInteractiveLayer();\n            }\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n            z0 = z.copy();\n\n            width0 = width;\n            height0 = height;\n\n        });\n        renderWatch.renderEnd('scatter immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    // utility function calls provided by this chart\n    chart._calls = new function() {\n        this.clearHighlights = function () {\n            nv.dom.write(function() {\n                container.selectAll(\".nv-point.hover\").classed(\"hover\", false);\n            });\n            return null;\n        };\n        this.highlightPoint = function (seriesIndex, pointIndex, isHoverOver) {\n            nv.dom.write(function() {\n                container.select('.nv-groups')\n                  .selectAll(\".nv-series-\" + seriesIndex)\n                  .selectAll(\".nv-point-\" + pointIndex)\n                  .classed(\"hover\", isHoverOver);\n            });\n        };\n    };\n\n    // trigger calls from events too\n    dispatch.on('elementMouseover.point', function(d) {\n        if (interactive) chart._calls.highlightPoint(d.seriesIndex,d.pointIndex,true);\n    });\n\n    dispatch.on('elementMouseout.point', function(d) {\n        if (interactive) chart._calls.highlightPoint(d.seriesIndex,d.pointIndex,false);\n    });\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:        {get: function(){return width;}, set: function(_){width=_;}},\n        height:       {get: function(){return height;}, set: function(_){height=_;}},\n        xScale:       {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:       {get: function(){return y;}, set: function(_){y=_;}},\n        pointScale:   {get: function(){return z;}, set: function(_){z=_;}},\n        xDomain:      {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain:      {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        pointDomain:  {get: function(){return sizeDomain;}, set: function(_){sizeDomain=_;}},\n        xRange:       {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:       {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        pointRange:   {get: function(){return sizeRange;}, set: function(_){sizeRange=_;}},\n        forceX:       {get: function(){return forceX;}, set: function(_){forceX=_;}},\n        forceY:       {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        forcePoint:   {get: function(){return forceSize;}, set: function(_){forceSize=_;}},\n        interactive:  {get: function(){return interactive;}, set: function(_){interactive=_;}},\n        pointActive:  {get: function(){return pointActive;}, set: function(_){pointActive=_;}},\n        padDataOuter: {get: function(){return padDataOuter;}, set: function(_){padDataOuter=_;}},\n        padData:      {get: function(){return padData;}, set: function(_){padData=_;}},\n        clipEdge:     {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        clipVoronoi:  {get: function(){return clipVoronoi;}, set: function(_){clipVoronoi=_;}},\n        clipRadius:   {get: function(){return clipRadius;}, set: function(_){clipRadius=_;}},\n        showVoronoi:   {get: function(){return showVoronoi;}, set: function(_){showVoronoi=_;}},\n        id:           {get: function(){return id;}, set: function(_){id=_;}},\n        interactiveUpdateDelay: {get:function(){return interactiveUpdateDelay;}, set: function(_){interactiveUpdateDelay=_;}},\n        showLabels: {get: function(){return showLabels;}, set: function(_){ showLabels = _;}},\n        pointBorderColor: {get: function(){return pointBorderColor;}, set: function(_){pointBorderColor=_;}},\n\n        // simple functor options\n        x:     {get: function(){return getX;}, set: function(_){getX = d3.functor(_);}},\n        y:     {get: function(){return getY;}, set: function(_){getY = d3.functor(_);}},\n        pointSize: {get: function(){return getSize;}, set: function(_){getSize = d3.functor(_);}},\n        pointShape: {get: function(){return getShape;}, set: function(_){getShape = d3.functor(_);}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }},\n        color: {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        useVoronoi: {get: function(){return useVoronoi;}, set: function(_){\n            useVoronoi = _;\n            if (useVoronoi === false) {\n                clipVoronoi = false;\n            }\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\n\nnv.models.scatterChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var scatter      = nv.models.scatter()\n        , xAxis        = nv.models.axis()\n        , yAxis        = nv.models.axis()\n        , legend       = nv.models.legend()\n        , distX        = nv.models.distribution()\n        , distY        = nv.models.distribution()\n        , tooltip      = nv.models.tooltip()\n        ;\n\n    var margin       = {top: 30, right: 20, bottom: 50, left: 75}\n        , marginTop = null\n        , width        = null\n        , height       = null\n        , container    = null\n        , color        = nv.utils.defaultColor()\n        , x            = scatter.xScale()\n        , y            = scatter.yScale()\n        , showDistX    = false\n        , showDistY    = false\n        , showLegend   = true\n        , showXAxis    = true\n        , showYAxis    = true\n        , rightAlignYAxis = false\n        , state = nv.utils.state()\n        , defaultState = null\n        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n        , noData       = null\n        , duration = 250\n        , showLabels    = false\n        ;\n\n    scatter.xScale(x).yScale(y);\n    xAxis.orient('bottom').tickPadding(10);\n    yAxis\n        .orient((rightAlignYAxis) ? 'right' : 'left')\n        .tickPadding(10)\n    ;\n    distX.axis('x');\n    distY.axis('y');\n    tooltip\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        })\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        });\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0\n        , renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled })\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(scatter);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n        if (showDistX) renderWatch.models(distX);\n        if (showDistY) renderWatch.models(distY);\n\n        selection.each(function(data) {\n            var that = this;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() {\n                if (duration === 0)\n                    container.call(chart);\n                else\n                    container.transition().duration(duration).call(chart);\n            };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disableddisabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display noData message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container);\n                renderWatch.renderEnd('scatter immediate');\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = scatter.xScale();\n            y = scatter.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-scatterChart').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatterChart nv-chart-' + scatter.id());\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            // background for pointer events\n            gEnter.append('rect').attr('class', 'nvd3 nv-background').style(\"pointer-events\",\"none\");\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis');\n            gEnter.append('g').attr('class', 'nv-scatterWrap');\n            gEnter.append('g').attr('class', 'nv-regressionLinesWrap');\n            gEnter.append('g').attr('class', 'nv-distWrap');\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                var legendWidth = availableWidth;\n                legend.width(legendWidth);\n\n                wrap.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                wrap.select('.nv-legendWrap')\n                    .attr('transform', 'translate(0' + ',' + (-margin.top) +')');\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Main Chart Component(s)\n            scatter\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    d.color = d.color || color(d, i);\n                    return d.color;\n                }).filter(function(d,i) { return !data[i].disabled }))\n                .showLabels(showLabels);\n\n            wrap.select('.nv-scatterWrap')\n                .datum(data.filter(function(d) { return !d.disabled }))\n                .call(scatter);\n\n\n            wrap.select('.nv-regressionLinesWrap')\n                .attr('clip-path', 'url(#nv-edge-clip-' + scatter.id() + ')');\n\n            var regWrap = wrap.select('.nv-regressionLinesWrap').selectAll('.nv-regLines')\n                .data(function (d) {\n                    return d;\n                });\n\n            regWrap.enter().append('g').attr('class', 'nv-regLines');\n\n            var regLine = regWrap.selectAll('.nv-regLine')\n                .data(function (d) {\n                    return [d]\n                });\n\n            regLine.enter()\n                .append('line').attr('class', 'nv-regLine')\n                .style('stroke-opacity', 0);\n\n            // don't add lines unless we have slope and intercept to use\n            regLine.filter(function(d) {\n                return d.intercept && d.slope;\n            })\n                .watchTransition(renderWatch, 'scatterPlusLineChart: regline')\n                .attr('x1', x.range()[0])\n                .attr('x2', x.range()[1])\n                .attr('y1', function (d, i) {\n                    return y(x.domain()[0] * d.slope + d.intercept)\n                })\n                .attr('y2', function (d, i) {\n                    return y(x.domain()[1] * d.slope + d.intercept)\n                })\n                .style('stroke', function (d, i, j) {\n                    return color(d, j)\n                })\n                .style('stroke-opacity', function (d, i) {\n                    return (d.disabled || typeof d.slope === 'undefined' || typeof d.intercept === 'undefined') ? 0 : 1\n                });\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize( -availableHeight , 0);\n\n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')')\n                    .call(xAxis);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis')\n                    .call(yAxis);\n            }\n\n            // Setup Distribution\n            if (showDistX) {\n                distX\n                    .getData(scatter.x())\n                    .scale(x)\n                    .width(availableWidth)\n                    .color(data.map(function(d,i) {\n                        return d.color || color(d, i);\n                    }).filter(function(d,i) { return !data[i].disabled }));\n                gEnter.select('.nv-distWrap').append('g')\n                    .attr('class', 'nv-distributionX');\n                g.select('.nv-distributionX')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')')\n                    .datum(data.filter(function(d) { return !d.disabled }))\n                    .call(distX);\n            }\n\n            if (showDistY) {\n                distY\n                    .getData(scatter.y())\n                    .scale(y)\n                    .width(availableHeight)\n                    .color(data.map(function(d,i) {\n                        return d.color || color(d, i);\n                    }).filter(function(d,i) { return !data[i].disabled }));\n                gEnter.select('.nv-distWrap').append('g')\n                    .attr('class', 'nv-distributionY');\n                g.select('.nv-distributionY')\n                    .attr('transform', 'translate(' + (rightAlignYAxis ? availableWidth : -distY.size() ) + ',0)')\n                    .datum(data.filter(function(d) { return !d.disabled }))\n                    .call(distY);\n            }\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n                    state.disabled = e.disabled;\n                }\n                chart.update();\n            });\n\n            // mouseover needs availableHeight so we just keep scatter mouse events inside the chart block\n            scatter.dispatch.on('elementMouseout.tooltip', function(evt) {\n                tooltip.hidden(true);\n                container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex)\n                    .attr('y1', 0);\n                container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex)\n                    .attr('x2', distY.size());\n            });\n\n            scatter.dispatch.on('elementMouseover.tooltip', function(evt) {\n                container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex)\n                    .attr('y1', evt.relativePos[1] - availableHeight);\n                container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex)\n                    .attr('x2', evt.relativePos[0] + distX.size());\n                tooltip.data(evt).hidden(false);\n            });\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n\n        });\n\n        renderWatch.renderEnd('scatter with line immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.distX = distX;\n    chart.distY = distY;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        container:  {get: function(){return container;}, set: function(_){container=_;}},\n        showDistX:  {get: function(){return showDistX;}, set: function(_){showDistX=_;}},\n        showDistY:  {get: function(){return showDistY;}, set: function(_){showDistY=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        showXAxis:  {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:  {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:     {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:     {get: function(){return noData;}, set: function(_){noData=_;}},\n        duration:   {get: function(){return duration;}, set: function(_){duration=_;}},\n        showLabels: {get: function(){return showLabels;}, set: function(_){showLabels=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( (_) ? 'right' : 'left');\n        }},\n        color: {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n            distX.color(color);\n            distY.color(color);\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n};\n\nnv.models.sparkline = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 2, right: 0, bottom: 2, left: 0}\n        , width = 400\n        , height = 32\n        , container = null\n        , animate = true\n        , x = d3.scale.linear()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , color = nv.utils.getColor(['#000'])\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , showMinMaxPoints = true\n        , showCurrentPoint = true\n        , dispatch = d3.dispatch('renderEnd')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    \n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup Scales\n            x   .domain(xDomain || d3.extent(data, getX ))\n                .range(xRange || [0, availableWidth]);\n\n            y   .domain(yDomain || d3.extent(data, getY ))\n                .range(yRange || [availableHeight, 0]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-sparkline').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparkline');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\n            var paths = wrap.selectAll('path')\n                .data(function(d) { return [d] });\n            paths.enter().append('path');\n            paths.exit().remove();\n            paths\n                .style('stroke', function(d,i) { return d.color || color(d, i) })\n                .attr('d', d3.svg.line()\n                    .x(function(d,i) { return x(getX(d,i)) })\n                    .y(function(d,i) { return y(getY(d,i)) })\n            );\n\n            // TODO: Add CURRENT data point (Need Min, Mac, Current / Most recent)\n            var points = wrap.selectAll('circle.nv-point')\n                .data(function(data) {\n                    var yValues = data.map(function(d, i) { return getY(d,i); });\n                    function pointIndex(index) {\n                        if (index != -1) {\n                            var result = data[index];\n                            result.pointIndex = index;\n                            return result;\n                        } else {\n                            return null;\n                        }\n                    }\n                    var maxPoint = pointIndex(yValues.lastIndexOf(y.domain()[1])),\n                        minPoint = pointIndex(yValues.indexOf(y.domain()[0])),\n                        currentPoint = pointIndex(yValues.length - 1);\n                    return [(showMinMaxPoints ? minPoint : null), (showMinMaxPoints ? maxPoint : null), (showCurrentPoint ? currentPoint : null)].filter(function (d) {return d != null;});\n                });\n            points.enter().append('circle');\n            points.exit().remove();\n            points\n                .attr('cx', function(d,i) { return x(getX(d,d.pointIndex)) })\n                .attr('cy', function(d,i) { return y(getY(d,d.pointIndex)) })\n                .attr('r', 2)\n                .attr('class', function(d,i) {\n                    return getX(d, d.pointIndex) == x.domain()[1] ? 'nv-point nv-currentValue' :\n                            getY(d, d.pointIndex) == y.domain()[0] ? 'nv-point nv-minValue' : 'nv-point nv-maxValue'\n                });\n        });\n        \n        renderWatch.renderEnd('sparkline immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:            {get: function(){return width;}, set: function(_){width=_;}},\n        height:           {get: function(){return height;}, set: function(_){height=_;}},\n        xDomain:          {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain:          {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:           {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:           {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        xScale:           {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:           {get: function(){return y;}, set: function(_){y=_;}},\n        animate:          {get: function(){return animate;}, set: function(_){animate=_;}},\n        showMinMaxPoints: {get: function(){return showMinMaxPoints;}, set: function(_){showMinMaxPoints=_;}},\n        showCurrentPoint: {get: function(){return showCurrentPoint;}, set: function(_){showCurrentPoint=_;}},\n\n        //functor options\n        x: {get: function(){return getX;}, set: function(_){getX=d3.functor(_);}},\n        y: {get: function(){return getY;}, set: function(_){getY=d3.functor(_);}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    chart.dispatch = dispatch;\n    nv.utils.initOptions(chart);\n    return chart;\n};\n\nnv.models.sparklinePlus = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sparkline = nv.models.sparkline();\n\n    var margin = {top: 15, right: 100, bottom: 10, left: 50}\n        , width = null\n        , height = null\n        , x\n        , y\n        , index = []\n        , paused = false\n        , xTickFormat = d3.format(',r')\n        , yTickFormat = d3.format(',.2f')\n        , showLastValue = true\n        , alignValue = true\n        , rightAlignValue = false\n        , noData = null\n        , dispatch = d3.dispatch('renderEnd')\n        ;\n        \n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(sparkline);\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() { container.call(chart); };\n            chart.container = this;\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            var currentValue = sparkline.y()(data[data.length-1], data.length-1);\n\n            // Setup Scales\n            x = sparkline.xScale();\n            y = sparkline.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-sparklineplus').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparklineplus');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-sparklineWrap');\n            gEnter.append('g').attr('class', 'nv-valueWrap');\n            gEnter.append('g').attr('class', 'nv-hoverArea');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Main Chart Component(s)\n            var sparklineWrap = g.select('.nv-sparklineWrap');\n\n            sparkline.width(availableWidth).height(availableHeight);\n            sparklineWrap.call(sparkline);\n\n            if (showLastValue) {\n                var valueWrap = g.select('.nv-valueWrap');\n                var value = valueWrap.selectAll('.nv-currentValue')\n                    .data([currentValue]);\n\n                value.enter().append('text').attr('class', 'nv-currentValue')\n                    .attr('dx', rightAlignValue ? -8 : 8)\n                    .attr('dy', '.9em')\n                    .style('text-anchor', rightAlignValue ? 'end' : 'start');\n\n                value\n                    .attr('x', availableWidth + (rightAlignValue ? margin.right : 0))\n                    .attr('y', alignValue ? function (d) {\n                        return y(d)\n                    } : 0)\n                    .style('fill', sparkline.color()(data[data.length - 1], data.length - 1))\n                    .text(yTickFormat(currentValue));\n            }\n\n            gEnter.select('.nv-hoverArea').append('rect')\n                .on('mousemove', sparklineHover)\n                .on('click', function() { paused = !paused })\n                .on('mouseout', function() { index = []; updateValueLine(); });\n\n            g.select('.nv-hoverArea rect')\n                .attr('transform', function(d) { return 'translate(' + -margin.left + ',' + -margin.top + ')' })\n                .attr('width', availableWidth + margin.left + margin.right)\n                .attr('height', availableHeight + margin.top);\n\n            //index is currently global (within the chart), may or may not keep it that way\n            function updateValueLine() {\n                if (paused) return;\n\n                var hoverValue = g.selectAll('.nv-hoverValue').data(index);\n\n                var hoverEnter = hoverValue.enter()\n                    .append('g').attr('class', 'nv-hoverValue')\n                    .style('stroke-opacity', 0)\n                    .style('fill-opacity', 0);\n\n                hoverValue.exit()\n                    .transition().duration(250)\n                    .style('stroke-opacity', 0)\n                    .style('fill-opacity', 0)\n                    .remove();\n\n                hoverValue\n                    .attr('transform', function(d) { return 'translate(' + x(sparkline.x()(data[d],d)) + ',0)' })\n                    .transition().duration(250)\n                    .style('stroke-opacity', 1)\n                    .style('fill-opacity', 1);\n\n                if (!index.length) return;\n\n                hoverEnter.append('line')\n                    .attr('x1', 0)\n                    .attr('y1', -margin.top)\n                    .attr('x2', 0)\n                    .attr('y2', availableHeight);\n\n                hoverEnter.append('text').attr('class', 'nv-xValue')\n                    .attr('x', -6)\n                    .attr('y', -margin.top)\n                    .attr('text-anchor', 'end')\n                    .attr('dy', '.9em');\n\n                g.select('.nv-hoverValue .nv-xValue')\n                    .text(xTickFormat(sparkline.x()(data[index[0]], index[0])));\n\n                hoverEnter.append('text').attr('class', 'nv-yValue')\n                    .attr('x', 6)\n                    .attr('y', -margin.top)\n                    .attr('text-anchor', 'start')\n                    .attr('dy', '.9em');\n\n                g.select('.nv-hoverValue .nv-yValue')\n                    .text(yTickFormat(sparkline.y()(data[index[0]], index[0])));\n            }\n\n            function sparklineHover() {\n                if (paused) return;\n\n                var pos = d3.mouse(this)[0] - margin.left;\n\n                function getClosestIndex(data, x) {\n                    var distance = Math.abs(sparkline.x()(data[0], 0) - x);\n                    var closestIndex = 0;\n                    for (var i = 0; i < data.length; i++){\n                        if (Math.abs(sparkline.x()(data[i], i) - x) < distance) {\n                            distance = Math.abs(sparkline.x()(data[i], i) - x);\n                            closestIndex = i;\n                        }\n                    }\n                    return closestIndex;\n                }\n\n                index = [getClosestIndex(data, Math.round(x.invert(pos)))];\n                updateValueLine();\n            }\n\n        });\n        renderWatch.renderEnd('sparklinePlus immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.sparkline = sparkline;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:           {get: function(){return width;}, set: function(_){width=_;}},\n        height:          {get: function(){return height;}, set: function(_){height=_;}},\n        xTickFormat:     {get: function(){return xTickFormat;}, set: function(_){xTickFormat=_;}},\n        yTickFormat:     {get: function(){return yTickFormat;}, set: function(_){yTickFormat=_;}},\n        showLastValue:   {get: function(){return showLastValue;}, set: function(_){showLastValue=_;}},\n        alignValue:      {get: function(){return alignValue;}, set: function(_){alignValue=_;}},\n        rightAlignValue: {get: function(){return rightAlignValue;}, set: function(_){rightAlignValue=_;}},\n        noData:          {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, sparkline);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.stackedArea = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 960\n        , height = 500\n        , color = nv.utils.defaultColor() // a function that computes the color\n        , id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't selet one\n        , container = null\n        , getX = function(d) { return d.x } // accessor to get the x value from a data point\n        , getY = function(d) { return d.y } // accessor to get the y value from a data point\n        , defined = function(d,i) { return !isNaN(getY(d,i)) && getY(d,i) !== null } // allows a line to be not continuous when it is not defined\n        , style = 'stack'\n        , offset = 'zero'\n        , order = 'default'\n        , interpolate = 'linear'  // controls the line interpolation\n        , clipEdge = false // if true, masks lines within x and y scale\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , scatter = nv.models.scatter()\n        , duration = 250\n        , dispatch =  d3.dispatch('areaClick', 'areaMouseover', 'areaMouseout','renderEnd', 'elementClick', 'elementMouseover', 'elementMouseout')\n        ;\n\n    scatter\n        .pointSize(2.2) // default size\n        .pointDomain([2.2, 2.2]) // all the same size by default\n    ;\n\n    /************************************\n     * offset:\n     *   'wiggle' (stream)\n     *   'zero' (stacked)\n     *   'expand' (normalize to 100%)\n     *   'silhouette' (simple centered)\n     *\n     * order:\n     *   'inside-out' (stream)\n     *   'default' (input order)\n     ************************************/\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(scatter);\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup Scales\n            x = scatter.xScale();\n            y = scatter.yScale();\n\n            var dataRaw = data;\n            // Injecting point index into each point because d3.layout.stack().out does not give index\n            data.forEach(function(aseries, i) {\n                aseries.seriesIndex = i;\n                aseries.values = aseries.values.map(function(d, j) {\n                    d.index = j;\n                    d.seriesIndex = i;\n                    return d;\n                });\n            });\n\n            var dataFiltered = data.filter(function(series) {\n                return !series.disabled;\n            });\n\n            data = d3.layout.stack()\n                .order(order)\n                .offset(offset)\n                .values(function(d) { return d.values })  //TODO: make values customizeable in EVERY model in this fashion\n                .x(getX)\n                .y(getY)\n                .out(function(d, y0, y) {\n                    d.display = {\n                        y: y,\n                        y0: y0\n                    };\n                })\n            (dataFiltered);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-stackedarea').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedarea');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-areaWrap');\n            gEnter.append('g').attr('class', 'nv-scatterWrap');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n            \n            // If the user has not specified forceY, make sure 0 is included in the domain\n            // Otherwise, use user-specified values for forceY\n            if (scatter.forceY().length == 0) {\n                scatter.forceY().push(0);\n            }\n            \n            scatter\n                .width(availableWidth)\n                .height(availableHeight)\n                .x(getX)\n                .y(function(d) {\n                    if (d.display !== undefined) { return d.display.y + d.display.y0; }\n                })\n                .color(data.map(function(d,i) {\n                    d.color = d.color || color(d, d.seriesIndex);\n                    return d.color;\n                }));\n\n            var scatterWrap = g.select('.nv-scatterWrap')\n                .datum(data);\n\n            scatterWrap.call(scatter);\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-edge-clip-' + id)\n                .append('rect');\n\n            wrap.select('#nv-edge-clip-' + id + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\n            var area = d3.svg.area()\n                .defined(defined)\n                .x(function(d,i)  { return x(getX(d,i)) })\n                .y0(function(d) {\n                    return y(d.display.y0)\n                })\n                .y1(function(d) {\n                    return y(d.display.y + d.display.y0)\n                })\n                .interpolate(interpolate);\n\n            var zeroArea = d3.svg.area()\n                .defined(defined)\n                .x(function(d,i)  { return x(getX(d,i)) })\n                .y0(function(d) { return y(d.display.y0) })\n                .y1(function(d) { return y(d.display.y0) });\n\n            var path = g.select('.nv-areaWrap').selectAll('path.nv-area')\n                .data(function(d) { return d });\n\n            path.enter().append('path').attr('class', function(d,i) { return 'nv-area nv-area-' + i })\n                .attr('d', function(d,i){\n                    return zeroArea(d.values, d.seriesIndex);\n                })\n                .on('mouseover', function(d,i) {\n                    d3.select(this).classed('hover', true);\n                    dispatch.areaMouseover({\n                        point: d,\n                        series: d.key,\n                        pos: [d3.event.pageX, d3.event.pageY],\n                        seriesIndex: d.seriesIndex\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.areaMouseout({\n                        point: d,\n                        series: d.key,\n                        pos: [d3.event.pageX, d3.event.pageY],\n                        seriesIndex: d.seriesIndex\n                    });\n                })\n                .on('click', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.areaClick({\n                        point: d,\n                        series: d.key,\n                        pos: [d3.event.pageX, d3.event.pageY],\n                        seriesIndex: d.seriesIndex\n                    });\n                });\n\n            path.exit().remove();\n            path.style('fill', function(d,i){\n                    return d.color || color(d, d.seriesIndex)\n                })\n                .style('stroke', function(d,i){ return d.color || color(d, d.seriesIndex) });\n            path.watchTransition(renderWatch,'stackedArea path')\n                .attr('d', function(d,i) {\n                    return area(d.values,i)\n                });\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            scatter.dispatch.on('elementMouseover.area', function(e) {\n                g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', true);\n            });\n            scatter.dispatch.on('elementMouseout.area', function(e) {\n                g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', false);\n            });\n\n            //Special offset functions\n            chart.d3_stackedOffset_stackPercent = function(stackData) {\n                var n = stackData.length,    //How many series\n                    m = stackData[0].length,     //how many points per series\n                    i,\n                    j,\n                    o,\n                    y0 = [];\n\n                for (j = 0; j < m; ++j) { //Looping through all points\n                    for (i = 0, o = 0; i < dataRaw.length; i++) { //looping through all series\n                        o += getY(dataRaw[i].values[j]); //total y value of all series at a certian point in time.\n                    }\n\n                    if (o) for (i = 0; i < n; i++) { //(total y value of all series at point in time i) != 0\n                        stackData[i][j][1] /= o;\n                    } else { //(total y value of all series at point in time i) == 0\n                        for (i = 0; i < n; i++) {\n                            stackData[i][j][1] = 0;\n                        }\n                    }\n                }\n                for (j = 0; j < m; ++j) y0[j] = 0;\n                return y0;\n            };\n\n        });\n\n        renderWatch.renderEnd('stackedArea immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n\n    scatter.dispatch.on('elementClick', function(){ dispatch.elementClick.apply(this, arguments); });\n    scatter.dispatch.on('elementMouseover', function(){ dispatch.elementMouseover.apply(this, arguments); });\n    scatter.dispatch.on('elementMouseout', function(){ dispatch.elementMouseout.apply(this, arguments); });\n\n    chart.interpolate = function(_) {\n        if (!arguments.length) return interpolate;\n        interpolate = _;\n        return chart;\n    };\n\n    chart.duration = function(_) {\n        if (!arguments.length) return duration;\n        duration = _;\n        renderWatch.reset(duration);\n        scatter.duration(duration);\n        return chart;\n    };\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        defined: {get: function(){return defined;}, set: function(_){defined=_;}},\n        clipEdge: {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        offset:      {get: function(){return offset;}, set: function(_){offset=_;}},\n        order:    {get: function(){return order;}, set: function(_){order=_;}},\n        interpolate:    {get: function(){return interpolate;}, set: function(_){interpolate=_;}},\n\n        // simple functor options\n        x:     {get: function(){return getX;}, set: function(_){getX = d3.functor(_);}},\n        y:     {get: function(){return getY;}, set: function(_){getY = d3.functor(_);}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        style: {get: function(){return style;}, set: function(_){\n            style = _;\n            switch (style) {\n                case 'stack':\n                    chart.offset('zero');\n                    chart.order('default');\n                    break;\n                case 'stream':\n                    chart.offset('wiggle');\n                    chart.order('inside-out');\n                    break;\n                case 'stream-center':\n                    chart.offset('silhouette');\n                    chart.order('inside-out');\n                    break;\n                case 'expand':\n                    chart.offset('expand');\n                    chart.order('default');\n                    break;\n                case 'stack_percent':\n                    chart.offset(chart.d3_stackedOffset_stackPercent);\n                    chart.order('default');\n                    break;\n            }\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            scatter.duration(duration);\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.stackedAreaChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var stacked = nv.models.stackedArea()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , legend = nv.models.legend()\n        , controls = nv.models.legend()\n        , interactiveLayer = nv.interactiveGuideline()\n        , tooltip = nv.models.tooltip()\n        , focus = nv.models.focus(nv.models.stackedArea())\n        ;\n\n    var margin = {top: 10, right: 25, bottom: 50, left: 60}\n        , marginTop = null\n        , width = null\n        , height = null\n        , color = nv.utils.defaultColor()\n        , showControls = true\n        , showLegend = true\n        , legendPosition = 'top'\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , focusEnable = false\n        , useInteractiveGuideline = false\n        , showTotalInTooltip = true\n        , totalLabel = 'TOTAL'\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd')\n        , controlWidth = 250\n        , controlOptions = ['Stacked','Stream','Expanded']\n        , controlLabels = {}\n        , duration = 250\n        ;\n\n    state.style = stacked.style();\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient((rightAlignYAxis) ? 'right' : 'left');\n\n    tooltip\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        })\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        });\n\n    interactiveLayer.tooltip\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        })\n        .valueFormatter(function(d, i) {\n            return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n        });\n\n    var oldYTickFormat = null,\n        oldValueFormatter = null;\n\n    controls.updateState(false);\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var style = stacked.style();\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled }),\n                style: stacked.style()\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.style !== undefined)\n                style = state.style;\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    var percentFormatter = d3.format('%');\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(stacked);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\n            chart.update = function() { container.transition().duration(duration).call(chart); };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n            // Setup Scales\n            x = stacked.xScale();\n            y = stacked.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-stackedAreaChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedAreaChart').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\n            var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n            focusEnter.append('g').attr('class', 'nv-background').append('rect');\n            focusEnter.append('g').attr('class', 'nv-x nv-axis');\n            focusEnter.append('g').attr('class', 'nv-y nv-axis');\n            focusEnter.append('g').attr('class', 'nv-stackedWrap');\n            focusEnter.append('g').attr('class', 'nv-interactive');\n\n            // g.select(\"rect\").attr(\"width\",availableWidth).attr(\"height\",availableHeight);\n\n            var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                var legendWidth = (showControls && legendPosition === 'top') ? availableWidth - controlWidth : availableWidth;\n\n                legend.width(legendWidth);\n                g.select('.nv-legendWrap').datum(data).call(legend);\n\n                if (legendPosition === 'bottom') {\n                \t// constant from axis.js, plus some margin for better layout\n                \tvar xAxisHeight = (showXAxis ? 12 : 0) + 10;\n                   \tmargin.bottom = Math.max(legend.height() + xAxisHeight, margin.bottom);\n                   \tavailableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n                \tvar legendTop = availableHeight + xAxisHeight;\n                    g.select('.nv-legendWrap')\n                        .attr('transform', 'translate(0,' + legendTop +')');\n                } else if (legendPosition === 'top') {\n                    if (!marginTop && margin.top != legend.height()) {\n                        margin.top = legend.height();\n                        availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n                    }\n\n                    g.select('.nv-legendWrap')\n                    \t.attr('transform', 'translate(' + (availableWidth-legendWidth) + ',' + (-margin.top) +')');\n                }\n            }\n\n            // Controls\n            if (!showControls) {\n                 g.select('.nv-controlsWrap').selectAll('*').remove();\n            } else {\n                var controlsData = [\n                    {\n                        key: controlLabels.stacked || 'Stacked',\n                        metaKey: 'Stacked',\n                        disabled: stacked.style() != 'stack',\n                        style: 'stack'\n                    },\n                    {\n                        key: controlLabels.stream || 'Stream',\n                        metaKey: 'Stream',\n                        disabled: stacked.style() != 'stream',\n                        style: 'stream'\n                    },\n                    {\n                        key: controlLabels.expanded || 'Expanded',\n                        metaKey: 'Expanded',\n                        disabled: stacked.style() != 'expand',\n                        style: 'expand'\n                    },\n                    {\n                        key: controlLabels.stack_percent || 'Stack %',\n                        metaKey: 'Stack_Percent',\n                        disabled: stacked.style() != 'stack_percent',\n                        style: 'stack_percent'\n                    }\n                ];\n\n                controlWidth = (controlOptions.length/3) * 260;\n                controlsData = controlsData.filter(function(d) {\n                    return controlOptions.indexOf(d.metaKey) !== -1;\n                });\n\n                controls\n                    .width( controlWidth )\n                    .color(['#444', '#444', '#444']);\n\n                g.select('.nv-controlsWrap')\n                    .datum(controlsData)\n                    .call(controls);\n\n                var requiredTop = Math.max(controls.height(), showLegend && (legendPosition === 'top') ? legend.height() : 0);\n\n                if ( margin.top != requiredTop ) {\n                    margin.top = requiredTop;\n                    availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n                }\n\n                g.select('.nv-controlsWrap')\n                    .attr('transform', 'translate(0,' + (-margin.top) +')');\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            //Set up interactive layer\n            if (useInteractiveGuideline) {\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left: margin.left, top: margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n\n            g.select('.nv-focus .nv-background rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            stacked\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled; }));\n\n            var stackedWrap = g.select('.nv-focus .nv-stackedWrap')\n                .datum(data.filter(function(d) { return !d.disabled; }));\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis.scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize( -availableHeight, 0);\n            }\n\n            if (showYAxis) {\n                var ticks;\n                if (stacked.offset() === 'wiggle') {\n                    ticks = 0;\n                }\n                else {\n                    ticks = nv.utils.calcTicksY(availableHeight/36, data);\n                }\n                yAxis.scale(y)\n                    ._ticks(ticks)\n                    .tickSize(-availableWidth, 0);\n            }\n\n            //============================================================\n            // Update Axes\n            //============================================================\n            function updateXAxis() {\n                if(showXAxis) {\n                    g.select('.nv-focus .nv-x.nv-axis')\n                        .attr('transform', 'translate(0,' + availableHeight + ')')\n                        .transition()\n                        .duration(duration)\n                        .call(xAxis)\n                        ;\n                }\n            }\n\n            function updateYAxis() {\n                if(showYAxis) {\n                    if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n                        var currentFormat = yAxis.tickFormat();\n\n                        if ( !oldYTickFormat || currentFormat !== percentFormatter )\n                            oldYTickFormat = currentFormat;\n\n                        //Forces the yAxis to use percentage in 'expand' mode.\n                        yAxis.tickFormat(percentFormatter);\n                    }\n                    else {\n                        if (oldYTickFormat) {\n                            yAxis.tickFormat(oldYTickFormat);\n                            oldYTickFormat = null;\n                        }\n                    }\n\n                    g.select('.nv-focus .nv-y.nv-axis')\n                    .transition().duration(0)\n                    .call(yAxis);\n                }\n            }\n\n            //============================================================\n            // Update Focus\n            //============================================================\n            if(!focusEnable) {\n                stackedWrap.transition().call(stacked);\n                updateXAxis();\n                updateYAxis();\n            } else {\n                focus.width(availableWidth);\n                g.select('.nv-focusWrap')\n                    .attr('transform', 'translate(0,' + ( availableHeight + margin.bottom + focus.margin().top) + ')')\n                    .datum(data.filter(function(d) { return !d.disabled; }))\n                    .call(focus);\n                var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n                if(extent !== null){\n                    onBrush(extent);\n                }\n            }\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            stacked.dispatch.on('areaClick.toggle', function(e) {\n                if (data.filter(function(d) { return !d.disabled }).length === 1)\n                    data.forEach(function(d) {\n                        d.disabled = false;\n                    });\n                else\n                    data.forEach(function(d,i) {\n                        d.disabled = (i != e.seriesIndex);\n                    });\n\n                state.disabled = data.map(function(d) { return !!d.disabled });\n                dispatch.stateChange(state);\n\n                chart.update();\n            });\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            controls.dispatch.on('legendClick', function(d,i) {\n                if (!d.disabled) return;\n\n                controlsData = controlsData.map(function(s) {\n                    s.disabled = true;\n                    return s;\n                });\n                d.disabled = false;\n\n                stacked.style(d.style);\n\n\n                state.style = stacked.style();\n                dispatch.stateChange(state);\n\n                chart.update();\n            });\n\n            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                stacked.clearHighlights();\n                var singlePoint, pointIndex, pointXLocation, allData = [], valueSum = 0, allNullValues = true;\n                data\n                    .filter(function(series, i) {\n                        series.seriesIndex = i;\n                        return !series.disabled;\n                    })\n                    .forEach(function(series,i) {\n                        pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n                        var point = series.values[pointIndex];\n                        var pointYValue = chart.y()(point, pointIndex);\n                        if (pointYValue != null) {\n                            stacked.highlightPoint(i, pointIndex, true);\n                        }\n                        if (typeof point === 'undefined') return;\n                        if (typeof singlePoint === 'undefined') singlePoint = point;\n                        if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n\n                        //If we are in 'expand' mode, use the stacked percent value instead of raw value.\n                        var tooltipValue = (stacked.style() == 'expand') ? point.display.y : chart.y()(point,pointIndex);\n                        allData.push({\n                            key: series.key,\n                            value: tooltipValue,\n                            color: color(series,series.seriesIndex),\n                            point: point\n                        });\n\n                        if (showTotalInTooltip && stacked.style() != 'expand' && tooltipValue != null) {\n                          valueSum += tooltipValue;\n                          allNullValues = false;\n                        };\n                    });\n\n                allData.reverse();\n\n                //Highlight the tooltip entry based on which stack the mouse is closest to.\n                if (allData.length > 2) {\n                    var yValue = chart.yScale().invert(e.mouseY);\n                    var yDistMax = Infinity, indexToHighlight = null;\n                    allData.forEach(function(series,i) {\n\n                        //To handle situation where the stacked area chart is negative, we need to use absolute values\n                        //when checking if the mouse Y value is within the stack area.\n                        yValue = Math.abs(yValue);\n                        var stackedY0 = Math.abs(series.point.display.y0);\n                        var stackedY = Math.abs(series.point.display.y);\n                        if ( yValue >= stackedY0 && yValue <= (stackedY + stackedY0))\n                        {\n                            indexToHighlight = i;\n                            return;\n                        }\n                    });\n                    if (indexToHighlight != null)\n                        allData[indexToHighlight].highlight = true;\n                }\n\n                //If we are not in 'expand' mode, add a 'Total' row to the tooltip.\n                if (showTotalInTooltip && stacked.style() != 'expand' && allData.length >= 2 && !allNullValues) {\n                    allData.push({\n                        key: totalLabel,\n                        value: valueSum,\n                        total: true\n                    });\n                }\n\n                var xValue = chart.x()(singlePoint,pointIndex);\n\n                var valueFormatter = interactiveLayer.tooltip.valueFormatter();\n                // Keeps track of the tooltip valueFormatter if the chart changes to expanded view\n                if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n                    if ( !oldValueFormatter ) {\n                        oldValueFormatter = valueFormatter;\n                    }\n                    //Forces the tooltip to use percentage in 'expand' mode.\n                    valueFormatter = d3.format(\".1%\");\n                }\n                else {\n                    if (oldValueFormatter) {\n                        valueFormatter = oldValueFormatter;\n                        oldValueFormatter = null;\n                    }\n                }\n\n                interactiveLayer.tooltip\n                    .valueFormatter(valueFormatter)\n                    .data(\n                    {\n                        value: xValue,\n                        series: allData\n                    }\n                )();\n\n                interactiveLayer.renderGuideLine(pointXLocation);\n\n            });\n\n            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                stacked.clearHighlights();\n            });\n\n            /* Update `main' graph on brush update. */\n            focus.dispatch.on(\"onBrush\", function(extent) {\n                onBrush(extent);\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n\n                if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n\n                    state.disabled = e.disabled;\n                }\n\n                if (typeof e.style !== 'undefined') {\n                    stacked.style(e.style);\n                    style = e.style;\n                }\n\n                chart.update();\n            });\n\n            //============================================================\n            // Functions\n            //------------------------------------------------------------\n\n            function onBrush(extent) {\n                // Update Main (Focus)\n                var stackedWrap = g.select('.nv-focus .nv-stackedWrap')\n                    .datum(\n                    data.filter(function(d) { return !d.disabled; })\n                        .map(function(d,i) {\n                            return {\n                                key: d.key,\n                                area: d.area,\n                                classed: d.classed,\n                                values: d.values.filter(function(d,i) {\n                                    return stacked.x()(d,i) >= extent[0] && stacked.x()(d,i) <= extent[1];\n                                }),\n                                disableTooltip: d.disableTooltip\n                            };\n                        })\n                );\n                stackedWrap.transition().duration(duration).call(stacked);\n\n                // Update Main (Focus) Axes\n                updateXAxis();\n                updateYAxis();\n            }\n\n        });\n\n        renderWatch.renderEnd('stacked Area chart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    stacked.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt.point['x'] = stacked.x()(evt.point);\n        evt.point['y'] = stacked.y()(evt.point);\n        tooltip.data(evt).hidden(false);\n    });\n\n    stacked.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true)\n    });\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.stacked = stacked;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis;\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.focus = focus;\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        legendPosition: {get: function(){return legendPosition;}, set: function(_){legendPosition=_;}},\n        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        showControls:    {get: function(){return showControls;}, set: function(_){showControls=_;}},\n        controlLabels:    {get: function(){return controlLabels;}, set: function(_){controlLabels=_;}},\n        controlOptions:    {get: function(){return controlOptions;}, set: function(_){controlOptions=_;}},\n        showTotalInTooltip:      {get: function(){return showTotalInTooltip;}, set: function(_){showTotalInTooltip=_;}},\n        totalLabel:      {get: function(){return totalLabel;}, set: function(_){totalLabel=_;}},\n        focusEnable:    {get: function(){return focusEnable;}, set: function(_){focusEnable=_;}},\n        focusHeight:     {get: function(){return focus.height();}, set: function(_){focus.height(_);}},\n        brushExtent: {get: function(){return focus.brushExtent();}, set: function(_){focus.brushExtent(_);}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        focusMargin: {get: function(){return focus.margin}, set: function(_){\n            focus.margin.top    = _.top    !== undefined ? _.top    : focus.margin.top;\n            focus.margin.right  = _.right  !== undefined ? _.right  : focus.margin.right;\n            focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n            focus.margin.left   = _.left   !== undefined ? _.left   : focus.margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            stacked.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n            stacked.color(color);\n            focus.color(color);\n        }},\n        x: {get: function(){return stacked.x();}, set: function(_){\n            stacked.x(_);\n            focus.x(_);\n        }},\n        y: {get: function(){return stacked.y();}, set: function(_){\n            stacked.y(_);\n            focus.y(_);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n        }},\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = !!_;\n            chart.interactive(!_);\n            chart.useVoronoi(!_);\n            stacked.scatter.interactive(!_);\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, stacked);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.stackedAreaWithFocusChart = function() {\n  return nv.models.stackedAreaChart()\n    .margin({ bottom: 30 })\n    .focusEnable( true );\n};\n// based on http://bl.ocks.org/kerryrodden/477c1bfb081b783f80ad\nnv.models.sunburst = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 600\n        , height = 600\n        , mode = \"count\"\n        , modes = {count: function(d) { return 1; }, value: function(d) { return d.value || d.size }, size: function(d) { return d.value || d.size }}\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , color = nv.utils.defaultColor()\n        , showLabels = false\n        , labelFormat = function(d){if(mode === 'count'){return d.name + ' #' + d.value}else{return d.name + ' ' + (d.value || d.size)}}\n        , labelThreshold = 0.02\n        , sort = function(d1, d2){return d1.name > d2.name;}\n        , key = function(d,i){return d.name;}\n        , groupColorByParent = true\n        , duration = 500\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMousemove', 'elementMouseover', 'elementMouseout', 'renderEnd');\n\n    //============================================================\n    // aux functions and setup\n    //------------------------------------------------------------\n\n    var x = d3.scale.linear().range([0, 2 * Math.PI]);\n    var y = d3.scale.sqrt();\n\n    var partition = d3.layout.partition().sort(sort);\n\n    var node, availableWidth, availableHeight, radius;\n    var prevPositions = {};\n\n    var arc = d3.svg.arc()\n        .startAngle(function(d) {return Math.max(0, Math.min(2 * Math.PI, x(d.x))) })\n        .endAngle(function(d) {return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx))) })\n        .innerRadius(function(d) {return Math.max(0, y(d.y)) })\n        .outerRadius(function(d) {return Math.max(0, y(d.y + d.dy)) });\n\n    function rotationToAvoidUpsideDown(d) {\n        var centerAngle = computeCenterAngle(d);\n        if(centerAngle > 90){\n            return 180;\n        }\n        else {\n            return 0;\n        }\n    }\n\n    function computeCenterAngle(d) {\n        var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n        var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n        var centerAngle = (((startAngle + endAngle) / 2) * (180 / Math.PI)) - 90;\n        return centerAngle;\n    }\n\n    function computeNodePercentage(d) {\n        var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n        var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n        return (endAngle - startAngle) / (2 * Math.PI);\n    }\n\n    function labelThresholdMatched(d) {\n        var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n        var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n\n        var size = endAngle - startAngle;\n        return size > labelThreshold;\n    }\n\n    // When zooming: interpolate the scales.\n    function arcTweenZoom(e,i) {\n        var xd = d3.interpolate(x.domain(), [node.x, node.x + node.dx]),\n        yd = d3.interpolate(y.domain(), [node.y, 1]),\n        yr = d3.interpolate(y.range(), [node.y ? 20 : 0, radius]);\n\n        if (i === 0) {\n            return function() {return arc(e);}\n        }\n        else {\n            return function (t) {\n                x.domain(xd(t));\n                y.domain(yd(t)).range(yr(t));\n                return arc(e);\n            }\n        };\n    }\n\n    function arcTweenUpdate(d) {\n        var ipo = d3.interpolate({x: d.x0, dx: d.dx0, y: d.y0, dy: d.dy0}, d);\n\n        return function (t) {\n            var b = ipo(t);\n\n            d.x0 = b.x;\n            d.dx0 = b.dx;\n            d.y0 = b.y;\n            d.dy0 = b.dy;\n\n            return arc(b);\n        };\n    }\n\n    function updatePrevPosition(node) {\n        var k = key(node);\n        if(! prevPositions[k]) prevPositions[k] = {};\n        var pP = prevPositions[k];\n        pP.dx = node.dx;\n        pP.x = node.x;\n        pP.dy = node.dy;\n        pP.y = node.y;\n    }\n\n    function storeRetrievePrevPositions(nodes) {\n        nodes.forEach(function(n){\n            var k = key(n);\n            var pP = prevPositions[k];\n            //console.log(k,n,pP);\n            if( pP ){\n                n.dx0 = pP.dx;\n                n.x0 = pP.x;\n                n.dy0 = pP.dy;\n                n.y0 = pP.y;\n            }\n            else {\n                n.dx0 = n.dx;\n                n.x0 = n.x;\n                n.dy0 = n.dy;\n                n.y0 = n.y;\n            }\n            updatePrevPosition(n);\n        });\n    }\n\n    function zoomClick(d) {\n        var labels = container.selectAll('text')\n        var path = container.selectAll('path')\n\n        // fade out all text elements\n        labels.transition().attr(\"opacity\",0);\n\n        // to allow reference to the new center node\n        node = d;\n\n        path.transition()\n            .duration(duration)\n            .attrTween(\"d\", arcTweenZoom)\n            .each('end', function(e) {\n                // partially taken from here: http://bl.ocks.org/metmajer/5480307\n                // check if the animated element's data e lies within the visible angle span given in d\n                if(e.x >= d.x && e.x < (d.x + d.dx) ){\n                    if(e.depth >= d.depth){\n                        // get a selection of the associated text element\n                        var parentNode = d3.select(this.parentNode);\n                        var arcText = parentNode.select('text');\n\n                        // fade in the text element and recalculate positions\n                        arcText.transition().duration(duration)\n                        .text( function(e){return labelFormat(e) })\n                        .attr(\"opacity\", function(d){\n                            if(labelThresholdMatched(d)) {\n                                return 1;\n                            }\n                            else {\n                                return 0;\n                            }\n                        })\n                        .attr(\"transform\", function() {\n                            var width = this.getBBox().width;\n                            if(e.depth === 0)\n                            return \"translate(\" + (width / 2 * - 1) + \",0)\";\n                            else if(e.depth === d.depth){\n                                return \"translate(\" + (y(e.y) + 5) + \",0)\";\n                            }\n                            else {\n                                var centerAngle = computeCenterAngle(e);\n                                var rotation = rotationToAvoidUpsideDown(e);\n                                if (rotation === 0) {\n                                    return 'rotate('+ centerAngle +')translate(' + (y(e.y) + 5) + ',0)';\n                                }\n                                else {\n                                    return 'rotate('+ centerAngle +')translate(' + (y(e.y) + width + 5) + ',0)rotate(' + rotation + ')';\n                                }\n                            }\n                        });\n                    }\n                }\n            })\n    }\n\n    //============================================================\n    // chart function\n    //------------------------------------------------------------\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n        renderWatch.reset();\n\n        selection.each(function(data) {\n            container = d3.select(this);\n            availableWidth = nv.utils.availableWidth(width, container, margin);\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            radius = Math.min(availableWidth, availableHeight) / 2;\n\n            y.range([0, radius]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.select('g.nvd3.nv-wrap.nv-sunburst');\n            if( !wrap[0][0] ) {\n                wrap = container.append('g')\n                    .attr('class', 'nvd3 nv-wrap nv-sunburst nv-chart-' + id)\n                    .attr('transform', 'translate(' + ((availableWidth / 2) + margin.left + margin.right) + ',' + ((availableHeight / 2) + margin.top + margin.bottom) + ')');\n            } else {\n                wrap.attr('transform', 'translate(' + ((availableWidth / 2) + margin.left + margin.right) + ',' + ((availableHeight / 2) + margin.top + margin.bottom) + ')');\n            }\n\n            container.on('click', function (d, i) {\n                dispatch.chartClick({\n                    data: d,\n                    index: i,\n                    pos: d3.event,\n                    id: id\n                });\n            });\n\n            partition.value(modes[mode] || modes[\"count\"]);\n\n            //reverse the drawing order so that the labels of inner\n            //arcs are drawn on top of the outer arcs.\n            var nodes = partition.nodes(data[0]).reverse()\n\n            storeRetrievePrevPositions(nodes);\n            var cG = wrap.selectAll('.arc-container').data(nodes, key)\n\n            //handle new datapoints\n            var cGE = cG.enter()\n                .append(\"g\")\n                .attr(\"class\",'arc-container')\n\n            cGE.append(\"path\")\n                .attr(\"d\", arc)\n                .style(\"fill\", function (d) {\n                    if (d.color) {\n                        return d.color;\n                    }\n                    else if (groupColorByParent) {\n                        return color((d.children ? d : d.parent).name);\n                    }\n                    else {\n                        return color(d.name);\n                    }\n                })\n                .style(\"stroke\", \"#FFF\")\n                .on(\"click\", function(d,i){\n                    zoomClick(d);\n                    dispatch.elementClick({\n                        data: d,\n                        index: i\n                    })\n                })\n                .on('mouseover', function(d,i){\n                    d3.select(this).classed('hover', true).style('opacity', 0.8);\n                    dispatch.elementMouseover({\n                        data: d,\n                        color: d3.select(this).style(\"fill\"),\n                        percent: computeNodePercentage(d)\n                    });\n                })\n                .on('mouseout', function(d,i){\n                    d3.select(this).classed('hover', false).style('opacity', 1);\n                    dispatch.elementMouseout({\n                        data: d\n                    });\n                })\n                .on('mousemove', function(d,i){\n                    dispatch.elementMousemove({\n                        data: d\n                    });\n                });\n\n            ///Iterating via each and selecting based on the this\n            ///makes it work ... a cG.selectAll('path') doesn't.\n            ///Without iteration the data (in the element) didn't update.\n            cG.each(function(d){\n                d3.select(this).select('path')\n                    .transition()\n                    .duration(duration)\n                    .attrTween('d', arcTweenUpdate);\n            });\n\n            if(showLabels){\n                //remove labels first and add them back\n                cG.selectAll('text').remove();\n\n                //this way labels are on top of newly added arcs\n                cG.append('text')\n                    .text( function(e){ return labelFormat(e)})\n                    .transition()\n                    .duration(duration)\n                    .attr(\"opacity\", function(d){\n                        if(labelThresholdMatched(d)) {\n                            return 1;\n                        }\n                        else {\n                            return 0;\n                        }\n                    })\n                    .attr(\"transform\", function(d) {\n                        var width = this.getBBox().width;\n                        if(d.depth === 0){\n                            return \"rotate(0)translate(\" + (width / 2 * -1) + \",0)\";\n                        }\n                        else {\n                            var centerAngle = computeCenterAngle(d);\n                            var rotation = rotationToAvoidUpsideDown(d);\n                            if (rotation === 0) {\n                                return 'rotate('+ centerAngle +')translate(' + (y(d.y) + 5) + ',0)';\n                            }\n                            else {\n                                return 'rotate('+ centerAngle +')translate(' + (y(d.y) + width + 5) + ',0)rotate(' + rotation + ')';\n                            }\n                        }\n                    });\n            }\n\n            //zoom out to the center when the data is updated.\n            zoomClick(nodes[nodes.length - 1])\n\n\n            //remove unmatched elements ...\n            cG.exit()\n                .transition()\n                .duration(duration)\n                .attr('opacity',0)\n                .each('end',function(d){\n                    var k = key(d);\n                    prevPositions[k] = undefined;\n                })\n                .remove();\n        });\n\n\n        renderWatch.renderEnd('sunburst immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        mode:       {get: function(){return mode;}, set: function(_){mode=_;}},\n        id:         {get: function(){return id;}, set: function(_){id=_;}},\n        duration:   {get: function(){return duration;}, set: function(_){duration=_;}},\n        groupColorByParent: {get: function(){return groupColorByParent;}, set: function(_){groupColorByParent=!!_;}},\n        showLabels: {get: function(){return showLabels;}, set: function(_){showLabels=!!_}},\n        labelFormat: {get: function(){return labelFormat;}, set: function(_){labelFormat=_}},\n        labelThreshold: {get: function(){return labelThreshold;}, set: function(_){labelThreshold=_}},\n        sort: {get: function(){return sort;}, set: function(_){sort=_}},\n        key: {get: function(){return key;}, set: function(_){key=_}},\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    != undefined ? _.top    : margin.top;\n            margin.right  = _.right  != undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   != undefined ? _.left   : margin.left;\n        }},\n        color: {get: function(){return color;}, set: function(_){\n            color=nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\nnv.models.sunburstChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sunburst = nv.models.sunburst();\n    var tooltip = nv.models.tooltip();\n\n    var margin = {top: 30, right: 20, bottom: 20, left: 20}\n        , width = null\n        , height = null\n        , color = nv.utils.defaultColor()\n        , showTooltipPercent = false\n        , id = Math.round(Math.random() * 100000)\n        , defaultState = null\n        , noData = null\n        , duration = 250\n        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd');\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    tooltip\n        .duration(0)\n        .headerEnabled(false)\n        .valueFormatter(function(d){return d;});\n\n    //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(sunburst);\n\n        selection.each(function(data) {\n            var container = d3.select(this);\n\n            nv.utils.initSVG(container);\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin);\n            var availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() {\n                if (duration === 0) {\n                    container.call(chart);\n                } else {\n                    container.transition().duration(duration).call(chart);\n                }\n            };\n            chart.container = container;\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length) {\n                nv.utils.noData(chart, container);\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            sunburst.width(availableWidth).height(availableHeight).margin(margin);\n            container.call(sunburst);\n        });\n\n        renderWatch.renderEnd('sunburstChart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    sunburst.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt.series = {\n            key: evt.data.name,\n            value: (evt.data.value || evt.data.size),\n            color: evt.color,\n            percent: evt.percent\n        };\n        if (!showTooltipPercent) {\n            delete evt.percent;\n            delete evt.series.percent;\n        }\n        tooltip.data(evt).hidden(false);\n    });\n\n    sunburst.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    sunburst.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.sunburst = sunburst;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    // use Object get/set functionality to map between vars and chart functions\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        noData:             {get: function(){return noData;},               set: function(_){noData=_;}},\n        defaultState:       {get: function(){return defaultState;},         set: function(_){defaultState=_;}},\n        showTooltipPercent: {get: function(){return showTooltipPercent;},   set: function(_){showTooltipPercent=_;}},\n\n        // options that require extra logic in the setter\n        color: {get: function(){return color;}, set: function(_){\n            color = _;\n            sunburst.color(color);\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            sunburst.duration(duration);\n        }},\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n            sunburst.margin(margin);\n        }}\n    });\n    nv.utils.inheritOptions(chart, sunburst);\n    nv.utils.initOptions(chart);\n    return chart;\n\n};\n\nnv.version = \"1.8.5\";\n})();\n//# sourceMappingURL=nv.d3.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/nvd3/build/nv.d3.js\n ** module id = 35\n ** module chunks = 2\n **/","import * as _ from 'lodash';\n\nconst _name = \"fxToolbar\";\n\ninterface IDirectiveScope extends ng.IScope {\n    ngModel: Object;\n}\n\nclass Strategy {\n    private tools: { [id: string]: string; } = {};\n\n    register(key: string, template: string) {\n        this.tools[key] = template;\n    }\n\n    get(key: string) {\n        return this.tools[key] || \"\";\n    }\n}\n\nconst strategy = new Strategy();\n\nstrategy.register(\"icon\", require('./tpls/icon.jade')());\nstrategy.register(\"btn\", require('./tpls/btn.jade')());\nstrategy.register(\"layout\", require('./tpls/layout.jade')());\nstrategy.register(\"label\", require('./tpls/label.jade')());\nstrategy.register(\"menu\", require('./tpls/menu.jade')());\nstrategy.register(\"menuItem\", require('./tpls/menu-item.jade')());\nstrategy.register(\"menuBar\", require('./tpls/menubar.jade')());\nstrategy.register(\"menuDivider\", require('./tpls/menu-divider.jade')());\n\nclass Controller {\n    static $inject = [\"$scope\", \"$rootScope\", \"$compile\", \"$interpolate\", \"materialUtils\"];\n\n    ctls: string;\n    items: Object;\n    ngModel: Object;\n    ngDisabled: Object;\n    index: number;\n\n    constructor(private $scope: ng.IScope, private $rootScope: ng.IRootScopeService, private $compile: ng.ICompileService, private $interpolate: ng.IInterpolateService, private materialUtils: fx.utils.materialStatic) {\n\n    }\n\n    openMenu($mdOpenMenu, ev) {\n        $mdOpenMenu(ev);\n    }\n\n    dig(models, $ele, $scope) {\n        _.each(models, (model) => {\n            let template = strategy.get(model['type']);\n            let $newScope = $scope.$new(true, $scope);\n            let tmp: string, $newEle: JQuery;\n\n            if (!template) {\n                template = model.template;\n            }\n            if (!template) {\n                return console.error(\"没有模板或者找不到类型!\");\n            }\n\n            model = _.cloneDeep(model);\n\n            model.disabled = `${this.ngDisabled}`;\n            model.materialUtils = this.materialUtils;\n            model.ngModel = this.ngModel;\n            model.index = this.index;\n\n            // 处理condition来控制控件的显示与隐藏\n            if (model.conditionInfo && model.conditionInfo.condition) {\n                if (model.conditionInfo.prefix) {\n                    model.condition = `${model['type']}Ctl.${model.conditionInfo.condition}`;\n                } else {\n                    model.condition = `${model.conditionInfo.condition}`;\n                }\n\n                if (model.conditionInfo.useDisabled) {\n                    model.disabled = model.condition;\n                    model.condition = \"\";\n                }\n\n            }\n            !model.condition && (model.condition = \"true\");\n\n            // 设置controllerAs\n            $newScope[`${model['type']}Ctl`] = _.clone(model);\n            if (this.ctls) {\n                $newScope[this.ctls] = $scope.$parent[this.ctls] || {};\n            }\n\n            this.$scope.$watch(() => {\n                return this.index;\n            }, (newValue, oldValue) => {\n                if (newValue != oldValue) {\n                    $newScope[`${model['type']}Ctl`][\"index\"] = newValue;\n                }\n            });\n\n            // 编译一次模板\n            tmp = this.$interpolate(template)($newScope);\n            $newEle = angular.element(tmp);\n            // 设置属性\n            _.each(model.attributes, (attr, key) => {\n                $newEle.attr(key, attr);\n            });\n            // $compile\n            $newEle = this.$compile($newEle)($newScope);\n            $ele.append($newEle);\n            // 递归\n            if (_.isArray(model.tools)) {\n                this.dig(model.tools, $newEle, $newScope);\n            }\n        });\n    }\n}\n\nfunction Directive(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        require: [_name],\n        scope: {},\n        bindToController: {\n            ctls: '@',\n            ngDisabled: '@',\n            items: \"=\",\n            ngModel: '=',\n            index: '=?'\n        },\n        controllerAs: 'toolbarCtl',\n        controller: Controller,\n        replace: false,\n        link: ($scope: IDirectiveScope, $ele: ng.IAugmentedJQuery, $attr: ng.IAttributes, $ctl: Controller) => {\n            $scope.$watchCollection(() => {\n                return $ctl[0].items;\n            }, (newValue) => {\n                let model = newValue;\n\n                if (!model) return;\n                if (!_.isObject(model) && !_.isArray(model)) {\n                    return console.error(\"items只能是对象或者数组!\");\n                }\n                $ctl[0].dig(_.isArray(model) ? model : [model], $ele, $scope);\n            });\n        }\n    }\n}\n\nDirective.$inject = [];\n\nexport const module = angular.module(`${_name}Module`, []).directive(_name, Directive);\nexport default `${module.name}`;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/toolbar/module.ts\n **/","require('./dist/angular-nvd3');\nmodule.exports = 'nvd3';\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-nvd3/index.js\n ** module id = 175\n ** module chunks = 2\n **/","/* commonjs package manager support (eg componentjs) */\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports){\n  module.exports = 'treeControl';\n}\n(function ( angular ) {\n    'use strict';\n\n    function createPath(startScope) {\n        return function path() {\n            var _path = [];\n            var scope = startScope;\n            var prevNode;\n            while (scope && scope.node !== startScope.synteticRoot) {\n                if (prevNode !== scope.node)\n                    _path.push(scope.node);\n                prevNode = scope.node;\n                scope = scope.$parent;\n            }\n            return _path;\n        }\n    }\n\n    function ensureDefault(obj, prop, value) {\n        if (!obj.hasOwnProperty(prop))\n            obj[prop] = value;\n    }\n\n    function defaultIsLeaf(node, $scope) {\n        return !node[$scope.options.nodeChildren] || node[$scope.options.nodeChildren].length === 0;\n    }\n\n    function shallowCopy(src, dst) {\n        if (angular.isArray(src)) {\n            dst = dst || [];\n\n            for (var i = 0; i < src.length; i++) {\n                dst[i] = src[i];\n            }\n        } else if (angular.isObject(src)) {\n            dst = dst || {};\n\n            for (var key in src) {\n                if (hasOwnProperty.call(src, key) && !(key.charAt(0) === '$' && key.charAt(1) === '$')) {\n                    dst[key] = src[key];\n                }\n            }\n        }\n\n        return dst || src;\n    }\n    function defaultEquality(a, b,$scope) {\n        if (!a || !b)\n            return false;\n        a = shallowCopy(a);\n        a[$scope.options.nodeChildren] = [];\n        b = shallowCopy(b);\n        b[$scope.options.nodeChildren] = [];\n        return angular.equals(a, b);\n    }\n\n    function defaultIsSelectable() {\n        return true;\n    }\n\n    function ensureAllDefaultOptions($scope) {\n        ensureDefault($scope.options, \"multiSelection\", false);\n        ensureDefault($scope.options, \"nodeChildren\", \"children\");\n        ensureDefault($scope.options, \"dirSelectable\", \"true\");\n        ensureDefault($scope.options, \"injectClasses\", {});\n        ensureDefault($scope.options.injectClasses, \"ul\", \"\");\n        ensureDefault($scope.options.injectClasses, \"li\", \"\");\n        ensureDefault($scope.options.injectClasses, \"liSelected\", \"\");\n        ensureDefault($scope.options.injectClasses, \"iExpanded\", \"\");\n        ensureDefault($scope.options.injectClasses, \"iCollapsed\", \"\");\n        ensureDefault($scope.options.injectClasses, \"iLeaf\", \"\");\n        ensureDefault($scope.options.injectClasses, \"label\", \"\");\n        ensureDefault($scope.options.injectClasses, \"labelSelected\", \"\");\n        ensureDefault($scope.options, \"equality\", defaultEquality);\n        ensureDefault($scope.options, \"isLeaf\", defaultIsLeaf);\n        ensureDefault($scope.options, \"allowDeselect\", true);\n        ensureDefault($scope.options, \"isSelectable\", defaultIsSelectable);\n    }\n    \n    angular.module( 'treeControl', [] )\n        .constant('treeConfig', {\n            templateUrl: null\n        })\n        .directive( 'treecontrol', ['$compile', function( $compile ) {\n            /**\n             * @param cssClass - the css class\n             * @param addClassProperty - should we wrap the class name with class=\"\"\n             */\n            function classIfDefined(cssClass, addClassProperty) {\n                if (cssClass) {\n                    if (addClassProperty)\n                        return 'class=\"' + cssClass + '\"';\n                    else\n                        return cssClass;\n                }\n                else\n                    return \"\";\n            }\n            \n            \n            \n            return {\n                restrict: 'EA',\n                require: \"treecontrol\",\n                transclude: true,\n                scope: {\n                    treeModel: \"=\",\n                    selectedNode: \"=?\",\n                    selectedNodes: \"=?\",\n                    expandedNodes: \"=?\",\n                    onSelection: \"&\",\n                    onNodeToggle: \"&\",\n                    options: \"=?\",\n                    orderBy: \"=?\",\n                    reverseOrder: \"@\",\n                    filterExpression: \"=?\",\n                    filterComparator: \"=?\"\n                },\n                controller: ['$scope', '$templateCache', '$interpolate', 'treeConfig', function ($scope, $templateCache, $interpolate, treeConfig) {\n                    \n                    $scope.options = $scope.options || {};\n                    \n                    ensureAllDefaultOptions($scope);\n                  \n                    $scope.selectedNodes = $scope.selectedNodes || [];\n                    $scope.expandedNodes = $scope.expandedNodes || [];\n                    $scope.expandedNodesMap = {};\n                    for (var i=0; i < $scope.expandedNodes.length; i++) {\n                        $scope.expandedNodesMap[\"a\"+i] = $scope.expandedNodes[i];\n                    }\n                    $scope.parentScopeOfTree = $scope.$parent;\n\n\n                    function isSelectedNode(node) {\n                        if (!$scope.options.multiSelection && ($scope.options.equality(node, $scope.selectedNode , $scope)))\n                            return true;\n                        else if ($scope.options.multiSelection && $scope.selectedNodes) {\n                            for (var i = 0; (i < $scope.selectedNodes.length); i++) {\n                                if ($scope.options.equality(node, $scope.selectedNodes[i] , $scope)) {\n                                    return true;\n                                }\n                            }\n                            return false;\n                        }\n                    }\n\n                    $scope.headClass = function(node) {\n                        var liSelectionClass = classIfDefined($scope.options.injectClasses.liSelected, false);\n                        var injectSelectionClass = \"\";\n                        if (liSelectionClass && isSelectedNode(node))\n                            injectSelectionClass = \" \" + liSelectionClass;\n                        if ($scope.options.isLeaf(node, $scope))\n                            return \"tree-leaf\" + injectSelectionClass;\n                        if ($scope.expandedNodesMap[this.$id])\n                            return \"tree-expanded\" + injectSelectionClass;\n                        else\n                            return \"tree-collapsed\" + injectSelectionClass;\n                    };\n\n                    $scope.iBranchClass = function() {\n                        if ($scope.expandedNodesMap[this.$id])\n                            return classIfDefined($scope.options.injectClasses.iExpanded);\n                        else\n                            return classIfDefined($scope.options.injectClasses.iCollapsed);\n                    };\n\n                    $scope.nodeExpanded = function() {\n                        return !!$scope.expandedNodesMap[this.$id];\n                    };\n\n                    $scope.selectNodeHead = function() {\n                        var transcludedScope = this;\n                        var expanding = $scope.expandedNodesMap[transcludedScope.$id] === undefined;\n                        $scope.expandedNodesMap[transcludedScope.$id] = (expanding ? transcludedScope.node : undefined);\n                        if (expanding) {\n                            $scope.expandedNodes.push(transcludedScope.node);\n                        }\n                        else {\n                            var index;\n                            for (var i=0; (i < $scope.expandedNodes.length) && !index; i++) {\n                                if ($scope.options.equality($scope.expandedNodes[i], transcludedScope.node , $scope)) {\n                                    index = i;\n                                }\n                            }\n                            if (index !== undefined)\n                                $scope.expandedNodes.splice(index, 1);\n                        }\n                        if ($scope.onNodeToggle) {\n                            var parentNode = (transcludedScope.$parent.node === transcludedScope.synteticRoot)?null:transcludedScope.$parent.node;\n                            var path = createPath(transcludedScope);\n                            $scope.onNodeToggle({node: transcludedScope.node, $parentNode: parentNode, $path: path,\n                              $index: transcludedScope.$index, $first: transcludedScope.$first, $middle: transcludedScope.$middle,\n                              $last: transcludedScope.$last, $odd: transcludedScope.$odd, $even: transcludedScope.$even, expanded: expanding});\n\n                        }\n                    };\n\n                    $scope.selectNodeLabel = function( selectedNode){\n                        var transcludedScope = this;\n                        if(!$scope.options.isLeaf(selectedNode, $scope) && (!$scope.options.dirSelectable || !$scope.options.isSelectable(selectedNode))) {\n                            // Branch node is not selectable, expand\n                            this.selectNodeHead();\n                        }\n                        else if($scope.options.isLeaf(selectedNode, $scope) && (!$scope.options.isSelectable(selectedNode))) {\n                            // Leaf node is not selectable\n                            return;\n                        }\n                        else {\n                            var selected = false;\n                            if ($scope.options.multiSelection) {\n                                var pos = -1;\n                                for (var i=0; i < $scope.selectedNodes.length; i++) {\n                                    if($scope.options.equality(selectedNode, $scope.selectedNodes[i] , $scope)) {\n                                        pos = i;\n                                        break;\n                                    }\n                                }\n                                if (pos === -1) {\n                                    $scope.selectedNodes.push(selectedNode);\n                                    selected = true;\n                                } else {\n                                    $scope.selectedNodes.splice(pos, 1);\n                                }\n                            } else {\n                                if (!$scope.options.equality(selectedNode, $scope.selectedNode , $scope)) {\n                                    $scope.selectedNode = selectedNode;\n                                    selected = true;\n                                }\n                                else {\n                                    if ($scope.options.allowDeselect) {\n                                        $scope.selectedNode = undefined;\n                                    } else {\n                                        $scope.selectedNode = selectedNode;\n                                        selected = true;\n                                    }\n                                }\n                            }\n                            if ($scope.onSelection) {\n                                var parentNode = (transcludedScope.$parent.node === transcludedScope.synteticRoot)?null:transcludedScope.$parent.node;\n                                var path = createPath(transcludedScope)\n                                $scope.onSelection({node: selectedNode, selected: selected, $parentNode: parentNode, $path: path,\n                                  $index: transcludedScope.$index, $first: transcludedScope.$first, $middle: transcludedScope.$middle,\n                                  $last: transcludedScope.$last, $odd: transcludedScope.$odd, $even: transcludedScope.$even});\n                            }\n                        }\n                    };\n\n                    $scope.selectedClass = function() {\n                        var isThisNodeSelected = isSelectedNode(this.node);\n                        var labelSelectionClass = classIfDefined($scope.options.injectClasses.labelSelected, false);\n                        var injectSelectionClass = \"\";\n                        if (labelSelectionClass && isThisNodeSelected)\n                            injectSelectionClass = \" \" + labelSelectionClass;\n\n                        return isThisNodeSelected ? \"tree-selected\" + injectSelectionClass : \"\";\n                    };\n\n                    $scope.unselectableClass = function() {\n                        var isThisNodeUnselectable = !$scope.options.isSelectable(this.node);\n                        var labelUnselectableClass = classIfDefined($scope.options.injectClasses.labelUnselectable, false);\n                        return isThisNodeUnselectable ? \"tree-unselectable \" + labelUnselectableClass : \"\";\n                    };\n\n                    //tree template\n                    $scope.isReverse = function() {\n                      return !($scope.reverseOrder === 'false' || $scope.reverseOrder === 'False' || $scope.reverseOrder === '' || $scope.reverseOrder === false);\n                    };\n\n                    $scope.orderByFunc = function() {\n                      return $scope.orderBy;\n                    };\n//                    return \"\" + $scope.orderBy;\n\n                    var templateOptions = {\n                        orderBy: $scope.orderBy ? \" | orderBy:orderByFunc():isReverse()\" : '',\n                        ulClass: classIfDefined($scope.options.injectClasses.ul, true),\n                        nodeChildren:  $scope.options.nodeChildren,\n                        liClass: classIfDefined($scope.options.injectClasses.li, true),\n                        iLeafClass: classIfDefined($scope.options.injectClasses.iLeaf, false),\n                        labelClass: classIfDefined($scope.options.injectClasses.label, false)\n                    };\n\n                    var template;\n                    var templateUrl = $scope.options.templateUrl || treeConfig.templateUrl;\n\n                    if(templateUrl) {\n                        template = $templateCache.get(templateUrl);\n                    }\n\n                    if(!template) {\n                        template =\n                            '<ul {{options.ulClass}} >' +\n                            '<li ng-repeat=\"node in node.{{options.nodeChildren}} | filter:filterExpression:filterComparator {{options.orderBy}}\" ng-class=\"headClass(node)\" {{options.liClass}}' +\n                            'set-node-to-data>' +\n                            '<i class=\"tree-branch-head\" ng-class=\"iBranchClass()\" ng-click=\"selectNodeHead(node)\"></i>' +\n                            '<i class=\"tree-leaf-head {{options.iLeafClass}}\"></i>' +\n                            '<div class=\"tree-label {{options.labelClass}}\" ng-class=\"[selectedClass(), unselectableClass()]\" ng-click=\"selectNodeLabel(node)\" tree-transclude></div>' +\n                            '<treeitem ng-if=\"nodeExpanded()\"></treeitem>' +\n                            '</li>' +\n                            '</ul>';\n                    }\n\n                    this.template = $compile($interpolate(template)({options: templateOptions}));\n                }],\n                compile: function(element, attrs, childTranscludeFn) {\n                    return function ( scope, element, attrs, treemodelCntr ) {\n\n                        scope.$watch(\"treeModel\", function updateNodeOnRootScope(newValue) {\n                            if (angular.isArray(newValue)) {\n                                if (angular.isDefined(scope.node) && angular.equals(scope.node[scope.options.nodeChildren], newValue))\n                                    return;\n                                scope.node = {};\n                                scope.synteticRoot = scope.node;\n                                scope.node[scope.options.nodeChildren] = newValue;\n                            }\n                            else {\n                                if (angular.equals(scope.node, newValue))\n                                    return;\n                                scope.node = newValue;\n                            }\n                        });\n\n                        scope.$watchCollection('expandedNodes', function(newValue, oldValue) {\n                            var notFoundIds = 0;\n                            var newExpandedNodesMap = {};\n                            var $liElements = element.find('li');\n                            var existingScopes = [];\n                            // find all nodes visible on the tree and the scope $id of the scopes including them\n                            angular.forEach($liElements, function(liElement) {\n                                var $liElement = angular.element(liElement);\n                                var liScope = {\n                                    $id: $liElement.data('scope-id'),\n                                    node: $liElement.data('node')\n                                };\n                                existingScopes.push(liScope);\n                            });\n                            // iterate over the newValue, the new expanded nodes, and for each find it in the existingNodesAndScopes\n                            // if found, add the mapping $id -> node into newExpandedNodesMap\n                            // if not found, add the mapping num -> node into newExpandedNodesMap\n                            angular.forEach(newValue, function(newExNode) {\n                                var found = false;\n                                for (var i=0; (i < existingScopes.length) && !found; i++) {\n                                    var existingScope = existingScopes[i];\n                                    if (scope.options.equality(newExNode, existingScope.node , scope)) {\n                                        newExpandedNodesMap[existingScope.$id] = existingScope.node;\n                                        found = true;\n                                    }\n                                }\n                                if (!found)\n                                    newExpandedNodesMap['a' + notFoundIds++] = newExNode;\n                            });\n                            scope.expandedNodesMap = newExpandedNodesMap;\n                        });\n\n//                        scope.$watch('expandedNodesMap', function(newValue) {\n//\n//                        });\n\n                        //Rendering template for a root node\n                        treemodelCntr.template( scope, function(clone) {\n                            element.html('').append( clone );\n                        });\n                        // save the transclude function from compile (which is not bound to a scope as apposed to the one from link)\n                        // we can fix this to work with the link transclude function with angular 1.2.6. as for angular 1.2.0 we need\n                        // to keep using the compile function\n                        scope.$treeTransclude = childTranscludeFn;\n                    };\n                }\n            };\n        }])\n        .directive(\"setNodeToData\", ['$parse', function($parse) {\n            return {\n                restrict: 'A',\n                link: function($scope, $element, $attrs) {\n                    $element.data('node', $scope.node);\n                    $element.data('scope-id', $scope.$id);\n                }\n            };\n        }])\n        .directive(\"treeitem\", function() {\n            return {\n                restrict: 'E',\n                require: \"^treecontrol\",\n                link: function( scope, element, attrs, treemodelCntr) {\n                    // Rendering template for the current node\n                    treemodelCntr.template(scope, function(clone) {\n                        element.html('').append(clone);\n                    });\n                }\n            };\n        })\n        .directive(\"treeTransclude\", function () {\n            return {\n                controller: ['$scope',function ($scope) {\n                    ensureAllDefaultOptions($scope);\n                }],\n\n                link: function(scope, element, attrs, controller) {\n                    if (!scope.options.isLeaf(scope.node, scope)) {\n                        angular.forEach(scope.expandedNodesMap, function (node, id) {\n                            if (scope.options.equality(node, scope.node , scope)) {\n                                scope.expandedNodesMap[scope.$id] = scope.node;\n                                scope.expandedNodesMap[id] = undefined;\n                            }\n                        });\n                    }\n                    if (!scope.options.multiSelection && scope.options.equality(scope.node, scope.selectedNode , scope)) {\n                        scope.selectedNode = scope.node;\n                    } else if (scope.options.multiSelection) {\n                        var newSelectedNodes = [];\n                        for (var i = 0; (i < scope.selectedNodes.length); i++) {\n                            if (scope.options.equality(scope.node, scope.selectedNodes[i] , scope)) {\n                                newSelectedNodes.push(scope.node);\n                            }\n                        }\n                        scope.selectedNodes = newSelectedNodes;\n                    }\n\n                    // create a scope for the transclusion, whos parent is the parent of the tree control\n                    scope.transcludeScope = scope.parentScopeOfTree.$new();\n                    scope.transcludeScope.node = scope.node;\n                    scope.transcludeScope.$path = createPath(scope);\n                    scope.transcludeScope.$parentNode = (scope.$parent.node === scope.synteticRoot)?null:scope.$parent.node;\n                    scope.transcludeScope.$index = scope.$index;\n                    scope.transcludeScope.$first = scope.$first;\n                    scope.transcludeScope.$middle = scope.$middle;\n                    scope.transcludeScope.$last = scope.$last;\n                    scope.transcludeScope.$odd = scope.$odd;\n                    scope.transcludeScope.$even = scope.$even;\n                    scope.$on('$destroy', function() {\n                        scope.transcludeScope.$destroy();\n                    });\n\n                    scope.$treeTransclude(scope.transcludeScope, function(clone) {\n                        element.empty();\n                        element.append(clone);\n                    });\n                }\n            };\n        });\n})( angular );\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-tree-control/angular-tree-control.js\n ** module id = 177\n ** module chunks = 2\n **/","/**\n * State-based routing for AngularJS\n * @version v0.3.2\n * @link http://angular-ui.github.com/\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n\n/* commonjs package manager support (eg componentjs) */\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports){\n  module.exports = 'ui.router';\n}\n\n(function (window, angular, undefined) {\n/*jshint globalstrict:true*/\n/*global angular:false*/\n'use strict';\n\nvar isDefined = angular.isDefined,\n    isFunction = angular.isFunction,\n    isString = angular.isString,\n    isObject = angular.isObject,\n    isArray = angular.isArray,\n    forEach = angular.forEach,\n    extend = angular.extend,\n    copy = angular.copy,\n    toJson = angular.toJson;\n\nfunction inherit(parent, extra) {\n  return extend(new (extend(function() {}, { prototype: parent }))(), extra);\n}\n\nfunction merge(dst) {\n  forEach(arguments, function(obj) {\n    if (obj !== dst) {\n      forEach(obj, function(value, key) {\n        if (!dst.hasOwnProperty(key)) dst[key] = value;\n      });\n    }\n  });\n  return dst;\n}\n\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nfunction ancestors(first, second) {\n  var path = [];\n\n  for (var n in first.path) {\n    if (first.path[n] !== second.path[n]) break;\n    path.push(first.path[n]);\n  }\n  return path;\n}\n\n/**\n * IE8-safe wrapper for `Object.keys()`.\n *\n * @param {Object} object A JavaScript object.\n * @return {Array} Returns the keys of the object as an array.\n */\nfunction objectKeys(object) {\n  if (Object.keys) {\n    return Object.keys(object);\n  }\n  var result = [];\n\n  forEach(object, function(val, key) {\n    result.push(key);\n  });\n  return result;\n}\n\n/**\n * IE8-safe wrapper for `Array.prototype.indexOf()`.\n *\n * @param {Array} array A JavaScript array.\n * @param {*} value A value to search the array for.\n * @return {Number} Returns the array index value of `value`, or `-1` if not present.\n */\nfunction indexOf(array, value) {\n  if (Array.prototype.indexOf) {\n    return array.indexOf(value, Number(arguments[2]) || 0);\n  }\n  var len = array.length >>> 0, from = Number(arguments[2]) || 0;\n  from = (from < 0) ? Math.ceil(from) : Math.floor(from);\n\n  if (from < 0) from += len;\n\n  for (; from < len; from++) {\n    if (from in array && array[from] === value) return from;\n  }\n  return -1;\n}\n\n/**\n * Merges a set of parameters with all parameters inherited between the common parents of the\n * current state and a given destination state.\n *\n * @param {Object} currentParams The value of the current state parameters ($stateParams).\n * @param {Object} newParams The set of parameters which will be composited with inherited params.\n * @param {Object} $current Internal definition of object representing the current state.\n * @param {Object} $to Internal definition of object representing state to transition to.\n */\nfunction inheritParams(currentParams, newParams, $current, $to) {\n  var parents = ancestors($current, $to), parentParams, inherited = {}, inheritList = [];\n\n  for (var i in parents) {\n    if (!parents[i] || !parents[i].params) continue;\n    parentParams = objectKeys(parents[i].params);\n    if (!parentParams.length) continue;\n\n    for (var j in parentParams) {\n      if (indexOf(inheritList, parentParams[j]) >= 0) continue;\n      inheritList.push(parentParams[j]);\n      inherited[parentParams[j]] = currentParams[parentParams[j]];\n    }\n  }\n  return extend({}, inherited, newParams);\n}\n\n/**\n * Performs a non-strict comparison of the subset of two objects, defined by a list of keys.\n *\n * @param {Object} a The first object.\n * @param {Object} b The second object.\n * @param {Array} keys The list of keys within each object to compare. If the list is empty or not specified,\n *                     it defaults to the list of keys in `a`.\n * @return {Boolean} Returns `true` if the keys match, otherwise `false`.\n */\nfunction equalForKeys(a, b, keys) {\n  if (!keys) {\n    keys = [];\n    for (var n in a) keys.push(n); // Used instead of Object.keys() for IE8 compatibility\n  }\n\n  for (var i=0; i<keys.length; i++) {\n    var k = keys[i];\n    if (a[k] != b[k]) return false; // Not '===', values aren't necessarily normalized\n  }\n  return true;\n}\n\n/**\n * Returns the subset of an object, based on a list of keys.\n *\n * @param {Array} keys\n * @param {Object} values\n * @return {Boolean} Returns a subset of `values`.\n */\nfunction filterByKeys(keys, values) {\n  var filtered = {};\n\n  forEach(keys, function (name) {\n    filtered[name] = values[name];\n  });\n  return filtered;\n}\n\n// like _.indexBy\n// when you know that your index values will be unique, or you want last-one-in to win\nfunction indexBy(array, propName) {\n  var result = {};\n  forEach(array, function(item) {\n    result[item[propName]] = item;\n  });\n  return result;\n}\n\n// extracted from underscore.js\n// Return a copy of the object only containing the whitelisted properties.\nfunction pick(obj) {\n  var copy = {};\n  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n  forEach(keys, function(key) {\n    if (key in obj) copy[key] = obj[key];\n  });\n  return copy;\n}\n\n// extracted from underscore.js\n// Return a copy of the object omitting the blacklisted properties.\nfunction omit(obj) {\n  var copy = {};\n  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n  for (var key in obj) {\n    if (indexOf(keys, key) == -1) copy[key] = obj[key];\n  }\n  return copy;\n}\n\nfunction pluck(collection, key) {\n  var result = isArray(collection) ? [] : {};\n\n  forEach(collection, function(val, i) {\n    result[i] = isFunction(key) ? key(val) : val[key];\n  });\n  return result;\n}\n\nfunction filter(collection, callback) {\n  var array = isArray(collection);\n  var result = array ? [] : {};\n  forEach(collection, function(val, i) {\n    if (callback(val, i)) {\n      result[array ? result.length : i] = val;\n    }\n  });\n  return result;\n}\n\nfunction map(collection, callback) {\n  var result = isArray(collection) ? [] : {};\n\n  forEach(collection, function(val, i) {\n    result[i] = callback(val, i);\n  });\n  return result;\n}\n\n// issue #2676 #2889\nfunction silenceUncaughtInPromise (promise) {\n  return promise.then(undefined, function() {}) && promise;\n}\n\n/**\n * @ngdoc overview\n * @name ui.router.util\n *\n * @description\n * # ui.router.util sub-module\n *\n * This module is a dependency of other sub-modules. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n *\n */\nangular.module('ui.router.util', ['ng']);\n\n/**\n * @ngdoc overview\n * @name ui.router.router\n * \n * @requires ui.router.util\n *\n * @description\n * # ui.router.router sub-module\n *\n * This module is a dependency of other sub-modules. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n */\nangular.module('ui.router.router', ['ui.router.util']);\n\n/**\n * @ngdoc overview\n * @name ui.router.state\n * \n * @requires ui.router.router\n * @requires ui.router.util\n *\n * @description\n * # ui.router.state sub-module\n *\n * This module is a dependency of the main ui.router module. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n * \n */\nangular.module('ui.router.state', ['ui.router.router', 'ui.router.util']);\n\n/**\n * @ngdoc overview\n * @name ui.router\n *\n * @requires ui.router.state\n *\n * @description\n * # ui.router\n * \n * ## The main module for ui.router \n * There are several sub-modules included with the ui.router module, however only this module is needed\n * as a dependency within your angular app. The other modules are for organization purposes. \n *\n * The modules are:\n * * ui.router - the main \"umbrella\" module\n * * ui.router.router - \n * \n * *You'll need to include **only** this module as the dependency within your angular app.*\n * \n * <pre>\n * <!doctype html>\n * <html ng-app=\"myApp\">\n * <head>\n *   <script src=\"js/angular.js\"></script>\n *   <!-- Include the ui-router script -->\n *   <script src=\"js/angular-ui-router.min.js\"></script>\n *   <script>\n *     // ...and add 'ui.router' as a dependency\n *     var myApp = angular.module('myApp', ['ui.router']);\n *   </script>\n * </head>\n * <body>\n * </body>\n * </html>\n * </pre>\n */\nangular.module('ui.router', ['ui.router.state']);\n\nangular.module('ui.router.compat', ['ui.router']);\n\n/**\n * @ngdoc object\n * @name ui.router.util.$resolve\n *\n * @requires $q\n * @requires $injector\n *\n * @description\n * Manages resolution of (acyclic) graphs of promises.\n */\n$Resolve.$inject = ['$q', '$injector'];\nfunction $Resolve(  $q,    $injector) {\n  \n  var VISIT_IN_PROGRESS = 1,\n      VISIT_DONE = 2,\n      NOTHING = {},\n      NO_DEPENDENCIES = [],\n      NO_LOCALS = NOTHING,\n      NO_PARENT = extend($q.when(NOTHING), { $$promises: NOTHING, $$values: NOTHING });\n  \n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$resolve#study\n   * @methodOf ui.router.util.$resolve\n   *\n   * @description\n   * Studies a set of invocables that are likely to be used multiple times.\n   * <pre>\n   * $resolve.study(invocables)(locals, parent, self)\n   * </pre>\n   * is equivalent to\n   * <pre>\n   * $resolve.resolve(invocables, locals, parent, self)\n   * </pre>\n   * but the former is more efficient (in fact `resolve` just calls `study` \n   * internally).\n   *\n   * @param {object} invocables Invocable objects\n   * @return {function} a function to pass in locals, parent and self\n   */\n  this.study = function (invocables) {\n    if (!isObject(invocables)) throw new Error(\"'invocables' must be an object\");\n    var invocableKeys = objectKeys(invocables || {});\n    \n    // Perform a topological sort of invocables to build an ordered plan\n    var plan = [], cycle = [], visited = {};\n    function visit(value, key) {\n      if (visited[key] === VISIT_DONE) return;\n      \n      cycle.push(key);\n      if (visited[key] === VISIT_IN_PROGRESS) {\n        cycle.splice(0, indexOf(cycle, key));\n        throw new Error(\"Cyclic dependency: \" + cycle.join(\" -> \"));\n      }\n      visited[key] = VISIT_IN_PROGRESS;\n      \n      if (isString(value)) {\n        plan.push(key, [ function() { return $injector.get(value); }], NO_DEPENDENCIES);\n      } else {\n        var params = $injector.annotate(value);\n        forEach(params, function (param) {\n          if (param !== key && invocables.hasOwnProperty(param)) visit(invocables[param], param);\n        });\n        plan.push(key, value, params);\n      }\n      \n      cycle.pop();\n      visited[key] = VISIT_DONE;\n    }\n    forEach(invocables, visit);\n    invocables = cycle = visited = null; // plan is all that's required\n    \n    function isResolve(value) {\n      return isObject(value) && value.then && value.$$promises;\n    }\n    \n    return function (locals, parent, self) {\n      if (isResolve(locals) && self === undefined) {\n        self = parent; parent = locals; locals = null;\n      }\n      if (!locals) locals = NO_LOCALS;\n      else if (!isObject(locals)) {\n        throw new Error(\"'locals' must be an object\");\n      }       \n      if (!parent) parent = NO_PARENT;\n      else if (!isResolve(parent)) {\n        throw new Error(\"'parent' must be a promise returned by $resolve.resolve()\");\n      }\n      \n      // To complete the overall resolution, we have to wait for the parent\n      // promise and for the promise for each invokable in our plan.\n      var resolution = $q.defer(),\n          result = resolution.promise,\n          promises = result.$$promises = {},\n          values = extend({}, locals),\n          wait = 1 + plan.length/3,\n          merged = false;\n          \n      function done() {\n        // Merge parent values we haven't got yet and publish our own $$values\n        if (!--wait) {\n          if (!merged) merge(values, parent.$$values); \n          result.$$values = values;\n          result.$$promises = result.$$promises || true; // keep for isResolve()\n          delete result.$$inheritedValues;\n          resolution.resolve(values);\n        }\n      }\n      \n      function fail(reason) {\n        result.$$failure = reason;\n        resolution.reject(reason);\n      }\n\n      // Short-circuit if parent has already failed\n      if (isDefined(parent.$$failure)) {\n        fail(parent.$$failure);\n        return result;\n      }\n      \n      if (parent.$$inheritedValues) {\n        merge(values, omit(parent.$$inheritedValues, invocableKeys));\n      }\n\n      // Merge parent values if the parent has already resolved, or merge\n      // parent promises and wait if the parent resolve is still in progress.\n      extend(promises, parent.$$promises);\n      if (parent.$$values) {\n        merged = merge(values, omit(parent.$$values, invocableKeys));\n        result.$$inheritedValues = omit(parent.$$values, invocableKeys);\n        done();\n      } else {\n        if (parent.$$inheritedValues) {\n          result.$$inheritedValues = omit(parent.$$inheritedValues, invocableKeys);\n        }        \n        parent.then(done, fail);\n      }\n      \n      // Process each invocable in the plan, but ignore any where a local of the same name exists.\n      for (var i=0, ii=plan.length; i<ii; i+=3) {\n        if (locals.hasOwnProperty(plan[i])) done();\n        else invoke(plan[i], plan[i+1], plan[i+2]);\n      }\n      \n      function invoke(key, invocable, params) {\n        // Create a deferred for this invocation. Failures will propagate to the resolution as well.\n        var invocation = $q.defer(), waitParams = 0;\n        function onfailure(reason) {\n          invocation.reject(reason);\n          fail(reason);\n        }\n        // Wait for any parameter that we have a promise for (either from parent or from this\n        // resolve; in that case study() will have made sure it's ordered before us in the plan).\n        forEach(params, function (dep) {\n          if (promises.hasOwnProperty(dep) && !locals.hasOwnProperty(dep)) {\n            waitParams++;\n            promises[dep].then(function (result) {\n              values[dep] = result;\n              if (!(--waitParams)) proceed();\n            }, onfailure);\n          }\n        });\n        if (!waitParams) proceed();\n        function proceed() {\n          if (isDefined(result.$$failure)) return;\n          try {\n            invocation.resolve($injector.invoke(invocable, self, values));\n            invocation.promise.then(function (result) {\n              values[key] = result;\n              done();\n            }, onfailure);\n          } catch (e) {\n            onfailure(e);\n          }\n        }\n        // Publish promise synchronously; invocations further down in the plan may depend on it.\n        promises[key] = invocation.promise;\n      }\n      \n      return result;\n    };\n  };\n  \n  /**\n   * @ngdoc function\n   * @name ui.router.util.$resolve#resolve\n   * @methodOf ui.router.util.$resolve\n   *\n   * @description\n   * Resolves a set of invocables. An invocable is a function to be invoked via \n   * `$injector.invoke()`, and can have an arbitrary number of dependencies. \n   * An invocable can either return a value directly,\n   * or a `$q` promise. If a promise is returned it will be resolved and the \n   * resulting value will be used instead. Dependencies of invocables are resolved \n   * (in this order of precedence)\n   *\n   * - from the specified `locals`\n   * - from another invocable that is part of this `$resolve` call\n   * - from an invocable that is inherited from a `parent` call to `$resolve` \n   *   (or recursively\n   * - from any ancestor `$resolve` of that parent).\n   *\n   * The return value of `$resolve` is a promise for an object that contains \n   * (in this order of precedence)\n   *\n   * - any `locals` (if specified)\n   * - the resolved return values of all injectables\n   * - any values inherited from a `parent` call to `$resolve` (if specified)\n   *\n   * The promise will resolve after the `parent` promise (if any) and all promises \n   * returned by injectables have been resolved. If any invocable \n   * (or `$injector.invoke`) throws an exception, or if a promise returned by an \n   * invocable is rejected, the `$resolve` promise is immediately rejected with the \n   * same error. A rejection of a `parent` promise (if specified) will likewise be \n   * propagated immediately. Once the `$resolve` promise has been rejected, no \n   * further invocables will be called.\n   * \n   * Cyclic dependencies between invocables are not permitted and will cause `$resolve`\n   * to throw an error. As a special case, an injectable can depend on a parameter \n   * with the same name as the injectable, which will be fulfilled from the `parent` \n   * injectable of the same name. This allows inherited values to be decorated. \n   * Note that in this case any other injectable in the same `$resolve` with the same\n   * dependency would see the decorated value, not the inherited value.\n   *\n   * Note that missing dependencies -- unlike cyclic dependencies -- will cause an \n   * (asynchronous) rejection of the `$resolve` promise rather than a (synchronous) \n   * exception.\n   *\n   * Invocables are invoked eagerly as soon as all dependencies are available. \n   * This is true even for dependencies inherited from a `parent` call to `$resolve`.\n   *\n   * As a special case, an invocable can be a string, in which case it is taken to \n   * be a service name to be passed to `$injector.get()`. This is supported primarily \n   * for backwards-compatibility with the `resolve` property of `$routeProvider` \n   * routes.\n   *\n   * @param {object} invocables functions to invoke or \n   * `$injector` services to fetch.\n   * @param {object} locals  values to make available to the injectables\n   * @param {object} parent  a promise returned by another call to `$resolve`.\n   * @param {object} self  the `this` for the invoked methods\n   * @return {object} Promise for an object that contains the resolved return value\n   * of all invocables, as well as any inherited and local values.\n   */\n  this.resolve = function (invocables, locals, parent, self) {\n    return this.study(invocables)(locals, parent, self);\n  };\n}\n\nangular.module('ui.router.util').service('$resolve', $Resolve);\n\n\n/**\n * @ngdoc object\n * @name ui.router.util.$templateFactory\n *\n * @requires $http\n * @requires $templateCache\n * @requires $injector\n *\n * @description\n * Service. Manages loading of templates.\n */\n$TemplateFactory.$inject = ['$http', '$templateCache', '$injector'];\nfunction $TemplateFactory(  $http,   $templateCache,   $injector) {\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromConfig\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template from a configuration object. \n   *\n   * @param {object} config Configuration object for which to load a template. \n   * The following properties are search in the specified order, and the first one \n   * that is defined is used to create the template:\n   *\n   * @param {string|object} config.template html string template or function to \n   * load via {@link ui.router.util.$templateFactory#fromString fromString}.\n   * @param {string|object} config.templateUrl url to load or a function returning \n   * the url to load via {@link ui.router.util.$templateFactory#fromUrl fromUrl}.\n   * @param {Function} config.templateProvider function to invoke via \n   * {@link ui.router.util.$templateFactory#fromProvider fromProvider}.\n   * @param {object} params  Parameters to pass to the template function.\n   * @param {object} locals Locals to pass to `invoke` if the template is loaded \n   * via a `templateProvider`. Defaults to `{ params: params }`.\n   *\n   * @return {string|object}  The template html as a string, or a promise for \n   * that string,or `null` if no template is configured.\n   */\n  this.fromConfig = function (config, params, locals) {\n    return (\n      isDefined(config.template) ? this.fromString(config.template, params) :\n      isDefined(config.templateUrl) ? this.fromUrl(config.templateUrl, params) :\n      isDefined(config.templateProvider) ? this.fromProvider(config.templateProvider, params, locals) :\n      null\n    );\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromString\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template from a string or a function returning a string.\n   *\n   * @param {string|object} template html template as a string or function that \n   * returns an html template as a string.\n   * @param {object} params Parameters to pass to the template function.\n   *\n   * @return {string|object} The template html as a string, or a promise for that \n   * string.\n   */\n  this.fromString = function (template, params) {\n    return isFunction(template) ? template(params) : template;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromUrl\n   * @methodOf ui.router.util.$templateFactory\n   * \n   * @description\n   * Loads a template from the a URL via `$http` and `$templateCache`.\n   *\n   * @param {string|Function} url url of the template to load, or a function \n   * that returns a url.\n   * @param {Object} params Parameters to pass to the url function.\n   * @return {string|Promise.<string>} The template html as a string, or a promise \n   * for that string.\n   */\n  this.fromUrl = function (url, params) {\n    if (isFunction(url)) url = url(params);\n    if (url == null) return null;\n    else return $http\n        .get(url, { cache: $templateCache, headers: { Accept: 'text/html' }})\n        .then(function(response) { return response.data; });\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromProvider\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template by invoking an injectable provider function.\n   *\n   * @param {Function} provider Function to invoke via `$injector.invoke`\n   * @param {Object} params Parameters for the template.\n   * @param {Object} locals Locals to pass to `invoke`. Defaults to \n   * `{ params: params }`.\n   * @return {string|Promise.<string>} The template html as a string, or a promise \n   * for that string.\n   */\n  this.fromProvider = function (provider, params, locals) {\n    return $injector.invoke(provider, null, locals || { params: params });\n  };\n}\n\nangular.module('ui.router.util').service('$templateFactory', $TemplateFactory);\n\nvar $$UMFP; // reference to $UrlMatcherFactoryProvider\n\n/**\n * @ngdoc object\n * @name ui.router.util.type:UrlMatcher\n *\n * @description\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL. A URL pattern consists of a path pattern, optionally followed by '?' and a list\n * of search parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by {@link ui.router.util.type:UrlMatcher#methods_exec exec}.\n *\n * Path parameter placeholders can be specified using simple colon/catch-all syntax or curly brace\n * syntax, which optionally allows a regular expression for the parameter to be specified:\n *\n * * `':'` name - colon placeholder\n * * `'*'` name - catch-all placeholder\n * * `'{' name '}'` - curly placeholder\n * * `'{' name ':' regexp|type '}'` - curly placeholder with regexp or type name. Should the\n *   regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters). For colon\n * placeholders or curly placeholders without an explicit regexp, a path parameter matches any\n * number of characters other than '/'. For catch-all placeholders the path parameter matches\n * any number of characters.\n *\n * Examples:\n *\n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` Type matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n * @param {string} pattern  The pattern to compile into a matcher.\n * @param {Object} config  A configuration object hash:\n * @param {Object=} parentMatcher Used to concatenate the pattern/config onto\n *   an existing UrlMatcher\n *\n * * `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n * * `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\n *\n * @property {string} prefix  A static prefix of this pattern. The matcher guarantees that any\n *   URL matching this matcher (i.e. any string for which {@link ui.router.util.type:UrlMatcher#methods_exec exec()} returns\n *   non-null) will start with this prefix.\n *\n * @property {string} source  The pattern that was passed into the constructor\n *\n * @property {string} sourcePath  The path portion of the source property\n *\n * @property {string} sourceSearch  The search portion of the source property\n *\n * @property {string} regex  The constructed regex that will be used to match against the url when\n *   it is time to determine which url will match.\n *\n * @returns {Object}  New `UrlMatcher` object\n */\nfunction UrlMatcher(pattern, config, parentMatcher) {\n  config = extend({ params: {} }, isObject(config) ? config : {});\n\n  // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n  //   '*' name\n  //   ':' name\n  //   '{' name '}'\n  //   '{' name ':' regexp '}'\n  // The regular expression is somewhat complicated due to the need to allow curly braces\n  // inside the regular expression. The placeholder regexp breaks down as follows:\n  //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n  //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n  //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n  //    [^{}\\\\]+                       - anything other than curly braces or backslash\n  //    \\\\.                            - a backslash escape\n  //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n  var placeholder       = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n      searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n      compiled = '^', last = 0, m,\n      segments = this.segments = [],\n      parentParams = parentMatcher ? parentMatcher.params : {},\n      params = this.params = parentMatcher ? parentMatcher.params.$$new() : new $$UMFP.ParamSet(),\n      paramNames = [];\n\n  function addParameter(id, type, config, location) {\n    paramNames.push(id);\n    if (parentParams[id]) return parentParams[id];\n    if (!/^\\w+([-.]+\\w+)*(?:\\[\\])?$/.test(id)) throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n    if (params[id]) throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n    params[id] = new $$UMFP.Param(id, type, config, location);\n    return params[id];\n  }\n\n  function quoteRegExp(string, pattern, squash, optional) {\n    var surroundPattern = ['',''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\n    if (!pattern) return result;\n    switch(squash) {\n      case false: surroundPattern = ['(', ')' + (optional ? \"?\" : \"\")]; break;\n      case true:\n        result = result.replace(/\\/$/, '');\n        surroundPattern = ['(?:\\/(', ')|\\/)?'];\n      break;\n      default:    surroundPattern = ['(' + squash + \"|\", ')?']; break;\n    }\n    return result + surroundPattern[0] + pattern + surroundPattern[1];\n  }\n\n  this.source = pattern;\n\n  // Split into static segments separated by path parameter placeholders.\n  // The number of segments is always 1 more than the number of parameters.\n  function matchDetails(m, isSearch) {\n    var id, regexp, segment, type, cfg, arrayMode;\n    id          = m[2] || m[3]; // IE[78] returns '' for unmatched groups instead of null\n    cfg         = config.params[id];\n    segment     = pattern.substring(last, m.index);\n    regexp      = isSearch ? m[4] : m[4] || (m[1] == '*' ? '.*' : null);\n\n    if (regexp) {\n      type      = $$UMFP.type(regexp) || inherit($$UMFP.type(\"string\"), { pattern: new RegExp(regexp, config.caseInsensitive ? 'i' : undefined) });\n    }\n\n    return {\n      id: id, regexp: regexp, segment: segment, type: type, cfg: cfg\n    };\n  }\n\n  var p, param, segment;\n  while ((m = placeholder.exec(pattern))) {\n    p = matchDetails(m, false);\n    if (p.segment.indexOf('?') >= 0) break; // we're into the search part\n\n    param = addParameter(p.id, p.type, p.cfg, \"path\");\n    compiled += quoteRegExp(p.segment, param.type.pattern.source, param.squash, param.isOptional);\n    segments.push(p.segment);\n    last = placeholder.lastIndex;\n  }\n  segment = pattern.substring(last);\n\n  // Find any search parameter names and remove them from the last segment\n  var i = segment.indexOf('?');\n\n  if (i >= 0) {\n    var search = this.sourceSearch = segment.substring(i);\n    segment = segment.substring(0, i);\n    this.sourcePath = pattern.substring(0, last + i);\n\n    if (search.length > 0) {\n      last = 0;\n      while ((m = searchPlaceholder.exec(search))) {\n        p = matchDetails(m, true);\n        param = addParameter(p.id, p.type, p.cfg, \"search\");\n        last = placeholder.lastIndex;\n        // check if ?&\n      }\n    }\n  } else {\n    this.sourcePath = pattern;\n    this.sourceSearch = '';\n  }\n\n  compiled += quoteRegExp(segment) + (config.strict === false ? '\\/?' : '') + '$';\n  segments.push(segment);\n\n  this.regexp = new RegExp(compiled, config.caseInsensitive ? 'i' : undefined);\n  this.prefix = segments[0];\n  this.$$paramNames = paramNames;\n}\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#concat\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Returns a new matcher for a pattern constructed by appending the path part and adding the\n * search parameters of the specified pattern to this pattern. The current pattern is not\n * modified. This can be understood as creating a pattern for URLs that are relative to (or\n * suffixes of) the current pattern.\n *\n * @example\n * The following two matchers are equivalent:\n * <pre>\n * new UrlMatcher('/user/{id}?q').concat('/details?date');\n * new UrlMatcher('/user/{id}/details?q&date');\n * </pre>\n *\n * @param {string} pattern  The pattern to append.\n * @param {Object} config  An object hash of the configuration for the matcher.\n * @returns {UrlMatcher}  A matcher for the concatenated pattern.\n */\nUrlMatcher.prototype.concat = function (pattern, config) {\n  // Because order of search parameters is irrelevant, we can add our own search\n  // parameters to the end of the new pattern. Parse the new pattern by itself\n  // and then join the bits together, but it's much easier to do this on a string level.\n  var defaultConfig = {\n    caseInsensitive: $$UMFP.caseInsensitive(),\n    strict: $$UMFP.strictMode(),\n    squash: $$UMFP.defaultSquashPolicy()\n  };\n  return new UrlMatcher(this.sourcePath + pattern + this.sourceSearch, extend(defaultConfig, config), this);\n};\n\nUrlMatcher.prototype.toString = function () {\n  return this.source;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#exec\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Tests the specified path against this matcher, and returns an object containing the captured\n * parameter values, or null if the path does not match. The returned object contains the values\n * of any search parameters that are mentioned in the pattern, but their value may be null if\n * they are not present in `searchParams`. This means that search parameters are always treated\n * as optional.\n *\n * @example\n * <pre>\n * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n *   x: '1', q: 'hello'\n * });\n * // returns { id: 'bob', q: 'hello', r: null }\n * </pre>\n *\n * @param {string} path  The URL path to match, e.g. `$location.path()`.\n * @param {Object} searchParams  URL search parameters, e.g. `$location.search()`.\n * @returns {Object}  The captured parameter values.\n */\nUrlMatcher.prototype.exec = function (path, searchParams) {\n  var m = this.regexp.exec(path);\n  if (!m) return null;\n  searchParams = searchParams || {};\n\n  var paramNames = this.parameters(), nTotal = paramNames.length,\n    nPath = this.segments.length - 1,\n    values = {}, i, j, cfg, paramName;\n\n  if (nPath !== m.length - 1) throw new Error(\"Unbalanced capture group in route '\" + this.source + \"'\");\n\n  function decodePathArray(string) {\n    function reverseString(str) { return str.split(\"\").reverse().join(\"\"); }\n    function unquoteDashes(str) { return str.replace(/\\\\-/g, \"-\"); }\n\n    var split = reverseString(string).split(/-(?!\\\\)/);\n    var allReversed = map(split, reverseString);\n    return map(allReversed, unquoteDashes).reverse();\n  }\n\n  var param, paramVal;\n  for (i = 0; i < nPath; i++) {\n    paramName = paramNames[i];\n    param = this.params[paramName];\n    paramVal = m[i+1];\n    // if the param value matches a pre-replace pair, replace the value before decoding.\n    for (j = 0; j < param.replace.length; j++) {\n      if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;\n    }\n    if (paramVal && param.array === true) paramVal = decodePathArray(paramVal);\n    if (isDefined(paramVal)) paramVal = param.type.decode(paramVal);\n    values[paramName] = param.value(paramVal);\n  }\n  for (/**/; i < nTotal; i++) {\n    paramName = paramNames[i];\n    values[paramName] = this.params[paramName].value(searchParams[paramName]);\n    param = this.params[paramName];\n    paramVal = searchParams[paramName];\n    for (j = 0; j < param.replace.length; j++) {\n      if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;\n    }\n    if (isDefined(paramVal)) paramVal = param.type.decode(paramVal);\n    values[paramName] = param.value(paramVal);\n  }\n\n  return values;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#parameters\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Returns the names of all path and search parameters of this pattern in an unspecified order.\n *\n * @returns {Array.<string>}  An array of parameter names. Must be treated as read-only. If the\n *    pattern has no parameters, an empty array is returned.\n */\nUrlMatcher.prototype.parameters = function (param) {\n  if (!isDefined(param)) return this.$$paramNames;\n  return this.params[param] || null;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#validates\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Checks an object hash of parameters to validate their correctness according to the parameter\n * types of this `UrlMatcher`.\n *\n * @param {Object} params The object hash of parameters to validate.\n * @returns {boolean} Returns `true` if `params` validates, otherwise `false`.\n */\nUrlMatcher.prototype.validates = function (params) {\n  return this.params.$$validates(params);\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#format\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Creates a URL that matches this pattern by substituting the specified values\n * for the path and search parameters. Null values for path parameters are\n * treated as empty strings.\n *\n * @example\n * <pre>\n * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n * // returns '/user/bob?q=yes'\n * </pre>\n *\n * @param {Object} values  the values to substitute for the parameters in this pattern.\n * @returns {string}  the formatted URL (path and optionally search part).\n */\nUrlMatcher.prototype.format = function (values) {\n  values = values || {};\n  var segments = this.segments, params = this.parameters(), paramset = this.params;\n  if (!this.validates(values)) return null;\n\n  var i, search = false, nPath = segments.length - 1, nTotal = params.length, result = segments[0];\n\n  function encodeDashes(str) { // Replace dashes with encoded \"\\-\"\n    return encodeURIComponent(str).replace(/-/g, function(c) { return '%5C%' + c.charCodeAt(0).toString(16).toUpperCase(); });\n  }\n\n  for (i = 0; i < nTotal; i++) {\n    var isPathParam = i < nPath;\n    var name = params[i], param = paramset[name], value = param.value(values[name]);\n    var isDefaultValue = param.isOptional && param.type.equals(param.value(), value);\n    var squash = isDefaultValue ? param.squash : false;\n    var encoded = param.type.encode(value);\n\n    if (isPathParam) {\n      var nextSegment = segments[i + 1];\n      var isFinalPathParam = i + 1 === nPath;\n\n      if (squash === false) {\n        if (encoded != null) {\n          if (isArray(encoded)) {\n            result += map(encoded, encodeDashes).join(\"-\");\n          } else {\n            result += encodeURIComponent(encoded);\n          }\n        }\n        result += nextSegment;\n      } else if (squash === true) {\n        var capture = result.match(/\\/$/) ? /\\/?(.*)/ : /(.*)/;\n        result += nextSegment.match(capture)[1];\n      } else if (isString(squash)) {\n        result += squash + nextSegment;\n      }\n\n      if (isFinalPathParam && param.squash === true && result.slice(-1) === '/') result = result.slice(0, -1);\n    } else {\n      if (encoded == null || (isDefaultValue && squash !== false)) continue;\n      if (!isArray(encoded)) encoded = [ encoded ];\n      if (encoded.length === 0) continue;\n      encoded = map(encoded, encodeURIComponent).join('&' + name + '=');\n      result += (search ? '&' : '?') + (name + '=' + encoded);\n      search = true;\n    }\n  }\n\n  return result;\n};\n\n/**\n * @ngdoc object\n * @name ui.router.util.type:Type\n *\n * @description\n * Implements an interface to define custom parameter types that can be decoded from and encoded to\n * string parameters matched in a URL. Used by {@link ui.router.util.type:UrlMatcher `UrlMatcher`}\n * objects when matching or formatting URLs, or comparing or validating parameter values.\n *\n * See {@link ui.router.util.$urlMatcherFactory#methods_type `$urlMatcherFactory#type()`} for more\n * information on registering custom types.\n *\n * @param {Object} config  A configuration object which contains the custom type definition.  The object's\n *        properties will override the default methods and/or pattern in `Type`'s public interface.\n * @example\n * <pre>\n * {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n * </pre>\n *\n * @property {RegExp} pattern The regular expression pattern used to match values of this type when\n *           coming from a substring of a URL.\n *\n * @returns {Object}  Returns a new `Type` object.\n */\nfunction Type(config) {\n  extend(this, config);\n}\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#is\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Detects whether a value is of a particular type. Accepts a native (decoded) value\n * and determines whether it matches the current `Type` object.\n *\n * @param {*} val  The value to check.\n * @param {string} key  Optional. If the type check is happening in the context of a specific\n *        {@link ui.router.util.type:UrlMatcher `UrlMatcher`} object, this is the name of the\n *        parameter in which `val` is stored. Can be used for meta-programming of `Type` objects.\n * @returns {Boolean}  Returns `true` if the value matches the type, otherwise `false`.\n */\nType.prototype.is = function(val, key) {\n  return true;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#encode\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Encodes a custom/native type value to a string that can be embedded in a URL. Note that the\n * return value does *not* need to be URL-safe (i.e. passed through `encodeURIComponent()`), it\n * only needs to be a representation of `val` that has been coerced to a string.\n *\n * @param {*} val  The value to encode.\n * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n *        meta-programming of `Type` objects.\n * @returns {string}  Returns a string representation of `val` that can be encoded in a URL.\n */\nType.prototype.encode = function(val, key) {\n  return val;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#decode\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Converts a parameter value (from URL string or transition param) to a custom/native value.\n *\n * @param {string} val  The URL parameter value to decode.\n * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n *        meta-programming of `Type` objects.\n * @returns {*}  Returns a custom representation of the URL parameter value.\n */\nType.prototype.decode = function(val, key) {\n  return val;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#equals\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Determines whether two decoded values are equivalent.\n *\n * @param {*} a  A value to compare against.\n * @param {*} b  A value to compare against.\n * @returns {Boolean}  Returns `true` if the values are equivalent/equal, otherwise `false`.\n */\nType.prototype.equals = function(a, b) {\n  return a == b;\n};\n\nType.prototype.$subPattern = function() {\n  var sub = this.pattern.toString();\n  return sub.substr(1, sub.length - 2);\n};\n\nType.prototype.pattern = /.*/;\n\nType.prototype.toString = function() { return \"{Type:\" + this.name + \"}\"; };\n\n/** Given an encoded string, or a decoded object, returns a decoded object */\nType.prototype.$normalize = function(val) {\n  return this.is(val) ? val : this.decode(val);\n};\n\n/*\n * Wraps an existing custom Type as an array of Type, depending on 'mode'.\n * e.g.:\n * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n * - url: \"/path?queryParam=1&queryParam=2\n * - $stateParams.queryParam will be [1, 2]\n * if `mode` is \"auto\", then\n * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n */\nType.prototype.$asArray = function(mode, isSearch) {\n  if (!mode) return this;\n  if (mode === \"auto\" && !isSearch) throw new Error(\"'auto' array mode is for query parameters only\");\n\n  function ArrayType(type, mode) {\n    function bindTo(type, callbackName) {\n      return function() {\n        return type[callbackName].apply(type, arguments);\n      };\n    }\n\n    // Wrap non-array value as array\n    function arrayWrap(val) { return isArray(val) ? val : (isDefined(val) ? [ val ] : []); }\n    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n    function arrayUnwrap(val) {\n      switch(val.length) {\n        case 0: return undefined;\n        case 1: return mode === \"auto\" ? val[0] : val;\n        default: return val;\n      }\n    }\n    function falsey(val) { return !val; }\n\n    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n    function arrayHandler(callback, allTruthyMode) {\n      return function handleArray(val) {\n        if (isArray(val) && val.length === 0) return val;\n        val = arrayWrap(val);\n        var result = map(val, callback);\n        if (allTruthyMode === true)\n          return filter(result, falsey).length === 0;\n        return arrayUnwrap(result);\n      };\n    }\n\n    // Wraps type (.equals) functions to operate on each value of an array\n    function arrayEqualsHandler(callback) {\n      return function handleArray(val1, val2) {\n        var left = arrayWrap(val1), right = arrayWrap(val2);\n        if (left.length !== right.length) return false;\n        for (var i = 0; i < left.length; i++) {\n          if (!callback(left[i], right[i])) return false;\n        }\n        return true;\n      };\n    }\n\n    this.encode = arrayHandler(bindTo(type, 'encode'));\n    this.decode = arrayHandler(bindTo(type, 'decode'));\n    this.is     = arrayHandler(bindTo(type, 'is'), true);\n    this.equals = arrayEqualsHandler(bindTo(type, 'equals'));\n    this.pattern = type.pattern;\n    this.$normalize = arrayHandler(bindTo(type, '$normalize'));\n    this.name = type.name;\n    this.$arrayMode = mode;\n  }\n\n  return new ArrayType(this, mode);\n};\n\n\n\n/**\n * @ngdoc object\n * @name ui.router.util.$urlMatcherFactory\n *\n * @description\n * Factory for {@link ui.router.util.type:UrlMatcher `UrlMatcher`} instances. The factory\n * is also available to providers under the name `$urlMatcherFactoryProvider`.\n */\nfunction $UrlMatcherFactory() {\n  $$UMFP = this;\n\n  var isCaseInsensitive = false, isStrictMode = true, defaultSquashPolicy = false;\n\n  // Use tildes to pre-encode slashes.\n  // If the slashes are simply URLEncoded, the browser can choose to pre-decode them,\n  // and bidirectional encoding/decoding fails.\n  // Tilde was chosen because it's not a RFC 3986 section 2.2 Reserved Character\n  function valToString(val) { return val != null ? val.toString().replace(/(~|\\/)/g, function (m) { return {'~':'~~', '/':'~2F'}[m]; }) : val; }\n  function valFromString(val) { return val != null ? val.toString().replace(/(~~|~2F)/g, function (m) { return {'~~':'~', '~2F':'/'}[m]; }) : val; }\n\n  var $types = {}, enqueue = true, typeQueue = [], injector, defaultTypes = {\n    \"string\": {\n      encode: valToString,\n      decode: valFromString,\n      // TODO: in 1.0, make string .is() return false if value is undefined/null by default.\n      // In 0.2.x, string params are optional by default for backwards compat\n      is: function(val) { return val == null || !isDefined(val) || typeof val === \"string\"; },\n      pattern: /[^/]*/\n    },\n    \"int\": {\n      encode: valToString,\n      decode: function(val) { return parseInt(val, 10); },\n      is: function(val) { return isDefined(val) && this.decode(val.toString()) === val; },\n      pattern: /\\d+/\n    },\n    \"bool\": {\n      encode: function(val) { return val ? 1 : 0; },\n      decode: function(val) { return parseInt(val, 10) !== 0; },\n      is: function(val) { return val === true || val === false; },\n      pattern: /0|1/\n    },\n    \"date\": {\n      encode: function (val) {\n        if (!this.is(val))\n          return undefined;\n        return [ val.getFullYear(),\n          ('0' + (val.getMonth() + 1)).slice(-2),\n          ('0' + val.getDate()).slice(-2)\n        ].join(\"-\");\n      },\n      decode: function (val) {\n        if (this.is(val)) return val;\n        var match = this.capture.exec(val);\n        return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n      },\n      is: function(val) { return val instanceof Date && !isNaN(val.valueOf()); },\n      equals: function (a, b) { return this.is(a) && this.is(b) && a.toISOString() === b.toISOString(); },\n      pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n      capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\n    },\n    \"json\": {\n      encode: angular.toJson,\n      decode: angular.fromJson,\n      is: angular.isObject,\n      equals: angular.equals,\n      pattern: /[^/]*/\n    },\n    \"any\": { // does not encode/decode\n      encode: angular.identity,\n      decode: angular.identity,\n      equals: angular.equals,\n      pattern: /.*/\n    }\n  };\n\n  function getDefaultConfig() {\n    return {\n      strict: isStrictMode,\n      caseInsensitive: isCaseInsensitive\n    };\n  }\n\n  function isInjectable(value) {\n    return (isFunction(value) || (isArray(value) && isFunction(value[value.length - 1])));\n  }\n\n  /**\n   * [Internal] Get the default value of a parameter, which may be an injectable function.\n   */\n  $UrlMatcherFactory.$$getDefaultValue = function(config) {\n    if (!isInjectable(config.value)) return config.value;\n    if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n    return injector.invoke(config.value);\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#caseInsensitive\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Defines whether URL matching should be case sensitive (the default behavior), or not.\n   *\n   * @param {boolean} value `false` to match URL in a case sensitive manner; otherwise `true`;\n   * @returns {boolean} the current value of caseInsensitive\n   */\n  this.caseInsensitive = function(value) {\n    if (isDefined(value))\n      isCaseInsensitive = value;\n    return isCaseInsensitive;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#strictMode\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Defines whether URLs should match trailing slashes, or not (the default behavior).\n   *\n   * @param {boolean=} value `false` to match trailing slashes in URLs, otherwise `true`.\n   * @returns {boolean} the current value of strictMode\n   */\n  this.strictMode = function(value) {\n    if (isDefined(value))\n      isStrictMode = value;\n    return isStrictMode;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#defaultSquashPolicy\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Sets the default behavior when generating or matching URLs with default parameter values.\n   *\n   * @param {string} value A string that defines the default parameter URL squashing behavior.\n   *    `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n   *    `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n   *             parameter is surrounded by slashes, squash (remove) one slash from the URL\n   *    any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n   *             the parameter value from the URL and replace it with this string.\n   */\n  this.defaultSquashPolicy = function(value) {\n    if (!isDefined(value)) return defaultSquashPolicy;\n    if (value !== true && value !== false && !isString(value))\n      throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n    defaultSquashPolicy = value;\n    return value;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#compile\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Creates a {@link ui.router.util.type:UrlMatcher `UrlMatcher`} for the specified pattern.\n   *\n   * @param {string} pattern  The URL pattern.\n   * @param {Object} config  The config object hash.\n   * @returns {UrlMatcher}  The UrlMatcher.\n   */\n  this.compile = function (pattern, config) {\n    return new UrlMatcher(pattern, extend(getDefaultConfig(), config));\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#isMatcher\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Returns true if the specified object is a `UrlMatcher`, or false otherwise.\n   *\n   * @param {Object} object  The object to perform the type check against.\n   * @returns {Boolean}  Returns `true` if the object matches the `UrlMatcher` interface, by\n   *          implementing all the same methods.\n   */\n  this.isMatcher = function (o) {\n    if (!isObject(o)) return false;\n    var result = true;\n\n    forEach(UrlMatcher.prototype, function(val, name) {\n      if (isFunction(val)) {\n        result = result && (isDefined(o[name]) && isFunction(o[name]));\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#type\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Registers a custom {@link ui.router.util.type:Type `Type`} object that can be used to\n   * generate URLs with typed parameters.\n   *\n   * @param {string} name  The type name.\n   * @param {Object|Function} definition   The type definition. See\n   *        {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n   * @param {Object|Function} definitionFn (optional) A function that is injected before the app\n   *        runtime starts.  The result of this function is merged into the existing `definition`.\n   *        See {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n   *\n   * @returns {Object}  Returns `$urlMatcherFactoryProvider`.\n   *\n   * @example\n   * This is a simple example of a custom type that encodes and decodes items from an\n   * array, using the array index as the URL-encoded value:\n   *\n   * <pre>\n   * var list = ['John', 'Paul', 'George', 'Ringo'];\n   *\n   * $urlMatcherFactoryProvider.type('listItem', {\n   *   encode: function(item) {\n   *     // Represent the list item in the URL using its corresponding index\n   *     return list.indexOf(item);\n   *   },\n   *   decode: function(item) {\n   *     // Look up the list item by index\n   *     return list[parseInt(item, 10)];\n   *   },\n   *   is: function(item) {\n   *     // Ensure the item is valid by checking to see that it appears\n   *     // in the list\n   *     return list.indexOf(item) > -1;\n   *   }\n   * });\n   *\n   * $stateProvider.state('list', {\n   *   url: \"/list/{item:listItem}\",\n   *   controller: function($scope, $stateParams) {\n   *     console.log($stateParams.item);\n   *   }\n   * });\n   *\n   * // ...\n   *\n   * // Changes URL to '/list/3', logs \"Ringo\" to the console\n   * $state.go('list', { item: \"Ringo\" });\n   * </pre>\n   *\n   * This is a more complex example of a type that relies on dependency injection to\n   * interact with services, and uses the parameter name from the URL to infer how to\n   * handle encoding and decoding parameter values:\n   *\n   * <pre>\n   * // Defines a custom type that gets a value from a service,\n   * // where each service gets different types of values from\n   * // a backend API:\n   * $urlMatcherFactoryProvider.type('dbObject', {}, function(Users, Posts) {\n   *\n   *   // Matches up services to URL parameter names\n   *   var services = {\n   *     user: Users,\n   *     post: Posts\n   *   };\n   *\n   *   return {\n   *     encode: function(object) {\n   *       // Represent the object in the URL using its unique ID\n   *       return object.id;\n   *     },\n   *     decode: function(value, key) {\n   *       // Look up the object by ID, using the parameter\n   *       // name (key) to call the correct service\n   *       return services[key].findById(value);\n   *     },\n   *     is: function(object, key) {\n   *       // Check that object is a valid dbObject\n   *       return angular.isObject(object) && object.id && services[key];\n   *     }\n   *     equals: function(a, b) {\n   *       // Check the equality of decoded objects by comparing\n   *       // their unique IDs\n   *       return a.id === b.id;\n   *     }\n   *   };\n   * });\n   *\n   * // In a config() block, you can then attach URLs with\n   * // type-annotated parameters:\n   * $stateProvider.state('users', {\n   *   url: \"/users\",\n   *   // ...\n   * }).state('users.item', {\n   *   url: \"/{user:dbObject}\",\n   *   controller: function($scope, $stateParams) {\n   *     // $stateParams.user will now be an object returned from\n   *     // the Users service\n   *   },\n   *   // ...\n   * });\n   * </pre>\n   */\n  this.type = function (name, definition, definitionFn) {\n    if (!isDefined(definition)) return $types[name];\n    if ($types.hasOwnProperty(name)) throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n\n    $types[name] = new Type(extend({ name: name }, definition));\n    if (definitionFn) {\n      typeQueue.push({ name: name, def: definitionFn });\n      if (!enqueue) flushTypeQueue();\n    }\n    return this;\n  };\n\n  // `flushTypeQueue()` waits until `$urlMatcherFactory` is injected before invoking the queued `definitionFn`s\n  function flushTypeQueue() {\n    while(typeQueue.length) {\n      var type = typeQueue.shift();\n      if (type.pattern) throw new Error(\"You cannot override a type's .pattern at runtime.\");\n      angular.extend($types[type.name], injector.invoke(type.def));\n    }\n  }\n\n  // Register default types. Store them in the prototype of $types.\n  forEach(defaultTypes, function(type, name) { $types[name] = new Type(extend({name: name}, type)); });\n  $types = inherit($types, {});\n\n  /* No need to document $get, since it returns this */\n  this.$get = ['$injector', function ($injector) {\n    injector = $injector;\n    enqueue = false;\n    flushTypeQueue();\n\n    forEach(defaultTypes, function(type, name) {\n      if (!$types[name]) $types[name] = new Type(type);\n    });\n    return this;\n  }];\n\n  this.Param = function Param(id, type, config, location) {\n    var self = this;\n    config = unwrapShorthand(config);\n    type = getType(config, type, location);\n    var arrayMode = getArrayMode();\n    type = arrayMode ? type.$asArray(arrayMode, location === \"search\") : type;\n    if (type.name === \"string\" && !arrayMode && location === \"path\" && config.value === undefined)\n      config.value = \"\"; // for 0.2.x; in 0.3.0+ do not automatically default to \"\"\n    var isOptional = config.value !== undefined;\n    var squash = getSquashPolicy(config, isOptional);\n    var replace = getReplace(config, arrayMode, isOptional, squash);\n\n    function unwrapShorthand(config) {\n      var keys = isObject(config) ? objectKeys(config) : [];\n      var isShorthand = indexOf(keys, \"value\") === -1 && indexOf(keys, \"type\") === -1 &&\n                        indexOf(keys, \"squash\") === -1 && indexOf(keys, \"array\") === -1;\n      if (isShorthand) config = { value: config };\n      config.$$fn = isInjectable(config.value) ? config.value : function () { return config.value; };\n      return config;\n    }\n\n    function getType(config, urlType, location) {\n      if (config.type && urlType) throw new Error(\"Param '\"+id+\"' has two type configurations.\");\n      if (urlType) return urlType;\n      if (!config.type) return (location === \"config\" ? $types.any : $types.string);\n\n      if (angular.isString(config.type))\n        return $types[config.type];\n      if (config.type instanceof Type)\n        return config.type;\n      return new Type(config.type);\n    }\n\n    // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n    function getArrayMode() {\n      var arrayDefaults = { array: (location === \"search\" ? \"auto\" : false) };\n      var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n      return extend(arrayDefaults, arrayParamNomenclature, config).array;\n    }\n\n    /**\n     * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n     */\n    function getSquashPolicy(config, isOptional) {\n      var squash = config.squash;\n      if (!isOptional || squash === false) return false;\n      if (!isDefined(squash) || squash == null) return defaultSquashPolicy;\n      if (squash === true || isString(squash)) return squash;\n      throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n    }\n\n    function getReplace(config, arrayMode, isOptional, squash) {\n      var replace, configuredKeys, defaultPolicy = [\n        { from: \"\",   to: (isOptional || arrayMode ? undefined : \"\") },\n        { from: null, to: (isOptional || arrayMode ? undefined : \"\") }\n      ];\n      replace = isArray(config.replace) ? config.replace : [];\n      if (isString(squash))\n        replace.push({ from: squash, to: undefined });\n      configuredKeys = map(replace, function(item) { return item.from; } );\n      return filter(defaultPolicy, function(item) { return indexOf(configuredKeys, item.from) === -1; }).concat(replace);\n    }\n\n    /**\n     * [Internal] Get the default value of a parameter, which may be an injectable function.\n     */\n    function $$getDefaultValue() {\n      if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n      var defaultValue = injector.invoke(config.$$fn);\n      if (defaultValue !== null && defaultValue !== undefined && !self.type.is(defaultValue))\n        throw new Error(\"Default value (\" + defaultValue + \") for parameter '\" + self.id + \"' is not an instance of Type (\" + self.type.name + \")\");\n      return defaultValue;\n    }\n\n    /**\n     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n     * default value, which may be the result of an injectable function.\n     */\n    function $value(value) {\n      function hasReplaceVal(val) { return function(obj) { return obj.from === val; }; }\n      function $replace(value) {\n        var replacement = map(filter(self.replace, hasReplaceVal(value)), function(obj) { return obj.to; });\n        return replacement.length ? replacement[0] : value;\n      }\n      value = $replace(value);\n      return !isDefined(value) ? $$getDefaultValue() : self.type.$normalize(value);\n    }\n\n    function toString() { return \"{Param:\" + id + \" \" + type + \" squash: '\" + squash + \"' optional: \" + isOptional + \"}\"; }\n\n    extend(this, {\n      id: id,\n      type: type,\n      location: location,\n      array: arrayMode,\n      squash: squash,\n      replace: replace,\n      isOptional: isOptional,\n      value: $value,\n      dynamic: undefined,\n      config: config,\n      toString: toString\n    });\n  };\n\n  function ParamSet(params) {\n    extend(this, params || {});\n  }\n\n  ParamSet.prototype = {\n    $$new: function() {\n      return inherit(this, extend(new ParamSet(), { $$parent: this}));\n    },\n    $$keys: function () {\n      var keys = [], chain = [], parent = this,\n        ignore = objectKeys(ParamSet.prototype);\n      while (parent) { chain.push(parent); parent = parent.$$parent; }\n      chain.reverse();\n      forEach(chain, function(paramset) {\n        forEach(objectKeys(paramset), function(key) {\n            if (indexOf(keys, key) === -1 && indexOf(ignore, key) === -1) keys.push(key);\n        });\n      });\n      return keys;\n    },\n    $$values: function(paramValues) {\n      var values = {}, self = this;\n      forEach(self.$$keys(), function(key) {\n        values[key] = self[key].value(paramValues && paramValues[key]);\n      });\n      return values;\n    },\n    $$equals: function(paramValues1, paramValues2) {\n      var equal = true, self = this;\n      forEach(self.$$keys(), function(key) {\n        var left = paramValues1 && paramValues1[key], right = paramValues2 && paramValues2[key];\n        if (!self[key].type.equals(left, right)) equal = false;\n      });\n      return equal;\n    },\n    $$validates: function $$validate(paramValues) {\n      var keys = this.$$keys(), i, param, rawVal, normalized, encoded;\n      for (i = 0; i < keys.length; i++) {\n        param = this[keys[i]];\n        rawVal = paramValues[keys[i]];\n        if ((rawVal === undefined || rawVal === null) && param.isOptional)\n          break; // There was no parameter value, but the param is optional\n        normalized = param.type.$normalize(rawVal);\n        if (!param.type.is(normalized))\n          return false; // The value was not of the correct Type, and could not be decoded to the correct Type\n        encoded = param.type.encode(normalized);\n        if (angular.isString(encoded) && !param.type.pattern.exec(encoded))\n          return false; // The value was of the correct type, but when encoded, did not match the Type's regexp\n      }\n      return true;\n    },\n    $$parent: undefined\n  };\n\n  this.ParamSet = ParamSet;\n}\n\n// Register as a provider so it's available to other providers\nangular.module('ui.router.util').provider('$urlMatcherFactory', $UrlMatcherFactory);\nangular.module('ui.router.util').run(['$urlMatcherFactory', function($urlMatcherFactory) { }]);\n\n/**\n * @ngdoc object\n * @name ui.router.router.$urlRouterProvider\n *\n * @requires ui.router.util.$urlMatcherFactoryProvider\n * @requires $locationProvider\n *\n * @description\n * `$urlRouterProvider` has the responsibility of watching `$location`. \n * When `$location` changes it runs through a list of rules one by one until a \n * match is found. `$urlRouterProvider` is used behind the scenes anytime you specify \n * a url in a state configuration. All urls are compiled into a UrlMatcher object.\n *\n * There are several methods on `$urlRouterProvider` that make it useful to use directly\n * in your module config.\n */\n$UrlRouterProvider.$inject = ['$locationProvider', '$urlMatcherFactoryProvider'];\nfunction $UrlRouterProvider(   $locationProvider,   $urlMatcherFactory) {\n  var rules = [], otherwise = null, interceptDeferred = false, listener;\n\n  // Returns a string that is a prefix of all strings matching the RegExp\n  function regExpPrefix(re) {\n    var prefix = /^\\^((?:\\\\[^a-zA-Z0-9]|[^\\\\\\[\\]\\^$*+?.()|{}]+)*)/.exec(re.source);\n    return (prefix != null) ? prefix[1].replace(/\\\\(.)/g, \"$1\") : '';\n  }\n\n  // Interpolates matched values into a String.replace()-style pattern\n  function interpolate(pattern, match) {\n    return pattern.replace(/\\$(\\$|\\d{1,2})/, function (m, what) {\n      return match[what === '$' ? 0 : Number(what)];\n    });\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#rule\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Defines rules that are used by `$urlRouterProvider` to find matches for\n   * specific URLs.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // Here's an example of how you might allow case insensitive urls\n   *   $urlRouterProvider.rule(function ($injector, $location) {\n   *     var path = $location.path(),\n   *         normalized = path.toLowerCase();\n   *\n   *     if (path !== normalized) {\n   *       return normalized;\n   *     }\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {function} rule Handler function that takes `$injector` and `$location`\n   * services as arguments. You can use them to return a valid path as a string.\n   *\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n   */\n  this.rule = function (rule) {\n    if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n    rules.push(rule);\n    return this;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.router.$urlRouterProvider#otherwise\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Defines a path that is used when an invalid route is requested.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // if the path doesn't match any of the urls you configured\n   *   // otherwise will take care of routing the user to the\n   *   // specified url\n   *   $urlRouterProvider.otherwise('/index');\n   *\n   *   // Example of using function rule as param\n   *   $urlRouterProvider.otherwise(function ($injector, $location) {\n   *     return '/a/valid/url';\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {string|function} rule The url path you want to redirect to or a function \n   * rule that returns the url path. The function version is passed two params: \n   * `$injector` and `$location` services, and must return a url string.\n   *\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n   */\n  this.otherwise = function (rule) {\n    if (isString(rule)) {\n      var redirect = rule;\n      rule = function () { return redirect; };\n    }\n    else if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n    otherwise = rule;\n    return this;\n  };\n\n\n  function handleIfMatch($injector, handler, match) {\n    if (!match) return false;\n    var result = $injector.invoke(handler, handler, { $match: match });\n    return isDefined(result) ? result : true;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#when\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Registers a handler for a given url matching. \n   * \n   * If the handler is a string, it is\n   * treated as a redirect, and is interpolated according to the syntax of match\n   * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n   *\n   * If the handler is a function, it is injectable. It gets invoked if `$location`\n   * matches. You have the option of inject the match object as `$match`.\n   *\n   * The handler can return\n   *\n   * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n   *   will continue trying to find another one that matches.\n   * - **string** which is treated as a redirect and passed to `$location.url()`\n   * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n   *     if ($state.$current.navigable !== state ||\n   *         !equalForKeys($match, $stateParams) {\n   *      $state.transitionTo(state, $match, false);\n   *     }\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {string|object} what The incoming path that you want to redirect.\n   * @param {string|function} handler The path you want to redirect your user to.\n   */\n  this.when = function (what, handler) {\n    var redirect, handlerIsString = isString(handler);\n    if (isString(what)) what = $urlMatcherFactory.compile(what);\n\n    if (!handlerIsString && !isFunction(handler) && !isArray(handler))\n      throw new Error(\"invalid 'handler' in when()\");\n\n    var strategies = {\n      matcher: function (what, handler) {\n        if (handlerIsString) {\n          redirect = $urlMatcherFactory.compile(handler);\n          handler = ['$match', function ($match) { return redirect.format($match); }];\n        }\n        return extend(function ($injector, $location) {\n          return handleIfMatch($injector, handler, what.exec($location.path(), $location.search()));\n        }, {\n          prefix: isString(what.prefix) ? what.prefix : ''\n        });\n      },\n      regex: function (what, handler) {\n        if (what.global || what.sticky) throw new Error(\"when() RegExp must not be global or sticky\");\n\n        if (handlerIsString) {\n          redirect = handler;\n          handler = ['$match', function ($match) { return interpolate(redirect, $match); }];\n        }\n        return extend(function ($injector, $location) {\n          return handleIfMatch($injector, handler, what.exec($location.path()));\n        }, {\n          prefix: regExpPrefix(what)\n        });\n      }\n    };\n\n    var check = { matcher: $urlMatcherFactory.isMatcher(what), regex: what instanceof RegExp };\n\n    for (var n in check) {\n      if (check[n]) return this.rule(strategies[n](what, handler));\n    }\n\n    throw new Error(\"invalid 'what' in when()\");\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#deferIntercept\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Disables (or enables) deferring location change interception.\n   *\n   * If you wish to customize the behavior of syncing the URL (for example, if you wish to\n   * defer a transition but maintain the current URL), call this method at configuration time.\n   * Then, at run time, call `$urlRouter.listen()` after you have configured your own\n   * `$locationChangeSuccess` event handler.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *\n   *   // Prevent $urlRouter from automatically intercepting URL changes;\n   *   // this allows you to configure custom behavior in between\n   *   // location changes and route synchronization:\n   *   $urlRouterProvider.deferIntercept();\n   *\n   * }).run(function ($rootScope, $urlRouter, UserService) {\n   *\n   *   $rootScope.$on('$locationChangeSuccess', function(e) {\n   *     // UserService is an example service for managing user state\n   *     if (UserService.isLoggedIn()) return;\n   *\n   *     // Prevent $urlRouter's default handler from firing\n   *     e.preventDefault();\n   *\n   *     UserService.handleLogin().then(function() {\n   *       // Once the user has logged in, sync the current URL\n   *       // to the router:\n   *       $urlRouter.sync();\n   *     });\n   *   });\n   *\n   *   // Configures $urlRouter's listener *after* your custom listener\n   *   $urlRouter.listen();\n   * });\n   * </pre>\n   *\n   * @param {boolean} defer Indicates whether to defer location change interception. Passing\n            no parameter is equivalent to `true`.\n   */\n  this.deferIntercept = function (defer) {\n    if (defer === undefined) defer = true;\n    interceptDeferred = defer;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.router.$urlRouter\n   *\n   * @requires $location\n   * @requires $rootScope\n   * @requires $injector\n   * @requires $browser\n   *\n   * @description\n   *\n   */\n  this.$get = $get;\n  $get.$inject = ['$location', '$rootScope', '$injector', '$browser', '$sniffer'];\n  function $get(   $location,   $rootScope,   $injector,   $browser,   $sniffer) {\n\n    var baseHref = $browser.baseHref(), location = $location.url(), lastPushedUrl;\n\n    function appendBasePath(url, isHtml5, absolute) {\n      if (baseHref === '/') return url;\n      if (isHtml5) return baseHref.slice(0, -1) + url;\n      if (absolute) return baseHref.slice(1) + url;\n      return url;\n    }\n\n    // TODO: Optimize groups of rules with non-empty prefix into some sort of decision tree\n    function update(evt) {\n      if (evt && evt.defaultPrevented) return;\n      var ignoreUpdate = lastPushedUrl && $location.url() === lastPushedUrl;\n      lastPushedUrl = undefined;\n      // TODO: Re-implement this in 1.0 for https://github.com/angular-ui/ui-router/issues/1573\n      //if (ignoreUpdate) return true;\n\n      function check(rule) {\n        var handled = rule($injector, $location);\n\n        if (!handled) return false;\n        if (isString(handled)) $location.replace().url(handled);\n        return true;\n      }\n      var n = rules.length, i;\n\n      for (i = 0; i < n; i++) {\n        if (check(rules[i])) return;\n      }\n      // always check otherwise last to allow dynamic updates to the set of rules\n      if (otherwise) check(otherwise);\n    }\n\n    function listen() {\n      listener = listener || $rootScope.$on('$locationChangeSuccess', update);\n      return listener;\n    }\n\n    if (!interceptDeferred) listen();\n\n    return {\n      /**\n       * @ngdoc function\n       * @name ui.router.router.$urlRouter#sync\n       * @methodOf ui.router.router.$urlRouter\n       *\n       * @description\n       * Triggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.\n       * This method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,\n       * perform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed\n       * with the transition by calling `$urlRouter.sync()`.\n       *\n       * @example\n       * <pre>\n       * angular.module('app', ['ui.router'])\n       *   .run(function($rootScope, $urlRouter) {\n       *     $rootScope.$on('$locationChangeSuccess', function(evt) {\n       *       // Halt state change from even starting\n       *       evt.preventDefault();\n       *       // Perform custom logic\n       *       var meetsRequirement = ...\n       *       // Continue with the update and state transition if logic allows\n       *       if (meetsRequirement) $urlRouter.sync();\n       *     });\n       * });\n       * </pre>\n       */\n      sync: function() {\n        update();\n      },\n\n      listen: function() {\n        return listen();\n      },\n\n      update: function(read) {\n        if (read) {\n          location = $location.url();\n          return;\n        }\n        if ($location.url() === location) return;\n\n        $location.url(location);\n        $location.replace();\n      },\n\n      push: function(urlMatcher, params, options) {\n         var url = urlMatcher.format(params || {});\n\n        // Handle the special hash param, if needed\n        if (url !== null && params && params['#']) {\n            url += '#' + params['#'];\n        }\n\n        $location.url(url);\n        lastPushedUrl = options && options.$$avoidResync ? $location.url() : undefined;\n        if (options && options.replace) $location.replace();\n      },\n\n      /**\n       * @ngdoc function\n       * @name ui.router.router.$urlRouter#href\n       * @methodOf ui.router.router.$urlRouter\n       *\n       * @description\n       * A URL generation method that returns the compiled URL for a given\n       * {@link ui.router.util.type:UrlMatcher `UrlMatcher`}, populated with the provided parameters.\n       *\n       * @example\n       * <pre>\n       * $bob = $urlRouter.href(new UrlMatcher(\"/about/:person\"), {\n       *   person: \"bob\"\n       * });\n       * // $bob == \"/about/bob\";\n       * </pre>\n       *\n       * @param {UrlMatcher} urlMatcher The `UrlMatcher` object which is used as the template of the URL to generate.\n       * @param {object=} params An object of parameter values to fill the matcher's required parameters.\n       * @param {object=} options Options object. The options are:\n       *\n       * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n       *\n       * @returns {string} Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n       */\n      href: function(urlMatcher, params, options) {\n        if (!urlMatcher.validates(params)) return null;\n\n        var isHtml5 = $locationProvider.html5Mode();\n        if (angular.isObject(isHtml5)) {\n          isHtml5 = isHtml5.enabled;\n        }\n\n        isHtml5 = isHtml5 && $sniffer.history;\n        \n        var url = urlMatcher.format(params);\n        options = options || {};\n\n        if (!isHtml5 && url !== null) {\n          url = \"#\" + $locationProvider.hashPrefix() + url;\n        }\n\n        // Handle special hash param, if needed\n        if (url !== null && params && params['#']) {\n          url += '#' + params['#'];\n        }\n\n        url = appendBasePath(url, isHtml5, options.absolute);\n\n        if (!options.absolute || !url) {\n          return url;\n        }\n\n        var slash = (!isHtml5 && url ? '/' : ''), port = $location.port();\n        port = (port === 80 || port === 443 ? '' : ':' + port);\n\n        return [$location.protocol(), '://', $location.host(), port, slash, url].join('');\n      }\n    };\n  }\n}\n\nangular.module('ui.router.router').provider('$urlRouter', $UrlRouterProvider);\n\n/**\n * @ngdoc object\n * @name ui.router.state.$stateProvider\n *\n * @requires ui.router.router.$urlRouterProvider\n * @requires ui.router.util.$urlMatcherFactoryProvider\n *\n * @description\n * The new `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n * on state.\n *\n * A state corresponds to a \"place\" in the application in terms of the overall UI and\n * navigation. A state describes (via the controller / template / view properties) what\n * the UI looks like and does at that place.\n *\n * States often have things in common, and the primary way of factoring out these\n * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n * nested states.\n *\n * The `$stateProvider` provides interfaces to declare these states for your app.\n */\n$StateProvider.$inject = ['$urlRouterProvider', '$urlMatcherFactoryProvider'];\nfunction $StateProvider(   $urlRouterProvider,   $urlMatcherFactory) {\n\n  var root, states = {}, $state, queue = {}, abstractKey = 'abstract';\n\n  // Builds state properties from definition passed to registerState()\n  var stateBuilder = {\n\n    // Derive parent state from a hierarchical name only if 'parent' is not explicitly defined.\n    // state.children = [];\n    // if (parent) parent.children.push(state);\n    parent: function(state) {\n      if (isDefined(state.parent) && state.parent) return findState(state.parent);\n      // regex matches any valid composite state name\n      // would match \"contact.list\" but not \"contacts\"\n      var compositeName = /^(.+)\\.[^.]+$/.exec(state.name);\n      return compositeName ? findState(compositeName[1]) : root;\n    },\n\n    // inherit 'data' from parent and override by own values (if any)\n    data: function(state) {\n      if (state.parent && state.parent.data) {\n        state.data = state.self.data = inherit(state.parent.data, state.data);\n      }\n      return state.data;\n    },\n\n    // Build a URLMatcher if necessary, either via a relative or absolute URL\n    url: function(state) {\n      var url = state.url, config = { params: state.params || {} };\n\n      if (isString(url)) {\n        if (url.charAt(0) == '^') return $urlMatcherFactory.compile(url.substring(1), config);\n        return (state.parent.navigable || root).url.concat(url, config);\n      }\n\n      if (!url || $urlMatcherFactory.isMatcher(url)) return url;\n      throw new Error(\"Invalid url '\" + url + \"' in state '\" + state + \"'\");\n    },\n\n    // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n    navigable: function(state) {\n      return state.url ? state : (state.parent ? state.parent.navigable : null);\n    },\n\n    // Own parameters for this state. state.url.params is already built at this point. Create and add non-url params\n    ownParams: function(state) {\n      var params = state.url && state.url.params || new $$UMFP.ParamSet();\n      forEach(state.params || {}, function(config, id) {\n        if (!params[id]) params[id] = new $$UMFP.Param(id, null, config, \"config\");\n      });\n      return params;\n    },\n\n    // Derive parameters for this state and ensure they're a super-set of parent's parameters\n    params: function(state) {\n      var ownParams = pick(state.ownParams, state.ownParams.$$keys());\n      return state.parent && state.parent.params ? extend(state.parent.params.$$new(), ownParams) : new $$UMFP.ParamSet();\n    },\n\n    // If there is no explicit multi-view configuration, make one up so we don't have\n    // to handle both cases in the view directive later. Note that having an explicit\n    // 'views' property will mean the default unnamed view properties are ignored. This\n    // is also a good time to resolve view names to absolute names, so everything is a\n    // straight lookup at link time.\n    views: function(state) {\n      var views = {};\n\n      forEach(isDefined(state.views) ? state.views : { '': state }, function (view, name) {\n        if (name.indexOf('@') < 0) name += '@' + state.parent.name;\n        view.resolveAs = view.resolveAs || state.resolveAs || '$resolve';\n        views[name] = view;\n      });\n      return views;\n    },\n\n    // Keep a full path from the root down to this state as this is needed for state activation.\n    path: function(state) {\n      return state.parent ? state.parent.path.concat(state) : []; // exclude root from path\n    },\n\n    // Speed up $state.contains() as it's used a lot\n    includes: function(state) {\n      var includes = state.parent ? extend({}, state.parent.includes) : {};\n      includes[state.name] = true;\n      return includes;\n    },\n\n    $delegates: {}\n  };\n\n  function isRelative(stateName) {\n    return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\n  }\n\n  function findState(stateOrName, base) {\n    if (!stateOrName) return undefined;\n\n    var isStr = isString(stateOrName),\n        name  = isStr ? stateOrName : stateOrName.name,\n        path  = isRelative(name);\n\n    if (path) {\n      if (!base) throw new Error(\"No reference point given for path '\"  + name + \"'\");\n      base = findState(base);\n      \n      var rel = name.split(\".\"), i = 0, pathLength = rel.length, current = base;\n\n      for (; i < pathLength; i++) {\n        if (rel[i] === \"\" && i === 0) {\n          current = base;\n          continue;\n        }\n        if (rel[i] === \"^\") {\n          if (!current.parent) throw new Error(\"Path '\" + name + \"' not valid for state '\" + base.name + \"'\");\n          current = current.parent;\n          continue;\n        }\n        break;\n      }\n      rel = rel.slice(i).join(\".\");\n      name = current.name + (current.name && rel ? \".\" : \"\") + rel;\n    }\n    var state = states[name];\n\n    if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n      return state;\n    }\n    return undefined;\n  }\n\n  function queueState(parentName, state) {\n    if (!queue[parentName]) {\n      queue[parentName] = [];\n    }\n    queue[parentName].push(state);\n  }\n\n  function flushQueuedChildren(parentName) {\n    var queued = queue[parentName] || [];\n    while(queued.length) {\n      registerState(queued.shift());\n    }\n  }\n\n  function registerState(state) {\n    // Wrap a new object around the state so we can store our private details easily.\n    state = inherit(state, {\n      self: state,\n      resolve: state.resolve || {},\n      toString: function() { return this.name; }\n    });\n\n    var name = state.name;\n    if (!isString(name) || name.indexOf('@') >= 0) throw new Error(\"State must have a valid name\");\n    if (states.hasOwnProperty(name)) throw new Error(\"State '\" + name + \"' is already defined\");\n\n    // Get parent name\n    var parentName = (name.indexOf('.') !== -1) ? name.substring(0, name.lastIndexOf('.'))\n        : (isString(state.parent)) ? state.parent\n        : (isObject(state.parent) && isString(state.parent.name)) ? state.parent.name\n        : '';\n\n    // If parent is not registered yet, add state to queue and register later\n    if (parentName && !states[parentName]) {\n      return queueState(parentName, state.self);\n    }\n\n    for (var key in stateBuilder) {\n      if (isFunction(stateBuilder[key])) state[key] = stateBuilder[key](state, stateBuilder.$delegates[key]);\n    }\n    states[name] = state;\n\n    // Register the state in the global state list and with $urlRouter if necessary.\n    if (!state[abstractKey] && state.url) {\n      $urlRouterProvider.when(state.url, ['$match', '$stateParams', function ($match, $stateParams) {\n        if ($state.$current.navigable != state || !equalForKeys($match, $stateParams)) {\n          $state.transitionTo(state, $match, { inherit: true, location: false });\n        }\n      }]);\n    }\n\n    // Register any queued children\n    flushQueuedChildren(name);\n\n    return state;\n  }\n\n  // Checks text to see if it looks like a glob.\n  function isGlob (text) {\n    return text.indexOf('*') > -1;\n  }\n\n  // Returns true if glob matches current $state name.\n  function doesStateMatchGlob (glob) {\n    var globSegments = glob.split('.'),\n        segments = $state.$current.name.split('.');\n\n    //match single stars\n    for (var i = 0, l = globSegments.length; i < l; i++) {\n      if (globSegments[i] === '*') {\n        segments[i] = '*';\n      }\n    }\n\n    //match greedy starts\n    if (globSegments[0] === '**') {\n       segments = segments.slice(indexOf(segments, globSegments[1]));\n       segments.unshift('**');\n    }\n    //match greedy ends\n    if (globSegments[globSegments.length - 1] === '**') {\n       segments.splice(indexOf(segments, globSegments[globSegments.length - 2]) + 1, Number.MAX_VALUE);\n       segments.push('**');\n    }\n\n    if (globSegments.length != segments.length) {\n      return false;\n    }\n\n    return segments.join('') === globSegments.join('');\n  }\n\n\n  // Implicit root state that is always active\n  root = registerState({\n    name: '',\n    url: '^',\n    views: null,\n    'abstract': true\n  });\n  root.navigable = null;\n\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$stateProvider#decorator\n   * @methodOf ui.router.state.$stateProvider\n   *\n   * @description\n   * Allows you to extend (carefully) or override (at your own peril) the \n   * `stateBuilder` object used internally by `$stateProvider`. This can be used \n   * to add custom functionality to ui-router, for example inferring templateUrl \n   * based on the state name.\n   *\n   * When passing only a name, it returns the current (original or decorated) builder\n   * function that matches `name`.\n   *\n   * The builder functions that can be decorated are listed below. Though not all\n   * necessarily have a good use case for decoration, that is up to you to decide.\n   *\n   * In addition, users can attach custom decorators, which will generate new \n   * properties within the state's internal definition. There is currently no clear \n   * use-case for this beyond accessing internal states (i.e. $state.$current), \n   * however, expect this to become increasingly relevant as we introduce additional \n   * meta-programming features.\n   *\n   * **Warning**: Decorators should not be interdependent because the order of \n   * execution of the builder functions in non-deterministic. Builder functions \n   * should only be dependent on the state definition object and super function.\n   *\n   *\n   * Existing builder functions and current return values:\n   *\n   * - **parent** `{object}` - returns the parent state object.\n   * - **data** `{object}` - returns state data, including any inherited data that is not\n   *   overridden by own values (if any).\n   * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n   *   or `null`.\n   * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is \n   *   navigable).\n   * - **params** `{object}` - returns an array of state params that are ensured to \n   *   be a super-set of parent's params.\n   * - **views** `{object}` - returns a views object where each key is an absolute view \n   *   name (i.e. \"viewName@stateName\") and each value is the config object \n   *   (template, controller) for the view. Even when you don't use the views object \n   *   explicitly on a state config, one is still created for you internally.\n   *   So by decorating this builder function you have access to decorating template \n   *   and controller properties.\n   * - **ownParams** `{object}` - returns an array of params that belong to the state, \n   *   not including any params defined by ancestor states.\n   * - **path** `{string}` - returns the full path from the root down to this state. \n   *   Needed for state activation.\n   * - **includes** `{object}` - returns an object that includes every state that \n   *   would pass a `$state.includes()` test.\n   *\n   * @example\n   * <pre>\n   * // Override the internal 'views' builder with a function that takes the state\n   * // definition, and a reference to the internal function being overridden:\n   * $stateProvider.decorator('views', function (state, parent) {\n   *   var result = {},\n   *       views = parent(state);\n   *\n   *   angular.forEach(views, function (config, name) {\n   *     var autoName = (state.name + '.' + name).replace('.', '/');\n   *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n   *     result[name] = config;\n   *   });\n   *   return result;\n   * });\n   *\n   * $stateProvider.state('home', {\n   *   views: {\n   *     'contact.list': { controller: 'ListController' },\n   *     'contact.item': { controller: 'ItemController' }\n   *   }\n   * });\n   *\n   * // ...\n   *\n   * $state.go('home');\n   * // Auto-populates list and item views with /partials/home/contact/list.html,\n   * // and /partials/home/contact/item.html, respectively.\n   * </pre>\n   *\n   * @param {string} name The name of the builder function to decorate. \n   * @param {object} func A function that is responsible for decorating the original \n   * builder function. The function receives two parameters:\n   *\n   *   - `{object}` - state - The state config object.\n   *   - `{object}` - super - The original builder function.\n   *\n   * @return {object} $stateProvider - $stateProvider instance\n   */\n  this.decorator = decorator;\n  function decorator(name, func) {\n    /*jshint validthis: true */\n    if (isString(name) && !isDefined(func)) {\n      return stateBuilder[name];\n    }\n    if (!isFunction(func) || !isString(name)) {\n      return this;\n    }\n    if (stateBuilder[name] && !stateBuilder.$delegates[name]) {\n      stateBuilder.$delegates[name] = stateBuilder[name];\n    }\n    stateBuilder[name] = func;\n    return this;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$stateProvider#state\n   * @methodOf ui.router.state.$stateProvider\n   *\n   * @description\n   * Registers a state configuration under a given state name. The stateConfig object\n   * has the following acceptable properties.\n   *\n   * @param {string} name A unique state name, e.g. \"home\", \"about\", \"contacts\".\n   * To create a parent/child state use a dot, e.g. \"about.sales\", \"home.newest\".\n   * @param {object} stateConfig State configuration object.\n   * @param {string|function=} stateConfig.template\n   * <a id='template'></a>\n   *   html template as a string or a function that returns\n   *   an html template as a string which should be used by the uiView directives. This property \n   *   takes precedence over templateUrl.\n   *   \n   *   If `template` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\n   *     applying the current state\n   *\n   * <pre>template:\n   *   \"<h1>inline template definition</h1>\" +\n   *   \"<div ui-view></div>\"</pre>\n   * <pre>template: function(params) {\n   *       return \"<h1>generated template</h1>\"; }</pre>\n   * </div>\n   *\n   * @param {string|function=} stateConfig.templateUrl\n   * <a id='templateUrl'></a>\n   *\n   *   path or function that returns a path to an html\n   *   template that should be used by uiView.\n   *   \n   *   If `templateUrl` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by \n   *     applying the current state\n   *\n   * <pre>templateUrl: \"home.html\"</pre>\n   * <pre>templateUrl: function(params) {\n   *     return myTemplates[params.pageId]; }</pre>\n   *\n   * @param {function=} stateConfig.templateProvider\n   * <a id='templateProvider'></a>\n   *    Provider function that returns HTML content string.\n   * <pre> templateProvider:\n   *       function(MyTemplateService, params) {\n   *         return MyTemplateService.getTemplate(params.pageId);\n   *       }</pre>\n   *\n   * @param {string|function=} stateConfig.controller\n   * <a id='controller'></a>\n   *\n   *  Controller fn that should be associated with newly\n   *   related scope or the name of a registered controller if passed as a string.\n   *   Optionally, the ControllerAs may be declared here.\n   * <pre>controller: \"MyRegisteredController\"</pre>\n   * <pre>controller:\n   *     \"MyRegisteredController as fooCtrl\"}</pre>\n   * <pre>controller: function($scope, MyService) {\n   *     $scope.data = MyService.getData(); }</pre>\n   *\n   * @param {function=} stateConfig.controllerProvider\n   * <a id='controllerProvider'></a>\n   *\n   * Injectable provider function that returns the actual controller or string.\n   * <pre>controllerProvider:\n   *   function(MyResolveData) {\n   *     if (MyResolveData.foo)\n   *       return \"FooCtrl\"\n   *     else if (MyResolveData.bar)\n   *       return \"BarCtrl\";\n   *     else return function($scope) {\n   *       $scope.baz = \"Qux\";\n   *     }\n   *   }</pre>\n   *\n   * @param {string=} stateConfig.controllerAs\n   * <a id='controllerAs'></a>\n   * \n   * A controller alias name. If present the controller will be\n   *   published to scope under the controllerAs name.\n   * <pre>controllerAs: \"myCtrl\"</pre>\n   *\n   * @param {string|object=} stateConfig.parent\n   * <a id='parent'></a>\n   * Optionally specifies the parent state of this state.\n   *\n   * <pre>parent: 'parentState'</pre>\n   * <pre>parent: parentState // JS variable</pre>\n   *\n   * @param {object=} stateConfig.resolve\n   * <a id='resolve'></a>\n   *\n   * An optional map&lt;string, function&gt; of dependencies which\n   *   should be injected into the controller. If any of these dependencies are promises, \n   *   the router will wait for them all to be resolved before the controller is instantiated.\n   *   If all the promises are resolved successfully, the $stateChangeSuccess event is fired\n   *   and the values of the resolved promises are injected into any controllers that reference them.\n   *   If any  of the promises are rejected the $stateChangeError event is fired.\n   *\n   *   The map object is:\n   *   \n   *   - key - {string}: name of dependency to be injected into controller\n   *   - factory - {string|function}: If string then it is alias for service. Otherwise if function, \n   *     it is injected and return value it treated as dependency. If result is a promise, it is \n   *     resolved before its value is injected into controller.\n   *\n   * <pre>resolve: {\n   *     myResolve1:\n   *       function($http, $stateParams) {\n   *         return $http.get(\"/api/foos/\"+stateParams.fooID);\n   *       }\n   *     }</pre>\n   *\n   * @param {string=} stateConfig.url\n   * <a id='url'></a>\n   *\n   *   A url fragment with optional parameters. When a state is navigated or\n   *   transitioned to, the `$stateParams` service will be populated with any \n   *   parameters that were passed.\n   *\n   *   (See {@link ui.router.util.type:UrlMatcher UrlMatcher} `UrlMatcher`} for\n   *   more details on acceptable patterns )\n   *\n   * examples:\n   * <pre>url: \"/home\"\n   * url: \"/users/:userid\"\n   * url: \"/books/{bookid:[a-zA-Z_-]}\"\n   * url: \"/books/{categoryid:int}\"\n   * url: \"/books/{publishername:string}/{categoryid:int}\"\n   * url: \"/messages?before&after\"\n   * url: \"/messages?{before:date}&{after:date}\"\n   * url: \"/messages/:mailboxid?{before:date}&{after:date}\"\n   * </pre>\n   *\n   * @param {object=} stateConfig.views\n   * <a id='views'></a>\n   * an optional map&lt;string, object&gt; which defined multiple views, or targets views\n   * manually/explicitly.\n   *\n   * Examples:\n   *\n   * Targets three named `ui-view`s in the parent state's template\n   * <pre>views: {\n   *     header: {\n   *       controller: \"headerCtrl\",\n   *       templateUrl: \"header.html\"\n   *     }, body: {\n   *       controller: \"bodyCtrl\",\n   *       templateUrl: \"body.html\"\n   *     }, footer: {\n   *       controller: \"footCtrl\",\n   *       templateUrl: \"footer.html\"\n   *     }\n   *   }</pre>\n   *\n   * Targets named `ui-view=\"header\"` from grandparent state 'top''s template, and named `ui-view=\"body\" from parent state's template.\n   * <pre>views: {\n   *     'header@top': {\n   *       controller: \"msgHeaderCtrl\",\n   *       templateUrl: \"msgHeader.html\"\n   *     }, 'body': {\n   *       controller: \"messagesCtrl\",\n   *       templateUrl: \"messages.html\"\n   *     }\n   *   }</pre>\n   *\n   * @param {boolean=} [stateConfig.abstract=false]\n   * <a id='abstract'></a>\n   * An abstract state will never be directly activated,\n   *   but can provide inherited properties to its common children states.\n   * <pre>abstract: true</pre>\n   *\n   * @param {function=} stateConfig.onEnter\n   * <a id='onEnter'></a>\n   *\n   * Callback function for when a state is entered. Good way\n   *   to trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to explicitly annotate this function,\n   * because it won't be automatically annotated by your build tools.\n   *\n   * <pre>onEnter: function(MyService, $stateParams) {\n   *     MyService.foo($stateParams.myParam);\n   * }</pre>\n   *\n   * @param {function=} stateConfig.onExit\n   * <a id='onExit'></a>\n   *\n   * Callback function for when a state is exited. Good way to\n   *   trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to explicitly annotate this function,\n   * because it won't be automatically annotated by your build tools.\n   *\n   * <pre>onExit: function(MyService, $stateParams) {\n   *     MyService.cleanup($stateParams.myParam);\n   * }</pre>\n   *\n   * @param {boolean=} [stateConfig.reloadOnSearch=true]\n   * <a id='reloadOnSearch'></a>\n   *\n   * If `false`, will not retrigger the same state\n   *   just because a search/query parameter has changed (via $location.search() or $location.hash()). \n   *   Useful for when you'd like to modify $location.search() without triggering a reload.\n   * <pre>reloadOnSearch: false</pre>\n   *\n   * @param {object=} stateConfig.data\n   * <a id='data'></a>\n   *\n   * Arbitrary data object, useful for custom configuration.  The parent state's `data` is\n   *   prototypally inherited.  In other words, adding a data property to a state adds it to\n   *   the entire subtree via prototypal inheritance.\n   *\n   * <pre>data: {\n   *     requiredRole: 'foo'\n   * } </pre>\n   *\n   * @param {object=} stateConfig.params\n   * <a id='params'></a>\n   *\n   * A map which optionally configures parameters declared in the `url`, or\n   *   defines additional non-url parameters.  For each parameter being\n   *   configured, add a configuration object keyed to the name of the parameter.\n   *\n   *   Each parameter configuration object may contain the following properties:\n   *\n   *   - ** value ** - {object|function=}: specifies the default value for this\n   *     parameter.  This implicitly sets this parameter as optional.\n   *\n   *     When UI-Router routes to a state and no value is\n   *     specified for this parameter in the URL or transition, the\n   *     default value will be used instead.  If `value` is a function,\n   *     it will be injected and invoked, and the return value used.\n   *\n   *     *Note*: `undefined` is treated as \"no default value\" while `null`\n   *     is treated as \"the default value is `null`\".\n   *\n   *     *Shorthand*: If you only need to configure the default value of the\n   *     parameter, you may use a shorthand syntax.   In the **`params`**\n   *     map, instead mapping the param name to a full parameter configuration\n   *     object, simply set map it to the default parameter value, e.g.:\n   *\n   * <pre>// define a parameter's default value\n   * params: {\n   *     param1: { value: \"defaultValue\" }\n   * }\n   * // shorthand default values\n   * params: {\n   *     param1: \"defaultValue\",\n   *     param2: \"param2Default\"\n   * }</pre>\n   *\n   *   - ** array ** - {boolean=}: *(default: false)* If true, the param value will be\n   *     treated as an array of values.  If you specified a Type, the value will be\n   *     treated as an array of the specified Type.  Note: query parameter values\n   *     default to a special `\"auto\"` mode.\n   *\n   *     For query parameters in `\"auto\"` mode, if multiple  values for a single parameter\n   *     are present in the URL (e.g.: `/foo?bar=1&bar=2&bar=3`) then the values\n   *     are mapped to an array (e.g.: `{ foo: [ '1', '2', '3' ] }`).  However, if\n   *     only one value is present (e.g.: `/foo?bar=1`) then the value is treated as single\n   *     value (e.g.: `{ foo: '1' }`).\n   *\n   * <pre>params: {\n   *     param1: { array: true }\n   * }</pre>\n   *\n   *   - ** squash ** - {bool|string=}: `squash` configures how a default parameter value is represented in the URL when\n   *     the current parameter value is the same as the default value. If `squash` is not set, it uses the\n   *     configured default squash policy.\n   *     (See {@link ui.router.util.$urlMatcherFactory#methods_defaultSquashPolicy `defaultSquashPolicy()`})\n   *\n   *   There are three squash settings:\n   *\n   *     - false: The parameter's default value is not squashed.  It is encoded and included in the URL\n   *     - true: The parameter's default value is omitted from the URL.  If the parameter is preceeded and followed\n   *       by slashes in the state's `url` declaration, then one of those slashes are omitted.\n   *       This can allow for cleaner looking URLs.\n   *     - `\"<arbitrary string>\"`: The parameter's default value is replaced with an arbitrary placeholder of  your choice.\n   *\n   * <pre>params: {\n   *     param1: {\n   *       value: \"defaultId\",\n   *       squash: true\n   * } }\n   * // squash \"defaultValue\" to \"~\"\n   * params: {\n   *     param1: {\n   *       value: \"defaultValue\",\n   *       squash: \"~\"\n   * } }\n   * </pre>\n   *\n   *\n   * @example\n   * <pre>\n   * // Some state name examples\n   *\n   * // stateName can be a single top-level name (must be unique).\n   * $stateProvider.state(\"home\", {});\n   *\n   * // Or it can be a nested state name. This state is a child of the\n   * // above \"home\" state.\n   * $stateProvider.state(\"home.newest\", {});\n   *\n   * // Nest states as deeply as needed.\n   * $stateProvider.state(\"home.newest.abc.xyz.inception\", {});\n   *\n   * // state() returns $stateProvider, so you can chain state declarations.\n   * $stateProvider\n   *   .state(\"home\", {})\n   *   .state(\"about\", {})\n   *   .state(\"contacts\", {});\n   * </pre>\n   *\n   */\n  this.state = state;\n  function state(name, definition) {\n    /*jshint validthis: true */\n    if (isObject(name)) definition = name;\n    else definition.name = name;\n    registerState(definition);\n    return this;\n  }\n\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$state\n   *\n   * @requires $rootScope\n   * @requires $q\n   * @requires ui.router.state.$view\n   * @requires $injector\n   * @requires ui.router.util.$resolve\n   * @requires ui.router.state.$stateParams\n   * @requires ui.router.router.$urlRouter\n   *\n   * @property {object} params A param object, e.g. {sectionId: section.id)}, that \n   * you'd like to test against the current active state.\n   * @property {object} current A reference to the state's config object. However \n   * you passed it in. Useful for accessing custom data.\n   * @property {object} transition Currently pending transition. A promise that'll \n   * resolve or reject.\n   *\n   * @description\n   * `$state` service is responsible for representing states as well as transitioning\n   * between them. It also provides interfaces to ask for current state or even states\n   * you're coming from.\n   */\n  this.$get = $get;\n  $get.$inject = ['$rootScope', '$q', '$view', '$injector', '$resolve', '$stateParams', '$urlRouter', '$location', '$urlMatcherFactory'];\n  function $get(   $rootScope,   $q,   $view,   $injector,   $resolve,   $stateParams,   $urlRouter,   $location,   $urlMatcherFactory) {\n\n    var TransitionSupersededError = new Error('transition superseded');\n\n    var TransitionSuperseded = silenceUncaughtInPromise($q.reject(TransitionSupersededError));\n    var TransitionPrevented = silenceUncaughtInPromise($q.reject(new Error('transition prevented')));\n    var TransitionAborted = silenceUncaughtInPromise($q.reject(new Error('transition aborted')));\n    var TransitionFailed = silenceUncaughtInPromise($q.reject(new Error('transition failed')));\n\n    // Handles the case where a state which is the target of a transition is not found, and the user\n    // can optionally retry or defer the transition\n    function handleRedirect(redirect, state, params, options) {\n      /**\n       * @ngdoc event\n       * @name ui.router.state.$state#$stateNotFound\n       * @eventOf ui.router.state.$state\n       * @eventType broadcast on root scope\n       * @description\n       * Fired when a requested state **cannot be found** using the provided state name during transition.\n       * The event is broadcast allowing any handlers a single chance to deal with the error (usually by\n       * lazy-loading the unfound state). A special `unfoundState` object is passed to the listener handler,\n       * you can see its three properties in the example. You can use `event.preventDefault()` to abort the\n       * transition and the promise returned from `go` will be rejected with a `'transition aborted'` value.\n       *\n       * @param {Object} event Event object.\n       * @param {Object} unfoundState Unfound State information. Contains: `to, toParams, options` properties.\n       * @param {State} fromState Current state object.\n       * @param {Object} fromParams Current state params.\n       *\n       * @example\n       *\n       * <pre>\n       * // somewhere, assume lazy.state has not been defined\n       * $state.go(\"lazy.state\", {a:1, b:2}, {inherit:false});\n       *\n       * // somewhere else\n       * $scope.$on('$stateNotFound',\n       * function(event, unfoundState, fromState, fromParams){\n       *     console.log(unfoundState.to); // \"lazy.state\"\n       *     console.log(unfoundState.toParams); // {a:1, b:2}\n       *     console.log(unfoundState.options); // {inherit:false} + default options\n       * })\n       * </pre>\n       */\n      var evt = $rootScope.$broadcast('$stateNotFound', redirect, state, params);\n\n      if (evt.defaultPrevented) {\n        $urlRouter.update();\n        return TransitionAborted;\n      }\n\n      if (!evt.retry) {\n        return null;\n      }\n\n      // Allow the handler to return a promise to defer state lookup retry\n      if (options.$retry) {\n        $urlRouter.update();\n        return TransitionFailed;\n      }\n      var retryTransition = $state.transition = $q.when(evt.retry);\n\n      retryTransition.then(function() {\n        if (retryTransition !== $state.transition) {\n          $rootScope.$broadcast('$stateChangeCancel', redirect.to, redirect.toParams, state, params);\n          return TransitionSuperseded;\n        }\n        redirect.options.$retry = true;\n        return $state.transitionTo(redirect.to, redirect.toParams, redirect.options);\n      }, function() {\n        return TransitionAborted;\n      });\n      $urlRouter.update();\n\n      return retryTransition;\n    }\n\n    root.locals = { resolve: null, globals: { $stateParams: {} } };\n\n    $state = {\n      params: {},\n      current: root.self,\n      $current: root,\n      transition: null\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#reload\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A method that force reloads the current state. All resolves are re-resolved,\n     * controllers reinstantiated, and events re-fired.\n     *\n     * @example\n     * <pre>\n     * var app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     $state.reload();\n     *   }\n     * });\n     * </pre>\n     *\n     * `reload()` is just an alias for:\n     * <pre>\n     * $state.transitionTo($state.current, $stateParams, { \n     *   reload: true, inherit: false, notify: true\n     * });\n     * </pre>\n     *\n     * @param {string=|object=} state - A state name or a state object, which is the root of the resolves to be re-resolved.\n     * @example\n     * <pre>\n     * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item' \n     * //and current state is 'contacts.detail.item'\n     * var app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     //will reload 'contact.detail' and 'contact.detail.item' states\n     *     $state.reload('contact.detail');\n     *   }\n     * });\n     * </pre>\n     *\n     * `reload()` is just an alias for:\n     * <pre>\n     * $state.transitionTo($state.current, $stateParams, { \n     *   reload: true, inherit: false, notify: true\n     * });\n     * </pre>\n\n     * @returns {promise} A promise representing the state of the new transition. See\n     * {@link ui.router.state.$state#methods_go $state.go}.\n     */\n    $state.reload = function reload(state) {\n      return $state.transitionTo($state.current, $stateParams, { reload: state || true, inherit: false, notify: true});\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#go\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Convenience method for transitioning to a new state. `$state.go` calls \n     * `$state.transitionTo` internally but automatically sets options to \n     * `{ location: true, inherit: true, relative: $state.$current, notify: true }`. \n     * This allows you to easily use an absolute or relative to path and specify \n     * only the parameters you'd like to update (while letting unspecified parameters \n     * inherit from the currently active ancestor states).\n     *\n     * @example\n     * <pre>\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.go('contact.detail');\n     *   };\n     * });\n     * </pre>\n     * <img src='../ngdoc_assets/StateGoExamples.png'/>\n     *\n     * @param {string} to Absolute state name or relative state path. Some examples:\n     *\n     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n     * - `$state.go('^')` - will go to a parent state\n     * - `$state.go('^.sibling')` - will go to a sibling state\n     * - `$state.go('.child.grandchild')` - will go to grandchild state\n     *\n     * @param {object=} params A map of the parameters that will be sent to the state, \n     * will populate $stateParams. Any parameters that are not specified will be inherited from currently \n     * defined parameters. Only parameters specified in the state definition can be overridden, new \n     * parameters will be ignored. This allows, for example, going to a sibling state that shares parameters\n     * specified in a parent state. Parameter inheritance only works between common ancestor states, I.e.\n     * transitioning to a sibling will get you the parameters for all parents, transitioning to a child\n     * will get you all current parameters, etc.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n     * - **`reload`** (v0.2.5) - {boolean=false|string|object}, If `true` will force transition even if no state or params\n     *    have changed.  It will reload the resolves and views of the current state and parent states.\n     *    If `reload` is a string (or state object), the state object is fetched (by name, or object reference); and \\\n     *    the transition reloads the resolves and views for that matched state, and all its children states.\n     *\n     * @returns {promise} A promise representing the state of the new transition.\n     *\n     * Possible success values:\n     *\n     * - $state.current\n     *\n     * <br/>Possible rejection values:\n     *\n     * - 'transition superseded' - when a newer transition has been started after this one\n     * - 'transition prevented' - when `event.preventDefault()` has been called in a `$stateChangeStart` listener\n     * - 'transition aborted' - when `event.preventDefault()` has been called in a `$stateNotFound` listener or\n     *   when a `$stateNotFound` `event.retry` promise errors.\n     * - 'transition failed' - when a state has been unsuccessfully found after 2 tries.\n     * - *resolve error* - when an error has occurred with a `resolve`\n     *\n     */\n    $state.go = function go(to, params, options) {\n      return $state.transitionTo(to, params, extend({ inherit: true, relative: $state.$current }, options));\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#transitionTo\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Low-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}\n     * uses `transitionTo` internally. `$state.go` is recommended in most situations.\n     *\n     * @example\n     * <pre>\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.transitionTo('contact.detail');\n     *   };\n     * });\n     * </pre>\n     *\n     * @param {string} to State name.\n     * @param {object=} toParams A map of the parameters that will be sent to the state,\n     * will populate $stateParams.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n     * - **`inherit`** - {boolean=false}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n     * - **`reload`** (v0.2.5) - {boolean=false|string=|object=}, If `true` will force transition even if the state or params \n     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\n     *    use this when you want to force a reload when *everything* is the same, including search params.\n     *    if String, then will reload the state with the name given in reload, and any children.\n     *    if Object, then a stateObj is expected, will reload the state found in stateObj, and any children.\n     *\n     * @returns {promise} A promise representing the state of the new transition. See\n     * {@link ui.router.state.$state#methods_go $state.go}.\n     */\n    $state.transitionTo = function transitionTo(to, toParams, options) {\n      toParams = toParams || {};\n      options = extend({\n        location: true, inherit: false, relative: null, notify: true, reload: false, $retry: false\n      }, options || {});\n\n      var from = $state.$current, fromParams = $state.params, fromPath = from.path;\n      var evt, toState = findState(to, options.relative);\n\n      // Store the hash param for later (since it will be stripped out by various methods)\n      var hash = toParams['#'];\n\n      if (!isDefined(toState)) {\n        var redirect = { to: to, toParams: toParams, options: options };\n        var redirectResult = handleRedirect(redirect, from.self, fromParams, options);\n\n        if (redirectResult) {\n          return redirectResult;\n        }\n\n        // Always retry once if the $stateNotFound was not prevented\n        // (handles either redirect changed or state lazy-definition)\n        to = redirect.to;\n        toParams = redirect.toParams;\n        options = redirect.options;\n        toState = findState(to, options.relative);\n\n        if (!isDefined(toState)) {\n          if (!options.relative) throw new Error(\"No such state '\" + to + \"'\");\n          throw new Error(\"Could not resolve '\" + to + \"' from state '\" + options.relative + \"'\");\n        }\n      }\n      if (toState[abstractKey]) throw new Error(\"Cannot transition to abstract state '\" + to + \"'\");\n      if (options.inherit) toParams = inheritParams($stateParams, toParams || {}, $state.$current, toState);\n      if (!toState.params.$$validates(toParams)) return TransitionFailed;\n\n      toParams = toState.params.$$values(toParams);\n      to = toState;\n\n      var toPath = to.path;\n\n      // Starting from the root of the path, keep all levels that haven't changed\n      var keep = 0, state = toPath[keep], locals = root.locals, toLocals = [];\n\n      if (!options.reload) {\n        while (state && state === fromPath[keep] && state.ownParams.$$equals(toParams, fromParams)) {\n          locals = toLocals[keep] = state.locals;\n          keep++;\n          state = toPath[keep];\n        }\n      } else if (isString(options.reload) || isObject(options.reload)) {\n        if (isObject(options.reload) && !options.reload.name) {\n          throw new Error('Invalid reload state object');\n        }\n        \n        var reloadState = options.reload === true ? fromPath[0] : findState(options.reload);\n        if (options.reload && !reloadState) {\n          throw new Error(\"No such reload state '\" + (isString(options.reload) ? options.reload : options.reload.name) + \"'\");\n        }\n\n        while (state && state === fromPath[keep] && state !== reloadState) {\n          locals = toLocals[keep] = state.locals;\n          keep++;\n          state = toPath[keep];\n        }\n      }\n\n      // If we're going to the same state and all locals are kept, we've got nothing to do.\n      // But clear 'transition', as we still want to cancel any other pending transitions.\n      // TODO: We may not want to bump 'transition' if we're called from a location change\n      // that we've initiated ourselves, because we might accidentally abort a legitimate\n      // transition initiated from code?\n      if (shouldSkipReload(to, toParams, from, fromParams, locals, options)) {\n        if (hash) toParams['#'] = hash;\n        $state.params = toParams;\n        copy($state.params, $stateParams);\n        copy(filterByKeys(to.params.$$keys(), $stateParams), to.locals.globals.$stateParams);\n        if (options.location && to.navigable && to.navigable.url) {\n          $urlRouter.push(to.navigable.url, toParams, {\n            $$avoidResync: true, replace: options.location === 'replace'\n          });\n          $urlRouter.update(true);\n        }\n        $state.transition = null;\n        return $q.when($state.current);\n      }\n\n      // Filter parameters before we pass them to event handlers etc.\n      toParams = filterByKeys(to.params.$$keys(), toParams || {});\n      \n      // Re-add the saved hash before we start returning things or broadcasting $stateChangeStart\n      if (hash) toParams['#'] = hash;\n      \n      // Broadcast start event and cancel the transition if requested\n      if (options.notify) {\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeStart\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired when the state transition **begins**. You can use `event.preventDefault()`\n         * to prevent the transition from happening and then the transition promise will be\n         * rejected with a `'transition prevented'` value.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         *\n         * @example\n         *\n         * <pre>\n         * $rootScope.$on('$stateChangeStart',\n         * function(event, toState, toParams, fromState, fromParams){\n         *     event.preventDefault();\n         *     // transitionTo() promise will be rejected with\n         *     // a 'transition prevented' error\n         * })\n         * </pre>\n         */\n        if ($rootScope.$broadcast('$stateChangeStart', to.self, toParams, from.self, fromParams, options).defaultPrevented) {\n          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n          //Don't update and resync url if there's been a new transition started. see issue #2238, #600\n          if ($state.transition == null) $urlRouter.update();\n          return TransitionPrevented;\n        }\n      }\n\n      // Resolve locals for the remaining states, but don't update any global state just\n      // yet -- if anything fails to resolve the current state needs to remain untouched.\n      // We also set up an inheritance chain for the locals here. This allows the view directive\n      // to quickly look up the correct definition for each view in the current state. Even\n      // though we create the locals object itself outside resolveState(), it is initially\n      // empty and gets filled asynchronously. We need to keep track of the promise for the\n      // (fully resolved) current locals, and pass this down the chain.\n      var resolved = $q.when(locals);\n\n      for (var l = keep; l < toPath.length; l++, state = toPath[l]) {\n        locals = toLocals[l] = inherit(locals);\n        resolved = resolveState(state, toParams, state === to, resolved, locals, options);\n      }\n\n      // Once everything is resolved, we are ready to perform the actual transition\n      // and return a promise for the new state. We also keep track of what the\n      // current promise is, so that we can detect overlapping transitions and\n      // keep only the outcome of the last transition.\n      var transition = $state.transition = resolved.then(function () {\n        var l, entering, exiting;\n\n        if ($state.transition !== transition) {\n          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n          return TransitionSuperseded;\n        }\n\n        // Exit 'from' states not kept\n        for (l = fromPath.length - 1; l >= keep; l--) {\n          exiting = fromPath[l];\n          if (exiting.self.onExit) {\n            $injector.invoke(exiting.self.onExit, exiting.self, exiting.locals.globals);\n          }\n          exiting.locals = null;\n        }\n\n        // Enter 'to' states not kept\n        for (l = keep; l < toPath.length; l++) {\n          entering = toPath[l];\n          entering.locals = toLocals[l];\n          if (entering.self.onEnter) {\n            $injector.invoke(entering.self.onEnter, entering.self, entering.locals.globals);\n          }\n        }\n\n        // Run it again, to catch any transitions in callbacks\n        if ($state.transition !== transition) {\n          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n          return TransitionSuperseded;\n        }\n\n        // Update globals in $state\n        $state.$current = to;\n        $state.current = to.self;\n        $state.params = toParams;\n        copy($state.params, $stateParams);\n        $state.transition = null;\n\n        if (options.location && to.navigable) {\n          $urlRouter.push(to.navigable.url, to.navigable.locals.globals.$stateParams, {\n            $$avoidResync: true, replace: options.location === 'replace'\n          });\n        }\n\n        if (options.notify) {\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeSuccess\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired once the state transition is **complete**.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         */\n          $rootScope.$broadcast('$stateChangeSuccess', to.self, toParams, from.self, fromParams);\n        }\n        $urlRouter.update(true);\n\n        return $state.current;\n      }).then(null, function (error) {\n        // propagate TransitionSuperseded error without emitting $stateChangeCancel\n        // as it was already emitted in the success handler above\n        if (error === TransitionSupersededError) return TransitionSuperseded;\n\n        if ($state.transition !== transition) {\n          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n          return TransitionSuperseded;\n        }\n\n        $state.transition = null;\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeError\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired when an **error occurs** during transition. It's important to note that if you\n         * have any errors in your resolve functions (javascript errors, non-existent services, etc)\n         * they will not throw traditionally. You must listen for this $stateChangeError event to\n         * catch **ALL** errors.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         * @param {Error} error The resolve error object.\n         */\n        evt = $rootScope.$broadcast('$stateChangeError', to.self, toParams, from.self, fromParams, error);\n\n        if (!evt.defaultPrevented) {\n          $urlRouter.update();\n        }\n\n        return $q.reject(error);\n      });\n\n      return transition;\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#is\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Similar to {@link ui.router.state.$state#methods_includes $state.includes},\n     * but only checks for the full state name. If params is supplied then it will be\n     * tested for strict equality against the current active params object, so all params\n     * must match with none missing and no extras.\n     *\n     * @example\n     * <pre>\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // absolute name\n     * $state.is('contact.details.item'); // returns true\n     * $state.is(contactDetailItemStateObject); // returns true\n     *\n     * // relative name (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n     * </pre>\n     *\n     * @param {string|object} stateOrName The state name (absolute or relative) or state object you'd like to check.\n     * @param {object=} params A param object, e.g. `{sectionId: section.id}`, that you'd like\n     * to test against the current active state.\n     * @param {object=} options An options object.  The options are:\n     *\n     * - **`relative`** - {string|object} -  If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     * test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it is the state.\n     */\n    $state.is = function is(stateOrName, params, options) {\n      options = extend({ relative: $state.$current }, options || {});\n      var state = findState(stateOrName, options.relative);\n\n      if (!isDefined(state)) { return undefined; }\n      if ($state.$current !== state) { return false; }\n      return params ? equalForKeys(state.params.$$values(params), $stateParams) : true;\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#includes\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A method to determine if the current active state is equal to or is the child of the\n     * state stateName. If any params are passed then they will be tested for a match as well.\n     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n     *\n     * @example\n     * Partial and relative names\n     * <pre>\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // Using partial names\n     * $state.includes(\"contacts\"); // returns true\n     * $state.includes(\"contacts.details\"); // returns true\n     * $state.includes(\"contacts.details.item\"); // returns true\n     * $state.includes(\"contacts.list\"); // returns false\n     * $state.includes(\"about\"); // returns false\n     *\n     * // Using relative names (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * <div ng-class=\"{highlighted: $state.includes('.item')}\">Item</div>\n     * </pre>\n     *\n     * Basic globbing patterns\n     * <pre>\n     * $state.$current.name = 'contacts.details.item.url';\n     *\n     * $state.includes(\"*.details.*.*\"); // returns true\n     * $state.includes(\"*.details.**\"); // returns true\n     * $state.includes(\"**.item.**\"); // returns true\n     * $state.includes(\"*.details.item.url\"); // returns true\n     * $state.includes(\"*.details.*.url\"); // returns true\n     * $state.includes(\"*.details.*\"); // returns false\n     * $state.includes(\"item.**\"); // returns false\n     * </pre>\n     *\n     * @param {string} stateOrName A partial name, relative name, or glob pattern\n     * to be searched for within the current state name.\n     * @param {object=} params A param object, e.g. `{sectionId: section.id}`,\n     * that you'd like to test against the current active state.\n     * @param {object=} options An options object.  The options are:\n     *\n     * - **`relative`** - {string|object=} -  If `stateOrName` is a relative state reference and `options.relative` is set,\n     * .includes will test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it does include the state\n     */\n    $state.includes = function includes(stateOrName, params, options) {\n      options = extend({ relative: $state.$current }, options || {});\n      if (isString(stateOrName) && isGlob(stateOrName)) {\n        if (!doesStateMatchGlob(stateOrName)) {\n          return false;\n        }\n        stateOrName = $state.$current.name;\n      }\n\n      var state = findState(stateOrName, options.relative);\n      if (!isDefined(state)) { return undefined; }\n      if (!isDefined($state.$current.includes[state.name])) { return false; }\n      if (!params) { return true; }\n\n      var keys = objectKeys(params);\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i], paramDef = state.params[key];\n        if (paramDef && !paramDef.type.equals($stateParams[key], params[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#href\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A url generation method that returns the compiled url for the given state populated with the given params.\n     *\n     * @example\n     * <pre>\n     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n     * </pre>\n     *\n     * @param {string|object} stateOrName The state name or state object you'd like to generate a url from.\n     * @param {object=} params An object of parameter values to fill the state's required parameters.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the\n     *    first parameter, then the constructed href url will be built from the first navigable ancestor (aka\n     *    ancestor with a valid url).\n     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n     * \n     * @returns {string} compiled state url\n     */\n    $state.href = function href(stateOrName, params, options) {\n      options = extend({\n        lossy:    true,\n        inherit:  true,\n        absolute: false,\n        relative: $state.$current\n      }, options || {});\n\n      var state = findState(stateOrName, options.relative);\n\n      if (!isDefined(state)) return null;\n      if (options.inherit) params = inheritParams($stateParams, params || {}, $state.$current, state);\n      \n      var nav = (state && options.lossy) ? state.navigable : state;\n\n      if (!nav || nav.url === undefined || nav.url === null) {\n        return null;\n      }\n      return $urlRouter.href(nav.url, filterByKeys(state.params.$$keys().concat('#'), params || {}), {\n        absolute: options.absolute\n      });\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#get\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Returns the state configuration object for any specific state or all states.\n     *\n     * @param {string|object=} stateOrName (absolute or relative) If provided, will only get the config for\n     * the requested state. If not provided, returns an array of ALL state configs.\n     * @param {string|object=} context When stateOrName is a relative state reference, the state will be retrieved relative to context.\n     * @returns {Object|Array} State configuration object or array of all objects.\n     */\n    $state.get = function (stateOrName, context) {\n      if (arguments.length === 0) return map(objectKeys(states), function(name) { return states[name].self; });\n      var state = findState(stateOrName, context || $state.$current);\n      return (state && state.self) ? state.self : null;\n    };\n\n    function resolveState(state, params, paramsAreFiltered, inherited, dst, options) {\n      // Make a restricted $stateParams with only the parameters that apply to this state if\n      // necessary. In addition to being available to the controller and onEnter/onExit callbacks,\n      // we also need $stateParams to be available for any $injector calls we make during the\n      // dependency resolution process.\n      var $stateParams = (paramsAreFiltered) ? params : filterByKeys(state.params.$$keys(), params);\n      var locals = { $stateParams: $stateParams };\n\n      // Resolve 'global' dependencies for the state, i.e. those not specific to a view.\n      // We're also including $stateParams in this; that way the parameters are restricted\n      // to the set that should be visible to the state, and are independent of when we update\n      // the global $state and $stateParams values.\n      dst.resolve = $resolve.resolve(state.resolve, locals, dst.resolve, state);\n      var promises = [dst.resolve.then(function (globals) {\n        dst.globals = globals;\n      })];\n      if (inherited) promises.push(inherited);\n\n      function resolveViews() {\n        var viewsPromises = [];\n\n        // Resolve template and dependencies for all views.\n        forEach(state.views, function (view, name) {\n          var injectables = (view.resolve && view.resolve !== state.resolve ? view.resolve : {});\n          injectables.$template = [ function () {\n            return $view.load(name, { view: view, locals: dst.globals, params: $stateParams, notify: options.notify }) || '';\n          }];\n\n          viewsPromises.push($resolve.resolve(injectables, dst.globals, dst.resolve, state).then(function (result) {\n            // References to the controller (only instantiated at link time)\n            if (isFunction(view.controllerProvider) || isArray(view.controllerProvider)) {\n              var injectLocals = angular.extend({}, injectables, dst.globals);\n              result.$$controller = $injector.invoke(view.controllerProvider, null, injectLocals);\n            } else {\n              result.$$controller = view.controller;\n            }\n            // Provide access to the state itself for internal use\n            result.$$state = state;\n            result.$$controllerAs = view.controllerAs;\n            result.$$resolveAs = view.resolveAs;\n            dst[name] = result;\n          }));\n        });\n\n        return $q.all(viewsPromises).then(function(){\n          return dst.globals;\n        });\n      }\n\n      // Wait for all the promises and then return the activation object\n      return $q.all(promises).then(resolveViews).then(function (values) {\n        return dst;\n      });\n    }\n\n    return $state;\n  }\n\n  function shouldSkipReload(to, toParams, from, fromParams, locals, options) {\n    // Return true if there are no differences in non-search (path/object) params, false if there are differences\n    function nonSearchParamsEqual(fromAndToState, fromParams, toParams) {\n      // Identify whether all the parameters that differ between `fromParams` and `toParams` were search params.\n      function notSearchParam(key) {\n        return fromAndToState.params[key].location != \"search\";\n      }\n      var nonQueryParamKeys = fromAndToState.params.$$keys().filter(notSearchParam);\n      var nonQueryParams = pick.apply({}, [fromAndToState.params].concat(nonQueryParamKeys));\n      var nonQueryParamSet = new $$UMFP.ParamSet(nonQueryParams);\n      return nonQueryParamSet.$$equals(fromParams, toParams);\n    }\n\n    // If reload was not explicitly requested\n    // and we're transitioning to the same state we're already in\n    // and    the locals didn't change\n    //     or they changed in a way that doesn't merit reloading\n    //        (reloadOnParams:false, or reloadOnSearch.false and only search params changed)\n    // Then return true.\n    if (!options.reload && to === from &&\n      (locals === from.locals || (to.self.reloadOnSearch === false && nonSearchParamsEqual(from, fromParams, toParams)))) {\n      return true;\n    }\n  }\n}\n\nangular.module('ui.router.state')\n  .factory('$stateParams', function () { return {}; })\n  .constant(\"$state.runtime\", { autoinject: true })\n  .provider('$state', $StateProvider)\n  // Inject $state to initialize when entering runtime. #2574\n  .run(['$injector', function ($injector) {\n    // Allow tests (stateSpec.js) to turn this off by defining this constant\n    if ($injector.get(\"$state.runtime\").autoinject) {\n      $injector.get('$state');\n    }\n  }]);\n\n\n$ViewProvider.$inject = [];\nfunction $ViewProvider() {\n\n  this.$get = $get;\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$view\n   *\n   * @requires ui.router.util.$templateFactory\n   * @requires $rootScope\n   *\n   * @description\n   *\n   */\n  $get.$inject = ['$rootScope', '$templateFactory'];\n  function $get(   $rootScope,   $templateFactory) {\n    return {\n      // $view.load('full.viewName', { template: ..., controller: ..., resolve: ..., async: false, params: ... })\n      /**\n       * @ngdoc function\n       * @name ui.router.state.$view#load\n       * @methodOf ui.router.state.$view\n       *\n       * @description\n       *\n       * @param {string} name name\n       * @param {object} options option object.\n       */\n      load: function load(name, options) {\n        var result, defaults = {\n          template: null, controller: null, view: null, locals: null, notify: true, async: true, params: {}\n        };\n        options = extend(defaults, options);\n\n        if (options.view) {\n          result = $templateFactory.fromConfig(options.view, options.params, options.locals);\n        }\n        return result;\n      }\n    };\n  }\n}\n\nangular.module('ui.router.state').provider('$view', $ViewProvider);\n\n/**\n * @ngdoc object\n * @name ui.router.state.$uiViewScrollProvider\n *\n * @description\n * Provider that returns the {@link ui.router.state.$uiViewScroll} service function.\n */\nfunction $ViewScrollProvider() {\n\n  var useAnchorScroll = false;\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$uiViewScrollProvider#useAnchorScroll\n   * @methodOf ui.router.state.$uiViewScrollProvider\n   *\n   * @description\n   * Reverts back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll) service for\n   * scrolling based on the url anchor.\n   */\n  this.useAnchorScroll = function () {\n    useAnchorScroll = true;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$uiViewScroll\n   *\n   * @requires $anchorScroll\n   * @requires $timeout\n   *\n   * @description\n   * When called with a jqLite element, it scrolls the element into view (after a\n   * `$timeout` so the DOM has time to refresh).\n   *\n   * If you prefer to rely on `$anchorScroll` to scroll the view to the anchor,\n   * this can be enabled by calling {@link ui.router.state.$uiViewScrollProvider#methods_useAnchorScroll `$uiViewScrollProvider.useAnchorScroll()`}.\n   */\n  this.$get = ['$anchorScroll', '$timeout', function ($anchorScroll, $timeout) {\n    if (useAnchorScroll) {\n      return $anchorScroll;\n    }\n\n    return function ($element) {\n      return $timeout(function () {\n        $element[0].scrollIntoView();\n      }, 0, false);\n    };\n  }];\n}\n\nangular.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-view\n *\n * @requires ui.router.state.$state\n * @requires $compile\n * @requires $controller\n * @requires $injector\n * @requires ui.router.state.$uiViewScroll\n * @requires $document\n *\n * @restrict ECA\n *\n * @description\n * The ui-view directive tells $state where to place your templates.\n *\n * @param {string=} name A view name. The name should be unique amongst the other views in the\n * same state. You can have views of the same name that live in different states.\n *\n * @param {string=} autoscroll It allows you to set the scroll behavior of the browser window\n * when a view is populated. By default, $anchorScroll is overridden by ui-router's custom scroll\n * service, {@link ui.router.state.$uiViewScroll}. This custom service let's you\n * scroll ui-view elements into view when they are populated during a state activation.\n *\n * *Note: To revert back to old [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll)\n * functionality, call `$uiViewScrollProvider.useAnchorScroll()`.*\n *\n * @param {string=} onload Expression to evaluate whenever the view updates.\n *\n * @example\n * A view can be unnamed or named.\n * <pre>\n * <!-- Unnamed -->\n * <div ui-view></div>\n *\n * <!-- Named -->\n * <div ui-view=\"viewName\"></div>\n * </pre>\n *\n * You can only have one unnamed view within any template (or root html). If you are only using a\n * single view and it is unnamed then you can populate it like so:\n * <pre>\n * <div ui-view></div>\n * $stateProvider.state(\"home\", {\n *   template: \"<h1>HELLO!</h1>\"\n * })\n * </pre>\n *\n * The above is a convenient shortcut equivalent to specifying your view explicitly with the {@link ui.router.state.$stateProvider#methods_state `views`}\n * config property, by name, in this case an empty name:\n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }    \n * })\n * </pre>\n *\n * But typically you'll only use the views property if you name your view or have more than one view\n * in the same template. There's not really a compelling reason to name a view if its the only one,\n * but you could if you wanted, like so:\n * <pre>\n * <div ui-view=\"main\"></div>\n * </pre>\n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"main\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }    \n * })\n * </pre>\n *\n * Really though, you'll use views to set up multiple views:\n * <pre>\n * <div ui-view></div>\n * <div ui-view=\"chart\"></div>\n * <div ui-view=\"data\"></div>\n * </pre>\n *\n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     },\n *     \"chart\": {\n *       template: \"<chart_thing/>\"\n *     },\n *     \"data\": {\n *       template: \"<data_thing/>\"\n *     }\n *   }    \n * })\n * </pre>\n *\n * Examples for `autoscroll`:\n *\n * <pre>\n * <!-- If autoscroll present with no expression,\n *      then scroll ui-view into view -->\n * <ui-view autoscroll/>\n *\n * <!-- If autoscroll present with valid expression,\n *      then scroll ui-view into view if expression evaluates to true -->\n * <ui-view autoscroll='true'/>\n * <ui-view autoscroll='false'/>\n * <ui-view autoscroll='scopeVariable'/>\n * </pre>\n *\n * Resolve data:\n *\n * The resolved data from the state's `resolve` block is placed on the scope as `$resolve` (this\n * can be customized using [[ViewDeclaration.resolveAs]]).  This can be then accessed from the template.\n *\n * Note that when `controllerAs` is being used, `$resolve` is set on the controller instance *after* the\n * controller is instantiated.  The `$onInit()` hook can be used to perform initialization code which\n * depends on `$resolve` data.\n *\n * Example usage of $resolve in a view template\n * <pre>\n * $stateProvider.state('home', {\n *   template: '<my-component user=\"$resolve.user\"></my-component>',\n *   resolve: {\n *     user: function(UserService) { return UserService.fetchUser(); }\n *   }\n * });\n * </pre>\n */\n$ViewDirective.$inject = ['$state', '$injector', '$uiViewScroll', '$interpolate', '$q'];\nfunction $ViewDirective(   $state,   $injector,   $uiViewScroll,   $interpolate,   $q) {\n\n  function getService() {\n    return ($injector.has) ? function(service) {\n      return $injector.has(service) ? $injector.get(service) : null;\n    } : function(service) {\n      try {\n        return $injector.get(service);\n      } catch (e) {\n        return null;\n      }\n    };\n  }\n\n  var service = getService(),\n      $animator = service('$animator'),\n      $animate = service('$animate');\n\n  // Returns a set of DOM manipulation functions based on which Angular version\n  // it should use\n  function getRenderer(attrs, scope) {\n    var statics = function() {\n      return {\n        enter: function (element, target, cb) { target.after(element); cb(); },\n        leave: function (element, cb) { element.remove(); cb(); }\n      };\n    };\n\n    if ($animate) {\n      return {\n        enter: function(element, target, cb) {\n          if (angular.version.minor > 2) {\n            $animate.enter(element, null, target).then(cb);\n          } else {\n            $animate.enter(element, null, target, cb);\n          }\n        },\n        leave: function(element, cb) {\n          if (angular.version.minor > 2) {\n            $animate.leave(element).then(cb);\n          } else {\n            $animate.leave(element, cb);\n          }\n        }\n      };\n    }\n\n    if ($animator) {\n      var animate = $animator && $animator(scope, attrs);\n\n      return {\n        enter: function(element, target, cb) {animate.enter(element, null, target); cb(); },\n        leave: function(element, cb) { animate.leave(element); cb(); }\n      };\n    }\n\n    return statics();\n  }\n\n  var directive = {\n    restrict: 'ECA',\n    terminal: true,\n    priority: 400,\n    transclude: 'element',\n    compile: function (tElement, tAttrs, $transclude) {\n      return function (scope, $element, attrs) {\n        var previousEl, currentEl, currentScope, latestLocals,\n            onloadExp     = attrs.onload || '',\n            autoScrollExp = attrs.autoscroll,\n            renderer      = getRenderer(attrs, scope),\n            inherited     = $element.inheritedData('$uiView');\n\n        scope.$on('$stateChangeSuccess', function() {\n          updateView(false);\n        });\n\n        updateView(true);\n\n        function cleanupLastView() {\n          if (previousEl) {\n            previousEl.remove();\n            previousEl = null;\n          }\n\n          if (currentScope) {\n            currentScope.$destroy();\n            currentScope = null;\n          }\n\n          if (currentEl) {\n            var $uiViewData = currentEl.data('$uiViewAnim');\n            renderer.leave(currentEl, function() {\n              $uiViewData.$$animLeave.resolve();\n              previousEl = null;\n            });\n\n            previousEl = currentEl;\n            currentEl = null;\n          }\n        }\n\n        function updateView(firstTime) {\n          var newScope,\n              name            = getUiViewName(scope, attrs, $element, $interpolate),\n              previousLocals  = name && $state.$current && $state.$current.locals[name];\n\n          if (!firstTime && previousLocals === latestLocals) return; // nothing to do\n          newScope = scope.$new();\n          latestLocals = $state.$current.locals[name];\n\n          /**\n           * @ngdoc event\n           * @name ui.router.state.directive:ui-view#$viewContentLoading\n           * @eventOf ui.router.state.directive:ui-view\n           * @eventType emits on ui-view directive scope\n           * @description\n           *\n           * Fired once the view **begins loading**, *before* the DOM is rendered.\n           *\n           * @param {Object} event Event object.\n           * @param {string} viewName Name of the view.\n           */\n          newScope.$emit('$viewContentLoading', name);\n\n          var clone = $transclude(newScope, function(clone) {\n            var animEnter = $q.defer(), animLeave = $q.defer();\n            var viewAnimData = {\n              $animEnter: animEnter.promise,\n              $animLeave: animLeave.promise,\n              $$animLeave: animLeave\n            };\n\n            clone.data('$uiViewAnim', viewAnimData);\n            renderer.enter(clone, $element, function onUiViewEnter() {\n              animEnter.resolve();\n              if(currentScope) {\n                currentScope.$emit('$viewContentAnimationEnded');\n              }\n\n              if (angular.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {\n                $uiViewScroll(clone);\n              }\n            });\n            cleanupLastView();\n          });\n\n          currentEl = clone;\n          currentScope = newScope;\n          /**\n           * @ngdoc event\n           * @name ui.router.state.directive:ui-view#$viewContentLoaded\n           * @eventOf ui.router.state.directive:ui-view\n           * @eventType emits on ui-view directive scope\n           * @description\n           * Fired once the view is **loaded**, *after* the DOM is rendered.\n           *\n           * @param {Object} event Event object.\n           * @param {string} viewName Name of the view.\n           */\n          currentScope.$emit('$viewContentLoaded', name);\n          currentScope.$eval(onloadExp);\n        }\n      };\n    }\n  };\n\n  return directive;\n}\n\n$ViewDirectiveFill.$inject = ['$compile', '$controller', '$state', '$interpolate'];\nfunction $ViewDirectiveFill (  $compile,   $controller,   $state,   $interpolate) {\n  return {\n    restrict: 'ECA',\n    priority: -400,\n    compile: function (tElement) {\n      var initial = tElement.html();\n      return function (scope, $element, attrs) {\n        var current = $state.$current,\n            name = getUiViewName(scope, attrs, $element, $interpolate),\n            locals  = current && current.locals[name];\n\n        if (! locals) {\n          return;\n        }\n\n        $element.data('$uiView', { name: name, state: locals.$$state });\n        $element.html(locals.$template ? locals.$template : initial);\n\n        var resolveData = angular.extend({}, locals);\n        scope[locals.$$resolveAs] = resolveData;\n\n        var link = $compile($element.contents());\n\n        if (locals.$$controller) {\n          locals.$scope = scope;\n          locals.$element = $element;\n          var controller = $controller(locals.$$controller, locals);\n          if (locals.$$controllerAs) {\n            scope[locals.$$controllerAs] = controller;\n            scope[locals.$$controllerAs][locals.$$resolveAs] = resolveData;\n          }\n          if (isFunction(controller.$onInit)) controller.$onInit();\n          $element.data('$ngControllerController', controller);\n          $element.children().data('$ngControllerController', controller);\n        }\n\n        link(scope);\n      };\n    }\n  };\n}\n\n/**\n * Shared ui-view code for both directives:\n * Given scope, element, and its attributes, return the view's name\n */\nfunction getUiViewName(scope, attrs, element, $interpolate) {\n  var name = $interpolate(attrs.uiView || attrs.name || '')(scope);\n  var uiViewCreatedBy = element.inheritedData('$uiView');\n  return name.indexOf('@') >= 0 ?  name :  (name + '@' + (uiViewCreatedBy ? uiViewCreatedBy.state.name : ''));\n}\n\nangular.module('ui.router.state').directive('uiView', $ViewDirective);\nangular.module('ui.router.state').directive('uiView', $ViewDirectiveFill);\n\nfunction parseStateRef(ref, current) {\n  var preparsed = ref.match(/^\\s*({[^}]*})\\s*$/), parsed;\n  if (preparsed) ref = current + '(' + preparsed[1] + ')';\n  parsed = ref.replace(/\\n/g, \" \").match(/^([^(]+?)\\s*(\\((.*)\\))?$/);\n  if (!parsed || parsed.length !== 4) throw new Error(\"Invalid state ref '\" + ref + \"'\");\n  return { state: parsed[1], paramExpr: parsed[3] || null };\n}\n\nfunction stateContext(el) {\n  var stateData = el.parent().inheritedData('$uiView');\n\n  if (stateData && stateData.state && stateData.state.name) {\n    return stateData.state;\n  }\n}\n\nfunction getTypeInfo(el) {\n  // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n  var isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';\n  var isForm = el[0].nodeName === \"FORM\";\n\n  return {\n    attr: isForm ? \"action\" : (isSvg ? 'xlink:href' : 'href'),\n    isAnchor: el.prop(\"tagName\").toUpperCase() === \"A\",\n    clickable: !isForm\n  };\n}\n\nfunction clickHook(el, $state, $timeout, type, current) {\n  return function(e) {\n    var button = e.which || e.button, target = current();\n\n    if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || el.attr('target'))) {\n      // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\n      var transition = $timeout(function() {\n        $state.go(target.state, target.params, target.options);\n      });\n      e.preventDefault();\n\n      // if the state has no URL, ignore one preventDefault from the <a> directive.\n      var ignorePreventDefaultCount = type.isAnchor && !target.href ? 1: 0;\n\n      e.preventDefault = function() {\n        if (ignorePreventDefaultCount-- <= 0) $timeout.cancel(transition);\n      };\n    }\n  };\n}\n\nfunction defaultOpts(el, $state) {\n  return { relative: stateContext(el) || $state.$current, inherit: true };\n}\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref\n *\n * @requires ui.router.state.$state\n * @requires $timeout\n *\n * @restrict A\n *\n * @description\n * A directive that binds a link (`<a>` tag) to a state. If the state has an associated\n * URL, the directive will automatically generate & update the `href` attribute via\n * the {@link ui.router.state.$state#methods_href $state.href()} method. Clicking\n * the link will trigger a state transition with optional parameters.\n *\n * Also middle-clicking, right-clicking, and ctrl-clicking on the link will be\n * handled natively by the browser.\n *\n * You can also use relative state paths within ui-sref, just like the relative\n * paths passed to `$state.go()`. You just need to be aware that the path is relative\n * to the state that the link lives in, in other words the state that loaded the\n * template containing the link.\n *\n * You can specify options to pass to {@link ui.router.state.$state#methods_go $state.go()}\n * using the `ui-sref-opts` attribute. Options are restricted to `location`, `inherit`,\n * and `reload`.\n *\n * @example\n * Here's an example of how you'd use ui-sref and how it would compile. If you have the\n * following template:\n * <pre>\n * <a ui-sref=\"home\">Home</a> | <a ui-sref=\"about\">About</a> | <a ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n *     </li>\n * </ul>\n * </pre>\n *\n * Then the compiled html would be (assuming Html5Mode is off and current state is contacts):\n * <pre>\n * <a href=\"#/home\" ui-sref=\"home\">Home</a> | <a href=\"#/about\" ui-sref=\"about\">About</a> | <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n *     </li>\n * </ul>\n *\n * <a ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n * </pre>\n *\n * @param {string} ui-sref 'stateName' can be any valid absolute or relative state\n * @param {Object} ui-sref-opts options to pass to {@link ui.router.state.$state#methods_go $state.go()}\n */\n$StateRefDirective.$inject = ['$state', '$timeout'];\nfunction $StateRefDirective($state, $timeout) {\n  return {\n    restrict: 'A',\n    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n    link: function(scope, element, attrs, uiSrefActive) {\n      var ref    = parseStateRef(attrs.uiSref, $state.current.name);\n      var def    = { state: ref.state, href: null, params: null };\n      var type   = getTypeInfo(element);\n      var active = uiSrefActive[1] || uiSrefActive[0];\n      var unlinkInfoFn = null;\n      var hookFn;\n\n      def.options = extend(defaultOpts(element, $state), attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {});\n\n      var update = function(val) {\n        if (val) def.params = angular.copy(val);\n        def.href = $state.href(ref.state, def.params, def.options);\n\n        if (unlinkInfoFn) unlinkInfoFn();\n        if (active) unlinkInfoFn = active.$$addStateInfo(ref.state, def.params);\n        if (def.href !== null) attrs.$set(type.attr, def.href);\n      };\n\n      if (ref.paramExpr) {\n        scope.$watch(ref.paramExpr, function(val) { if (val !== def.params) update(val); }, true);\n        def.params = angular.copy(scope.$eval(ref.paramExpr));\n      }\n      update();\n\n      if (!type.clickable) return;\n      hookFn = clickHook(element, $state, $timeout, type, function() { return def; });\n      element[element.on ? 'on' : 'bind'](\"click\", hookFn);\n      scope.$on('$destroy', function() {\n        element[element.off ? 'off' : 'unbind'](\"click\", hookFn);\n      });\n    }\n  };\n}\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-state\n *\n * @requires ui.router.state.uiSref\n *\n * @restrict A\n *\n * @description\n * Much like ui-sref, but will accept named $scope properties to evaluate for a state definition,\n * params and override options.\n *\n * @param {string} ui-state 'stateName' can be any valid absolute or relative state\n * @param {Object} ui-state-params params to pass to {@link ui.router.state.$state#methods_href $state.href()}\n * @param {Object} ui-state-opts options to pass to {@link ui.router.state.$state#methods_go $state.go()}\n */\n$StateRefDynamicDirective.$inject = ['$state', '$timeout'];\nfunction $StateRefDynamicDirective($state, $timeout) {\n  return {\n    restrict: 'A',\n    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n    link: function(scope, element, attrs, uiSrefActive) {\n      var type   = getTypeInfo(element);\n      var active = uiSrefActive[1] || uiSrefActive[0];\n      var group  = [attrs.uiState, attrs.uiStateParams || null, attrs.uiStateOpts || null];\n      var watch  = '[' + group.map(function(val) { return val || 'null'; }).join(', ') + ']';\n      var def    = { state: null, params: null, options: null, href: null };\n      var unlinkInfoFn = null;\n      var hookFn;\n\n      function runStateRefLink (group) {\n        def.state = group[0]; def.params = group[1]; def.options = group[2];\n        def.href = $state.href(def.state, def.params, def.options);\n\n        if (unlinkInfoFn) unlinkInfoFn();\n        if (active) unlinkInfoFn = active.$$addStateInfo(def.state, def.params);\n        if (def.href) attrs.$set(type.attr, def.href);\n      }\n\n      scope.$watch(watch, runStateRefLink, true);\n      runStateRefLink(scope.$eval(watch));\n\n      if (!type.clickable) return;\n      hookFn = clickHook(element, $state, $timeout, type, function() { return def; });\n      element[element.on ? 'on' : 'bind'](\"click\", hookFn);\n      scope.$on('$destroy', function() {\n        element[element.off ? 'off' : 'unbind'](\"click\", hookFn);\n      });\n    }\n  };\n}\n\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref-active\n *\n * @requires ui.router.state.$state\n * @requires ui.router.state.$stateParams\n * @requires $interpolate\n *\n * @restrict A\n *\n * @description\n * A directive working alongside ui-sref to add classes to an element when the\n * related ui-sref directive's state is active, and removing them when it is inactive.\n * The primary use-case is to simplify the special appearance of navigation menus\n * relying on `ui-sref`, by having the \"active\" state's menu button appear different,\n * distinguishing it from the inactive menu items.\n *\n * ui-sref-active can live on the same element as ui-sref or on a parent element. The first\n * ui-sref-active found at the same level or above the ui-sref will be used.\n *\n * Will activate when the ui-sref's target state or any child state is active. If you\n * need to activate only when the ui-sref target state is active and *not* any of\n * it's children, then you will use\n * {@link ui.router.state.directive:ui-sref-active-eq ui-sref-active-eq}\n *\n * @example\n * Given the following template:\n * <pre>\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item\">\n *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * </pre>\n *\n *\n * When the app state is \"app.user\" (or any children states), and contains the state parameter \"user\" with value \"bilbobaggins\",\n * the resulting HTML will appear as (note the 'active' class):\n * <pre>\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item active\">\n *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * </pre>\n *\n * The class name is interpolated **once** during the directives link time (any further changes to the\n * interpolated value are ignored).\n *\n * Multiple classes may be specified in a space-separated format:\n * <pre>\n * <ul>\n *   <li ui-sref-active='class1 class2 class3'>\n *     <a ui-sref=\"app.user\">link</a>\n *   </li>\n * </ul>\n * </pre>\n *\n * It is also possible to pass ui-sref-active an expression that evaluates\n * to an object hash, whose keys represent active class names and whose\n * values represent the respective state names/globs.\n * ui-sref-active will match if the current active state **includes** any of\n * the specified state names/globs, even the abstract ones.\n *\n * @Example\n * Given the following template, with \"admin\" being an abstract state:\n * <pre>\n * <div ui-sref-active=\"{'active': 'admin.*'}\">\n *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n * </div>\n * </pre>\n *\n * When the current state is \"admin.roles\" the \"active\" class will be applied\n * to both the <div> and <a> elements. It is important to note that the state\n * names/globs passed to ui-sref-active shadow the state provided by ui-sref.\n */\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref-active-eq\n *\n * @requires ui.router.state.$state\n * @requires ui.router.state.$stateParams\n * @requires $interpolate\n *\n * @restrict A\n *\n * @description\n * The same as {@link ui.router.state.directive:ui-sref-active ui-sref-active} but will only activate\n * when the exact target state used in the `ui-sref` is active; no child states.\n *\n */\n$StateRefActiveDirective.$inject = ['$state', '$stateParams', '$interpolate'];\nfunction $StateRefActiveDirective($state, $stateParams, $interpolate) {\n  return  {\n    restrict: \"A\",\n    controller: ['$scope', '$element', '$attrs', '$timeout', function ($scope, $element, $attrs, $timeout) {\n      var states = [], activeClasses = {}, activeEqClass, uiSrefActive;\n\n      // There probably isn't much point in $observing this\n      // uiSrefActive and uiSrefActiveEq share the same directive object with some\n      // slight difference in logic routing\n      activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);\n\n      try {\n        uiSrefActive = $scope.$eval($attrs.uiSrefActive);\n      } catch (e) {\n        // Do nothing. uiSrefActive is not a valid expression.\n        // Fall back to using $interpolate below\n      }\n      uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);\n      if (isObject(uiSrefActive)) {\n        forEach(uiSrefActive, function(stateOrName, activeClass) {\n          if (isString(stateOrName)) {\n            var ref = parseStateRef(stateOrName, $state.current.name);\n            addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);\n          }\n        });\n      }\n\n      // Allow uiSref to communicate with uiSrefActive[Equals]\n      this.$$addStateInfo = function (newState, newParams) {\n        // we already got an explicit state provided by ui-sref-active, so we\n        // shadow the one that comes from ui-sref\n        if (isObject(uiSrefActive) && states.length > 0) {\n          return;\n        }\n        var deregister = addState(newState, newParams, uiSrefActive);\n        update();\n        return deregister;\n      };\n\n      $scope.$on('$stateChangeSuccess', update);\n\n      function addState(stateName, stateParams, activeClass) {\n        var state = $state.get(stateName, stateContext($element));\n        var stateHash = createStateHash(stateName, stateParams);\n\n        var stateInfo = {\n          state: state || { name: stateName },\n          params: stateParams,\n          hash: stateHash\n        };\n\n        states.push(stateInfo);\n        activeClasses[stateHash] = activeClass;\n\n        return function removeState() {\n          var idx = states.indexOf(stateInfo);\n          if (idx !== -1) states.splice(idx, 1);\n        };\n      }\n\n      /**\n       * @param {string} state\n       * @param {Object|string} [params]\n       * @return {string}\n       */\n      function createStateHash(state, params) {\n        if (!isString(state)) {\n          throw new Error('state should be a string');\n        }\n        if (isObject(params)) {\n          return state + toJson(params);\n        }\n        params = $scope.$eval(params);\n        if (isObject(params)) {\n          return state + toJson(params);\n        }\n        return state;\n      }\n\n      // Update route state\n      function update() {\n        for (var i = 0; i < states.length; i++) {\n          if (anyMatch(states[i].state, states[i].params)) {\n            addClass($element, activeClasses[states[i].hash]);\n          } else {\n            removeClass($element, activeClasses[states[i].hash]);\n          }\n\n          if (exactMatch(states[i].state, states[i].params)) {\n            addClass($element, activeEqClass);\n          } else {\n            removeClass($element, activeEqClass);\n          }\n        }\n      }\n\n      function addClass(el, className) { $timeout(function () { el.addClass(className); }); }\n      function removeClass(el, className) { el.removeClass(className); }\n      function anyMatch(state, params) { return $state.includes(state.name, params); }\n      function exactMatch(state, params) { return $state.is(state.name, params); }\n\n      update();\n    }]\n  };\n}\n\nangular.module('ui.router.state')\n  .directive('uiSref', $StateRefDirective)\n  .directive('uiSrefActive', $StateRefActiveDirective)\n  .directive('uiSrefActiveEq', $StateRefActiveDirective)\n  .directive('uiState', $StateRefDynamicDirective);\n\n/**\n * @ngdoc filter\n * @name ui.router.state.filter:isState\n *\n * @requires ui.router.state.$state\n *\n * @description\n * Translates to {@link ui.router.state.$state#methods_is $state.is(\"stateName\")}.\n */\n$IsStateFilter.$inject = ['$state'];\nfunction $IsStateFilter($state) {\n  var isFilter = function (state, params) {\n    return $state.is(state, params);\n  };\n  isFilter.$stateful = true;\n  return isFilter;\n}\n\n/**\n * @ngdoc filter\n * @name ui.router.state.filter:includedByState\n *\n * @requires ui.router.state.$state\n *\n * @description\n * Translates to {@link ui.router.state.$state#methods_includes $state.includes('fullOrPartialStateName')}.\n */\n$IncludedByStateFilter.$inject = ['$state'];\nfunction $IncludedByStateFilter($state) {\n  var includesFilter = function (state, params, options) {\n    return $state.includes(state, params, options);\n  };\n  includesFilter.$stateful = true;\n  return  includesFilter;\n}\n\nangular.module('ui.router.state')\n  .filter('isState', $IsStateFilter)\n  .filter('includedByState', $IncludedByStateFilter);\n})(window, window.angular);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-router/release/angular-ui-router.js\n ** module id = 178\n ** module chunks = 2\n **/","module.exports = global[\"SVGMorpheus\"] = require(\"-!/srv/blessing/public/node_modules/exports-loader/index.js?SVGMorpheus!/srv/blessing/public/node_modules/svg-morpheus/compile/unminified/svg-morpheus.js\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/expose-loader?SVGMorpheus!./~/exports-loader?SVGMorpheus!./~/svg-morpheus/compile/unminified/svg-morpheus.js\n ** module id = 179\n ** module chunks = 2\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../node_modules/css-loader/index.js!./../../../node_modules/sass-loader/index.js!./index.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js!./../../../node_modules/sass-loader/index.js!./index.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js!./../../../node_modules/sass-loader/index.js!./index.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pages/home/index.scss\n ** module id = 193\n ** module chunks = 2\n **/","import mdl from './module';\n\nimport './section.provider';\nimport './content.directive';\nimport './child.directive';\nimport './mdcolor.directive';\nimport './search.directive';\nimport './status.factory';\n\nexport default mdl;\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/sidemenu/index.ts\n **/","import mdl from './module';\nimport './toolbar.service';\n\nexport default mdl;\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/toolbar/index.ts\n **/","/**\n * Created by NICK on 16/8/9.\n */\n\nimport {HomeController} from './ctls/home.controller';\nimport {SidenavLeftController} from './ctls/sidenavl.controller';\nimport {SidenavRightController} from './ctls/sidenavr.controller';\nimport {ContentController} from './ctls/content.controller';\n\nexport const initRouter = ($urlRouterProvider, $stateProvider) => {\n    // 设置默认路由\n    $urlRouterProvider.otherwise(($injector) => {\n        let $state = $injector.get(\"$state\");\n        $state.go(\"home\");\n    });\n    // 路由规则\n    $stateProvider.state(\"home\", {\n        url: \"/\",\n        data: {\n            permissions: {\n                except: [\"anonymous\"],\n                only: [\"user\"]\n            }\n        },\n        views: {\n            \"\": {\n                controller: HomeController,\n                controllerAs: \"homeCtl\",\n                template: require(\"./tpls/home.template.jade\")(),\n            },\n            \"sidenavLeft@home\": {\n                controller: SidenavLeftController,\n                controllerAs: \"sideLeftCtl\",\n                template: require(\"./tpls/sidenavl.template.jade\")(),\n            },\n            // \"sidenavRight@home\": {\n            //     controller: SidenavRightController,\n            //     controllerAs: \"sideRightCtl\",\n            //     template: require(\"./tpls/sidenavr.template.jade\")(),\n            // },\n            \"content@home\": {\n                controller: ContentController,\n                controllerAs: \"contentCtl\",\n                template: require(\"./tpls/content.template.jade\")(),\n            }\n        }\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/home/router.ts\n **/","/**\n * Created by NICK on 16/8/12.\n */\n\nimport * as _ from \"lodash\";\nimport * as ngMaterialIcons from 'angular-material-icons';\nimport * as ngMaterial from 'angular-material';\n\nclass Service {\n    public static _name: string = \"svgUtils\";\n\n    public static provider: Array<string | Function> = [\"$q\", \"$templateRequest\", \"$templateCache\", \"ngMdIconService\", ($q: ng.IQService, $templateRequest, $templateCache, ngMdIconService: ngMdIcon.service) => {\n        class Service {\n            /**\n             * 获取所有的shapes\n             * @returns {any}\n             */\n            getAllIcons() {\n                return ngMdIconService.getShapes();\n            }\n\n            /**\n             * 载入svg文件\n             * @param url\n             */\n            loadSvgUrl(url: string) {\n                let defer = $q.defer();\n                let viewBox;\n\n                if ($templateCache.get(url)) {\n                    defer.resolve();\n                } else {\n                    $templateRequest(url, true).then((response)=> {\n                        let svg = angular.element('<div>').append(response).find('svg')[0];\n\n                        viewBox = svg.attributes[\"viewBox\"];\n                        _.each(svg.querySelectorAll(\"[id]\"), (g)=> {\n                            ngMdIconService.addShape(g.id, g.innerHTML);\n                            if (viewBox && viewBox.value) {\n                                ngMdIconService.addViewBox(g.id, viewBox.value);\n                            }\n                        });\n                        defer.resolve();\n                    }, defer.resolve);\n                }\n\n                return defer.promise;\n            }\n        }\n\n        return new Service();\n    }];\n}\n\nconst module = angular.module(\"mdSvgModule\", [ngMaterialIcons, ngMaterial]);\n\nmodule.service(Service._name, Service.provider);\n\nexport default `${module.name}`;\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/svg.service.ts\n **/","/**************************************************************************\n* AngularJS-nvD3, v1.0.9; MIT\n* http://krispo.github.io/angular-nvd3\n**************************************************************************/\n(function(window){\n\n    'use strict';\n    var nv = window.nv;\n\n    // Node.js or CommonJS\n    if (typeof(exports) !== 'undefined') {\n        /* jshint -W020 */\n        nv = require('nvd3');\n        /* jshint +W020 */\n    }\n\n    angular.module('nvd3', [])\n\n        .directive('nvd3', ['nvd3Utils', function(nvd3Utils){\n            return {\n                restrict: 'AE',\n                scope: {\n                    data: '=',      //chart data, [required]\n                    options: '=',   //chart options, according to nvd3 core api, [required]\n                    api: '=?',      //directive global api, [optional]\n                    events: '=?',   //global events that directive would subscribe to, [optional]\n                    config: '=?',    //global directive configuration, [optional]\n                    onReady: '&?' //callback function that is called with internal scope when directive is created [optional]\n                },\n                link: function(scope, element, attrs){\n                    var defaultConfig = {\n                        extended: false,\n                        visible: true,\n                        disabled: false,\n                        refreshDataOnly: true,\n                        deepWatchOptions: true,\n                        deepWatchData: true,\n                        deepWatchDataDepth: 2, // 0 - by reference (cheap), 1 - by collection item (the middle), 2 - by value (expensive)\n                        debounce: 10, // default 10ms, time silence to prevent refresh while multiple options changes at a time\n                        debounceImmediate: true // immediate flag for debounce function\n                    };\n\n                    //flag indicates if directive and chart is ready\n                    scope.isReady = false;\n\n                    //basic directive configuration\n                    scope._config = angular.extend(defaultConfig, scope.config);\n\n                    //directive global api\n                    scope.api = {\n                        // Fully refresh directive\n                        refresh: function(){\n                            scope.api.updateWithOptions();\n                            scope.isReady = true;\n                        },\n\n                        // Fully refresh directive with specified timeout\n                        refreshWithTimeout: function(t){\n                            setTimeout(function(){\n                                scope.api.refresh();\n                            }, t);\n                        },\n\n                        // Update chart layout (for example if container is resized)\n                        update: function() {\n                            if (scope.chart && scope.svg) {\n                                if (scope.options.chart.type === 'sunburstChart') {\n                                    scope.svg.datum(angular.copy(scope.data)).call(scope.chart);\n                                } else {\n                                    scope.svg.datum(scope.data).call(scope.chart);\n                                }\n                            } else {\n                                scope.api.refresh();\n                            }\n                        },\n\n                        // Update chart layout with specified timeout\n                        updateWithTimeout: function(t){\n                            setTimeout(function(){\n                                scope.api.update();\n                            }, t);\n                        },\n\n                        // Update chart with new options\n                        updateWithOptions: function(options){\n                            // set options\n                            if (!arguments.length) {\n                                options = scope.options;\n                            } else {\n                                scope.options = options;\n\n                                // return if options $watch is enabled\n                                if (scope._config.deepWatchOptions && !scope._config.disabled) return;\n                            }\n\n                            // Clearing\n                            scope.api.clearElement();\n\n                            // Exit if options are not yet bound\n                            if (angular.isDefined(options) === false) return;\n\n                            // Exit if chart is hidden\n                            if (!scope._config.visible) return;\n\n                            // Initialize chart with specific type\n                            scope.chart = nv.models[options.chart.type]();\n\n                            // Generate random chart ID\n                            scope.chart.id = Math.random().toString(36).substr(2, 15);\n\n                            angular.forEach(scope.chart, function(value, key){\n                                if (key[0] === '_');\n                                else if ([\n                                        'clearHighlights',\n                                        'highlightPoint',\n                                        'id',\n                                        'options',\n                                        'resizeHandler',\n                                        'state',\n                                        'open',\n                                        'close',\n                                        'tooltipContent'\n                                    ].indexOf(key) >= 0);\n\n                                else if (key === 'dispatch') {\n                                    if (options.chart[key] === undefined || options.chart[key] === null) {\n                                        if (scope._config.extended) options.chart[key] = {};\n                                    }\n                                    configureEvents(scope.chart[key], options.chart[key]);\n                                }\n\n                                else if ([\n                                        'bars',\n                                        'bars1',\n                                        'bars2',\n                                        'boxplot',\n                                        'bullet',\n                                        'controls',\n                                        'discretebar',\n                                        'distX',\n                                        'distY',\n                                        'focus',\n                                        'interactiveLayer',\n                                        'legend',\n                                        'lines',\n                                        'lines1',\n                                        'lines2',\n                                        'multibar',\n                                        'pie',\n                                        'scatter',\n                                        'scatters1',\n                                        'scatters2',\n                                        'sparkline',\n                                        'stack1',\n                                        'stack2',\n                                        'sunburst',\n                                        'tooltip',\n                                        'x2Axis',\n                                        'xAxis',\n                                        'y1Axis',\n                                        'y2Axis',\n                                        'y3Axis',\n                                        'y4Axis',\n                                        'yAxis',\n                                        'yAxis1',\n                                        'yAxis2'\n                                    ].indexOf(key) >= 0 ||\n                                        // stacked is a component for stackedAreaChart, but a boolean for multiBarChart and multiBarHorizontalChart\n                                    (key === 'stacked' && options.chart.type === 'stackedAreaChart')) {\n                                    if (options.chart[key] === undefined || options.chart[key] === null) {\n                                        if (scope._config.extended) options.chart[key] = {};\n                                    }\n                                    configure(scope.chart[key], options.chart[key], options.chart.type);\n                                }\n\n                                //TODO: need to fix bug in nvd3\n                                else if ((key === 'focusHeight') && options.chart.type === 'lineChart');\n                                else if ((key === 'focusHeight') && options.chart.type === 'lineWithFocusChart');\n                                else if ((key === 'xTickFormat' || key === 'yTickFormat') && options.chart.type === 'lineWithFocusChart');\n                                else if ((key === 'tooltips') && options.chart.type === 'boxPlotChart');\n                                else if ((key === 'tooltipXContent' || key === 'tooltipYContent') && options.chart.type === 'scatterChart');\n                                else if ((key === 'x' || key === 'y') && options.chart.type === 'forceDirectedGraph');\n\n                                else if (options.chart[key] === undefined || options.chart[key] === null){\n                                    if (scope._config.extended) {\n                                        if (key==='barColor')\n                                            options.chart[key] = value()();\n                                        else\n                                            options.chart[key] = value();\n                                    }\n                                }\n\n                                else scope.chart[key](options.chart[key]);\n                            });\n\n                            // Update with data\n                            scope.api.updateWithData();\n\n                            // Configure wrappers\n                            if (options['title'] || scope._config.extended) configureWrapper('title');\n                            if (options['subtitle'] || scope._config.extended) configureWrapper('subtitle');\n                            if (options['caption'] || scope._config.extended) configureWrapper('caption');\n\n\n                            // Configure styles\n                            if (options['styles'] || scope._config.extended) configureStyles();\n\n                            nv.addGraph(function() {\n                                if (!scope.chart) return;\n\n                                // Remove resize handler. Due to async execution should be placed here, not in the clearElement\n                                if (scope.chart.resizeHandler) scope.chart.resizeHandler.clear();\n\n                                // Update the chart when window resizes\n                                scope.chart.resizeHandler = nv.utils.windowResize(function() {\n                                    scope.chart && scope.chart.update && scope.chart.update();\n                                });\n\n                                /// Zoom feature\n                                if (options.chart.zoom !== undefined && [\n                                        'scatterChart',\n                                        'lineChart',\n                                        'candlestickBarChart',\n                                        'cumulativeLineChart',\n                                        'historicalBarChart',\n                                        'ohlcBarChart',\n                                        'stackedAreaChart'\n                                    ].indexOf(options.chart.type) > -1) {\n                                    nvd3Utils.zoom(scope, options);\n                                }\n\n                                return scope.chart;\n                            }, options.chart['callback']);\n                        },\n\n                        // Update chart with new data\n                        updateWithData: function (data){\n                            // set data\n                            if (!arguments.length) {\n                                if (scope.options.chart.type === 'sunburstChart') {\n                                    data = angular.copy(scope.data);\n                                } else {\n                                    data = scope.data;\n                                }\n                            } else {\n                                scope.data = data;\n\n                                // return if data $watch is enabled\n                                if (scope._config.deepWatchData && !scope._config.disabled) return;\n                            }\n\n                            if (data) {\n                                // remove whole svg element with old data\n                                d3.select(element[0]).select('svg').remove();\n\n                                var h, w;\n\n                                // Select the current element to add <svg> element and to render the chart in\n                                scope.svg = d3.select(element[0]).insert('svg', '.caption');\n                                if (h = scope.options.chart.height) {\n                                    if (!isNaN(+h)) h += 'px'; //check if height is number\n                                    scope.svg.attr('height', h).style({height: h});\n                                }\n                                if (w = scope.options.chart.width) {\n                                    if (!isNaN(+w)) w += 'px'; //check if width is number\n                                    scope.svg.attr('width', w).style({width: w});\n                                } else {\n                                    scope.svg.attr('width', '100%').style({width: '100%'});\n                                }\n\n                                scope.svg.datum(data).call(scope.chart);\n\n                                // update zooming if exists\n                                if (scope.chart && scope.chart.zoomRender) scope.chart.zoomRender();\n                            }\n                        },\n\n                        // Fully clear directive element\n                        clearElement: function (){\n                            element.find('.title').remove();\n                            element.find('.subtitle').remove();\n                            element.find('.caption').remove();\n                            element.empty();\n\n                            // remove tooltip if exists\n                            if (scope.chart && scope.chart.tooltip && scope.chart.tooltip.id) {\n                                d3.select('#' + scope.chart.tooltip.id()).remove();\n                            }\n\n                            // To be compatible with old nvd3 (v1.7.1)\n                            if (nv.graphs && scope.chart) {\n                                for (var i = nv.graphs.length - 1; i >= 0; i--) {\n                                    if (nv.graphs[i] && (nv.graphs[i].id === scope.chart.id)) {\n                                        nv.graphs.splice(i, 1);\n                                    }\n                                }\n                            }\n                            if (nv.tooltip && nv.tooltip.cleanup) {\n                                nv.tooltip.cleanup();\n                            }\n                            if (scope.chart && scope.chart.resizeHandler) scope.chart.resizeHandler.clear();\n                            scope.chart = null;\n                        },\n\n                        // Get full directive scope\n                        getScope: function(){ return scope; },\n\n                        // Get directive element\n                        getElement: function(){ return element; }\n                    };\n\n                    // Configure the chart model with the passed options\n                    function configure(chart, options, chartType){\n                        if (chart && options){\n                            angular.forEach(chart, function(value, key){\n                                if (key[0] === '_');\n                                else if (key === 'dispatch') {\n                                    if (options[key] === undefined || options[key] === null) {\n                                        if (scope._config.extended) options[key] = {};\n                                    }\n                                    configureEvents(value, options[key]);\n                                }\n                                else if (key === 'tooltip') {\n                                    if (options[key] === undefined || options[key] === null) {\n                                        if (scope._config.extended) options[key] = {};\n                                    }\n                                    configure(chart[key], options[key], chartType);\n                                }\n                                else if (key === 'contentGenerator') {\n                                    if (options[key]) chart[key](options[key]);\n                                }\n                                else if ([\n                                        'axis',\n                                        'clearHighlights',\n                                        'defined',\n                                        'highlightPoint',\n                                        'nvPointerEventsClass',\n                                        'options',\n                                        'rangeBand',\n                                        'rangeBands',\n                                        'scatter',\n                                        'open',\n                                        'close',\n                                        'node'\n                                    ].indexOf(key) === -1) {\n                                    if (options[key] === undefined || options[key] === null){\n                                        if (scope._config.extended) options[key] = value();\n                                    }\n                                    else chart[key](options[key]);\n                                }\n                            });\n                        }\n                    }\n\n                    // Subscribe to the chart events (contained in 'dispatch')\n                    // and pass eventHandler functions in the 'options' parameter\n                    function configureEvents(dispatch, options){\n                        if (dispatch && options){\n                            angular.forEach(dispatch, function(value, key){\n                                if (options[key] === undefined || options[key] === null){\n                                    if (scope._config.extended) options[key] = value.on;\n                                }\n                                else dispatch.on(key + '._', options[key]);\n                            });\n                        }\n                    }\n\n                    // Configure 'title', 'subtitle', 'caption'.\n                    // nvd3 has no sufficient models for it yet.\n                    function configureWrapper(name){\n                        var _ = nvd3Utils.deepExtend(defaultWrapper(name), scope.options[name] || {});\n\n                        if (scope._config.extended) scope.options[name] = _;\n\n                        var wrapElement = angular.element('<div></div>').html(_['html'] || '')\n                            .addClass(name).addClass(_.className)\n                            .removeAttr('style')\n                            .css(_.css);\n\n                        if (!_['html']) wrapElement.text(_.text);\n\n                        if (_.enable) {\n                            if (name === 'title') element.prepend(wrapElement);\n                            else if (name === 'subtitle') angular.element(element[0].querySelector('.title')).after(wrapElement);\n                            else if (name === 'caption') element.append(wrapElement);\n                        }\n                    }\n\n                    // Add some styles to the whole directive element\n                    function configureStyles(){\n                        var _ = nvd3Utils.deepExtend(defaultStyles(), scope.options['styles'] || {});\n\n                        if (scope._config.extended) scope.options['styles'] = _;\n\n                        angular.forEach(_.classes, function(value, key){\n                            value ? element.addClass(key) : element.removeClass(key);\n                        });\n\n                        element.removeAttr('style').css(_.css);\n                    }\n\n                    // Default values for 'title', 'subtitle', 'caption'\n                    function defaultWrapper(_){\n                        switch (_){\n                            case 'title': return {\n                                enable: false,\n                                text: 'Write Your Title',\n                                className: 'h4',\n                                css: {\n                                    width: scope.options.chart.width + 'px',\n                                    textAlign: 'center'\n                                }\n                            };\n                            case 'subtitle': return {\n                                enable: false,\n                                text: 'Write Your Subtitle',\n                                css: {\n                                    width: scope.options.chart.width + 'px',\n                                    textAlign: 'center'\n                                }\n                            };\n                            case 'caption': return {\n                                enable: false,\n                                text: 'Figure 1. Write Your Caption text.',\n                                css: {\n                                    width: scope.options.chart.width + 'px',\n                                    textAlign: 'center'\n                                }\n                            };\n                        }\n                    }\n\n                    // Default values for styles\n                    function defaultStyles(){\n                        return {\n                            classes: {\n                                'with-3d-shadow': true,\n                                'with-transitions': true,\n                                'gallery': false\n                            },\n                            css: {}\n                        };\n                    }\n\n                    /* Event Handling */\n                    // Watching on options changing\n                    if (scope._config.deepWatchOptions) {\n                        scope.$watch('options', nvd3Utils.debounce(function(newOptions){\n                            if (!scope._config.disabled) scope.api.refresh();\n                        }, scope._config.debounce, scope._config.debounceImmediate), true);\n                    }\n\n                    // Watching on data changing\n                    function dataWatchFn(newData, oldData) {\n                        if (newData !== oldData){\n                            if (!scope._config.disabled) {\n                                scope._config.refreshDataOnly ? scope.api.update() : scope.api.refresh(); // if wanted to refresh data only, use update method, otherwise use full refresh.\n                            }\n                        }\n                    }\n                    if (scope._config.deepWatchData) {\n                        if (scope._config.deepWatchDataDepth === 1) {\n                            scope.$watchCollection('data', dataWatchFn);\n                        } else {\n                            scope.$watch('data', dataWatchFn, scope._config.deepWatchDataDepth === 2);\n                        }\n                    }\n\n                    // Watching on config changing\n                    scope.$watch('config', function(newConfig, oldConfig){\n                        if (newConfig !== oldConfig){\n                            scope._config = angular.extend(defaultConfig, newConfig);\n                            scope.api.refresh();\n                        }\n                    }, true);\n\n                    // Refresh chart first time if deepWatchOptions and deepWatchData are false\n                    if (!scope._config.deepWatchOptions && !scope._config.deepWatchData) {\n                        scope.api.refresh();\n                    }\n\n                    //subscribe on global events\n                    angular.forEach(scope.events, function(eventHandler, event){\n                        scope.$on(event, function(e, args){\n                            return eventHandler(e, scope, args);\n                        });\n                    });\n\n                    // remove completely when directive is destroyed\n                    element.on('$destroy', function () {\n                        scope.api.clearElement();\n                    });\n\n                    // trigger onReady callback if directive is ready\n                    scope.$watch('isReady', function(isReady){\n                        if (isReady) {\n                            if (scope.onReady && typeof scope.onReady() === 'function') scope.onReady()(scope, element);\n                        }\n                    });\n                }\n            };\n        }])\n\n        .factory('nvd3Utils', function(){\n            return {\n                debounce: function(func, wait, immediate) {\n                    var timeout;\n                    return function() {\n                        var context = this, args = arguments;\n                        var later = function() {\n                            timeout = null;\n                            if (!immediate) func.apply(context, args);\n                        };\n                        var callNow = immediate && !timeout;\n                        clearTimeout(timeout);\n                        timeout = setTimeout(later, wait);\n                        if (callNow) func.apply(context, args);\n                    };\n                },\n                deepExtend: function(dst){\n                    var me = this;\n                    angular.forEach(arguments, function(obj) {\n                        if (obj !== dst) {\n                            angular.forEach(obj, function(value, key) {\n                                if (dst[key] && dst[key].constructor && dst[key].constructor === Object) {\n                                    me.deepExtend(dst[key], value);\n                                } else {\n                                    dst[key] = value;\n                                }\n                            });\n                        }\n                    });\n                    return dst;\n                },\n                zoom: function(scope, options) {\n                    var zoom = options.chart.zoom;\n\n                    // check if zoom enabled\n                    var enabled = (typeof zoom.enabled === 'undefined' || zoom.enabled === null) ? true : zoom.enabled;\n                    if (!enabled) return;\n\n                    var xScale = scope.chart.xAxis.scale()\n                        , yScale = scope.chart.yAxis.scale()\n                        , xDomain = scope.chart.xDomain || xScale.domain\n                        , yDomain = scope.chart.yDomain || yScale.domain\n                        , x_boundary = xScale.domain().slice()\n                        , y_boundary = yScale.domain().slice()\n\n                    // initialize zoom options\n                        , scale = zoom.scale || 1\n                        , translate = zoom.translate || [0, 0]\n                        , scaleExtent = zoom.scaleExtent || [1, 10]\n                        , useFixedDomain = zoom.useFixedDomain || false\n                        , useNiceScale = zoom.useNiceScale || false\n                        , horizontalOff = zoom.horizontalOff || false\n                        , verticalOff = zoom.verticalOff || false\n                        , unzoomEventType = zoom.unzoomEventType || 'dblclick.zoom'\n\n                    // auxiliary functions\n                        , fixDomain\n                        , d3zoom\n                        , zoomed\n                        , unzoomed\n                        , zoomend\n                        ;\n\n                    // ensure nice axis\n                    if (useNiceScale) {\n                        xScale.nice();\n                        yScale.nice();\n                    }\n\n                    // fix domain\n                    fixDomain = function (domain, boundary) {\n                        domain[0] = Math.min(Math.max(domain[0], boundary[0]), boundary[1] - boundary[1] / scaleExtent[1]);\n                        domain[1] = Math.max(boundary[0] + boundary[1] / scaleExtent[1], Math.min(domain[1], boundary[1]));\n                        return domain;\n                    };\n\n                    // zoom event handler\n                    zoomed = function () {\n                        if (zoom.zoomed !== undefined) {\n                            var domains = zoom.zoomed(xScale.domain(), yScale.domain());\n                            if (!horizontalOff) xDomain([domains.x1, domains.x2]);\n                            if (!verticalOff) yDomain([domains.y1, domains.y2]);\n                        } else {\n                            if (!horizontalOff) xDomain(useFixedDomain ? fixDomain(xScale.domain(), x_boundary) : xScale.domain());\n                            if (!verticalOff) yDomain(useFixedDomain ? fixDomain(yScale.domain(), y_boundary) : yScale.domain());\n                        }\n                        if (scope.chart) scope.chart.update();\n                    };\n\n                    // unzoomed event handler\n                    unzoomed = function () {\n                        if (zoom.unzoomed !== undefined) {\n                            var domains = zoom.unzoomed(xScale.domain(), yScale.domain());\n                            if (!horizontalOff) xDomain([domains.x1, domains.x2]);\n                            if (!verticalOff) yDomain([domains.y1, domains.y2]);\n                        } else {\n                            if (!horizontalOff) xDomain(x_boundary);\n                            if (!verticalOff) yDomain(y_boundary);\n                        }\n                        d3zoom.scale(scale).translate(translate);\n                        if (scope.chart) scope.chart.update();\n                    };\n\n                    // zoomend event handler\n                    zoomend = function () {\n                        if (zoom.zoomend !== undefined) {\n                            zoom.zoomend();\n                        }\n                    };\n\n                    // create d3 zoom handler\n                    d3zoom = d3.behavior.zoom()\n                        .x(xScale)\n                        .y(yScale)\n                        .scaleExtent(scaleExtent)\n                        .on('zoom', zoomed)\n                        .on('zoomend', zoomend);\n\n                    if (scope.svg) {\n                        scope.svg.call(d3zoom);\n\n                        d3zoom.scale(scale).translate(translate).event(scope.svg);\n\n                        if (unzoomEventType !== 'none') scope.svg.on(unzoomEventType, unzoomed);\n                    }\n\n                    if (scope.chart)\n                        scope.chart.zoomRender = function(){\n                            // reset zoom scale and translate\n                            d3zoom.scale(scale).translate(translate);\n\n                            // update scale\n                            xScale = scope.chart.xAxis.scale();\n                            yScale = scope.chart.yAxis.scale();\n                            xDomain = scope.chart.xDomain || xScale.domain;\n                            yDomain = scope.chart.yDomain || yScale.domain;\n                            x_boundary = xScale.domain().slice();\n                            y_boundary = yScale.domain().slice();\n\n                            // update zoom scale\n                            d3zoom.x(xScale).y(yScale);\n\n                            scope.svg.call(d3zoom);\n\n                            if (unzoomEventType !== 'none') scope.svg.on(unzoomEventType, unzoomed);\n                        };\n                }\n            };\n        });\n})(window);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-nvd3/dist/angular-nvd3.js\n ** module id = 218\n ** module chunks = 2\n **/","exports = module.exports = require(\"./../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".side-menu li,.side-menu ul{padding:0;margin:0}.side-menu ul li button{text-align:left}.side-menu a,.side-menu button{padding:0;margin:0}.side-menu a>md-content,.side-menu button>md-content{padding-left:5px}.side-menu .side-menu-child{position:relative;display:block}.side-menu .side-menu-child a,.side-menu .side-menu-child button{border-radius:0;background:transparent}.side-menu .side-menu-child a:hover>md-content:before,.side-menu .side-menu-child button:hover>md-content:before{display:block}.side-menu .side-menu-child>ul li a,.side-menu .side-menu-child>ul li button{padding-left:25px}.side-menu .side-menu-child>ul li a:before,.side-menu .side-menu-child>ul li button:before{display:none;background-color:transparent;padding-left:20px;content:\\\"\\\";position:absolute;z-index:1;left:0;top:0;bottom:0;border-left:3px solid #e2e2e2}.side-menu .side-menu-child .side-menu-child ul li a,.side-menu .side-menu-child .side-menu-child ul li button{padding-left:50px}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/sass-loader!./src/directives/sidemenu/styles/sidemenu.scss\n ** module id = 231\n ** module chunks = 2\n **/","exports = module.exports = require(\"./../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".logo{height:64px;min-height:64px!important;line-height:64px;margin:5px;padding-left:64px;background:transparent url(\" + require(\"./logo.jpg\") + \") no-repeat 0 0;background-size:contain}.logo.center{background-position:top;height:150px}.gridster .gridster-item{overflow:hidden}.md-no-padding{padding:0}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/sass-loader!./src/pages/home/index.scss\n ** module id = 232\n ** module chunks = 2\n **/","/*!\n * SVG Morpheus v0.3.0\n * https://github.com/alexk111/SVG-Morpheus\n *\n * Copyright (c) 2016 Alex Kaul\n * License: MIT\n *\n * Generated at Saturday, May 7th, 2016, 4:52:57 PM\n */\nvar SVGMorpheus=(function() {\n'use strict';\n\n/*\n * Easing functions\n */\n\nvar easings={};\neasings['circ-in']=function (t) {\n  return -1 * (Math.sqrt(1 - t*t) - 1);\n};\neasings['circ-out']=function (t) {\n  return Math.sqrt(1 - (t=t-1)*t);\n};\neasings['circ-in-out']=function (t) {\n  if ((t/=1/2) < 1) return -1/2 * (Math.sqrt(1 - t*t) - 1);\n  return 1/2 * (Math.sqrt(1 - (t-=2)*t) + 1);\n};\neasings['cubic-in']=function (t) { return t*t*t };\neasings['cubic-out']=function (t) { return (--t)*t*t+1 };\neasings['cubic-in-out']=function (t) { return t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1 };\neasings['elastic-in']=function (t) {\n  var s=1.70158;var p=0;var a=1;\n  if (t==0) return 0;  if (t==1) return 1;  if (!p) p=.3;\n  if (a < Math.abs(1)) { a=1; var s=p/4; }\n  else var s = p/(2*Math.PI) * Math.asin (1/a);\n  return -(a*Math.pow(2,10*(t-=1)) * Math.sin( (t-s)*(2*Math.PI)/p ));\n};\neasings['elastic-out']=function (t) {\n  var s=1.70158;var p=0;var a=1;\n  if (t==0) return 0;  if (t==1) return 1;  if (!p) p=.3;\n  if (a < Math.abs(1)) { a=1; var s=p/4; }\n  else var s = p/(2*Math.PI) * Math.asin (1/a);\n  return a*Math.pow(2,-10*t) * Math.sin( (t-s)*(2*Math.PI)/p ) + 1;\n};\neasings['elastic-in-out']=function (t) {\n  var s=1.70158;var p=0;var a=1;\n  if (t==0) return 0;  if ((t/=1/2)==2) return 1;  if (!p) p=1*(.3*1.5);\n  if (a < Math.abs(1)) { a=1; var s=p/4; }\n  else var s = p/(2*Math.PI) * Math.asin (1/a);\n  if (t < 1) return -.5*(a*Math.pow(2,10*(t-=1)) * Math.sin( (t-s)*(2*Math.PI)/p ));\n  return a*Math.pow(2,-10*(t-=1)) * Math.sin( (t-s)*(2*Math.PI)/p )*.5 + 1;\n};\neasings['expo-in']=function (t) {\n  return (t==0) ? 0 : Math.pow(2, 10 * (t - 1));\n};\neasings['expo-out']=function (t) {\n  return (t==1) ? 1 : 1-Math.pow(2, -10 * t);\n};\neasings['expo-in-out']=function (t) {\n  if (t==0) return 0;\n  if (t==1) return 1;\n  if ((t/=1/2) < 1) return 1/2 * Math.pow(2, 10 * (t - 1));\n  return 1/2 * (-Math.pow(2, -10 * --t) + 2);\n};\neasings['linear']=function (t) { return t };\neasings['quad-in']=function (t) { return t*t };\neasings['quad-out']=function (t) { return t*(2-t) };\neasings['quad-in-out']=function (t) { return t<.5 ? 2*t*t : -1+(4-2*t)*t };\neasings['quart-in']=function (t) { return t*t*t*t };\neasings['quart-out']=function (t) { return 1-(--t)*t*t*t };\neasings['quart-in-out']=function (t) { return t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t };\neasings['quint-in']=function (t) { return t*t*t*t*t };\neasings['quint-out']=function (t) { return 1+(--t)*t*t*t*t };\neasings['quint-in-out']=function (t) { return t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t };\neasings['sine-in']=function (t) {\n  return 1-Math.cos(t * (Math.PI/2));\n};\neasings['sine-out']=function (t) {\n  return Math.sin(t * (Math.PI/2));\n};\neasings['sine-in-out']=function (t) {\n  return 1/2 * (1-Math.cos(Math.PI*t));\n};\n\n\n/*\n * Helper functions\n */\n\nvar _reqAnimFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.oRequestAnimationFrame;\nvar _cancelAnimFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.oCancelAnimationFrame;\n\n// Calculate style\nfunction styleNormCalc(styleNormFrom, styleNormTo, progress) {\n  var i, len, styleNorm={};\n  for(i in styleNormFrom) {\n    switch (i) {\n      case 'fill':\n      case 'stroke':\n        styleNorm[i]=clone(styleNormFrom[i]);\n        styleNorm[i].r=styleNormFrom[i].r+(styleNormTo[i].r-styleNormFrom[i].r)*progress;\n        styleNorm[i].g=styleNormFrom[i].g+(styleNormTo[i].g-styleNormFrom[i].g)*progress;\n        styleNorm[i].b=styleNormFrom[i].b+(styleNormTo[i].b-styleNormFrom[i].b)*progress;\n        styleNorm[i].opacity=styleNormFrom[i].opacity+(styleNormTo[i].opacity-styleNormFrom[i].opacity)*progress;\n        break;\n      case 'opacity':\n      case 'fill-opacity':\n      case 'stroke-opacity':\n      case 'stroke-width':\n        styleNorm[i]=styleNormFrom[i]+(styleNormTo[i]-styleNormFrom[i])*progress;\n        break;\n    }\n  }\n  return styleNorm;\n}\n\nfunction styleNormToString(styleNorm) {\n  var i;\n  var style={};\n  for(i in styleNorm) {\n    switch (i) {\n      case 'fill':\n      case 'stroke':\n        style[i]=rgbToString(styleNorm[i]);\n        break;\n      case 'opacity':\n      case 'fill-opacity':\n      case 'stroke-opacity':\n      case 'stroke-width':\n        style[i]=styleNorm[i];\n        break;\n    }\n  }\n  return style;\n}\n\nfunction styleToNorm(styleFrom, styleTo) {\n  var styleNorm=[{},{}];\n  var i;\n  for(i in styleFrom) {\n    switch(i) {\n      case 'fill':\n      case 'stroke':\n        styleNorm[0][i]=getRGB(styleFrom[i]);\n        if(styleTo[i]===undefined) {\n          styleNorm[1][i]=getRGB(styleFrom[i]);\n          styleNorm[1][i].opacity=0;\n        }\n        break;\n      case 'opacity':\n      case 'fill-opacity':\n      case 'stroke-opacity':\n      case 'stroke-width':\n        styleNorm[0][i]=styleFrom[i];\n        if(styleTo[i]===undefined) {\n          styleNorm[1][i]=1;\n        }\n        break;\n    }\n  }\n  for(i in styleTo) {\n    switch(i) {\n      case 'fill':\n      case 'stroke':\n        styleNorm[1][i]=getRGB(styleTo[i]);\n        if(styleFrom[i]===undefined) {\n          styleNorm[0][i]=getRGB(styleTo[i]);\n          styleNorm[0][i].opacity=0;\n        }\n        break;\n      case 'opacity':\n      case 'fill-opacity':\n      case 'stroke-opacity':\n      case 'stroke-width':\n        styleNorm[1][i]=styleTo[i];\n        if(styleFrom[i]===undefined) {\n          styleNorm[0][i]=1;\n        }\n        break;\n    }\n  }\n  return styleNorm;\n}\n\n// Calculate transform progress\nfunction transCalc(transFrom, transTo, progress) {\n  var res={};\n  for(var i in transFrom) {\n    switch(i) {\n      case 'rotate':\n        res[i]=[0,0,0];\n        for(var j=0;j<3;j++) {\n          res[i][j]=transFrom[i][j]+(transTo[i][j]-transFrom[i][j])*progress;\n        }\n        break;\n    }\n  }\n  return res;\n}\n\nfunction trans2string(trans) {\n  var res='';\n  if(!!trans.rotate) {\n    res+='rotate('+trans.rotate.join(' ')+')';\n  }\n  return res;\n}\n\n// Calculate curve progress\nfunction curveCalc(curveFrom, curveTo, progress) {\n  var curve=[];\n  for(var i=0,len1=curveFrom.length;i<len1;i++) {\n    curve.push([curveFrom[i][0]]);\n    for(var j=1,len2=curveFrom[i].length;j<len2;j++) {\n      curve[i].push(curveFrom[i][j]+(curveTo[i][j]-curveFrom[i][j])*progress);\n    }\n  }\n  return curve;\n}\n\nfunction clone(obj) {\n  var copy;\n\n  // Handle Array\n  if (obj instanceof Array) {\n    copy = [];\n    for (var i = 0, len = obj.length; i < len; i++) {\n      copy[i] = clone(obj[i]);\n    }\n    return copy;\n  }\n\n  // Handle Object\n  if (obj instanceof Object) {\n    copy = {};\n    for (var attr in obj) {\n      if (obj.hasOwnProperty(attr)) {\n        copy[attr] = clone(obj[attr]);\n      }\n    }\n    return copy;\n  }\n\n  return obj;\n}\n\n\n\n/*\n * Useful things from Adobe's Snap.svg adopted to the library needs\n */\n\n/*\n * Paths\n */\n\nvar spaces = \"\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029\";\nvar pathCommand = new RegExp(\"([a-z])[\" + spaces + \",]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\" + spaces + \"]*,?[\" + spaces + \"]*)+)\", \"ig\");\nvar pathValues = new RegExp(\"(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[\" + spaces + \"]*,?[\" + spaces + \"]*\", \"ig\");\n\n// Parses given path string into an array of arrays of path segments\nvar parsePathString = function (pathString) {\n  if (!pathString) {\n    return null;\n  }\n\n  if(typeof pathString === typeof []) {\n    return pathString;\n  } else {\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n\n    String(pathString).replace(pathCommand, function (a, b, c) {\n      var params = [],\n          name = b.toLowerCase();\n      c.replace(pathValues, function (a, b) {\n        b && params.push(+b);\n      });\n      if (name == \"m\" && params.length > 2) {\n        data.push([b].concat(params.splice(0, 2)));\n        name = \"l\";\n        b = b == \"m\" ? \"l\" : \"L\";\n      }\n      if (name == \"o\" && params.length == 1) {\n        data.push([b, params[0]]);\n      }\n      if (name == \"r\") {\n        data.push([b].concat(params));\n      } else while (params.length >= paramCounts[name]) {\n        data.push([b].concat(params.splice(0, paramCounts[name])));\n        if (!paramCounts[name]) {\n          break;\n        }\n      }\n    });\n\n    return data;\n  }\n};\n\n// http://schepers.cc/getting-to-the-point\nvar catmullRom2bezier=function(crp, z) {\n  var d = [];\n  for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n    var p = [\n              {x: +crp[i - 2], y: +crp[i - 1]},\n              {x: +crp[i],     y: +crp[i + 1]},\n              {x: +crp[i + 2], y: +crp[i + 3]},\n              {x: +crp[i + 4], y: +crp[i + 5]}\n            ];\n    if (z) {\n      if (!i) {\n        p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n      } else if (iLen - 4 == i) {\n        p[3] = {x: +crp[0], y: +crp[1]};\n      } else if (iLen - 2 == i) {\n        p[2] = {x: +crp[0], y: +crp[1]};\n        p[3] = {x: +crp[2], y: +crp[3]};\n      }\n    } else {\n      if (iLen - 4 == i) {\n        p[3] = p[2];\n      } else if (!i) {\n        p[0] = {x: +crp[i], y: +crp[i + 1]};\n      }\n    }\n    d.push([\"C\",\n          (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n          (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n          (p[1].x + 6 * p[2].x - p[3].x) / 6,\n          (p[1].y + 6*p[2].y - p[3].y) / 6,\n          p[2].x,\n          p[2].y\n    ]);\n  }\n\n  return d;\n\n};\n\nvar ellipsePath=function(x, y, rx, ry, a) {\n  if (a == null && ry == null) {\n    ry = rx;\n  }\n  x = +x;\n  y = +y;\n  rx = +rx;\n  ry = +ry;\n  if (a != null) {\n    var rad = Math.PI / 180,\n        x1 = x + rx * Math.cos(-ry * rad),\n        x2 = x + rx * Math.cos(-a * rad),\n        y1 = y + rx * Math.sin(-ry * rad),\n        y2 = y + rx * Math.sin(-a * rad),\n        res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n  } else {\n    res = [\n        [\"M\", x, y],\n        [\"m\", 0, -ry],\n        [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n        [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n        [\"z\"]\n    ];\n  }\n  return res;\n};\n\nvar pathToAbsolute=function(pathArray) {\n  pathArray = parsePathString(pathArray);\n\n  if (!pathArray || !pathArray.length) {\n    return [[\"M\", 0, 0]];\n  }\n  var res = [],\n      x = 0,\n      y = 0,\n      mx = 0,\n      my = 0,\n      start = 0,\n      pa0;\n  if (pathArray[0][0] == \"M\") {\n    x = +pathArray[0][1];\n    y = +pathArray[0][2];\n    mx = x;\n    my = y;\n    start++;\n    res[0] = [\"M\", x, y];\n  }\n  var crz = pathArray.length == 3 &&\n      pathArray[0][0] == \"M\" &&\n      pathArray[1][0].toUpperCase() == \"R\" &&\n      pathArray[2][0].toUpperCase() == \"Z\";\n  for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n    res.push(r = []);\n    pa = pathArray[i];\n    pa0 = pa[0];\n    if (pa0 != pa0.toUpperCase()) {\n      r[0] = pa0.toUpperCase();\n      switch (r[0]) {\n        case \"A\":\n          r[1] = pa[1];\n          r[2] = pa[2];\n          r[3] = pa[3];\n          r[4] = pa[4];\n          r[5] = pa[5];\n          r[6] = +pa[6] + x;\n          r[7] = +pa[7] + y;\n          break;\n        case \"V\":\n          r[1] = +pa[1] + y;\n          break;\n        case \"H\":\n          r[1] = +pa[1] + x;\n          break;\n        case \"R\":\n          var dots = [x, y].concat(pa.slice(1));\n          for (var j = 2, jj = dots.length; j < jj; j++) {\n            dots[j] = +dots[j] + x;\n            dots[++j] = +dots[j] + y;\n          }\n          res.pop();\n          res = res.concat(catmullRom2bezier(dots, crz));\n          break;\n        case \"O\":\n          res.pop();\n          dots = ellipsePath(x, y, pa[1], pa[2]);\n          dots.push(dots[0]);\n          res = res.concat(dots);\n          break;\n        case \"U\":\n          res.pop();\n          res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n          r = [\"U\"].concat(res[res.length - 1].slice(-2));\n          break;\n        case \"M\":\n          mx = +pa[1] + x;\n          my = +pa[2] + y;\n        default:\n          for (j = 1, jj = pa.length; j < jj; j++) {\n            r[j] = +pa[j] + ((j % 2) ? x : y);\n          }\n      }\n    } else if (pa0 == \"R\") {\n      dots = [x, y].concat(pa.slice(1));\n      res.pop();\n      res = res.concat(catmullRom2bezier(dots, crz));\n      r = [\"R\"].concat(pa.slice(-2));\n    } else if (pa0 == \"O\") {\n      res.pop();\n      dots = ellipsePath(x, y, pa[1], pa[2]);\n      dots.push(dots[0]);\n      res = res.concat(dots);\n    } else if (pa0 == \"U\") {\n      res.pop();\n      res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n      r = [\"U\"].concat(res[res.length - 1].slice(-2));\n    } else {\n      for (var k = 0, kk = pa.length; k < kk; k++) {\n        r[k] = pa[k];\n      }\n    }\n    pa0 = pa0.toUpperCase();\n    if (pa0 != \"O\") {\n      switch (r[0]) {\n        case \"Z\":\n          x = +mx;\n          y = +my;\n          break;\n        case \"H\":\n          x = r[1];\n          break;\n        case \"V\":\n          y = r[1];\n          break;\n        case \"M\":\n          mx = r[r.length - 2];\n          my = r[r.length - 1];\n        default:\n          x = r[r.length - 2];\n          y = r[r.length - 1];\n      }\n    }\n  }\n\n  return res;\n};\n\nvar l2c = function(x1, y1, x2, y2) {\n  return [x1, y1, x2, y2, x2, y2];\n};\nvar q2c = function(x1, y1, ax, ay, x2, y2) {\n  var _13 = 1 / 3,\n      _23 = 2 / 3;\n  return [\n          _13 * x1 + _23 * ax,\n          _13 * y1 + _23 * ay,\n          _13 * x2 + _23 * ax,\n          _13 * y2 + _23 * ay,\n          x2,\n          y2\n      ];\n};\nvar a2c = function(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n  // for more information of where this math came from visit:\n  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n  var _120 = Math.PI * 120 / 180,\n      rad = Math.PI / 180 * (+angle || 0),\n      res = [],\n      xy,\n      rotate = function (x, y, rad) {\n          var X = x * Math.cos(rad) - y * Math.sin(rad),\n              Y = x * Math.sin(rad) + y * Math.cos(rad);\n          return {x: X, y: Y};\n      };\n  if (!recursive) {\n    xy = rotate(x1, y1, -rad);\n    x1 = xy.x;\n    y1 = xy.y;\n    xy = rotate(x2, y2, -rad);\n    x2 = xy.x;\n    y2 = xy.y;\n    var cos = Math.cos(Math.PI / 180 * angle),\n        sin = Math.sin(Math.PI / 180 * angle),\n        x = (x1 - x2) / 2,\n        y = (y1 - y2) / 2;\n    var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n    if (h > 1) {\n      h = Math.sqrt(h);\n      rx = h * rx;\n      ry = h * ry;\n    }\n    var rx2 = rx * rx,\n        ry2 = ry * ry,\n        k = (large_arc_flag == sweep_flag ? -1 : 1) *\n            Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n        cx = k * rx * y / ry + (x1 + x2) / 2,\n        cy = k * -ry * x / rx + (y1 + y2) / 2,\n        f1 = Math.asin(((y1 - cy) / ry).toFixed(9)),\n        f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\n\n    f1 = x1 < cx ? Math.PI - f1 : f1;\n    f2 = x2 < cx ? Math.PI - f2 : f2;\n    f1 < 0 && (f1 = Math.PI * 2 + f1);\n    f2 < 0 && (f2 = Math.PI * 2 + f2);\n    if (sweep_flag && f1 > f2) {\n      f1 = f1 - Math.PI * 2;\n    }\n    if (!sweep_flag && f2 > f1) {\n      f2 = f2 - Math.PI * 2;\n    }\n  } else {\n    f1 = recursive[0];\n    f2 = recursive[1];\n    cx = recursive[2];\n    cy = recursive[3];\n  }\n  var df = f2 - f1;\n  if (Math.abs(df) > _120) {\n    var f2old = f2,\n        x2old = x2,\n        y2old = y2;\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n    x2 = cx + rx * Math.cos(f2);\n    y2 = cy + ry * Math.sin(f2);\n    res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n  }\n  df = f2 - f1;\n  var c1 = Math.cos(f1),\n      s1 = Math.sin(f1),\n      c2 = Math.cos(f2),\n      s2 = Math.sin(f2),\n      t = Math.tan(df / 4),\n      hx = 4 / 3 * rx * t,\n      hy = 4 / 3 * ry * t,\n      m1 = [x1, y1],\n      m2 = [x1 + hx * s1, y1 - hy * c1],\n      m3 = [x2 + hx * s2, y2 - hy * c2],\n      m4 = [x2, y2];\n  m2[0] = 2 * m1[0] - m2[0];\n  m2[1] = 2 * m1[1] - m2[1];\n  if (recursive) {\n    return [m2, m3, m4].concat(res);\n  } else {\n    res = [m2, m3, m4].concat(res).join().split(\",\");\n    var newres = [];\n    for (var i = 0, ii = res.length; i < ii; i++) {\n      newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n    }\n    return newres;\n  }\n};\n\nvar path2curve=function(path, path2) {\n  var p = pathToAbsolute(path),\n      p2 = path2 && pathToAbsolute(path2),\n      attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n      attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n      processPath = function (path, d, pcom) {\n        var nx, ny;\n        if (!path) {\n          return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n        }\n        !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n        switch (path[0]) {\n          case \"M\":\n            d.X = path[1];\n            d.Y = path[2];\n            break;\n          case \"A\":\n            path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n            break;\n          case \"S\":\n            if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n              nx = d.x * 2 - d.bx;          // And reflect the previous\n              ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n            }\n            else {                            // or some else or nothing\n              nx = d.x;\n              ny = d.y;\n            }\n            path = [\"C\", nx, ny].concat(path.slice(1));\n            break;\n          case \"T\":\n            if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n              d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n              d.qy = d.y * 2 - d.qy;        // to case \"S\".\n            }\n            else {                            // or something else or nothing\n              d.qx = d.x;\n              d.qy = d.y;\n            }\n            path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n            break;\n          case \"Q\":\n            d.qx = path[1];\n            d.qy = path[2];\n            path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n            break;\n          case \"L\":\n            path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n            break;\n          case \"H\":\n            path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n            break;\n          case \"V\":\n            path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n            break;\n          case \"Z\":\n            path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n            break;\n        }\n        return path;\n      },\n      fixArc = function (pp, i) {\n        if (pp[i].length > 7) {\n          pp[i].shift();\n          var pi = pp[i];\n          while (pi.length) {\n            pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n            p2 && (pcoms2[i] = \"A\"); // the same as above\n            pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n          }\n          pp.splice(i, 1);\n          ii = Math.max(p.length, p2 && p2.length || 0);\n        }\n      },\n      fixM = function (path1, path2, a1, a2, i) {\n        if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n          path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n          a1.bx = 0;\n          a1.by = 0;\n          a1.x = path1[i][1];\n          a1.y = path1[i][2];\n          ii = Math.max(p.length, p2 && p2.length || 0);\n        }\n      },\n      pcoms1 = [], // path commands of original path p\n      pcoms2 = [], // path commands of original path p2\n      pfirst = \"\", // temporary holder for original path command\n      pcom = \"\"; // holder for previous path command of original path\n  for (var i = 0, ii = Math.max(p.length, p2 && p2.length || 0); i < ii; i++) {\n    p[i] && (pfirst = p[i][0]); // save current path command\n\n    if (pfirst != \"C\") { // C is not saved yet, because it may be result of conversion\n      pcoms1[i] = pfirst; // Save current path command\n      i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n    }\n    p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n    if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n    // which may produce multiple C:s\n    // so we have to make sure that C is also C in original path\n\n    fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n    if (p2) { // the same procedures is done to p2\n      p2[i] && (pfirst = p2[i][0]);\n      if (pfirst != \"C\") {\n        pcoms2[i] = pfirst;\n        i && (pcom = pcoms2[i - 1]);\n      }\n      p2[i] = processPath(p2[i], attrs2, pcom);\n\n      if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n        pcoms2[i] = \"C\";\n      }\n\n      fixArc(p2, i);\n    }\n    fixM(p, p2, attrs, attrs2, i);\n    fixM(p2, p, attrs2, attrs, i);\n    var seg = p[i],\n        seg2 = p2 && p2[i],\n        seglen = seg.length,\n        seg2len = p2 && seg2.length;\n    attrs.x = seg[seglen - 2];\n    attrs.y = seg[seglen - 1];\n    attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;\n    attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;\n    attrs2.bx = p2 && (parseFloat(seg2[seg2len - 4]) || attrs2.x);\n    attrs2.by = p2 && (parseFloat(seg2[seg2len - 3]) || attrs2.y);\n    attrs2.x = p2 && seg2[seg2len - 2];\n    attrs2.y = p2 && seg2[seg2len - 1];\n  }\n\n  return p2 ? [p, p2] : p;\n};\n\nvar box=function(x, y, width, height) {\n  if (x == null) {\n    x = y = width = height = 0;\n  }\n  if (y == null) {\n    y = x.y;\n    width = x.width;\n    height = x.height;\n    x = x.x;\n  }\n  return {\n    x: x,\n    y: y,\n    w: width,\n    h: height,\n    cx: x + width / 2,\n    cy: y + height / 2\n  };\n};\n\n// Returns bounding box of cubic bezier curve.\n// Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n// Original version: NISHIO Hirokazu\n// Modifications: https://github.com/timo22345\nvar curveDim=function(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var tvalues = [],\n      bounds = [[], []],\n      a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n  for (var i = 0; i < 2; ++i) {\n    if (i == 0) {\n      b = 6 * x0 - 12 * x1 + 6 * x2;\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n      c = 3 * x1 - 3 * x0;\n    } else {\n      b = 6 * y0 - 12 * y1 + 6 * y2;\n      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n      c = 3 * y1 - 3 * y0;\n    }\n    if (Math.abs(a) < 1e-12) {\n      if (Math.abs(b) < 1e-12) {\n        continue;\n      }\n      t = -c / b;\n      if (0 < t && t < 1) {\n        tvalues.push(t);\n      }\n      continue;\n    }\n    b2ac = b * b - 4 * c * a;\n    sqrtb2ac = Math.sqrt(b2ac);\n    if (b2ac < 0) {\n      continue;\n    }\n    t1 = (-b + sqrtb2ac) / (2 * a);\n    if (0 < t1 && t1 < 1) {\n      tvalues.push(t1);\n    }\n    t2 = (-b - sqrtb2ac) / (2 * a);\n    if (0 < t2 && t2 < 1) {\n      tvalues.push(t2);\n    }\n  }\n\n  var x, y, j = tvalues.length,\n      jlen = j,\n      mt;\n  while (j--) {\n    t = tvalues[j];\n    mt = 1 - t;\n    bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n    bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n  }\n\n  bounds[0][jlen] = x0;\n  bounds[1][jlen] = y0;\n  bounds[0][jlen + 1] = x3;\n  bounds[1][jlen + 1] = y3;\n  bounds[0].length = bounds[1].length = jlen + 2;\n\n  return {\n    min: {x: Math.min.apply(0, bounds[0]), y: Math.min.apply(0, bounds[1])},\n    max: {x: Math.max.apply(0, bounds[0]), y: Math.max.apply(0, bounds[1])}\n  };\n};\n\nvar curvePathBBox=function(path) {\n  var x = 0,\n      y = 0,\n      X = [],\n      Y = [],\n      p;\n  for (var i = 0, ii = path.length; i < ii; i++) {\n    p = path[i];\n    if (p[0] == \"M\") {\n      x = p[1];\n      y = p[2];\n      X.push(x);\n      Y.push(y);\n    } else {\n      var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n      X = X.concat(dim.min.x, dim.max.x);\n      Y = Y.concat(dim.min.y, dim.max.y);\n      x = p[5];\n      y = p[6];\n    }\n  }\n  var xmin = Math.min.apply(0, X),\n      ymin = Math.min.apply(0, Y),\n      xmax = Math.max.apply(0, X),\n      ymax = Math.max.apply(0, Y),\n      bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n\n  return bb;\n};\n\nvar p2s=/,?([a-z]),?/gi;\nvar path2string=function(path) {\n  return path.join(',').replace(p2s, \"$1\");\n};\n\n/*\n * Styles\n */\n\nvar hsrg = {hs: 1, rg: 1},\n    has = \"hasOwnProperty\",\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    commaSpaces = new RegExp(\"[\" + spaces + \"]*,[\" + spaces + \"]*\");\n\n// Converts RGB values to a hex representation of the color\n// var rgb = function (r, g, b, o) {\n//   if (isFinite(o)) {\n//     var round = math.round;\n//     return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n//   }\n//   return \"#\" + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1);\n// };\nvar rgbToString = function (rgb) {\n  var round = Math.round;\n  return \"rgba(\" + [round(rgb.r), round(rgb.g), round(rgb.b), +rgb.opacity.toFixed(2)] + \")\";\n};\nvar toHex = function (color) {\n  var i = window.document.getElementsByTagName(\"head\")[0] || window.document.getElementsByTagName(\"svg\")[0],\n      red = \"rgb(255, 0, 0)\";\n  toHex = function (color) {\n    if (color.toLowerCase() == \"red\") {\n      return red;\n    }\n    i.style.color = red;\n    i.style.color = color;\n    var out = window.document.defaultView.getComputedStyle(i, \"\").getPropertyValue(\"color\");\n    return out == red ? null : out;\n  };\n  return toHex(color);\n};\n\nvar packageRGB = function (r, g, b, o) {\n  r = Math.round(r * 255);\n  g = Math.round(g * 255);\n  b = Math.round(b * 255);\n  var rgb = {\n      r: r,\n      g: g,\n      b: b,\n      opacity: isFinite(o) ? o : 1\n  };\n  return rgb;\n};\n\n// Converts HSB values to an RGB object\nvar hsb2rgb = function (h, s, v, o) {\n  if (typeof h === typeof {} && \"h\" in h && \"s\" in h && \"b\" in h) {\n      v = h.b;\n      s = h.s;\n      h = h.h;\n      o = h.o;\n  }\n  h *= 360;\n  var R, G, B, X, C;\n  h = (h % 360) / 60;\n  C = v * s;\n  X = C * (1 - Math.abs(h % 2 - 1));\n  R = G = B = v - C;\n\n  h = ~~h;\n  R += [C, X, 0, 0, X, C][h];\n  G += [X, C, C, X, 0, 0][h];\n  B += [0, 0, X, C, C, X][h];\n  return packageRGB(R, G, B, o);\n};\n\n// Converts HSL values to an RGB object\nvar hsl2rgb = function (h, s, l, o) {\n  if (typeof h === typeof {} && \"h\" in h && \"s\" in h && \"l\" in h) {\n    l = h.l;\n    s = h.s;\n    h = h.h;\n  }\n  if (h > 1 || s > 1 || l > 1) {\n    h /= 360;\n    s /= 100;\n    l /= 100;\n  }\n  h *= 360;\n  var R, G, B, X, C;\n  h = (h % 360) / 60;\n  C = 2 * s * (l < .5 ? l : 1 - l);\n  X = C * (1 - Math.abs(h % 2 - 1));\n  R = G = B = l - C / 2;\n\n  h = ~~h;\n  R += [C, X, 0, 0, X, C][h];\n  G += [X, C, C, X, 0, 0][h];\n  B += [0, 0, X, C, C, X][h];\n  return packageRGB(R, G, B, o);\n};\n\n// Parses color string as RGB object\nvar getRGB = function (colour) {\n  if (!colour || !!((colour = String(colour)).indexOf(\"-\") + 1)) {\n    return {r: -1, g: -1, b: -1, opacity: -1, error: 1};\n  }\n  if (colour == \"none\") {\n    return {r: -1, g: -1, b: -1, opacity: -1};\n  }\n  !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n  if (!colour) {\n    return {r: -1, g: -1, b: -1, opacity: -1, error: 1};\n  }\n  var res,\n      red,\n      green,\n      blue,\n      opacity,\n      t,\n      values,\n      rgb = colour.match(colourRegExp);\n  if (rgb) {\n    if (rgb[2]) {\n      blue = parseInt(rgb[2].substring(5), 16);\n      green = parseInt(rgb[2].substring(3, 5), 16);\n      red = parseInt(rgb[2].substring(1, 3), 16);\n    }\n    if (rgb[3]) {\n      blue = parseInt((t = rgb[3].charAt(3)) + t, 16);\n      green = parseInt((t = rgb[3].charAt(2)) + t, 16);\n      red = parseInt((t = rgb[3].charAt(1)) + t, 16);\n    }\n    if (rgb[4]) {\n      values = rgb[4].split(commaSpaces);\n      red = parseFloat(values[0]);\n      values[0].slice(-1) == \"%\" && (red *= 2.55);\n      green = parseFloat(values[1]);\n      values[1].slice(-1) == \"%\" && (green *= 2.55);\n      blue = parseFloat(values[2]);\n      values[2].slice(-1) == \"%\" && (blue *= 2.55);\n      rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = parseFloat(values[3]));\n      values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n    }\n    if (rgb[5]) {\n      values = rgb[5].split(commaSpaces);\n      red = parseFloat(values[0]);\n      values[0].slice(-1) == \"%\" && (red /= 100);\n      green = parseFloat(values[1]);\n      values[1].slice(-1) == \"%\" && (green /= 100);\n      blue = parseFloat(values[2]);\n      values[2].slice(-1) == \"%\" && (blue /= 100);\n      (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n      rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = parseFloat(values[3]));\n      values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n      return hsb2rgb(red, green, blue, opacity);\n    }\n    if (rgb[6]) {\n      values = rgb[6].split(commaSpaces);\n      red = parseFloat(values[0]);\n      values[0].slice(-1) == \"%\" && (red /= 100);\n      green = parseFloat(values[1]);\n      values[1].slice(-1) == \"%\" && (green /= 100);\n      blue = parseFloat(values[2]);\n      values[2].slice(-1) == \"%\" && (blue /= 100);\n      (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n      rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = parseFloat(values[3]));\n      values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n      return hsl2rgb(red, green, blue, opacity);\n    }\n    red = Math.min(Math.round(red), 255);\n    green = Math.min(Math.round(green), 255);\n    blue = Math.min(Math.round(blue), 255);\n    opacity = Math.min(Math.max(opacity, 0), 1);\n    rgb = {r: red, g: green, b: blue};\n    rgb.opacity = isFinite(opacity) ? opacity : 1;\n    return rgb;\n  }\n  return {r: -1, g: -1, b: -1, opacity: -1, error: 1};\n};\n\nfunction SVGMorpheus(element, options, callback) {\n  if (!element) {\n    throw new Error('SVGMorpheus > \"element\" is required');\n  }\n\n  if(typeof element === typeof '') {\n    element=document.querySelector(element);\n    if (!element) {\n      throw new Error('SVGMorpheus > \"element\" query is not related to an existing DOM node');\n    }\n  }\n\n  if (!!options && typeof options !== typeof {}) {\n    throw new Error('SVGMorpheus > \"options\" parameter must be an object');\n  }\n  options = options || {};\n\n  if (!!callback && typeof callback !== typeof (function(){})) {\n    throw new Error('SVGMorpheus > \"callback\" parameter must be a function');\n  }\n\n  var that=this;\n\n  this._icons={};\n  this._curIconId=options.iconId || '';\n  this._toIconId='';\n  this._curIconItems=[];\n  this._fromIconItems=[];\n  this._toIconItems=[];\n  this._morphNodes=[];\n  this._morphG;\n  this._startTime;\n  this._defDuration=options.duration || 750;\n  this._defEasing=options.easing || 'quad-in-out';\n  this._defRotation=options.rotation || 'clock';\n  this._defCallback = callback || function () {};\n  this._duration=this._defDuration;\n  this._easing=this._defEasing;\n  this._rotation=this._defRotation;\n  this._callback=this._defCallback;\n  this._rafid;\n\n  this._fnTick=function(timePassed) {\n    if(!that._startTime) {\n      that._startTime=timePassed;\n    }\n    var progress=Math.min((timePassed-that._startTime)/that._duration,1);\n    that._updateAnimationProgress(progress);\n    if(progress<1) {\n      that._rafid=_reqAnimFrame(that._fnTick);\n    } else {\n      if (that._toIconId != '') {\n        that._animationEnd();\n      }\n    }\n  };\n\n  if(element.nodeName.toUpperCase()==='SVG') {\n    this._svgDoc=element;\n  } else {\n    this._svgDoc = element.getSVGDocument();\n  }\n  if(!this._svgDoc) {\n    element.addEventListener(\"load\",function(){\n      that._svgDoc = element.getSVGDocument();\n      that._init();\n    },false);\n  } else {\n    that._init();\n  }\n}\n\nSVGMorpheus.prototype._init=function(){\n  if(this._svgDoc.nodeName.toUpperCase()!=='SVG') {\n    this._svgDoc=this._svgDoc.getElementsByTagName('svg')[0];\n  }\n\n  if(!!this._svgDoc) {\n    var lastIconId='',\n        i, len, id, items, item, j, len2, icon;\n\n    // Read Icons Data\n    // Icons = 1st tier G nodes having ID\n    for(i=this._svgDoc.childNodes.length-1;i>=0;i--) {\n      var nodeIcon=this._svgDoc.childNodes[i];\n      if(nodeIcon.nodeName.toUpperCase()==='G') {\n        id=nodeIcon.getAttribute('id');\n        if(!!id) {\n          items=[];\n          for(j=0, len2=nodeIcon.childNodes.length;j<len2;j++) {\n            var nodeItem=nodeIcon.childNodes[j];\n            item={\n              path: '',\n              attrs: {},\n              style: {}\n            };\n\n            // Get Item Path (Convert all shapes into Path Data)\n            switch(nodeItem.nodeName.toUpperCase()) {\n              case 'PATH':\n                item.path=nodeItem.getAttribute('d');\n                break;\n              case 'CIRCLE':\n                var cx=nodeItem.getAttribute('cx')*1,\n                    cy=nodeItem.getAttribute('cy')*1,\n                    r=nodeItem.getAttribute('r')*1;\n                item.path='M'+(cx-r)+','+cy+'a'+r+','+r+' 0 1,0 '+(r*2)+',0a'+r+','+r+' 0 1,0 -'+(r*2)+',0z';\n                break;\n              case 'ELLIPSE':\n                var cx=nodeItem.getAttribute('cx')*1,\n                    cy=nodeItem.getAttribute('cy')*1,\n                    rx=nodeItem.getAttribute('rx')*1,\n                    ry=nodeItem.getAttribute('ry')*1;\n                item.path='M'+(cx-rx)+','+cy+'a'+rx+','+ry+' 0 1,0 '+(rx*2)+',0a'+rx+','+ry+' 0 1,0 -'+(rx*2)+',0z';\n                break;\n              case 'RECT':\n                var x=nodeItem.getAttribute('x')*1,\n                    y=nodeItem.getAttribute('y')*1,\n                    w=nodeItem.getAttribute('width')*1,\n                    h=nodeItem.getAttribute('height')*1,\n                    rx=nodeItem.getAttribute('rx')*1,\n                    ry=nodeItem.getAttribute('ry')*1;\n                if(!rx && !ry) {\n                  item.path='M'+x+','+y+'l'+w+',0l0,'+h+'l-'+w+',0z';\n                } else {\n                  item.path='M'+(x+rx)+','+y+\n                            'l'+(w-rx*2)+',0'+\n                            'a'+rx+','+ry+' 0 0,1 '+rx+','+ry+\n                            'l0,'+(h-ry*2)+\n                            'a'+rx+','+ry+' 0 0,1 -'+rx+','+ry+\n                            'l'+(rx*2-w)+',0'+\n                            'a'+rx+','+ry+' 0 0,1 -'+rx+',-'+ry+\n                            'l0,'+(ry*2-h)+\n                            'a'+rx+','+ry+' 0 0,1 '+rx+',-'+ry+\n                            'z';\n                }\n                break;\n              case 'POLYGON':\n                var points=nodeItem.getAttribute('points');\n                var p = points.split(/\\s+/);\n                var path = \"\";\n                for( var k = 0, len = p.length; k < len; k++ ){\n                    path += (k && \"L\" || \"M\") + p[k]\n                }\n                item.path=path+'z';\n                break;\n              case 'LINE':\n                var x1=nodeItem.getAttribute('x1')*1,\n                    y1=nodeItem.getAttribute('y1')*1,\n                    x2=nodeItem.getAttribute('x2')*1,\n                    y2=nodeItem.getAttribute('y2')*1;\n                item.path='M'+x1+','+y1+'L'+x2+','+y2+'z';\n                break;\n            }\n            if(item.path!='') {\n              // Traverse all attributes and get style values\n              for (var k = 0, len3=nodeItem.attributes.length; k < len3; k++) {\n                var attrib = nodeItem.attributes[k];\n                if (attrib.specified) {\n                  var name=attrib.name.toLowerCase();\n                  switch (name) {\n                    case 'fill':\n                    case 'fill-opacity':\n                    case 'opacity':\n                    case 'stroke':\n                    case 'stroke-opacity':\n                    case 'stroke-width':\n                      item.attrs[name]=attrib.value;\n                  }\n                }\n              }\n\n              // Traverse all inline styles and get supported values\n              for (var l = 0, len4=nodeItem.style.length; l < len4; l++) {\n                var styleName = nodeItem.style[l];\n                switch (styleName) {\n                  case 'fill':\n                  case 'fill-opacity':\n                  case 'opacity':\n                  case 'stroke':\n                  case 'stroke-opacity':\n                  case 'stroke-width':\n                    item.style[styleName]=nodeItem.style[styleName];\n                }\n              }\n\n              items.push(item);\n            }\n          }\n\n          // Add Icon\n          if(items.length>0) {\n            icon={\n              id: id,\n              items: items\n            };\n            this._icons[id]=icon;\n          }\n\n          // Init Node for Icons Items and remove Icon Nodes\n          if(!this._morphG) {\n            lastIconId=id;\n            this._morphG=document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            this._svgDoc.replaceChild(this._morphG,nodeIcon);\n          } else {\n            this._svgDoc.removeChild(nodeIcon);\n          }\n        }\n      }\n    }\n    // To Default Icon\n    var defaultIcon = this._curIconId || lastIconId;\n    if(defaultIcon!=='') {\n      this._setupAnimation(defaultIcon);\n      this._updateAnimationProgress(1);\n      this._animationEnd();\n    }\n  }\n\n};\n\nSVGMorpheus.prototype._setupAnimation=function(toIconId) {\n  if(!!toIconId && !!this._icons[toIconId]) {\n    this._toIconId=toIconId;\n    this._startTime=undefined;\n    var i, len, j, len2;\n    this._fromIconItems=clone(this._curIconItems);\n    this._toIconItems=clone(this._icons[toIconId].items);\n\n    for(i=0, len=this._morphNodes.length;i<len;i++) {\n      var morphNode=this._morphNodes[i];\n      morphNode.fromIconItemIdx=i;\n      morphNode.toIconItemIdx=i;\n    }\n\n    var maxNum=Math.max(this._fromIconItems.length, this._toIconItems.length);\n    var toBB;\n    for(i=0;i<maxNum;i++) {\n      // Add items to fromIcon/toIcon if needed\n      if(!this._fromIconItems[i]) {\n        if(!!this._toIconItems[i]) {\n          toBB=curvePathBBox(path2curve(this._toIconItems[i].path));\n          this._fromIconItems.push({\n            path: 'M'+toBB.cx+','+toBB.cy+'l0,0',\n            attrs: {},\n            style: {},\n            trans: {\n              'rotate': [0,toBB.cx,toBB.cy]\n            }\n          });\n        } else {\n          this._fromIconItems.push({\n            path: 'M0,0l0,0',\n            attrs: {},\n            style: {},\n            trans: {\n              'rotate': [0,0,0]\n            }\n          });\n        }\n      }\n      if(!this._toIconItems[i]) {\n        if(!!this._fromIconItems[i]) {\n          toBB=curvePathBBox(path2curve(this._fromIconItems[i].path));\n          this._toIconItems.push({\n            path: 'M'+toBB.cx+','+toBB.cy+'l0,0',\n            attrs: {},\n            style: {},\n            trans: {\n              'rotate': [0,toBB.cx,toBB.cy]\n            }\n          });\n        } else {\n          this._toIconItems.push({\n            path: 'M0,0l0,0',\n            attrs: {},\n            style: {},\n            trans: {\n              'rotate': [0,0,0]\n            }\n          });\n        }\n      }\n\n      // Add Node to DOM if needed\n      if(!this._morphNodes[i]) {\n        var node=document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        this._morphG.appendChild(node);\n        this._morphNodes.push({\n          node: node,\n          fromIconItemIdx: i,\n          toIconItemIdx: i\n        });\n      }\n    }\n\n    for(i=0;i<maxNum;i++) {\n      var fromIconItem=this._fromIconItems[i];\n      var toIconItem=this._toIconItems[i];\n\n      // Calculate from/to curve data and set to fromIcon/toIcon\n      var curves=path2curve(this._fromIconItems[i].path,this._toIconItems[i].path);\n      fromIconItem.curve=curves[0];\n      toIconItem.curve=curves[1];\n\n      // Normalize from/to attrs\n      var attrsNorm=styleToNorm(this._fromIconItems[i].attrs,this._toIconItems[i].attrs);\n      fromIconItem.attrsNorm=attrsNorm[0];\n      toIconItem.attrsNorm=attrsNorm[1];\n      fromIconItem.attrs=styleNormToString(fromIconItem.attrsNorm);\n      toIconItem.attrs=styleNormToString(toIconItem.attrsNorm);\n\n      // Normalize from/to style\n      var styleNorm=styleToNorm(this._fromIconItems[i].style,this._toIconItems[i].style);\n      fromIconItem.styleNorm=styleNorm[0];\n      toIconItem.styleNorm=styleNorm[1];\n      fromIconItem.style=styleNormToString(fromIconItem.styleNorm);\n      toIconItem.style=styleNormToString(toIconItem.styleNorm);\n\n      // Calculate from/to transform\n      toBB=curvePathBBox(toIconItem.curve);\n      toIconItem.trans={\n        'rotate': [0,toBB.cx,toBB.cy]\n      };\n      var rotation=this._rotation, degAdd;\n      if(rotation==='random') {\n        rotation=Math.random()<0.5?'counterclock':'clock';\n      }\n      switch(rotation) {\n        case 'none':\n          if(!!fromIconItem.trans.rotate) {\n            toIconItem.trans.rotate[0]=fromIconItem.trans.rotate[0];\n          }\n          break;\n        case 'counterclock':\n          if(!!fromIconItem.trans.rotate) {\n            toIconItem.trans.rotate[0]=fromIconItem.trans.rotate[0]-360;\n            degAdd=-fromIconItem.trans.rotate[0]%360;\n            toIconItem.trans.rotate[0]+=(degAdd<180?degAdd:degAdd-360);\n          } else {\n            toIconItem.trans.rotate[0]=-360;\n          }\n          break;\n        default: // Clockwise\n          if(!!fromIconItem.trans.rotate) {\n            toIconItem.trans.rotate[0]=fromIconItem.trans.rotate[0]+360;\n            degAdd=fromIconItem.trans.rotate[0]%360;\n            toIconItem.trans.rotate[0]+=(degAdd<180?-degAdd:360-degAdd);\n          } else {\n            toIconItem.trans.rotate[0]=360;\n          }\n          break;\n      }\n    }\n\n    this._curIconItems=clone(this._fromIconItems);\n  }\n};\n\nSVGMorpheus.prototype._updateAnimationProgress=function(progress) {\n  progress=easings[this._easing](progress);\n\n  var i, j, k, len;\n  // Update path/attrs/transform\n  for(i=0, len=this._curIconItems.length;i<len;i++) {\n    this._curIconItems[i].curve=curveCalc(this._fromIconItems[i].curve, this._toIconItems[i].curve, progress);\n    this._curIconItems[i].path=path2string(this._curIconItems[i].curve);\n\n    this._curIconItems[i].attrsNorm=styleNormCalc(this._fromIconItems[i].attrsNorm, this._toIconItems[i].attrsNorm, progress);\n    this._curIconItems[i].attrs=styleNormToString(this._curIconItems[i].attrsNorm);\n\n    this._curIconItems[i].styleNorm=styleNormCalc(this._fromIconItems[i].styleNorm, this._toIconItems[i].styleNorm, progress);\n    this._curIconItems[i].style=styleNormToString(this._curIconItems[i].styleNorm);\n\n    this._curIconItems[i].trans=transCalc(this._fromIconItems[i].trans, this._toIconItems[i].trans, progress);\n    this._curIconItems[i].transStr=trans2string(this._curIconItems[i].trans);\n  }\n\n  // Update DOM\n  for(i=0, len=this._morphNodes.length;i<len;i++) {\n    var morphNode=this._morphNodes[i];\n    morphNode.node.setAttribute(\"d\",this._curIconItems[i].path);\n    var attrs=this._curIconItems[i].attrs;\n    for(j in attrs) {\n      morphNode.node.setAttribute(j,attrs[j]);\n    }\n    var style=this._curIconItems[i].style;\n    for(k in style) {\n      morphNode.node.style[k]=style[k];\n    }\n    morphNode.node.setAttribute(\"transform\",this._curIconItems[i].transStr);\n  }\n};\n\nSVGMorpheus.prototype._animationEnd=function() {\n  for(var i=this._morphNodes.length-1;i>=0;i--) {\n    var morphNode=this._morphNodes[i];\n    if(!!this._icons[this._toIconId].items[i]) {\n      morphNode.node.setAttribute(\"d\",this._icons[this._toIconId].items[i].path);\n    } else {\n      morphNode.node.parentNode.removeChild(morphNode.node);\n      this._morphNodes.splice(i,1);\n    }\n  }\n\n  this._curIconId=this._toIconId;\n  this._toIconId='';\n\n  this._callback();\n};\n\n/*\n * Public methods\n */\n\n// Morph To Icon\nSVGMorpheus.prototype.to=function(iconId, options, callback) {\n  if(iconId!==this._toIconId) {\n    if (!!options && typeof options !== typeof {}) {\n      throw new Error('SVGMorpheus.to() > \"options\" parameter must be an object');\n    }\n    options = options || {};\n\n    if (!!callback && typeof callback !== typeof (function(){})) {\n      throw new Error('SVGMorpheus.to() > \"callback\" parameter must be a function');\n    }\n\n    _cancelAnimFrame(this._rafid);\n\n    this._duration=options.duration || this._defDuration;\n    this._easing=options.easing || this._defEasing;\n    this._rotation=options.rotation || this._defRotation;\n    this._callback=callback || this._defCallback;\n\n    this._setupAnimation(iconId);\n    this._rafid=_reqAnimFrame(this._fnTick);\n  }\n};\n\n// Register custom Easing function\nSVGMorpheus.prototype.registerEasing=function(name, fn) {\n  easings[name] = fn;\n}\n\nreturn SVGMorpheus;\n\n}());\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = SVGMorpheus;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/exports-loader?SVGMorpheus!./~/svg-morpheus/compile/unminified/svg-morpheus.js\n ** module id = 243\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\nbuf.push(\"<md-input-container md-no-float class=\\\"md-icon-float md-block no-tb-margin no-errors no-borders\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\nbuf.push(\"<md-icon>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\nbuf.push(\"<ng-md-icon icon=\\\"search\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</ng-md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-icon>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\nbuf.push(\"<input placeholder=\\\"{{title}}\\\" aria-label=\\\"{{title}}\\\" ng-model=\\\"searchText\\\">\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-input-container>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 5, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\nbuf.push(\"<md-divider>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-divider>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-input-container(md-no-float,class=\\\"md-icon-float md-block no-tb-margin no-errors no-borders\\\")\\n    md-icon\\n        ng-md-icon(icon=\\\"search\\\")\\n    input(placeholder=\\\"{{title}}\\\",aria-label=\\\"{{title}}\\\",  ng-model=\\\"searchText\\\")\\nmd-divider\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/sidemenu/tpls/search.jade\n ** module id = 271\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\nbuf.push(\"<ul ng-if=\\\"node.{{opts.children}}.length\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\nbuf.push(\"<li ng-if=\\\"node.showed\\\" ng-repeat=\\\"node in node.{{opts.children}} | filter: sideCtl.options.filterExpression | orderBy:['{{opts.orderBy}}']:true\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\nbuf.push(\"<div fx-side-menu-content-transclude ng-click=\\\"sideCtl.showChildren(node)\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\nbuf.push(\"<md-divider ng-if=\\\"node.depth===1\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-divider>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 5, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\nbuf.push(\"<fx-side-menu-child ng-show=\\\"sideCtl.isShowChildren(node)\\\" class=\\\"side-menu-child nga-fast nga-stagger-fast nga-slide-right\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</fx-side-menu-child>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</li>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</ul>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\nbuf.push(\"<md-divider ng-if=\\\"!$last &amp;&amp; node.depth&gt;1\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-divider>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"ul(ng-if=\\\"node.{{opts.children}}.length\\\")\\n    li(ng-if=\\\"node.showed\\\",ng-repeat=\\\"node in node.{{opts.children}} | filter: sideCtl.options.filterExpression | orderBy:['{{opts.orderBy}}']:true\\\")\\n        div(fx-side-menu-content-transclude,ng-click=\\\"sideCtl.showChildren(node)\\\")\\n        md-divider(ng-if=\\\"node.depth===1\\\")\\n        fx-side-menu-child.side-menu-child.nga-fast.nga-stagger-fast.nga-slide-right(ng-show=\\\"sideCtl.isShowChildren(node)\\\")\\nmd-divider(ng-if=\\\"!$last && node.depth>1\\\")\\n\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/sidemenu/tpls/sidemenu.jade\n ** module id = 272\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\nbuf.push(\"<md-button ng-if=\\\"{{btnCtl.condition}}\\\" ng-class=\\\"btnCtl.className\\\" ng-click=\\\"btnCtl.onClick($event,btnCtl.ngModel,btnCtl.index)\\\" ng-disabled=\\\"{{btnCtl.disabled}}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\nbuf.push(\"<md-tooltip ng-if=\\\"btnCtl.tooltip\\\" md-direction=\\\"{{btnCtl.tooltip.position}}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 2, jade_debug[0].filename ));\nbuf.push(\"{{btnCtl.tooltip.title || btnCtl.title}}\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-tooltip>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\nbuf.push(\"<md-icon ng-if=\\\"btnCtl.icon &amp;&amp; btnCtl.icon.icon\\\" md-menu-align-target ng-style=\\\"btnCtl.icon.style\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\nbuf.push(\"<ng-md-icon icon=\\\"{{btnCtl.icon.icon}}\\\" ng-style=\\\"btnCtl.icon.style\\\" options=\\\"{&quot;rotation&quot;:&quot;none&quot;}\\\" size=\\\"{{btnCtl.icon.size||'24px'}}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</ng-md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-icon>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 5, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\nbuf.push(\"<span ng-if=\\\"btnCtl.showTitle\\\" layout-padding>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 5, jade_debug[0].filename ));\nbuf.push(\"{{btnCtl.title}} \");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</span>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\nbuf.push(\"<span ng-hide=\\\"true\\\" ng-bind=\\\"{{btnCtl.disabled}}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</span>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 7, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\nbuf.push(\"<md-icon ng-if=\\\"btnCtl.icon &amp;&amp; btnCtl.icon.ricon\\\" md-menu-align-target ng-style=\\\"btnCtl.icon.style\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 8, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\nbuf.push(\"<ng-md-icon icon=\\\"{{btnCtl.icon.ricon}}\\\" ng-style=\\\"btnCtl.icon.style\\\" options=\\\"{&quot;rotation&quot;:&quot;none&quot;}\\\" size=\\\"{{btnCtl.icon.size||'24px'}}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</ng-md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-button>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-button(ng-if=\\\"{{btnCtl.condition}}\\\",ng-class=\\\"btnCtl.className\\\",ng-click=\\\"btnCtl.onClick($event,btnCtl.ngModel,btnCtl.index)\\\",ng-disabled=\\\"{{btnCtl.disabled}}\\\")\\n    md-tooltip(ng-if=\\\"btnCtl.tooltip\\\",md-direction=\\\"{{btnCtl.tooltip.position}}\\\") {{btnCtl.tooltip.title || btnCtl.title}}\\n    md-icon(ng-if=\\\"btnCtl.icon && btnCtl.icon.icon\\\",md-menu-align-target,ng-style=\\\"btnCtl.icon.style\\\")\\n        ng-md-icon(icon=\\\"{{btnCtl.icon.icon}}\\\",ng-style=\\\"btnCtl.icon.style\\\",options='{\\\"rotation\\\":\\\"none\\\"}',size=\\\"{{btnCtl.icon.size||'24px'}}\\\")\\n    span(ng-if=\\\"btnCtl.showTitle\\\",layout-padding) {{btnCtl.title}} \\n    span(ng-hide=\\\"true\\\",ng-bind=\\\"{{btnCtl.disabled}}\\\")\\n    md-icon(ng-if=\\\"btnCtl.icon && btnCtl.icon.ricon\\\",md-menu-align-target,ng-style=\\\"btnCtl.icon.style\\\")\\n        ng-md-icon(icon=\\\"{{btnCtl.icon.ricon}}\\\",ng-style=\\\"btnCtl.icon.style\\\",options='{\\\"rotation\\\":\\\"none\\\"}',size=\\\"{{btnCtl.icon.size||'24px'}}\\\")\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/toolbar/tpls/btn.jade\n ** module id = 273\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/icon.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/icon.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/icon.jade\" ));\nbuf.push(\"<md-icon ng-if=\\\"iconCtl.icon\\\" md-menu-align-target ng-style=\\\"iconCtl.icon.style\\\" ng-class=\\\"iconCtl.className\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/toolbar/tpls/icon.jade\" ));\nbuf.push(\"<ng-md-icon icon=\\\"{{iconCtl.icon.icon}}\\\" ng-style=\\\"iconCtl.icon.style\\\" options=\\\"{&quot;rotation&quot;:&quot;none&quot;}\\\" size=\\\"{{iconCtl.icon.size||'24px'}}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</ng-md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-icon>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-icon(ng-if=\\\"iconCtl.icon\\\",md-menu-align-target,ng-style=\\\"iconCtl.icon.style\\\",ng-class=\\\"iconCtl.className\\\")\\n    ng-md-icon(icon=\\\"{{iconCtl.icon.icon}}\\\",ng-style=\\\"iconCtl.icon.style\\\",options='{\\\"rotation\\\":\\\"none\\\"}',size=\\\"{{iconCtl.icon.size||'24px'}}\\\")\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/toolbar/tpls/icon.jade\n ** module id = 274\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/label.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/label.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/label.jade\" ));\nbuf.push(\"<span ng-class=\\\"labelCtl.cls\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 1, jade_debug[0].filename ));\nbuf.push(\"{{labelCtl.title}}\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</span>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"span(ng-class=\\\"labelCtl.cls\\\") {{labelCtl.title}}\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/toolbar/tpls/label.jade\n ** module id = 275\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/layout.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/layout.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/layout.jade\" ));\nbuf.push(\"<div layout=\\\"{{layoutCtl.layout}}\\\" flex=\\\"{{layoutCtl.flex}}\\\" layout-align=\\\"{{layoutCtl.layoutAlign}}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"div(layout=\\\"{{layoutCtl.layout}}\\\",flex=\\\"{{layoutCtl.flex}}\\\",layout-align=\\\"{{layoutCtl.layoutAlign}}\\\")\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/toolbar/tpls/layout.jade\n ** module id = 276\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-divider.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-divider.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-divider.jade\" ));\nbuf.push(\"<md-menu-divider>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-menu-divider>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-menu-divider\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/toolbar/tpls/menu-divider.jade\n ** module id = 277\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-item.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-item.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-item.jade\" ));\nbuf.push(\"<md-menu-item fx-toolbar ng-if=\\\"{{menuItemCtl.condition}}\\\" ng-init=\\\"item = menuItemCtl;item.type='btn'\\\" items=\\\"item\\\" ng-model=\\\"menuItemCtl.ngModel\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-menu-item>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-menu-item(fx-toolbar,ng-if=\\\"{{menuItemCtl.condition}}\\\",ng-init=\\\"item = menuItemCtl;item.type='btn'\\\",items=\\\"item\\\",ng-model=\\\"menuItemCtl.ngModel\\\")\\n\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/toolbar/tpls/menu-item.jade\n ** module id = 278\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\nbuf.push(\"<md-menu md-offset=\\\"2 0\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\nbuf.push(\"<md-button ng-class=\\\"menuCtl.className\\\" aria-label=\\\"菜单\\\" ng-click=\\\"menuCtl.materialUtils.openMenu($mdOpenMenu,$event)\\\" ng-disabled=\\\"{{menuCtl.disabled}}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\nbuf.push(\"<md-tooltip ng-if=\\\"menuCtl.tooltip\\\" md-direction=\\\"{{menuCtl.tooltip.position}}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 3, jade_debug[0].filename ));\nbuf.push(\"{{menuCtl.tooltip.title || menuCtl.title}}\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-tooltip>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\nbuf.push(\"<md-icon ng-if=\\\"menuCtl.icon\\\" md-menu-origin>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 5, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\nbuf.push(\"<ng-md-icon icon=\\\"{{menuCtl.icon.icon}}\\\" ng-style=\\\"menuCtl.icon.style\\\" options=\\\"{&quot;rotation&quot;:&quot;none&quot;}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</ng-md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-button>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\nbuf.push(\"<md-menu-content width=\\\"{{menuCtl.width}}\\\" fx-toolbar items=\\\"menuCtl.items\\\" ng-model=\\\"menuCtl.ngModel\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-menu-content>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-menu>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-menu(md-offset=\\\"2 0\\\")\\n    md-button(ng-class=\\\"menuCtl.className\\\",aria-label=\\\"菜单\\\",ng-click=\\\"menuCtl.materialUtils.openMenu($mdOpenMenu,$event)\\\",ng-disabled=\\\"{{menuCtl.disabled}}\\\")\\n        md-tooltip(ng-if=\\\"menuCtl.tooltip\\\",md-direction=\\\"{{menuCtl.tooltip.position}}\\\") {{menuCtl.tooltip.title || menuCtl.title}}\\n        md-icon(ng-if=\\\"menuCtl.icon\\\",md-menu-origin)\\n            ng-md-icon(icon=\\\"{{menuCtl.icon.icon}}\\\",ng-style=\\\"menuCtl.icon.style\\\",options='{\\\"rotation\\\":\\\"none\\\"}')\\n    md-menu-content(width=\\\"{{menuCtl.width}}\\\",fx-toolbar,items=\\\"menuCtl.items\\\",ng-model=\\\"menuCtl.ngModel\\\")\\n\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/toolbar/tpls/menu.jade\n ** module id = 279\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menubar.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/menubar.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menubar.jade\" ));\nbuf.push(\"<md-menu-bar md-offset=\\\"2 0\\\" ng-class=\\\"menuBarCtl.className\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/toolbar/tpls/menubar.jade\" ));\nbuf.push(\"<div fx-toolbar items=\\\"menuBarCtl.items\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-menu-bar>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-menu-bar(md-offset=\\\"2 0\\\",ng-class=\\\"menuBarCtl.className\\\")\\n    div(fx-toolbar,items=\\\"menuBarCtl.items\\\")\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/toolbar/tpls/menubar.jade\n ** module id = 280\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/content.template.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/pages/home/tpls/content.template.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/content.template.jade\" ));\nbuf.push(\"<md-content flex>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/pages/home/tpls/content.template.jade\" ));\nbuf.push(\"<nvd3 flex options=\\\"contentCtl.departChartOptions\\\" data=\\\"contentCtl.departChartData\\\" events=\\\"contentCtl.departChartOptions.events\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</nvd3>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-content>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-content(flex)\\n     nvd3(flex,options=\\\"contentCtl.departChartOptions\\\",data=\\\"contentCtl.departChartData\\\",events=\\\"contentCtl.departChartOptions.events\\\")\\n\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pages/home/tpls/content.template.jade\n ** module id = 281\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<md-content flex=\\\"100\\\" layout=\\\"row\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<md-sidenav ui-view=\\\"sidenavLeft\\\" md-is-locked-open=\\\"$mdMedia('gt-md') || $root.isOpenMenu\\\" md-component-id=\\\"left\\\" md-whiteframe=\\\"4\\\" layout=\\\"column\\\" class=\\\"md-sidenav-left\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-sidenav>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<md-content flex=\\\"100\\\" layout=\\\"column\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 7, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<md-toolbar class=\\\"md-hue-3\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 8, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<div fx-toolbar items=\\\"homeCtl.toolbars\\\" layout=\\\"row\\\" ctls=\\\"homeCtl\\\" class=\\\"md-toolbar-tools\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-toolbar>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 9, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<md-divider>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-divider>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 10, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<md-content flex ui-view=\\\"content\\\" layout=\\\"column\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-content>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-content>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 11, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<div execute-cmd real-time=\\\"true\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 12, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<div ng-if=\\\"!$mdMedia('gt-md')\\\" class=\\\"lock-size\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 13, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<md-fab-speed-dial md-direction=\\\"right\\\" ng-mouseenter=\\\"$root.isOpenFab=true\\\" ng-mouseleave=\\\"$root.isOpenFab=false\\\" md-open=\\\"$root.isOpenFab\\\" class=\\\"md-scale md-fab-bottom-left\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 14, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<md-fab-trigger>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 15, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<md-button aria-label=\\\"menu\\\" ng-click=\\\"homeCtl.materialUtils.buildToggle('left')()\\\" class=\\\"md-fab md-default\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 16, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<md-icon>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 17, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<ng-md-icon icon=\\\"menu\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</ng-md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-button>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-fab-trigger>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-fab-speed-dial>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-content>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"//- md-toolbar.md-whiteframe-glow-z1.md-hue-3()\\n    //- div.md-toolbar-tools(fx-toolbar,items=\\\"homeCtl.toolbars\\\",layout=\\\"row\\\",ctls=\\\"homeCtl\\\")\\nmd-content(flex=\\\"100\\\",layout=\\\"row\\\")\\n    md-sidenav.md-sidenav-left(ui-view=\\\"sidenavLeft\\\",md-is-locked-open=\\\"$mdMedia('gt-md') || $root.isOpenMenu\\\",md-component-id=\\\"left\\\",md-whiteframe=\\\"4\\\",layout=\\\"column\\\")\\n    //- md-sidenav.md-sidenav-right(md-component-id=\\\"right\\\",ui-view=\\\"sidenavRight\\\",layout=\\\"column\\\",md-whiteframe=\\\"4\\\")\\n    md-content(flex=\\\"100\\\",layout=\\\"column\\\")\\n        md-toolbar.md-hue-3\\n            div.md-toolbar-tools(fx-toolbar,items=\\\"homeCtl.toolbars\\\",layout=\\\"row\\\",ctls=\\\"homeCtl\\\")\\n        md-divider\\n        md-content(flex,ui-view=\\\"content\\\",layout=\\\"column\\\")\\n    div(execute-cmd,real-time=\\\"true\\\")\\n    div.lock-size(ng-if=\\\"!$mdMedia('gt-md')\\\")\\n        md-fab-speed-dial.md-scale.md-fab-bottom-left(md-direction=\\\"right\\\",ng-mouseenter=\\\"$root.isOpenFab=true\\\",ng-mouseleave=\\\"$root.isOpenFab=false\\\",md-open=\\\"$root.isOpenFab\\\")\\n            md-fab-trigger\\n                md-button.md-fab.md-default(aria-label=\\\"menu\\\",ng-click=\\\"homeCtl.materialUtils.buildToggle('left')()\\\")\\n                    md-icon\\n                        ng-md-icon(icon=\\\"menu\\\")\\n           \");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pages/home/tpls/home.template.jade\n ** module id = 282\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<md-content flex=\\\"100\\\" layout=\\\"column\\\" ng-cloak>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<a layout=\\\"row\\\" ng-href=\\\"#/\\\" flex class=\\\"logo\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<div fx-toolbar items=\\\"sideLeftCtl.toolbar\\\" layout=\\\"row\\\" ctls=\\\"sideLeftCtl\\\" class=\\\"md-toolbar-tools\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</a>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<md-divider>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-divider>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 5, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<fx-side-menu-search>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</fx-side-menu-search>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<md-content flex=\\\"100\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 7, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<fx-side-menu selected-nodes=\\\"sideLeftCtl.selectedNodes\\\" modules=\\\"sideLeftCtl.modules\\\" ng-click=\\\"sideLeftCtl.doLinkBind\\\" class=\\\"side-menu\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 8, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<md-button ng-click=\\\"sideCtl.doLinkPre($event,node)\\\" md-style-color=\\\"{'background-color': sideCtl.isSelected(node) ? 'primary.300': 'primary.0'}\\\" class=\\\"layout-fill\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 9, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<div flex=\\\"100\\\" layout=\\\"row\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 10, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<md-icon>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 11, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<ng-md-icon icon=\\\"{{ node.icon||'apps'}}\\\" md-style-color=\\\"{'color': sideCtl.isSelected(node) ? 'accent.300': 'primary.500'}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</ng-md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-icon>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 12, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<div flex=\\\"100\\\" class=\\\"md-margin\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 12, jade_debug[0].filename ));\nbuf.push(\"{{node.title}}\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 13, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<md-icon>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 14, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<ng-md-icon options=\\\"{&quot;rotation&quot;: &quot;none&quot;}\\\" ng-if=\\\"!sideCtl.isLeaf(node)\\\" icon=\\\"{{ sideCtl.isShowChildren(node)?'expand_more':'chevron_right' }}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</ng-md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-button>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</fx-side-menu>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-content>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 15, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<md-divider>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-divider>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 16, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<div fx-toolbar items=\\\"sideLeftCtl.toolbarBottom\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-content>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-content(flex=\\\"100\\\",layout=\\\"column\\\",ng-cloak)\\n    a.logo(layout=\\\"row\\\",ng-href=\\\"#/\\\",flex)\\n        div.md-toolbar-tools(fx-toolbar,items=\\\"sideLeftCtl.toolbar\\\",layout=\\\"row\\\",ctls=\\\"sideLeftCtl\\\")\\n    md-divider\\n    fx-side-menu-search\\n    md-content(flex=\\\"100\\\")\\n        fx-side-menu.side-menu(selected-nodes=\\\"sideLeftCtl.selectedNodes\\\",modules=\\\"sideLeftCtl.modules\\\",ng-click=\\\"sideLeftCtl.doLinkBind\\\")\\n            md-button.layout-fill(ng-click=\\\"sideCtl.doLinkPre($event,node)\\\",md-style-color=\\\"{'background-color': sideCtl.isSelected(node) ? 'primary.300': 'primary.0'}\\\")\\n                div(flex=\\\"100\\\",layout=\\\"row\\\")\\n                    md-icon\\n                        ng-md-icon(icon=\\\"{{ node.icon||'apps'}}\\\",md-style-color=\\\"{'color': sideCtl.isSelected(node) ? 'accent.300': 'primary.500'}\\\")\\n                    div.md-margin(flex=\\\"100\\\") {{node.title}}\\n                    md-icon\\n                        ng-md-icon(options='{\\\"rotation\\\": \\\"none\\\"}',ng-if=\\\"!sideCtl.isLeaf(node)\\\",icon=\\\"{{ sideCtl.isShowChildren(node)?'expand_more':'chevron_right' }}\\\")\\n    md-divider\\n    div(fx-toolbar,items=\\\"sideLeftCtl.toolbarBottom\\\")\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pages/home/tpls/sidenavl.template.jade\n ** module id = 283\n ** module chunks = 2\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/sass-loader/index.js!./sidemenu.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/sass-loader/index.js!./sidemenu.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/sass-loader/index.js!./sidemenu.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/sidemenu/styles/sidemenu.scss\n ** module id = 310\n ** module chunks = 2\n **/","import {module} from './module';\n\nfunction Directive(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        require: '^fxSideMenu',\n        link: function ($scope, $element, $attrs, $ctrl) {\n            $ctrl['template']($scope, function (clone) {\n                $element.html('').append(clone);\n            });\n        }\n    };\n}\n\nmodule.directive('fxSideMenuChild', Directive);\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/sidemenu/child.directive.ts\n **/","import { module } from './module';\n\nfunction Directive(): ng.IDirective {\n    return {\n        link: ($scope, $element, $attrs, $ctrl) => {\n            $scope['$sideMenuTransclude']($scope, function (clone) {\n                $element.empty();\n                $element.append(clone);\n            });\n        }\n    };\n}\n\n// export default (module: ng.IModule)=> {\nmodule.directive('fxSideMenuContentTransclude', Directive);\n// };\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/sidemenu/content.directive.ts\n **/","import { module } from './module';\n\nconst _name = \"mdStyleColor\";\n\nfunction Directive(mdSideMenuSections): ng.IDirective {\n    return {\n        restrict: 'A',\n        scope: {\n            mdStyleColor: '='\n        },\n        link: ($scope, $element, $attrs) => {\n            let themeColors, split, hueR, colorR, colorA, hueA, colorValue,\n                _apply_color = () => {\n                    for (let p in $scope[_name]) {\n                        if ($scope[_name].hasOwnProperty(p)) {\n                            themeColors = mdSideMenuSections.theme.colors,\n                                split = ($scope[_name][p] || '').split('.');\n\n                            if (split.length < 2) {\n                                split.unshift('primary');\n                            }\n                            hueR = split[1] || 'hue-1';\n                            colorR = split[0] || 'primary'; // 'warn'\n\n                            // Absolute color: 'orange'\n                            colorA = themeColors[colorR] ? themeColors[colorR].name : colorR;\n                            // Absolute Hue: '500'\n                            hueA = themeColors[colorR] ? (themeColors[colorR].hues[hueR] || hueR) : hueR;\n                            colorValue = mdSideMenuSections.palettes[colorA][hueA] ? mdSideMenuSections.palettes[colorA][hueA].value : mdSideMenuSections.palettes[colorA]['500'].value;\n\n                            if (hueA !== '0') {\n                                $element.css(p, 'rgb(' + colorValue.join(',') + ')');\n                            } else {\n                                $element.css(p, 'transparent');\n                            }\n                        }\n                    }\n                };\n\n            if (!mdSideMenuSections.theme || !mdSideMenuSections.palettes) {\n                return console.warn('you probably want to ssSideNavSectionsProvider.initWithTheme($mdThemingProvider)');\n            }\n\n            $scope.$watch(_name, function (oldVal, newVal) {\n                if ((oldVal && newVal) && oldVal !== newVal) {\n                    _apply_color();\n                }\n            }, true);\n            _apply_color();\n        }\n    }\n}\n\nmodule.directive(_name, [\"mdSideMenuSections\", Directive]);\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/sidemenu/mdcolor.directive.ts\n **/","import { module } from './module';\n\ninterface IDirectiveScope extends ng.IScope {\n    searchText: string;\n    title: string;\n    timeID: any;\n}\n\nfunction Directive(mdSideMenuSections, $timeout): ng.IDirective {\n    return {\n        restrict: 'EA',\n        template: require(\"./tpls/search.jade\"),\n        controllerAs: \"searchCtl\",\n        link: function ($scope: IDirectiveScope) {\n            $scope.searchText = \"\";\n            $scope.title = \"搜索菜单\";\n\n            $scope.$watch(\"searchText\", (newVal, oldVal) => {\n                $timeout.cancel($scope.timeID);\n                $scope.timeID = $timeout(() => {\n                    mdSideMenuSections.options.filterExpression = newVal;\n                }, 1000);\n            });\n        }\n    };\n}\n\n// export default (module: ng.IModule)=> {\nmodule.directive('fxSideMenuSearch', [\"mdSideMenuSections\", \"$timeout\", Directive]);\n// };\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/sidemenu/search.directive.ts\n **/","import { module } from './module';\n\nfunction Provider() {\n    var _sections = [],\n        _theme,\n        _palettes;\n\n    this.initWithSections = function (value) {\n        _sections = value ? value : [];\n    };\n\n    this.initWithTheme = function (value) {\n        _theme = value.theme();\n        _palettes = value._PALETTES;\n    };\n\n    this.$get = [function () {\n        var MdSideMenuSections = function () {\n            this.sections = _sections;\n            this.selectedNode = null;\n            this.options = {};\n            this.theme = _theme;\n            this.palettes = _palettes;\n            this.searchStr = \"\";\n        };\n\n        return new MdSideMenuSections();\n    }];\n}\n\n// export default (module: ng.IModule)=> {\nmodule.provider('mdSideMenuSections', [Provider]);\n// };\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/sidemenu/section.provider.ts\n **/","import { module } from './module';\nimport * as _ from 'lodash';\n\nfunction Factory($rootScope, $timeout, mdSideMenuSections): any {\n    let onStateChangeStart = function (event, toState, toParams) {\n        let options = mdSideMenuSections.options;\n\n        function digest(sections, currentSection) {\n            !mdSideMenuSections.selectedNode && sections &&\n\n                _.forEach(sections, (section) => {\n                    if (section[mdSideMenuSections.options.children] && section[mdSideMenuSections.options.children].length) {\n                        digest(section[mdSideMenuSections.options.children], section);\n                    }\n                    if (section.showed && toState.name == section.link && toParams.key == section.key) {\n                        mdSideMenuSections.selectedNode = section;\n                        return false;\n                    }\n                });\n\n            return false;\n        }\n\n        mdSideMenuSections.selectedNode = null;\n        $timeout(() => {\n            digest(mdSideMenuSections.sections, null);\n        }, 10);\n    };\n    $rootScope.$on('$stateChangeSuccess', onStateChangeStart);\n\n    return {\n        onStateChangeStart: onStateChangeStart\n    };\n}\n\nmodule.factory('fxSideMenuFactory', [\"$rootScope\", \"$timeout\", \"mdSideMenuSections\", Factory]);\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/sidemenu/status.factory.ts\n **/","import { module } from './module';\nimport * as _ from \"lodash\";\nimport 'restangular';\n\nclass Service {\n    public static _name: string = \"toolbarUtils\";\n\n    public static provider: Array<string | Function> = [() => {\n\n        class Base {\n            constructor(public data?: any) {\n\n            }\n\n            conditionBuilder(condition: string, prefix: boolean = true, useDisabled: boolean = false) {\n                this.data = _.extend({}, this.data, {\n                    conditionInfo: {\n                        condition: condition,\n                        prefix: prefix,\n                        useDisabled: useDisabled\n                    }\n                });\n\n                return this;\n            }\n\n            className(className: string) {\n                this.data = _.extend({}, this.data, {\n                    className: className\n                });\n\n                return this;\n            }\n\n            noOptions(tooltip: boolean = false, icon: boolean = false) {\n                tooltip && delete this.data.tooltip;\n                icon && delete this.data.icon;\n\n                return this;\n            }\n\n            tooltipBuilder(title: string = \"\", position: string = \"bottom\") {\n                this.data = _.extend({}, this.data, {\n                    tooltip: {\n                        title: title,\n                        position: position\n                    }\n                });\n\n                return this;\n            }\n\n            removeTooltip() {\n                this.data.tooltip = null;\n\n                return this;\n            }\n\n            iconBuilder(icon: string, style?: [{ (id: string): any }], ricon?: string, options?: [{ (id: string): any }], size?: string) {\n                this.data = _.extend({}, this.data, {\n                    icon: {\n                        icon: icon,\n                        ricon: ricon,\n                        style: style,\n                        size: size || '24px'\n                    }\n                });\n\n                return this;\n            }\n\n            attrBuilder(attributes: [{ (id: string): any }]) {\n                this.data = _.extend({}, this.data, {\n                    attributes: attributes\n                });\n\n                return this;\n            }\n\n            toolsBuilder(tools: Array<Object>) {\n                this.data = _.extend({}, this.data, {\n                    tools: tools || []\n                });\n\n                return this;\n            }\n\n            btnClick(func: Function) {\n                if (func && _.isFunction(func)) {\n                    this.data = _.extend({}, this.data, {\n                        onClick: func\n                    });\n                }\n\n                return this;\n            }\n\n            menuOptionsBuilder(width: number = 4, items: Array<any> = []) {\n                this.data = _.extend({}, this.data, {\n                    width: width || 4,\n                    items: items || []\n                });\n\n                return this;\n            }\n\n            items(items: Array<any> = []) {\n                this.data = _.extend({}, this.data, {\n                    items: items || []\n                });\n                return this;\n            }\n\n            toValue(): any {\n                return this.data;\n            }\n        }\n\n        class Service extends Base {\n            constructor(public data?: any) {\n                super(data);\n            }\n\n            /**\n             * 按钮配置生成方法\n             * @param title        按钮title\n             * @param cls          按钮className\n             * @param showTitle\n             * @returns {Service}\n             */\n            btnBuilder(title: string, className: string, showTitle: boolean = true, tooltipPosition: string = \"bottom\"): Service {\n                const service = new Service({\n                    type: \"btn\",\n                    title: title,\n                    className: className,\n                    showTitle: showTitle\n                });\n\n                service.tooltipBuilder(title, tooltipPosition);\n\n                return service;\n            }\n\n            menuBuilder(title: string, className: string, showTitle: boolean = true, tooltipPosition: string = \"bottom\"): Service {\n                const service = this.btnBuilder(title, className, showTitle, tooltipPosition);\n\n                service.data.type = \"menu\";\n\n                return service;\n            }\n\n            menuItemBuilder(title: string, className: string, showTitle: boolean = true, tooltipPosition: string = \"bottom\"): Service {\n                const service = this.btnBuilder(title, className, showTitle, tooltipPosition);\n\n                service.data.type = \"menuItem\";\n\n                return service;\n            }\n\n            /**\n             * label配置生成方法\n             * @param title\n             * @returns {Service}\n             */\n            labelBuilder(title: string, cls?: string): Service {\n                return new Service({\n                    type: \"label\",\n                    title: title,\n                    cls: cls\n                });\n            }\n\n            layoutBuilder(flex: string = \"none\", layout: string = \"none\", layoutAlign: string = \"none none\"): Service {\n                return new Service({\n                    type: \"layout\",\n                    flex: flex,\n                    layout: layout,\n                    layoutAlign: layoutAlign\n                });\n            }\n\n            menuBarBuilder(): Service {\n                return new Service({\n                    type: \"menuBar\"\n                });\n            }\n\n            noneBuilder(type: string) {\n                return new Service({\n                    type: type\n                });\n            }\n        }\n\n        return new Service();\n    }];\n}\n\nmodule.service(Service._name, Service.provider);\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/toolbar/toolbar.service.ts\n **/","/**\n * Created by NICK on 16/8/10.\n */\n\nimport * as _ from 'lodash';\nimport * as nv from 'nvd3';\nimport * as d3 from 'd3';\n\nexport class ContentController {\n    public static $inject = [\"$rootScope\", \"$timeout\", \"materialUtils\", \"svgUtils\", \"fxAction\", \"iconInfoDetailForm\"];\n\n    icons: Array<string> = [];\n    filter: string;\n    text: string;\n    standardItems: any;\n    gridsterOpts: any;\n\n    departs: any;\n    treeOptions: any;\n\n    departChartOptions: any;\n    departChartData: any;\n\n    constructor(private $rootScope, private $timeout, private materialUtils, private svgUtils, private fxAction, private iconInfoDetailForm) {\n        this.icons.length = 0;\n\n        _.each(svgUtils.getAllIcons(), (shape, key) => {\n            this.icons.push(key);\n        });\n\n        this.standardItems = [\n            { sizeX: 2, sizeY: 1, row: 0, col: 0, class: \"md-whiteframe-1dp\" },\n            { sizeX: 2, sizeY: 2, row: 0, col: 2, class: \"md-whiteframe-1dp\" },\n            { sizeX: 1, sizeY: 1, row: 0, col: 4, class: \"md-whiteframe-1dp\" },\n            { sizeX: 1, sizeY: 1, row: 0, col: 5, class: \"md-whiteframe-1dp\" },\n            { sizeX: 2, sizeY: 1, row: 1, col: 0, class: \"md-whiteframe-1dp\" },\n            { sizeX: 1, sizeY: 1, row: 1, col: 4, class: \"md-whiteframe-1dp\" },\n            { sizeX: 1, sizeY: 2, row: 1, col: 5, class: \"md-whiteframe-1dp\" },\n            { sizeX: 1, sizeY: 1, row: 2, col: 0, class: \"md-whiteframe-1dp\" },\n            { sizeX: 2, sizeY: 1, row: 2, col: 1, class: \"md-whiteframe-1dp\" },\n            { sizeX: 1, sizeY: 1, row: 2, col: 3, class: \"md-whiteframe-1dp\" },\n            { sizeX: 1, sizeY: 1, row: 2, col: 4, class: \"md-whiteframe-1dp\" }\n        ];\n        this.gridsterOpts = {\n            draggable: {\n                start: function (event, $element, widget) {\n                    widget.class = \"md-whiteframe-16dp\"\n                }, // optional callback fired when drag is started,\n                stop: function (event, $element, widget) {\n                    widget.class = \"md-whiteframe-1dp\"\n                } // optional callback fired when item is finished dragging\n            }\n        };\n\n        this.getDetaitInfo();\n        this.getChartInfo();\n    }\n\n    doOpenIconInfo($event, iconInfo: string) {\n        this.fxAction.doActionModel($event, this.iconInfoDetailForm, { key: iconInfo });\n    }\n\n    getDetaitInfo() {\n        let promise = this.fxAction.doAction('departTreeAction', null);\n\n        promise && promise.then((results) => {\n            let nodes: Array<any> = [];\n\n            _.forEach(results, (result) => {\n                if (_.isArray(result)) {\n                    nodes = nodes.concat(result);\n                }\n            });\n\n            let nodesGroupByDepth = _.groupBy(_.keyBy(nodes, \"key\"), \"depth\");\n            let depth = 0, root = {};\n\n            while (true) {\n                let nodesIsDepth = nodesGroupByDepth[depth];\n                let parentIsDepth = nodesGroupByDepth[depth - 1];\n\n                if (nodesIsDepth && nodesIsDepth.length > 0) {\n                    switch (depth) {\n                        case 0:\n                            root = nodesIsDepth[0];\n                            break;\n                        case 1:\n                            root['nodes'] = nodesIsDepth;\n                            break;\n                        default:\n                            _.forEach(parentIsDepth, (parentNode) => {\n                                parentNode[\"nodes\"] = _.filter(nodesIsDepth, (node) => {\n                                    return node.lft > parentNode.lft && parentNode.rgt > node.rgt;\n                                });\n                            });\n                            break;\n                    }\n                } else {\n                    break;\n                }\n                depth++;\n            }\n            this.departs = root[\"nodes\"];\n        });\n\n        this.treeOptions = {\n            nodeChildren: \"nodes\",\n            dirSelectable: false,\n            templateUrl: 'treeControlExternalTemplate.html',\n            injectClasses: {\n                ul: \"a1\",\n                li: \"a2\",\n                liSelected: \"a7\",\n                iExpanded: \"a3\",\n                iCollapsed: \"a4\",\n                iLeaf: \"a5\",\n                label: \"a6\",\n                labelSelected: \"a8\"\n            }\n        };\n    }\n\n    getChartInfo() {\n\n        this.departChartOptions = {\n            chart: {\n                type: 'multiBarChart',\n                // height: 450,\n                \"margin\": {\n                    \"top\": 50,\n                    \"right\": 20,\n                    \"bottom\": 50,\n                    \"left\": 50\n                },\n                x: function (d) {\n                    return d[0];\n                },\n                y: function (d) {\n                    return d[1];\n                },\n                stacked: true,\n                \"clipEdge\": true,\n                \"duration\": 500,\n                \"xAxis\": {\n                    \"axisLabel\": \"设备类型\",\n                    \"showMaxMin\": true\n                },\n                \"yAxis\": {\n                    \"axisLabel\": \"数量\",\n                    \"axisLabelDistance\": -20\n                }\n            }\n        };\n\n        this.fxAction.doAction(\"deviceChartAction\", {}).then((result) => {\n            let dataMap = [];\n\n            let types = _.keyBy(result.deviceChart.aggregations.type_aggs.buckets, (val: any) => {\n                return val.key;\n            });\n\n            _.each(result.deviceChart.aggregations.depart_aggs.buckets, (val, key) => {\n                let data = {\n                    key: val.key,\n                    values: []\n                };\n\n                let buckets = _.keyBy(val.type_aggs.buckets, (val: any) => {\n                    return val.key;\n                });\n\n                _.forEach(types, (t, key) => {\n                    if (buckets[key]) {\n                        // data.values.push({ key: key, value: buckets[key].doc_count });\n                        data.values.push([key, buckets[key].doc_count]);\n                    } else {\n                        // data.values.push({ key: key, value: 0 });\n                        data.values.push([key, 0]);\n                    }\n                });\n                dataMap.push(data);\n            });\n\n            this.departChartData = dataMap;\n        });\n    }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/home/ctls/content.controller.ts\n **/","/**\n * Created by NICK on 16/8/10.\n */\n\n\nexport class HomeController {\n    public static $inject = [\"$rootScope\", \"materialUtils\", \"toolbarUtils\", \"fxAction\"];\n\n    toolbars: Object | Array<Object>;\n\n    constructor(private $rootScope: ng.IRootScopeService, private materialUtils: fx.utils.materialStatic, private toolbarUtils, private fxAction) {\n        $rootScope[\"isOpenMenu\"] = false;\n\n        this.toolbars = [\n            toolbarUtils.labelBuilder(\"\").attrBuilder({ flex: \"\" }).toValue(),\n            toolbarUtils.noneBuilder(\"icon\").className(\"md-margin\").iconBuilder(\"people\", {}, null, null, \"24px\").toValue(),\n            toolbarUtils.labelBuilder(\"{{$root.user.username}}\", \"md-subhead\").attrBuilder({}).toValue(),\n            toolbarUtils.menuBarBuilder().className(\"md-no-padding\").removeTooltip().items([\n                toolbarUtils.menuBuilder(\"\", \"md-icon-button\").attrBuilder({ \"md-position-mode\": \"left bottom\" }).iconBuilder(\"expand_more\").menuOptionsBuilder().items([\n                    // toolbarUtils.menuItemBuilder(\"系统设置\", \"\", true).iconBuilder(\"settings\").btnClick(($event) => {\n                    // }).toValue(),\n                    // toolbarUtils.noneBuilder(\"menuDivider\").toValue(),\n                    // toolbarUtils.menuItemBuilder(\"修改密码\", \"\", true).iconBuilder(\"key-change\").btnClick(($event) => {\n                    //     this.doExit($event);\n                    // }).toValue(),\n                    toolbarUtils.menuItemBuilder(\"退出登录\", \"\", true).iconBuilder(\"power-settings\").btnClick(($event) => {\n                        this.doExit($event);\n                    }).toValue(),\n                ]).toValue()\n            ]).toValue()\n        ];\n    }\n\n    /**\n    * 退出登录\n    * @param $event\n    */\n    doExit($event: MouseEvent) {\n        this.fxAction.getModel('logout').then((model) => {\n            const promise = this.fxAction.doActionModel($event, model);\n\n            if (promise) {\n                promise.then(() => {\n                    console.log(\"logout\");\n                });\n            }\n        });\n    }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/home/ctls/home.controller.ts\n **/","/**\n * Created by NICK on 16/8/10.\n */\n\nimport * as _ from 'lodash';\nimport Dictionary = _.Dictionary;\n\nexport class SidenavLeftController {\n    static $inject = [\"$rootScope\", \"mdSideMenuSections\", \"toolbarUtils\", \"fxAction\", \"$state\", \"$stateParams\", \"$timeout\", \"fxSideMenuFactory\"];\n\n    toolbarBottom: Object;\n    selectedNodes = {};\n    modules: Array<any>;\n    doLinkBind: Function;\n    toolbar: Object | Array<Object>;\n\n    constructor(private $rootScope, private mdSideMenuSections, private toolbarUtils, private fxAction, private $state: angular.ui.IStateService, private $stateParams: ng.ui.IStateParamsService, private $timeout: ng.ITimeoutService, private fxSideMenuFactory) {\n        this.initModules().initToolbar();\n        this.doLinkBind = this.doLink.bind(this);\n\n        this.toolbar = [\n            toolbarUtils.labelBuilder(\"CMDB\").attrBuilder({ flex: \"\" }).toValue()\n        ];\n    }\n\n    /**\n     * 计算模块的层级关系\n     */\n    getModules() {\n        let promise = this.fxAction.doAction('moduleMenuAction', null);\n\n        promise && promise.then((results) => {\n            let nodes: Array<any> = [];\n\n            _.forEach(results, (result) => {\n                if (_.isArray(result)) {\n                    nodes = nodes.concat(result);\n                }\n            });\n\n            let nodesGroupByDepth = _.groupBy(_.keyBy(nodes, \"key\"), \"depth\");\n            let depth = 0, root = {};\n\n            while (true) {\n                let nodesIsDepth = nodesGroupByDepth[depth];\n                let parentIsDepth = nodesGroupByDepth[depth - 1];\n\n                if (nodesIsDepth && nodesIsDepth.length > 0) {\n                    switch (depth) {\n                        case 0:\n                            root = nodesIsDepth[0];\n                            break;\n                        case 1:\n                            root['nodes'] = nodesIsDepth;\n                            break;\n                        default:\n                            _.forEach(parentIsDepth, (parentNode) => {\n                                parentNode[\"nodes\"] = _.filter(nodesIsDepth, (node) => {\n                                    return node.lft > parentNode.lft && parentNode.rgt > node.rgt;\n                                });\n                            });\n                            break;\n                    }\n                } else {\n                    break;\n                }\n                depth++;\n            }\n\n            this.mdSideMenuSections.sections = root[\"nodes\"];\n            this.modules = this.mdSideMenuSections.sections;\n            this.selectedNodes = _.keyBy(nodesGroupByDepth[1], \"key\") || {};\n            this.fxSideMenuFactory.onStateChangeStart(null, this.$state.current, this.$state.params);\n        });\n    }\n\n    /**\n     * 初始化菜单\n     * @returns {SidenavLeftController}\n     */\n    initModules() {\n        this.getModules();\n\n        this.mdSideMenuSections.options = {\n            children: \"nodes\",\n            key: 'key',\n            dirSelectable: false,\n            orderBy: 'lft',\n            filterField: 'key'\n        };\n\n        return this;\n    }\n\n    /**\n     * 初始化底部按钮\n     * @returns {SidenavLeftController}\n     */\n    initToolbar() {\n        this.toolbarBottom = [\n            this.toolbarUtils.layoutBuilder(\"\", \"row\", \"space-around center\").toolsBuilder([\n                this.toolbarUtils.btnBuilder(\"刷新\", \"md-icon-button\", false, \"top\").iconBuilder(\"refresh\").btnClick(($event) => {\n                    this.getModules();\n                }).toValue(),\n                this.toolbarUtils.btnBuilder(\"全部折叠\", \"md-icon-button\", false, \"top\").iconBuilder(\"dehaze\").btnClick(($event) => {\n                    _.forEach(this.selectedNodes, (val, key) => {\n                        delete this.selectedNodes[key];\n                    })\n                }).toValue(),\n                // this.toolbarUtils.btnBuilder(\"关掉菜单栏\", \"md-icon-button\", false, \"top\").iconBuilder(\"close\").btnClick(($event) => {\n                //     this.$rootScope[\"isOpenMenu\"] = false;\n                // }).toValue()\n            ]).toValue()\n        ];\n\n        return this;\n    }\n\n    /**\n     * 点击左侧导航栏事件\n     * @param $event\n     * @param node\n     */\n    doLink($event, node) {\n        if (node && node.link && node.key) {\n            this.$timeout(() => {\n                this.$state.go(node.link, node);\n            }, 200);\n        }\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/home/ctls/sidenavl.controller.ts\n **/","/**\n * Created by NICK on 16/8/9.\n * 首页,用于生成页面框架\n */\n\nimport * as ngMaterial from 'angular-material';\nimport 'angular-ui-router';\nimport * as ngMaterialIcons from 'angular-material-icons';\nimport * as _ from 'lodash';\nimport actionDir from '../../directives/action';\nimport { initRouter } from './router';\nimport materialService from '../../services/material.service';\nimport svgUtilsMod from '../../services/svg.service';\nimport toolbar from '../../directives/toolbar';\nimport sidemenu from '../../directives/sidemenu';\nimport 'expose?SVGMorpheus!exports?SVGMorpheus!svg-morpheus';\nimport { ActionType } from '../../directives/action/models/action.model';\nimport \"./index.scss\";\n\nimport 'angular-gridster';\nimport 'angular-tree-control';\nimport 'd3';\nimport 'nvd3.js';\nimport 'angular-nvd3';\n\nconst module = angular.module(\"homeModule\", [actionDir, toolbar, sidemenu, svgUtilsMod, materialService, ngMaterial, 'ui.router', 'nvd3', ngMaterialIcons, 'gridster','treeControl']);\n\nmodule.config([\n    \"$stateProvider\",\n    \"$urlRouterProvider\",\n    \"$httpProvider\",\n    \"$mdThemingProvider\",\n    \"$mdAriaProvider\",\n    \"$locationProvider\",\n    \"mdSideMenuSectionsProvider\",\n    ($stateProvider, $urlRouterProvider, $httpProvider, $mdThemingProvider, $mdAriaProvider, $locationProvider, mdSideMenuSectionsProvider, cfpLoadingBarProvider: angular.loadingBar.ILoadingBarProvider) => {\n        $mdThemingProvider.alwaysWatchTheme(true);\n        $mdAriaProvider.disableWarnings();\n        $mdThemingProvider.theme('default')\n            // .dark()\n            .primaryPalette('grey')\n            .accentPalette('blue')\n            .warnPalette('red');\n        // 初始化路由\n        initRouter($urlRouterProvider, $stateProvider);\n        // sideMenu初始化\n        mdSideMenuSectionsProvider.initWithTheme($mdThemingProvider);\n    }])\n    .run([\"$rootScope\", \"$state\", \"$q\", \"svgUtils\", \"fxAction\", \"fxSideMenuFactory\", ($rootScope: ng.IRootScopeService, $state, $q: ng.IQService, svgUtils: fx.utils.svgStatic, fxAction) => {\n        let state: { $$isFinish?: boolean, toState?: ng.ui.IState, toParams?: Object, options?: Object } = {};\n        // 处理路回调\n        let handleResolve = (isComplete) => {\n            state.$$isFinish = true;\n            $state.go(state.toState.name, state.toParams, state.options);\n        };\n\n        $rootScope.$on(\"$stateRefresh\", () => {\n            state.$$isFinish = false;\n        });\n\n        // 注册路由更改事件\n        $rootScope.$on(\"$stateChangeStart\", (evt, toState, toParams, fromState, fromParams) => {\n            console.log(\"$stateChangeStart\", evt, toState, toParams, fromState, fromParams);\n        });\n        // 处理首次加载的时候,加载2个svg文件\n        $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams, options) {\n            if (!state.$$isFinish) {\n                _.extend(state, {\n                    toState: toState,\n                    toParams: toParams,\n                    fromState: fromState,\n                    fromParams: fromParams,\n                    options: options\n                });\n                event.preventDefault();\n                $q.all({\n                    mdi: svgUtils.loadSvgUrl(__dirname + 'svgs/mdi.svg'),\n                    weibo: svgUtils.loadSvgUrl(__dirname + 'svgs/weibo.svg'),\n                    configConfig: fxAction.doAction(\"configAction\", {}).then((result) => {\n                        $rootScope[\"config\"] = result.configAction.config;\n                    }),\n                    userinfoAction: fxAction.doAction(\"userinfoAction\", {}).then((result) => {\n                        result.userinfo && ($rootScope[\"user\"] = result.userinfo);\n                    })\n                }).then(() => { handleResolve(true) }, () => { handleResolve(false) });\n            }\n        });\n        // 获取服务器一些配置信息\n        // fxAction.doAction(\"configAction\", {}).then((result) => {\n        //     $rootScope[\"config\"] = result.configAction.config;\n        // });\n        // fxAction.doAction(\"userinfoAction\", {}).then((result) => {\n        //     result.userinfo && ($rootScope[\"user\"] = result.userinfo.username);\n        // });\n    }]);\n\n// 添加一个操作,显示ICON的KEY值表单\nmodule.value(\"iconInfoDetailForm\", {\n    key: \"iconInfoDetailForm\",\n    icon: \"search\",\n    type: ActionType.form,\n    title: \"ICON详情\",\n    form: {\n        dataSchema: {\n            type: \"object\",\n            properties: {\n                key: {\n                    type: \"string\",\n                    title: \"KEY\"\n                }\n            }\n        },\n        formSchema: [{\n            key: \"key\",\n            type: \"string\",\n            placeHolder: \"KEY\",\n            htmlClass: \"md-block\"\n        }]\n    }\n});\n\nexport default `${module.name}`;\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/home/index.ts\n **/","module.exports = __webpack_public_path__ + \"7af35d2f474641e3a73ea274191a9107.jpg\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pages/home/logo.jpg\n ** module id = 359\n ** module chunks = 2\n **/"],"sourceRoot":""}