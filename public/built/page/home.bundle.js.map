{"version":3,"sources":["webpack:///page/home.bundle.js","webpack:///./src/directives/sidemenu/module.ts","webpack:///./src/directives/toolbar/module.ts","webpack:///./~/angular-tree-control/angular-tree-control.js","webpack:///./~/angular-ui-router/release/angular-ui-router.js","webpack:///./~/svg-morpheus/compile/unminified/svg-morpheus.js?6f3d","webpack:///./src/pages/home/index.scss?7f53","webpack:///./src/directives/sidemenu/index.ts","webpack:///./src/directives/toolbar/index.ts","webpack:///./src/pages/home/router.ts","webpack:///./src/services/svg.service.ts","webpack:///./src/directives/sidemenu/styles/sidemenu.scss","webpack:///./src/pages/home/index.scss","webpack:///./~/svg-morpheus/compile/unminified/svg-morpheus.js","webpack:///./src/directives/sidemenu/tpls/search.jade","webpack:///./src/directives/sidemenu/tpls/sidemenu.jade","webpack:///./src/directives/toolbar/tpls/btn.jade","webpack:///./src/directives/toolbar/tpls/icon.jade","webpack:///./src/directives/toolbar/tpls/label.jade","webpack:///./src/directives/toolbar/tpls/layout.jade","webpack:///./src/directives/toolbar/tpls/menu-divider.jade","webpack:///./src/directives/toolbar/tpls/menu-item.jade","webpack:///./src/directives/toolbar/tpls/menu.jade","webpack:///./src/directives/toolbar/tpls/menubar.jade","webpack:///./src/pages/home/tpls/content.template.jade","webpack:///./src/pages/home/tpls/home.template.jade","webpack:///./src/pages/home/tpls/sidenavl.template.jade","webpack:///./src/directives/sidemenu/styles/sidemenu.scss?eb19","webpack:///./src/directives/sidemenu/child.directive.ts","webpack:///./src/directives/sidemenu/content.directive.ts","webpack:///./src/directives/sidemenu/mdcolor.directive.ts","webpack:///./src/directives/sidemenu/search.directive.ts","webpack:///./src/directives/sidemenu/section.provider.ts","webpack:///./src/directives/sidemenu/status.factory.ts","webpack:///./src/directives/toolbar/toolbar.service.ts","webpack:///./src/pages/home/ctls/content.controller.ts","webpack:///./src/pages/home/ctls/home.controller.ts","webpack:///./src/pages/home/ctls/sidenavl.controller.ts","webpack:///./src/pages/home/index.ts","webpack:///./src/pages/home/logo.jpg"],"names":["webpackJsonp","12","module","exports","__webpack_require__","Directive","mdSideMenuSections","restrict","replace","require","_name","transclude","controllerAs","scope","modules","bindToController","selectedNodes","doLink","controller","Controller","compile","$ele","$attr","childTranscludeFn","$scope","$element","attrs","$ctrl","$watch","newValue","opts","options","_","isArray","angular","isDefined","node","equals","children","clone","html","append","$sideMenuTransclude","_module","$compile","$interpolate","this","template","prototype","doLinkPre","$event","isFunction","console","log","showChildren","hasOwnProperty","key","length","isShowChildren","isLeaf","rgt","lft","isSelected","selectedNode","$inject","directive","Object","defineProperty","value","name","156","ctls","ngDisabled","items","ngModel","index","link","$ctl","$watchCollection","model","isObject","dig","error","Strategy","tools","register","get","strategy","$rootScope","materialUtils","openMenu","$mdOpenMenu","ev","models","_this","each","tmp","$newEle","$newScope","$new","cloneDeep","disabled","conditionInfo","condition","prefix","useDisabled","$parent","oldValue","element","attributes","attr","174","createPath","startScope","prevNode","_path","synteticRoot","push","ensureDefault","obj","prop","defaultIsLeaf","nodeChildren","shallowCopy","src","dst","i","call","charAt","defaultEquality","a","b","defaultIsSelectable","ensureAllDefaultOptions","injectClasses","constant","templateUrl","classIfDefined","cssClass","addClassProperty","treeModel","expandedNodes","onSelection","onNodeToggle","orderBy","reverseOrder","filterExpression","filterComparator","$templateCache","treeConfig","isSelectedNode","multiSelection","equality","expandedNodesMap","parentScopeOfTree","headClass","liSelectionClass","liSelected","injectSelectionClass","$id","iBranchClass","iExpanded","iCollapsed","nodeExpanded","selectNodeHead","transcludedScope","expanding","undefined","splice","parentNode","path","$parentNode","$path","$index","$first","$middle","$last","$odd","$even","expanded","selectNodeLabel","dirSelectable","isSelectable","selected","pos","allowDeselect","selectedClass","isThisNodeSelected","labelSelectionClass","labelSelected","unselectableClass","isThisNodeUnselectable","labelUnselectableClass","labelUnselectable","isReverse","orderByFunc","templateOptions","ulClass","ul","liClass","li","iLeafClass","iLeaf","labelClass","label","treemodelCntr","notFoundIds","newExpandedNodesMap","$liElements","find","existingScopes","forEach","liElement","$liElement","liScope","data","newExNode","found","existingScope","$treeTransclude","$parse","$attrs","id","newSelectedNodes","transcludeScope","$on","$destroy","empty","175","window","inherit","parent","extra","extend","merge","arguments","ancestors","first","second","n","objectKeys","object","keys","result","val","indexOf","array","Array","Number","len","from","Math","ceil","floor","inheritParams","currentParams","newParams","$current","$to","parentParams","parents","inherited","inheritList","params","j","equalForKeys","k","filterByKeys","values","filtered","pick","copy","concat","apply","slice","omit","filter","collection","callback","map","silenceUncaughtInPromise","promise","then","$Resolve","$q","$injector","VISIT_IN_PROGRESS","VISIT_DONE","NOTHING","NO_DEPENDENCIES","NO_LOCALS","NO_PARENT","when","$$promises","$$values","study","invocables","visit","visited","cycle","Error","join","isString","plan","annotate","param","pop","isResolve","invocableKeys","locals","self","done","wait","merged","$$inheritedValues","resolution","resolve","fail","reason","$$failure","reject","invoke","invocable","onfailure","invocation","proceed","e","defer","waitParams","dep","promises","ii","$TemplateFactory","$http","fromConfig","config","fromString","fromUrl","templateProvider","fromProvider","url","cache","headers","Accept","response","provider","UrlMatcher","pattern","parentMatcher","addParameter","type","location","paramNames","test","$$UMFP","Param","quoteRegExp","string","squash","optional","surroundPattern","matchDetails","m","isSearch","regexp","segment","cfg","substring","last","RegExp","caseInsensitive","placeholder","searchPlaceholder","compiled","segments","$$new","ParamSet","source","p","exec","isOptional","lastIndex","search","sourceSearch","sourcePath","strict","$$paramNames","Type","$UrlMatcherFactory","valToString","toString","~","/","valFromString","~~","~2F","getDefaultConfig","isStrictMode","isCaseInsensitive","isInjectable","flushTypeQueue","typeQueue","shift","$types","injector","def","defaultSquashPolicy","enqueue","defaultTypes","encode","decode","is","int","parseInt","bool","date","getFullYear","getMonth","getDate","match","capture","Date","isNaN","valueOf","toISOString","json","toJson","fromJson","any","identity","$$getDefaultValue","strictMode","isMatcher","o","definition","definitionFn","$get","unwrapShorthand","isShorthand","$$fn","getType","urlType","getArrayMode","arrayDefaults","arrayParamNomenclature","getSquashPolicy","getReplace","arrayMode","configuredKeys","defaultPolicy","to","item","defaultValue","$value","hasReplaceVal","$replace","replacement","$normalize","$asArray","dynamic","$$parent","$$keys","chain","ignore","reverse","paramset","paramValues","$$equals","paramValues1","paramValues2","equal","left","right","$$validates","rawVal","normalized","encoded","$UrlRouterProvider","$locationProvider","$urlMatcherFactory","regExpPrefix","re","interpolate","what","handleIfMatch","handler","$match","$location","$browser","$sniffer","appendBasePath","isHtml5","absolute","baseHref","update","evt","check","rule","handled","defaultPrevented","lastPushedUrl","rules","otherwise","listen","listener","interceptDeferred","sync","read","urlMatcher","format","$$avoidResync","href","validates","html5Mode","enabled","history","hashPrefix","slash","port","protocol","host","redirect","handlerIsString","strategies","matcher","regex","global","sticky","deferIntercept","$StateProvider","$urlRouterProvider","isRelative","stateName","findState","stateOrName","base","isStr","rel","split","pathLength","current","state","states","queueState","parentName","queue","flushQueuedChildren","queued","registerState","lastIndexOf","stateBuilder","$delegates","abstractKey","$stateParams","$state","navigable","transitionTo","isGlob","text","doesStateMatchGlob","glob","globSegments","l","unshift","MAX_VALUE","decorator","func","$view","$resolve","$urlRouter","handleRedirect","$broadcast","TransitionAborted","retry","$retry","TransitionFailed","retryTransition","transition","toParams","TransitionSuperseded","resolveState","paramsAreFiltered","resolveViews","viewsPromises","views","view","injectables","$template","load","globals","notify","controllerProvider","injectLocals","$$controller","$$state","$$controllerAs","$$resolveAs","resolveAs","all","TransitionSupersededError","TransitionPrevented","root","reload","go","relative","fromParams","fromPath","toState","hash","redirectResult","toPath","keep","toLocals","reloadState","ownParams","shouldSkipReload","resolved","entering","exiting","onExit","onEnter","includes","paramDef","lossy","nav","context","nonSearchParamsEqual","fromAndToState","notSearchParam","nonQueryParamKeys","nonQueryParams","nonQueryParamSet","reloadOnSearch","compositeName","","abstract","$ViewProvider","$templateFactory","defaults","async","$ViewScrollProvider","useAnchorScroll","$anchorScroll","$timeout","scrollIntoView","$ViewDirective","$uiViewScroll","getService","service","has","getRenderer","statics","enter","target","cb","after","leave","remove","$animate","version","minor","$animator","animate","terminal","priority","tElement","tAttrs","$transclude","cleanupLastView","previousEl","currentScope","currentEl","$uiViewData","renderer","$$animLeave","updateView","firstTime","newScope","getUiViewName","previousLocals","latestLocals","$emit","animEnter","animLeave","viewAnimData","$animEnter","$animLeave","autoScrollExp","$eval","onloadExp","onload","autoscroll","inheritedData","$ViewDirectiveFill","$controller","initial","resolveData","contents","$onInit","uiView","uiViewCreatedBy","parseStateRef","ref","parsed","preparsed","paramExpr","stateContext","el","stateData","getTypeInfo","isSvg","isForm","nodeName","isAnchor","toUpperCase","clickable","clickHook","button","which","ctrlKey","metaKey","shiftKey","preventDefault","ignorePreventDefaultCount","cancel","defaultOpts","$StateRefDirective","uiSrefActive","hookFn","uiSref","active","unlinkInfoFn","uiSrefOpts","$$addStateInfo","$set","on","off","$StateRefDynamicDirective","runStateRefLink","group","uiState","uiStateParams","uiStateOpts","watch","$StateRefActiveDirective","addState","stateParams","activeClass","stateHash","createStateHash","stateInfo","activeClasses","idx","anyMatch","addClass","removeClass","exactMatch","activeEqClass","className","uiSrefActiveEq","newState","deregister","$IsStateFilter","isFilter","$stateful","$IncludedByStateFilter","includesFilter","defaultConfig","searchParams","decodePathArray","reverseString","str","unquoteDashes","allReversed","paramName","parameters","nTotal","nPath","paramVal","encodeDashes","encodeURIComponent","c","charCodeAt","isPathParam","isDefaultValue","nextSegment","isFinalPathParam","$subPattern","sub","substr","mode","ArrayType","bindTo","callbackName","arrayWrap","arrayUnwrap","falsey","arrayHandler","allTruthyMode","arrayEqualsHandler","val1","val2","$arrayMode","run","factory","autoinject","176","189","content","198","module_1","199","200","home_controller_1","sidenavl_controller_1","content_controller_1","initRouter","$stateProvider","permissions","except","only","HomeController","sidenavLeft@home","SidenavLeftController","content@home","ContentController","204","ngMaterialIcons","ngMaterial","Service","$templateRequest","ngMdIconService","getAllIcons","getShapes","loadSvgUrl","viewBox","svg","querySelectorAll","g","addShape","innerHTML","addViewBox","226","227","239","SVGMorpheus","styleNormCalc","styleNormFrom","styleNormTo","progress","styleNorm","r","opacity","styleNormToString","style","rgbToString","styleToNorm","styleFrom","styleTo","getRGB","transCalc","transFrom","transTo","res","trans2string","trans","rotate","curveCalc","curveFrom","curveTo","curve","len1","len2","document","querySelector","that","_icons","_curIconId","iconId","_toIconId","_curIconItems","_fromIconItems","_toIconItems","_morphNodes","_morphG","_startTime","_defDuration","duration","_defEasing","easing","_defRotation","rotation","_defCallback","_duration","_easing","_rotation","_callback","_rafid","_fnTick","timePassed","min","_updateAnimationProgress","_reqAnimFrame","_animationEnd","_svgDoc","getSVGDocument","_init","addEventListener","easings","t","sqrt","s","abs","PI","asin","pow","sin","cos","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","oRequestAnimationFrame","_cancelAnimFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","oCancelAnimationFrame","spaces","pathCommand","pathValues","parsePathString","pathString","paramCounts","h","q","v","u","z","String","toLowerCase","catmullRom2bezier","crp","d","iLen","x","y","ellipsePath","rx","ry","rad","x1","x2","y1","y2","pathToAbsolute","pathArray","pa0","mx","my","start","pa","crz","dots","jj","kk","l2c","q2c","ax","ay","_13","_23","a2c","angle","large_arc_flag","sweep_flag","recursive","xy","_120","X","Y","f1","f2","cx","cy","rx2","ry2","toFixed","df","f2old","x2old","y2old","c1","s1","c2","s2","tan","hx","hy","m1","m2","m3","m4","newres","path2curve","path2","p2","bx","by","qx","qy","attrs2","processPath","pcom","nx","ny","T","Q","fixArc","pp","pi","pcoms1","pcoms2","max","fixM","path1","a1","a2","pfirst","seg","seg2","seglen","seg2len","parseFloat","box","width","height","w","curveDim","x0","y0","x3","y3","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","curvePathBBox","dim","xmin","ymin","xmax","ymax","bb","p2s","path2string","hsrg","hs","rg","colourRegExp","commaSpaces","rgb","round","toHex","color","getElementsByTagName","red","out","defaultView","getComputedStyle","getPropertyValue","packageRGB","isFinite","hsb2rgb","R","G","B","C","hsl2rgb","colour","green","blue","icon","lastIconId","childNodes","nodeIcon","getAttribute","nodeItem","points","len3","attrib","specified","len4","styleName","removeChild","createElementNS","replaceChild","defaultIcon","_setupAnimation","toIconId","morphNode","fromIconItemIdx","toIconItemIdx","toBB","maxNum","appendChild","fromIconItem","toIconItem","curves","attrsNorm","degAdd","random","transStr","setAttribute","registerEasing","fn","267","jade","jade_debug","DebugItem","buf","filename","err","rethrow","lineno","268","269","270","271","272","273","274","275","276","277","278","279","306","332","333","334","mdStyleColor","themeColors","hueR","colorR","colorA","hueA","colorValue","_apply_color","theme","colors","hues","palettes","css","oldVal","newVal","warn","335","searchText","title","timeID","336","Provider","_theme","_palettes","_sections","initWithSections","initWithTheme","_PALETTES","MdSideMenuSections","sections","searchStr","337","Factory","onStateChangeStart","event","digest","currentSection","section","showed","338","__extends","__","constructor","create","Base","conditionBuilder","noOptions","tooltip","tooltipBuilder","position","iconBuilder","ricon","size","attrBuilder","toolsBuilder","btnClick","onClick","menuOptionsBuilder","toValue","_super","btnBuilder","showTitle","tooltipPosition","menuBuilder","menuItemBuilder","labelBuilder","cls","layoutBuilder","flex","layout","layoutAlign","menuBarBuilder","noneBuilder","339","svgUtils","fxAction","iconInfoDetailForm","icons","shape","standardItems","sizeX","sizeY","row","col","class","gridsterOpts","draggable","widget","stop","getDetatInfo","doOpenIconInfo","iconInfo","doActionModel","doAction","results","nodes","nodesGroupByDepth","groupBy","keyBy","depth","_loop_1","nodesIsDepth","parentIsDepth","state_1","departs","treeOptions","340","toolbarUtils","toolbars","md-position-mode","doExit","getModel","341","fxSideMenuFactory","initModules","initToolbar","doLinkBind","bind","toolbar","getModules","filterField","toolbarBottom","342","__dirname","action_1","router_1","material_service_1","svg_service_1","toolbar_1","sidemenu_1","action_model_1","$httpProvider","$mdThemingProvider","$mdAriaProvider","mdSideMenuSectionsProvider","cfpLoadingBarProvider","alwaysWatchTheme","disableWarnings","primaryPalette","accentPalette","warnPalette","handleResolve","isComplete","$$isFinish","fromState","mdi","weibo","configConfig","configAction","userinfoAction","userinfo","ActionType","form","dataSchema","properties","formSchema","placeHolder","htmlClass","355"],"mappings":"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","file":"page/home.bundle.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 12:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar _ = __webpack_require__(3);\n\t__webpack_require__(306);\n\tvar _name = \"fxSideMenu\", _module = _name + \"Module\";\n\tvar Controller = (function () {\n\t    function Controller($scope, $compile, $interpolate, mdSideMenuSections) {\n\t        this.$scope = $scope;\n\t        this.$compile = $compile;\n\t        this.$interpolate = $interpolate;\n\t        this.mdSideMenuSections = mdSideMenuSections;\n\t        this.options = {};\n\t        this.template = $compile($interpolate(__webpack_require__(268)())({\n\t            opts: mdSideMenuSections.options\n\t        }));\n\t        this.options = this.mdSideMenuSections.options;\n\t    }\n\t    Controller.prototype.doLinkPre = function ($event, node) {\n\t        if (_.isFunction(this.doLink)) {\n\t            this.doLink($event, node);\n\t        }\n\t        console.log(node);\n\t    };\n\t    Controller.prototype.showChildren = function (node) {\n\t        var opts = this.mdSideMenuSections.options;\n\t        if (this.selectedNodes.hasOwnProperty(node[opts.key])) {\n\t            delete this.selectedNodes[node[opts.key]];\n\t        }\n\t        else {\n\t            if (node[opts.children] && node[opts.children].length) {\n\t                this.selectedNodes[node[opts.key]] = node;\n\t            }\n\t        }\n\t    };\n\t    Controller.prototype.isShowChildren = function (node) {\n\t        var opts = this.mdSideMenuSections.options;\n\t        return !!this.selectedNodes[node[opts.key]];\n\t    };\n\t    Controller.prototype.isLeaf = function (node) {\n\t        var opts = this.mdSideMenuSections.options;\n\t        return node.rgt - node.lft == 1 || !node[opts.children] || node[opts.children].length == 0;\n\t    };\n\t    Controller.prototype.isSelected = function (node) {\n\t        var opts = this.mdSideMenuSections.options;\n\t        return !!this.mdSideMenuSections.selectedNode && this.mdSideMenuSections.selectedNode[opts.key] == node[opts.key];\n\t    };\n\t    return Controller;\n\t}());\n\tController.$inject = [\"$scope\", \"$compile\", \"$interpolate\", \"mdSideMenuSections\"];\n\tfunction Directive(mdSideMenuSections) {\n\t    return {\n\t        restrict: 'EA',\n\t        replace: false,\n\t        require: _name,\n\t        transclude: true,\n\t        controllerAs: \"sideCtl\",\n\t        scope: {\n\t            modules: '='\n\t        },\n\t        bindToController: {\n\t            selectedNodes: '=',\n\t            doLink: '=?ngClick'\n\t        },\n\t        controller: Controller,\n\t        compile: function ($ele, $attr, childTranscludeFn) {\n\t            return function ($scope, $element, attrs, $ctrl) {\n\t                $scope.$watch(\"modules\", function updateNodeOnRootScope(newValue) {\n\t                    var opts = mdSideMenuSections.options;\n\t                    if (_.isArray(newValue)) {\n\t                        if (angular.isDefined($scope.node) && angular.equals($scope.node[opts.children], newValue)) {\n\t                            return;\n\t                        }\n\t                        $scope.node = {};\n\t                        $scope.node[opts.children] = newValue;\n\t                    }\n\t                    else {\n\t                        if (angular.equals($scope.node, newValue)) {\n\t                            return;\n\t                        }\n\t                        $scope.node = newValue;\n\t                    }\n\t                });\n\t                $ctrl[\"template\"]($scope, function (clone) {\n\t                    $element.html('').append(clone);\n\t                });\n\t                $scope.$sideMenuTransclude = childTranscludeFn;\n\t            };\n\t        }\n\t    };\n\t}\n\texports.module = angular.module(_module, [\"ngAnimate\", \"ngMaterial\"]).directive(_name, [\"mdSideMenuSections\", Directive]);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = \"\" + exports.module.name;\n\n\n/***/ },\n\n/***/ 156:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar _ = __webpack_require__(3);\n\tvar _name = \"fxToolbar\";\n\tvar Strategy = (function () {\n\t    function Strategy() {\n\t        this.tools = {};\n\t    }\n\t    Strategy.prototype.register = function (key, template) {\n\t        this.tools[key] = template;\n\t    };\n\t    Strategy.prototype.get = function (key) {\n\t        return this.tools[key] || \"\";\n\t    };\n\t    return Strategy;\n\t}());\n\tvar strategy = new Strategy();\n\tstrategy.register(\"icon\", __webpack_require__(270)());\n\tstrategy.register(\"btn\", __webpack_require__(269)());\n\tstrategy.register(\"layout\", __webpack_require__(272)());\n\tstrategy.register(\"label\", __webpack_require__(271)());\n\tstrategy.register(\"menu\", __webpack_require__(275)());\n\tstrategy.register(\"menuItem\", __webpack_require__(274)());\n\tstrategy.register(\"menuBar\", __webpack_require__(276)());\n\tstrategy.register(\"menuDivider\", __webpack_require__(273)());\n\tvar Controller = (function () {\n\t    function Controller($scope, $rootScope, $compile, $interpolate, materialUtils) {\n\t        this.$scope = $scope;\n\t        this.$rootScope = $rootScope;\n\t        this.$compile = $compile;\n\t        this.$interpolate = $interpolate;\n\t        this.materialUtils = materialUtils;\n\t    }\n\t    Controller.prototype.openMenu = function ($mdOpenMenu, ev) {\n\t        $mdOpenMenu(ev);\n\t    };\n\t    Controller.prototype.dig = function (models, $ele, $scope) {\n\t        var _this = this;\n\t        _.each(models, function (model) {\n\t            var template = strategy.get(model['type']);\n\t            var $newScope = $scope.$new(true, $scope);\n\t            var tmp, $newEle;\n\t            if (!template) {\n\t                template = model.template;\n\t            }\n\t            if (!template) {\n\t                return console.error(\"没有模板或者找不到类型!\");\n\t            }\n\t            model = _.cloneDeep(model);\n\t            model.disabled = \"\" + _this.ngDisabled;\n\t            model.materialUtils = _this.materialUtils;\n\t            model.ngModel = _this.ngModel;\n\t            model.index = _this.index;\n\t            if (model.conditionInfo && model.conditionInfo.condition) {\n\t                if (model.conditionInfo.prefix) {\n\t                    model.condition = model['type'] + \"Ctl.\" + model.conditionInfo.condition;\n\t                }\n\t                else {\n\t                    model.condition = \"\" + model.conditionInfo.condition;\n\t                }\n\t                if (model.conditionInfo.useDisabled) {\n\t                    model.disabled = model.condition;\n\t                    model.condition = \"\";\n\t                }\n\t            }\n\t            !model.condition && (model.condition = \"true\");\n\t            $newScope[model['type'] + \"Ctl\"] = _.clone(model);\n\t            if (_this.ctls) {\n\t                $newScope[_this.ctls] = $scope.$parent[_this.ctls] || {};\n\t            }\n\t            _this.$scope.$watch(function () {\n\t                return _this.index;\n\t            }, function (newValue, oldValue) {\n\t                if (newValue != oldValue) {\n\t                    $newScope[model['type'] + \"Ctl\"][\"index\"] = newValue;\n\t                }\n\t            });\n\t            tmp = _this.$interpolate(template)($newScope);\n\t            $newEle = angular.element(tmp);\n\t            _.each(model.attributes, function (attr, key) {\n\t                $newEle.attr(key, attr);\n\t            });\n\t            $newEle = _this.$compile($newEle)($newScope);\n\t            $ele.append($newEle);\n\t            if (_.isArray(model.tools)) {\n\t                _this.dig(model.tools, $newEle, $newScope);\n\t            }\n\t        });\n\t    };\n\t    return Controller;\n\t}());\n\tController.$inject = [\"$scope\", \"$rootScope\", \"$compile\", \"$interpolate\", \"materialUtils\"];\n\tfunction Directive() {\n\t    return {\n\t        restrict: 'EA',\n\t        require: [_name],\n\t        scope: {},\n\t        bindToController: {\n\t            ctls: '@',\n\t            ngDisabled: '@',\n\t            items: \"=\",\n\t            ngModel: '=',\n\t            index: '=?'\n\t        },\n\t        controllerAs: 'toolbarCtl',\n\t        controller: Controller,\n\t        replace: false,\n\t        link: function ($scope, $ele, $attr, $ctl) {\n\t            $scope.$watchCollection(function () {\n\t                return $ctl[0].items;\n\t            }, function (newValue) {\n\t                var model = newValue;\n\t                if (!model)\n\t                    return;\n\t                if (!_.isObject(model) && !_.isArray(model)) {\n\t                    return console.error(\"items只能是对象或者数组!\");\n\t                }\n\t                $ctl[0].dig(_.isArray(model) ? model : [model], $ele, $scope);\n\t            });\n\t        }\n\t    };\n\t}\n\tDirective.$inject = [];\n\texports.module = angular.module(_name + \"Module\", []).directive(_name, Directive);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = \"\" + exports.module.name;\n\n\n/***/ },\n\n/***/ 174:\n/***/ function(module, exports) {\n\n\t/* commonjs package manager support (eg componentjs) */\n\tif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports){\n\t  module.exports = 'treeControl';\n\t}\n\t(function ( angular ) {\n\t    'use strict';\n\t\n\t    function createPath(startScope) {\n\t        return function path() {\n\t            var _path = [];\n\t            var scope = startScope;\n\t            var prevNode;\n\t            while (scope && scope.node !== startScope.synteticRoot) {\n\t                if (prevNode !== scope.node)\n\t                    _path.push(scope.node);\n\t                prevNode = scope.node;\n\t                scope = scope.$parent;\n\t            }\n\t            return _path;\n\t        }\n\t    }\n\t\n\t    function ensureDefault(obj, prop, value) {\n\t        if (!obj.hasOwnProperty(prop))\n\t            obj[prop] = value;\n\t    }\n\t\n\t    function defaultIsLeaf(node, $scope) {\n\t        return !node[$scope.options.nodeChildren] || node[$scope.options.nodeChildren].length === 0;\n\t    }\n\t\n\t    function shallowCopy(src, dst) {\n\t        if (angular.isArray(src)) {\n\t            dst = dst || [];\n\t\n\t            for (var i = 0; i < src.length; i++) {\n\t                dst[i] = src[i];\n\t            }\n\t        } else if (angular.isObject(src)) {\n\t            dst = dst || {};\n\t\n\t            for (var key in src) {\n\t                if (hasOwnProperty.call(src, key) && !(key.charAt(0) === '$' && key.charAt(1) === '$')) {\n\t                    dst[key] = src[key];\n\t                }\n\t            }\n\t        }\n\t\n\t        return dst || src;\n\t    }\n\t    function defaultEquality(a, b,$scope) {\n\t        if (!a || !b)\n\t            return false;\n\t        a = shallowCopy(a);\n\t        a[$scope.options.nodeChildren] = [];\n\t        b = shallowCopy(b);\n\t        b[$scope.options.nodeChildren] = [];\n\t        return angular.equals(a, b);\n\t    }\n\t\n\t    function defaultIsSelectable() {\n\t        return true;\n\t    }\n\t\n\t    function ensureAllDefaultOptions($scope) {\n\t        ensureDefault($scope.options, \"multiSelection\", false);\n\t        ensureDefault($scope.options, \"nodeChildren\", \"children\");\n\t        ensureDefault($scope.options, \"dirSelectable\", \"true\");\n\t        ensureDefault($scope.options, \"injectClasses\", {});\n\t        ensureDefault($scope.options.injectClasses, \"ul\", \"\");\n\t        ensureDefault($scope.options.injectClasses, \"li\", \"\");\n\t        ensureDefault($scope.options.injectClasses, \"liSelected\", \"\");\n\t        ensureDefault($scope.options.injectClasses, \"iExpanded\", \"\");\n\t        ensureDefault($scope.options.injectClasses, \"iCollapsed\", \"\");\n\t        ensureDefault($scope.options.injectClasses, \"iLeaf\", \"\");\n\t        ensureDefault($scope.options.injectClasses, \"label\", \"\");\n\t        ensureDefault($scope.options.injectClasses, \"labelSelected\", \"\");\n\t        ensureDefault($scope.options, \"equality\", defaultEquality);\n\t        ensureDefault($scope.options, \"isLeaf\", defaultIsLeaf);\n\t        ensureDefault($scope.options, \"allowDeselect\", true);\n\t        ensureDefault($scope.options, \"isSelectable\", defaultIsSelectable);\n\t    }\n\t    \n\t    angular.module( 'treeControl', [] )\n\t        .constant('treeConfig', {\n\t            templateUrl: null\n\t        })\n\t        .directive( 'treecontrol', ['$compile', function( $compile ) {\n\t            /**\n\t             * @param cssClass - the css class\n\t             * @param addClassProperty - should we wrap the class name with class=\"\"\n\t             */\n\t            function classIfDefined(cssClass, addClassProperty) {\n\t                if (cssClass) {\n\t                    if (addClassProperty)\n\t                        return 'class=\"' + cssClass + '\"';\n\t                    else\n\t                        return cssClass;\n\t                }\n\t                else\n\t                    return \"\";\n\t            }\n\t            \n\t            \n\t            \n\t            return {\n\t                restrict: 'EA',\n\t                require: \"treecontrol\",\n\t                transclude: true,\n\t                scope: {\n\t                    treeModel: \"=\",\n\t                    selectedNode: \"=?\",\n\t                    selectedNodes: \"=?\",\n\t                    expandedNodes: \"=?\",\n\t                    onSelection: \"&\",\n\t                    onNodeToggle: \"&\",\n\t                    options: \"=?\",\n\t                    orderBy: \"=?\",\n\t                    reverseOrder: \"@\",\n\t                    filterExpression: \"=?\",\n\t                    filterComparator: \"=?\"\n\t                },\n\t                controller: ['$scope', '$templateCache', '$interpolate', 'treeConfig', function ($scope, $templateCache, $interpolate, treeConfig) {\n\t                    \n\t                    $scope.options = $scope.options || {};\n\t                    \n\t                    ensureAllDefaultOptions($scope);\n\t                  \n\t                    $scope.selectedNodes = $scope.selectedNodes || [];\n\t                    $scope.expandedNodes = $scope.expandedNodes || [];\n\t                    $scope.expandedNodesMap = {};\n\t                    for (var i=0; i < $scope.expandedNodes.length; i++) {\n\t                        $scope.expandedNodesMap[\"a\"+i] = $scope.expandedNodes[i];\n\t                    }\n\t                    $scope.parentScopeOfTree = $scope.$parent;\n\t\n\t\n\t                    function isSelectedNode(node) {\n\t                        if (!$scope.options.multiSelection && ($scope.options.equality(node, $scope.selectedNode , $scope)))\n\t                            return true;\n\t                        else if ($scope.options.multiSelection && $scope.selectedNodes) {\n\t                            for (var i = 0; (i < $scope.selectedNodes.length); i++) {\n\t                                if ($scope.options.equality(node, $scope.selectedNodes[i] , $scope)) {\n\t                                    return true;\n\t                                }\n\t                            }\n\t                            return false;\n\t                        }\n\t                    }\n\t\n\t                    $scope.headClass = function(node) {\n\t                        var liSelectionClass = classIfDefined($scope.options.injectClasses.liSelected, false);\n\t                        var injectSelectionClass = \"\";\n\t                        if (liSelectionClass && isSelectedNode(node))\n\t                            injectSelectionClass = \" \" + liSelectionClass;\n\t                        if ($scope.options.isLeaf(node, $scope))\n\t                            return \"tree-leaf\" + injectSelectionClass;\n\t                        if ($scope.expandedNodesMap[this.$id])\n\t                            return \"tree-expanded\" + injectSelectionClass;\n\t                        else\n\t                            return \"tree-collapsed\" + injectSelectionClass;\n\t                    };\n\t\n\t                    $scope.iBranchClass = function() {\n\t                        if ($scope.expandedNodesMap[this.$id])\n\t                            return classIfDefined($scope.options.injectClasses.iExpanded);\n\t                        else\n\t                            return classIfDefined($scope.options.injectClasses.iCollapsed);\n\t                    };\n\t\n\t                    $scope.nodeExpanded = function() {\n\t                        return !!$scope.expandedNodesMap[this.$id];\n\t                    };\n\t\n\t                    $scope.selectNodeHead = function() {\n\t                        var transcludedScope = this;\n\t                        var expanding = $scope.expandedNodesMap[transcludedScope.$id] === undefined;\n\t                        $scope.expandedNodesMap[transcludedScope.$id] = (expanding ? transcludedScope.node : undefined);\n\t                        if (expanding) {\n\t                            $scope.expandedNodes.push(transcludedScope.node);\n\t                        }\n\t                        else {\n\t                            var index;\n\t                            for (var i=0; (i < $scope.expandedNodes.length) && !index; i++) {\n\t                                if ($scope.options.equality($scope.expandedNodes[i], transcludedScope.node , $scope)) {\n\t                                    index = i;\n\t                                }\n\t                            }\n\t                            if (index !== undefined)\n\t                                $scope.expandedNodes.splice(index, 1);\n\t                        }\n\t                        if ($scope.onNodeToggle) {\n\t                            var parentNode = (transcludedScope.$parent.node === transcludedScope.synteticRoot)?null:transcludedScope.$parent.node;\n\t                            var path = createPath(transcludedScope);\n\t                            $scope.onNodeToggle({node: transcludedScope.node, $parentNode: parentNode, $path: path,\n\t                              $index: transcludedScope.$index, $first: transcludedScope.$first, $middle: transcludedScope.$middle,\n\t                              $last: transcludedScope.$last, $odd: transcludedScope.$odd, $even: transcludedScope.$even, expanded: expanding});\n\t\n\t                        }\n\t                    };\n\t\n\t                    $scope.selectNodeLabel = function( selectedNode){\n\t                        var transcludedScope = this;\n\t                        if(!$scope.options.isLeaf(selectedNode, $scope) && (!$scope.options.dirSelectable || !$scope.options.isSelectable(selectedNode))) {\n\t                            // Branch node is not selectable, expand\n\t                            this.selectNodeHead();\n\t                        }\n\t                        else if($scope.options.isLeaf(selectedNode, $scope) && (!$scope.options.isSelectable(selectedNode))) {\n\t                            // Leaf node is not selectable\n\t                            return;\n\t                        }\n\t                        else {\n\t                            var selected = false;\n\t                            if ($scope.options.multiSelection) {\n\t                                var pos = -1;\n\t                                for (var i=0; i < $scope.selectedNodes.length; i++) {\n\t                                    if($scope.options.equality(selectedNode, $scope.selectedNodes[i] , $scope)) {\n\t                                        pos = i;\n\t                                        break;\n\t                                    }\n\t                                }\n\t                                if (pos === -1) {\n\t                                    $scope.selectedNodes.push(selectedNode);\n\t                                    selected = true;\n\t                                } else {\n\t                                    $scope.selectedNodes.splice(pos, 1);\n\t                                }\n\t                            } else {\n\t                                if (!$scope.options.equality(selectedNode, $scope.selectedNode , $scope)) {\n\t                                    $scope.selectedNode = selectedNode;\n\t                                    selected = true;\n\t                                }\n\t                                else {\n\t                                    if ($scope.options.allowDeselect) {\n\t                                        $scope.selectedNode = undefined;\n\t                                    } else {\n\t                                        $scope.selectedNode = selectedNode;\n\t                                        selected = true;\n\t                                    }\n\t                                }\n\t                            }\n\t                            if ($scope.onSelection) {\n\t                                var parentNode = (transcludedScope.$parent.node === transcludedScope.synteticRoot)?null:transcludedScope.$parent.node;\n\t                                var path = createPath(transcludedScope)\n\t                                $scope.onSelection({node: selectedNode, selected: selected, $parentNode: parentNode, $path: path,\n\t                                  $index: transcludedScope.$index, $first: transcludedScope.$first, $middle: transcludedScope.$middle,\n\t                                  $last: transcludedScope.$last, $odd: transcludedScope.$odd, $even: transcludedScope.$even});\n\t                            }\n\t                        }\n\t                    };\n\t\n\t                    $scope.selectedClass = function() {\n\t                        var isThisNodeSelected = isSelectedNode(this.node);\n\t                        var labelSelectionClass = classIfDefined($scope.options.injectClasses.labelSelected, false);\n\t                        var injectSelectionClass = \"\";\n\t                        if (labelSelectionClass && isThisNodeSelected)\n\t                            injectSelectionClass = \" \" + labelSelectionClass;\n\t\n\t                        return isThisNodeSelected ? \"tree-selected\" + injectSelectionClass : \"\";\n\t                    };\n\t\n\t                    $scope.unselectableClass = function() {\n\t                        var isThisNodeUnselectable = !$scope.options.isSelectable(this.node);\n\t                        var labelUnselectableClass = classIfDefined($scope.options.injectClasses.labelUnselectable, false);\n\t                        return isThisNodeUnselectable ? \"tree-unselectable \" + labelUnselectableClass : \"\";\n\t                    };\n\t\n\t                    //tree template\n\t                    $scope.isReverse = function() {\n\t                      return !($scope.reverseOrder === 'false' || $scope.reverseOrder === 'False' || $scope.reverseOrder === '' || $scope.reverseOrder === false);\n\t                    };\n\t\n\t                    $scope.orderByFunc = function() {\n\t                      return $scope.orderBy;\n\t                    };\n\t//                    return \"\" + $scope.orderBy;\n\t\n\t                    var templateOptions = {\n\t                        orderBy: $scope.orderBy ? \" | orderBy:orderByFunc():isReverse()\" : '',\n\t                        ulClass: classIfDefined($scope.options.injectClasses.ul, true),\n\t                        nodeChildren:  $scope.options.nodeChildren,\n\t                        liClass: classIfDefined($scope.options.injectClasses.li, true),\n\t                        iLeafClass: classIfDefined($scope.options.injectClasses.iLeaf, false),\n\t                        labelClass: classIfDefined($scope.options.injectClasses.label, false)\n\t                    };\n\t\n\t                    var template;\n\t                    var templateUrl = $scope.options.templateUrl || treeConfig.templateUrl;\n\t\n\t                    if(templateUrl) {\n\t                        template = $templateCache.get(templateUrl);\n\t                    }\n\t\n\t                    if(!template) {\n\t                        template =\n\t                            '<ul {{options.ulClass}} >' +\n\t                            '<li ng-repeat=\"node in node.{{options.nodeChildren}} | filter:filterExpression:filterComparator {{options.orderBy}}\" ng-class=\"headClass(node)\" {{options.liClass}}' +\n\t                            'set-node-to-data>' +\n\t                            '<i class=\"tree-branch-head\" ng-class=\"iBranchClass()\" ng-click=\"selectNodeHead(node)\"></i>' +\n\t                            '<i class=\"tree-leaf-head {{options.iLeafClass}}\"></i>' +\n\t                            '<div class=\"tree-label {{options.labelClass}}\" ng-class=\"[selectedClass(), unselectableClass()]\" ng-click=\"selectNodeLabel(node)\" tree-transclude></div>' +\n\t                            '<treeitem ng-if=\"nodeExpanded()\"></treeitem>' +\n\t                            '</li>' +\n\t                            '</ul>';\n\t                    }\n\t\n\t                    this.template = $compile($interpolate(template)({options: templateOptions}));\n\t                }],\n\t                compile: function(element, attrs, childTranscludeFn) {\n\t                    return function ( scope, element, attrs, treemodelCntr ) {\n\t\n\t                        scope.$watch(\"treeModel\", function updateNodeOnRootScope(newValue) {\n\t                            if (angular.isArray(newValue)) {\n\t                                if (angular.isDefined(scope.node) && angular.equals(scope.node[scope.options.nodeChildren], newValue))\n\t                                    return;\n\t                                scope.node = {};\n\t                                scope.synteticRoot = scope.node;\n\t                                scope.node[scope.options.nodeChildren] = newValue;\n\t                            }\n\t                            else {\n\t                                if (angular.equals(scope.node, newValue))\n\t                                    return;\n\t                                scope.node = newValue;\n\t                            }\n\t                        });\n\t\n\t                        scope.$watchCollection('expandedNodes', function(newValue, oldValue) {\n\t                            var notFoundIds = 0;\n\t                            var newExpandedNodesMap = {};\n\t                            var $liElements = element.find('li');\n\t                            var existingScopes = [];\n\t                            // find all nodes visible on the tree and the scope $id of the scopes including them\n\t                            angular.forEach($liElements, function(liElement) {\n\t                                var $liElement = angular.element(liElement);\n\t                                var liScope = {\n\t                                    $id: $liElement.data('scope-id'),\n\t                                    node: $liElement.data('node')\n\t                                };\n\t                                existingScopes.push(liScope);\n\t                            });\n\t                            // iterate over the newValue, the new expanded nodes, and for each find it in the existingNodesAndScopes\n\t                            // if found, add the mapping $id -> node into newExpandedNodesMap\n\t                            // if not found, add the mapping num -> node into newExpandedNodesMap\n\t                            angular.forEach(newValue, function(newExNode) {\n\t                                var found = false;\n\t                                for (var i=0; (i < existingScopes.length) && !found; i++) {\n\t                                    var existingScope = existingScopes[i];\n\t                                    if (scope.options.equality(newExNode, existingScope.node , scope)) {\n\t                                        newExpandedNodesMap[existingScope.$id] = existingScope.node;\n\t                                        found = true;\n\t                                    }\n\t                                }\n\t                                if (!found)\n\t                                    newExpandedNodesMap['a' + notFoundIds++] = newExNode;\n\t                            });\n\t                            scope.expandedNodesMap = newExpandedNodesMap;\n\t                        });\n\t\n\t//                        scope.$watch('expandedNodesMap', function(newValue) {\n\t//\n\t//                        });\n\t\n\t                        //Rendering template for a root node\n\t                        treemodelCntr.template( scope, function(clone) {\n\t                            element.html('').append( clone );\n\t                        });\n\t                        // save the transclude function from compile (which is not bound to a scope as apposed to the one from link)\n\t                        // we can fix this to work with the link transclude function with angular 1.2.6. as for angular 1.2.0 we need\n\t                        // to keep using the compile function\n\t                        scope.$treeTransclude = childTranscludeFn;\n\t                    };\n\t                }\n\t            };\n\t        }])\n\t        .directive(\"setNodeToData\", ['$parse', function($parse) {\n\t            return {\n\t                restrict: 'A',\n\t                link: function($scope, $element, $attrs) {\n\t                    $element.data('node', $scope.node);\n\t                    $element.data('scope-id', $scope.$id);\n\t                }\n\t            };\n\t        }])\n\t        .directive(\"treeitem\", function() {\n\t            return {\n\t                restrict: 'E',\n\t                require: \"^treecontrol\",\n\t                link: function( scope, element, attrs, treemodelCntr) {\n\t                    // Rendering template for the current node\n\t                    treemodelCntr.template(scope, function(clone) {\n\t                        element.html('').append(clone);\n\t                    });\n\t                }\n\t            };\n\t        })\n\t        .directive(\"treeTransclude\", function () {\n\t            return {\n\t                controller: ['$scope',function ($scope) {\n\t                    ensureAllDefaultOptions($scope);\n\t                }],\n\t\n\t                link: function(scope, element, attrs, controller) {\n\t                    if (!scope.options.isLeaf(scope.node, scope)) {\n\t                        angular.forEach(scope.expandedNodesMap, function (node, id) {\n\t                            if (scope.options.equality(node, scope.node , scope)) {\n\t                                scope.expandedNodesMap[scope.$id] = scope.node;\n\t                                scope.expandedNodesMap[id] = undefined;\n\t                            }\n\t                        });\n\t                    }\n\t                    if (!scope.options.multiSelection && scope.options.equality(scope.node, scope.selectedNode , scope)) {\n\t                        scope.selectedNode = scope.node;\n\t                    } else if (scope.options.multiSelection) {\n\t                        var newSelectedNodes = [];\n\t                        for (var i = 0; (i < scope.selectedNodes.length); i++) {\n\t                            if (scope.options.equality(scope.node, scope.selectedNodes[i] , scope)) {\n\t                                newSelectedNodes.push(scope.node);\n\t                            }\n\t                        }\n\t                        scope.selectedNodes = newSelectedNodes;\n\t                    }\n\t\n\t                    // create a scope for the transclusion, whos parent is the parent of the tree control\n\t                    scope.transcludeScope = scope.parentScopeOfTree.$new();\n\t                    scope.transcludeScope.node = scope.node;\n\t                    scope.transcludeScope.$path = createPath(scope);\n\t                    scope.transcludeScope.$parentNode = (scope.$parent.node === scope.synteticRoot)?null:scope.$parent.node;\n\t                    scope.transcludeScope.$index = scope.$index;\n\t                    scope.transcludeScope.$first = scope.$first;\n\t                    scope.transcludeScope.$middle = scope.$middle;\n\t                    scope.transcludeScope.$last = scope.$last;\n\t                    scope.transcludeScope.$odd = scope.$odd;\n\t                    scope.transcludeScope.$even = scope.$even;\n\t                    scope.$on('$destroy', function() {\n\t                        scope.transcludeScope.$destroy();\n\t                    });\n\t\n\t                    scope.$treeTransclude(scope.transcludeScope, function(clone) {\n\t                        element.empty();\n\t                        element.append(clone);\n\t                    });\n\t                }\n\t            };\n\t        });\n\t})( angular );\n\n\n/***/ },\n\n/***/ 175:\n/***/ function(module, exports) {\n\n\t/**\n\t * State-based routing for AngularJS\n\t * @version v0.3.2\n\t * @link http://angular-ui.github.com/\n\t * @license MIT License, http://www.opensource.org/licenses/MIT\n\t */\n\t\n\t/* commonjs package manager support (eg componentjs) */\n\tif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports){\n\t  module.exports = 'ui.router';\n\t}\n\t\n\t(function (window, angular, undefined) {\n\t/*jshint globalstrict:true*/\n\t/*global angular:false*/\n\t'use strict';\n\t\n\tvar isDefined = angular.isDefined,\n\t    isFunction = angular.isFunction,\n\t    isString = angular.isString,\n\t    isObject = angular.isObject,\n\t    isArray = angular.isArray,\n\t    forEach = angular.forEach,\n\t    extend = angular.extend,\n\t    copy = angular.copy,\n\t    toJson = angular.toJson;\n\t\n\tfunction inherit(parent, extra) {\n\t  return extend(new (extend(function() {}, { prototype: parent }))(), extra);\n\t}\n\t\n\tfunction merge(dst) {\n\t  forEach(arguments, function(obj) {\n\t    if (obj !== dst) {\n\t      forEach(obj, function(value, key) {\n\t        if (!dst.hasOwnProperty(key)) dst[key] = value;\n\t      });\n\t    }\n\t  });\n\t  return dst;\n\t}\n\t\n\t/**\n\t * Finds the common ancestor path between two states.\n\t *\n\t * @param {Object} first The first state.\n\t * @param {Object} second The second state.\n\t * @return {Array} Returns an array of state names in descending order, not including the root.\n\t */\n\tfunction ancestors(first, second) {\n\t  var path = [];\n\t\n\t  for (var n in first.path) {\n\t    if (first.path[n] !== second.path[n]) break;\n\t    path.push(first.path[n]);\n\t  }\n\t  return path;\n\t}\n\t\n\t/**\n\t * IE8-safe wrapper for `Object.keys()`.\n\t *\n\t * @param {Object} object A JavaScript object.\n\t * @return {Array} Returns the keys of the object as an array.\n\t */\n\tfunction objectKeys(object) {\n\t  if (Object.keys) {\n\t    return Object.keys(object);\n\t  }\n\t  var result = [];\n\t\n\t  forEach(object, function(val, key) {\n\t    result.push(key);\n\t  });\n\t  return result;\n\t}\n\t\n\t/**\n\t * IE8-safe wrapper for `Array.prototype.indexOf()`.\n\t *\n\t * @param {Array} array A JavaScript array.\n\t * @param {*} value A value to search the array for.\n\t * @return {Number} Returns the array index value of `value`, or `-1` if not present.\n\t */\n\tfunction indexOf(array, value) {\n\t  if (Array.prototype.indexOf) {\n\t    return array.indexOf(value, Number(arguments[2]) || 0);\n\t  }\n\t  var len = array.length >>> 0, from = Number(arguments[2]) || 0;\n\t  from = (from < 0) ? Math.ceil(from) : Math.floor(from);\n\t\n\t  if (from < 0) from += len;\n\t\n\t  for (; from < len; from++) {\n\t    if (from in array && array[from] === value) return from;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Merges a set of parameters with all parameters inherited between the common parents of the\n\t * current state and a given destination state.\n\t *\n\t * @param {Object} currentParams The value of the current state parameters ($stateParams).\n\t * @param {Object} newParams The set of parameters which will be composited with inherited params.\n\t * @param {Object} $current Internal definition of object representing the current state.\n\t * @param {Object} $to Internal definition of object representing state to transition to.\n\t */\n\tfunction inheritParams(currentParams, newParams, $current, $to) {\n\t  var parents = ancestors($current, $to), parentParams, inherited = {}, inheritList = [];\n\t\n\t  for (var i in parents) {\n\t    if (!parents[i] || !parents[i].params) continue;\n\t    parentParams = objectKeys(parents[i].params);\n\t    if (!parentParams.length) continue;\n\t\n\t    for (var j in parentParams) {\n\t      if (indexOf(inheritList, parentParams[j]) >= 0) continue;\n\t      inheritList.push(parentParams[j]);\n\t      inherited[parentParams[j]] = currentParams[parentParams[j]];\n\t    }\n\t  }\n\t  return extend({}, inherited, newParams);\n\t}\n\t\n\t/**\n\t * Performs a non-strict comparison of the subset of two objects, defined by a list of keys.\n\t *\n\t * @param {Object} a The first object.\n\t * @param {Object} b The second object.\n\t * @param {Array} keys The list of keys within each object to compare. If the list is empty or not specified,\n\t *                     it defaults to the list of keys in `a`.\n\t * @return {Boolean} Returns `true` if the keys match, otherwise `false`.\n\t */\n\tfunction equalForKeys(a, b, keys) {\n\t  if (!keys) {\n\t    keys = [];\n\t    for (var n in a) keys.push(n); // Used instead of Object.keys() for IE8 compatibility\n\t  }\n\t\n\t  for (var i=0; i<keys.length; i++) {\n\t    var k = keys[i];\n\t    if (a[k] != b[k]) return false; // Not '===', values aren't necessarily normalized\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Returns the subset of an object, based on a list of keys.\n\t *\n\t * @param {Array} keys\n\t * @param {Object} values\n\t * @return {Boolean} Returns a subset of `values`.\n\t */\n\tfunction filterByKeys(keys, values) {\n\t  var filtered = {};\n\t\n\t  forEach(keys, function (name) {\n\t    filtered[name] = values[name];\n\t  });\n\t  return filtered;\n\t}\n\t\n\t// like _.indexBy\n\t// when you know that your index values will be unique, or you want last-one-in to win\n\tfunction indexBy(array, propName) {\n\t  var result = {};\n\t  forEach(array, function(item) {\n\t    result[item[propName]] = item;\n\t  });\n\t  return result;\n\t}\n\t\n\t// extracted from underscore.js\n\t// Return a copy of the object only containing the whitelisted properties.\n\tfunction pick(obj) {\n\t  var copy = {};\n\t  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n\t  forEach(keys, function(key) {\n\t    if (key in obj) copy[key] = obj[key];\n\t  });\n\t  return copy;\n\t}\n\t\n\t// extracted from underscore.js\n\t// Return a copy of the object omitting the blacklisted properties.\n\tfunction omit(obj) {\n\t  var copy = {};\n\t  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n\t  for (var key in obj) {\n\t    if (indexOf(keys, key) == -1) copy[key] = obj[key];\n\t  }\n\t  return copy;\n\t}\n\t\n\tfunction pluck(collection, key) {\n\t  var result = isArray(collection) ? [] : {};\n\t\n\t  forEach(collection, function(val, i) {\n\t    result[i] = isFunction(key) ? key(val) : val[key];\n\t  });\n\t  return result;\n\t}\n\t\n\tfunction filter(collection, callback) {\n\t  var array = isArray(collection);\n\t  var result = array ? [] : {};\n\t  forEach(collection, function(val, i) {\n\t    if (callback(val, i)) {\n\t      result[array ? result.length : i] = val;\n\t    }\n\t  });\n\t  return result;\n\t}\n\t\n\tfunction map(collection, callback) {\n\t  var result = isArray(collection) ? [] : {};\n\t\n\t  forEach(collection, function(val, i) {\n\t    result[i] = callback(val, i);\n\t  });\n\t  return result;\n\t}\n\t\n\t// issue #2676 #2889\n\tfunction silenceUncaughtInPromise (promise) {\n\t  return promise.then(undefined, function() {}) && promise;\n\t}\n\t\n\t/**\n\t * @ngdoc overview\n\t * @name ui.router.util\n\t *\n\t * @description\n\t * # ui.router.util sub-module\n\t *\n\t * This module is a dependency of other sub-modules. Do not include this module as a dependency\n\t * in your angular app (use {@link ui.router} module instead).\n\t *\n\t */\n\tangular.module('ui.router.util', ['ng']);\n\t\n\t/**\n\t * @ngdoc overview\n\t * @name ui.router.router\n\t * \n\t * @requires ui.router.util\n\t *\n\t * @description\n\t * # ui.router.router sub-module\n\t *\n\t * This module is a dependency of other sub-modules. Do not include this module as a dependency\n\t * in your angular app (use {@link ui.router} module instead).\n\t */\n\tangular.module('ui.router.router', ['ui.router.util']);\n\t\n\t/**\n\t * @ngdoc overview\n\t * @name ui.router.state\n\t * \n\t * @requires ui.router.router\n\t * @requires ui.router.util\n\t *\n\t * @description\n\t * # ui.router.state sub-module\n\t *\n\t * This module is a dependency of the main ui.router module. Do not include this module as a dependency\n\t * in your angular app (use {@link ui.router} module instead).\n\t * \n\t */\n\tangular.module('ui.router.state', ['ui.router.router', 'ui.router.util']);\n\t\n\t/**\n\t * @ngdoc overview\n\t * @name ui.router\n\t *\n\t * @requires ui.router.state\n\t *\n\t * @description\n\t * # ui.router\n\t * \n\t * ## The main module for ui.router \n\t * There are several sub-modules included with the ui.router module, however only this module is needed\n\t * as a dependency within your angular app. The other modules are for organization purposes. \n\t *\n\t * The modules are:\n\t * * ui.router - the main \"umbrella\" module\n\t * * ui.router.router - \n\t * \n\t * *You'll need to include **only** this module as the dependency within your angular app.*\n\t * \n\t * <pre>\n\t * <!doctype html>\n\t * <html ng-app=\"myApp\">\n\t * <head>\n\t *   <script src=\"js/angular.js\"></script>\n\t *   <!-- Include the ui-router script -->\n\t *   <script src=\"js/angular-ui-router.min.js\"></script>\n\t *   <script>\n\t *     // ...and add 'ui.router' as a dependency\n\t *     var myApp = angular.module('myApp', ['ui.router']);\n\t *   </script>\n\t * </head>\n\t * <body>\n\t * </body>\n\t * </html>\n\t * </pre>\n\t */\n\tangular.module('ui.router', ['ui.router.state']);\n\t\n\tangular.module('ui.router.compat', ['ui.router']);\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.util.$resolve\n\t *\n\t * @requires $q\n\t * @requires $injector\n\t *\n\t * @description\n\t * Manages resolution of (acyclic) graphs of promises.\n\t */\n\t$Resolve.$inject = ['$q', '$injector'];\n\tfunction $Resolve(  $q,    $injector) {\n\t  \n\t  var VISIT_IN_PROGRESS = 1,\n\t      VISIT_DONE = 2,\n\t      NOTHING = {},\n\t      NO_DEPENDENCIES = [],\n\t      NO_LOCALS = NOTHING,\n\t      NO_PARENT = extend($q.when(NOTHING), { $$promises: NOTHING, $$values: NOTHING });\n\t  \n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$resolve#study\n\t   * @methodOf ui.router.util.$resolve\n\t   *\n\t   * @description\n\t   * Studies a set of invocables that are likely to be used multiple times.\n\t   * <pre>\n\t   * $resolve.study(invocables)(locals, parent, self)\n\t   * </pre>\n\t   * is equivalent to\n\t   * <pre>\n\t   * $resolve.resolve(invocables, locals, parent, self)\n\t   * </pre>\n\t   * but the former is more efficient (in fact `resolve` just calls `study` \n\t   * internally).\n\t   *\n\t   * @param {object} invocables Invocable objects\n\t   * @return {function} a function to pass in locals, parent and self\n\t   */\n\t  this.study = function (invocables) {\n\t    if (!isObject(invocables)) throw new Error(\"'invocables' must be an object\");\n\t    var invocableKeys = objectKeys(invocables || {});\n\t    \n\t    // Perform a topological sort of invocables to build an ordered plan\n\t    var plan = [], cycle = [], visited = {};\n\t    function visit(value, key) {\n\t      if (visited[key] === VISIT_DONE) return;\n\t      \n\t      cycle.push(key);\n\t      if (visited[key] === VISIT_IN_PROGRESS) {\n\t        cycle.splice(0, indexOf(cycle, key));\n\t        throw new Error(\"Cyclic dependency: \" + cycle.join(\" -> \"));\n\t      }\n\t      visited[key] = VISIT_IN_PROGRESS;\n\t      \n\t      if (isString(value)) {\n\t        plan.push(key, [ function() { return $injector.get(value); }], NO_DEPENDENCIES);\n\t      } else {\n\t        var params = $injector.annotate(value);\n\t        forEach(params, function (param) {\n\t          if (param !== key && invocables.hasOwnProperty(param)) visit(invocables[param], param);\n\t        });\n\t        plan.push(key, value, params);\n\t      }\n\t      \n\t      cycle.pop();\n\t      visited[key] = VISIT_DONE;\n\t    }\n\t    forEach(invocables, visit);\n\t    invocables = cycle = visited = null; // plan is all that's required\n\t    \n\t    function isResolve(value) {\n\t      return isObject(value) && value.then && value.$$promises;\n\t    }\n\t    \n\t    return function (locals, parent, self) {\n\t      if (isResolve(locals) && self === undefined) {\n\t        self = parent; parent = locals; locals = null;\n\t      }\n\t      if (!locals) locals = NO_LOCALS;\n\t      else if (!isObject(locals)) {\n\t        throw new Error(\"'locals' must be an object\");\n\t      }       \n\t      if (!parent) parent = NO_PARENT;\n\t      else if (!isResolve(parent)) {\n\t        throw new Error(\"'parent' must be a promise returned by $resolve.resolve()\");\n\t      }\n\t      \n\t      // To complete the overall resolution, we have to wait for the parent\n\t      // promise and for the promise for each invokable in our plan.\n\t      var resolution = $q.defer(),\n\t          result = resolution.promise,\n\t          promises = result.$$promises = {},\n\t          values = extend({}, locals),\n\t          wait = 1 + plan.length/3,\n\t          merged = false;\n\t          \n\t      function done() {\n\t        // Merge parent values we haven't got yet and publish our own $$values\n\t        if (!--wait) {\n\t          if (!merged) merge(values, parent.$$values); \n\t          result.$$values = values;\n\t          result.$$promises = result.$$promises || true; // keep for isResolve()\n\t          delete result.$$inheritedValues;\n\t          resolution.resolve(values);\n\t        }\n\t      }\n\t      \n\t      function fail(reason) {\n\t        result.$$failure = reason;\n\t        resolution.reject(reason);\n\t      }\n\t\n\t      // Short-circuit if parent has already failed\n\t      if (isDefined(parent.$$failure)) {\n\t        fail(parent.$$failure);\n\t        return result;\n\t      }\n\t      \n\t      if (parent.$$inheritedValues) {\n\t        merge(values, omit(parent.$$inheritedValues, invocableKeys));\n\t      }\n\t\n\t      // Merge parent values if the parent has already resolved, or merge\n\t      // parent promises and wait if the parent resolve is still in progress.\n\t      extend(promises, parent.$$promises);\n\t      if (parent.$$values) {\n\t        merged = merge(values, omit(parent.$$values, invocableKeys));\n\t        result.$$inheritedValues = omit(parent.$$values, invocableKeys);\n\t        done();\n\t      } else {\n\t        if (parent.$$inheritedValues) {\n\t          result.$$inheritedValues = omit(parent.$$inheritedValues, invocableKeys);\n\t        }        \n\t        parent.then(done, fail);\n\t      }\n\t      \n\t      // Process each invocable in the plan, but ignore any where a local of the same name exists.\n\t      for (var i=0, ii=plan.length; i<ii; i+=3) {\n\t        if (locals.hasOwnProperty(plan[i])) done();\n\t        else invoke(plan[i], plan[i+1], plan[i+2]);\n\t      }\n\t      \n\t      function invoke(key, invocable, params) {\n\t        // Create a deferred for this invocation. Failures will propagate to the resolution as well.\n\t        var invocation = $q.defer(), waitParams = 0;\n\t        function onfailure(reason) {\n\t          invocation.reject(reason);\n\t          fail(reason);\n\t        }\n\t        // Wait for any parameter that we have a promise for (either from parent or from this\n\t        // resolve; in that case study() will have made sure it's ordered before us in the plan).\n\t        forEach(params, function (dep) {\n\t          if (promises.hasOwnProperty(dep) && !locals.hasOwnProperty(dep)) {\n\t            waitParams++;\n\t            promises[dep].then(function (result) {\n\t              values[dep] = result;\n\t              if (!(--waitParams)) proceed();\n\t            }, onfailure);\n\t          }\n\t        });\n\t        if (!waitParams) proceed();\n\t        function proceed() {\n\t          if (isDefined(result.$$failure)) return;\n\t          try {\n\t            invocation.resolve($injector.invoke(invocable, self, values));\n\t            invocation.promise.then(function (result) {\n\t              values[key] = result;\n\t              done();\n\t            }, onfailure);\n\t          } catch (e) {\n\t            onfailure(e);\n\t          }\n\t        }\n\t        // Publish promise synchronously; invocations further down in the plan may depend on it.\n\t        promises[key] = invocation.promise;\n\t      }\n\t      \n\t      return result;\n\t    };\n\t  };\n\t  \n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$resolve#resolve\n\t   * @methodOf ui.router.util.$resolve\n\t   *\n\t   * @description\n\t   * Resolves a set of invocables. An invocable is a function to be invoked via \n\t   * `$injector.invoke()`, and can have an arbitrary number of dependencies. \n\t   * An invocable can either return a value directly,\n\t   * or a `$q` promise. If a promise is returned it will be resolved and the \n\t   * resulting value will be used instead. Dependencies of invocables are resolved \n\t   * (in this order of precedence)\n\t   *\n\t   * - from the specified `locals`\n\t   * - from another invocable that is part of this `$resolve` call\n\t   * - from an invocable that is inherited from a `parent` call to `$resolve` \n\t   *   (or recursively\n\t   * - from any ancestor `$resolve` of that parent).\n\t   *\n\t   * The return value of `$resolve` is a promise for an object that contains \n\t   * (in this order of precedence)\n\t   *\n\t   * - any `locals` (if specified)\n\t   * - the resolved return values of all injectables\n\t   * - any values inherited from a `parent` call to `$resolve` (if specified)\n\t   *\n\t   * The promise will resolve after the `parent` promise (if any) and all promises \n\t   * returned by injectables have been resolved. If any invocable \n\t   * (or `$injector.invoke`) throws an exception, or if a promise returned by an \n\t   * invocable is rejected, the `$resolve` promise is immediately rejected with the \n\t   * same error. A rejection of a `parent` promise (if specified) will likewise be \n\t   * propagated immediately. Once the `$resolve` promise has been rejected, no \n\t   * further invocables will be called.\n\t   * \n\t   * Cyclic dependencies between invocables are not permitted and will cause `$resolve`\n\t   * to throw an error. As a special case, an injectable can depend on a parameter \n\t   * with the same name as the injectable, which will be fulfilled from the `parent` \n\t   * injectable of the same name. This allows inherited values to be decorated. \n\t   * Note that in this case any other injectable in the same `$resolve` with the same\n\t   * dependency would see the decorated value, not the inherited value.\n\t   *\n\t   * Note that missing dependencies -- unlike cyclic dependencies -- will cause an \n\t   * (asynchronous) rejection of the `$resolve` promise rather than a (synchronous) \n\t   * exception.\n\t   *\n\t   * Invocables are invoked eagerly as soon as all dependencies are available. \n\t   * This is true even for dependencies inherited from a `parent` call to `$resolve`.\n\t   *\n\t   * As a special case, an invocable can be a string, in which case it is taken to \n\t   * be a service name to be passed to `$injector.get()`. This is supported primarily \n\t   * for backwards-compatibility with the `resolve` property of `$routeProvider` \n\t   * routes.\n\t   *\n\t   * @param {object} invocables functions to invoke or \n\t   * `$injector` services to fetch.\n\t   * @param {object} locals  values to make available to the injectables\n\t   * @param {object} parent  a promise returned by another call to `$resolve`.\n\t   * @param {object} self  the `this` for the invoked methods\n\t   * @return {object} Promise for an object that contains the resolved return value\n\t   * of all invocables, as well as any inherited and local values.\n\t   */\n\t  this.resolve = function (invocables, locals, parent, self) {\n\t    return this.study(invocables)(locals, parent, self);\n\t  };\n\t}\n\t\n\tangular.module('ui.router.util').service('$resolve', $Resolve);\n\t\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.util.$templateFactory\n\t *\n\t * @requires $http\n\t * @requires $templateCache\n\t * @requires $injector\n\t *\n\t * @description\n\t * Service. Manages loading of templates.\n\t */\n\t$TemplateFactory.$inject = ['$http', '$templateCache', '$injector'];\n\tfunction $TemplateFactory(  $http,   $templateCache,   $injector) {\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$templateFactory#fromConfig\n\t   * @methodOf ui.router.util.$templateFactory\n\t   *\n\t   * @description\n\t   * Creates a template from a configuration object. \n\t   *\n\t   * @param {object} config Configuration object for which to load a template. \n\t   * The following properties are search in the specified order, and the first one \n\t   * that is defined is used to create the template:\n\t   *\n\t   * @param {string|object} config.template html string template or function to \n\t   * load via {@link ui.router.util.$templateFactory#fromString fromString}.\n\t   * @param {string|object} config.templateUrl url to load or a function returning \n\t   * the url to load via {@link ui.router.util.$templateFactory#fromUrl fromUrl}.\n\t   * @param {Function} config.templateProvider function to invoke via \n\t   * {@link ui.router.util.$templateFactory#fromProvider fromProvider}.\n\t   * @param {object} params  Parameters to pass to the template function.\n\t   * @param {object} locals Locals to pass to `invoke` if the template is loaded \n\t   * via a `templateProvider`. Defaults to `{ params: params }`.\n\t   *\n\t   * @return {string|object}  The template html as a string, or a promise for \n\t   * that string,or `null` if no template is configured.\n\t   */\n\t  this.fromConfig = function (config, params, locals) {\n\t    return (\n\t      isDefined(config.template) ? this.fromString(config.template, params) :\n\t      isDefined(config.templateUrl) ? this.fromUrl(config.templateUrl, params) :\n\t      isDefined(config.templateProvider) ? this.fromProvider(config.templateProvider, params, locals) :\n\t      null\n\t    );\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$templateFactory#fromString\n\t   * @methodOf ui.router.util.$templateFactory\n\t   *\n\t   * @description\n\t   * Creates a template from a string or a function returning a string.\n\t   *\n\t   * @param {string|object} template html template as a string or function that \n\t   * returns an html template as a string.\n\t   * @param {object} params Parameters to pass to the template function.\n\t   *\n\t   * @return {string|object} The template html as a string, or a promise for that \n\t   * string.\n\t   */\n\t  this.fromString = function (template, params) {\n\t    return isFunction(template) ? template(params) : template;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$templateFactory#fromUrl\n\t   * @methodOf ui.router.util.$templateFactory\n\t   * \n\t   * @description\n\t   * Loads a template from the a URL via `$http` and `$templateCache`.\n\t   *\n\t   * @param {string|Function} url url of the template to load, or a function \n\t   * that returns a url.\n\t   * @param {Object} params Parameters to pass to the url function.\n\t   * @return {string|Promise.<string>} The template html as a string, or a promise \n\t   * for that string.\n\t   */\n\t  this.fromUrl = function (url, params) {\n\t    if (isFunction(url)) url = url(params);\n\t    if (url == null) return null;\n\t    else return $http\n\t        .get(url, { cache: $templateCache, headers: { Accept: 'text/html' }})\n\t        .then(function(response) { return response.data; });\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$templateFactory#fromProvider\n\t   * @methodOf ui.router.util.$templateFactory\n\t   *\n\t   * @description\n\t   * Creates a template by invoking an injectable provider function.\n\t   *\n\t   * @param {Function} provider Function to invoke via `$injector.invoke`\n\t   * @param {Object} params Parameters for the template.\n\t   * @param {Object} locals Locals to pass to `invoke`. Defaults to \n\t   * `{ params: params }`.\n\t   * @return {string|Promise.<string>} The template html as a string, or a promise \n\t   * for that string.\n\t   */\n\t  this.fromProvider = function (provider, params, locals) {\n\t    return $injector.invoke(provider, null, locals || { params: params });\n\t  };\n\t}\n\t\n\tangular.module('ui.router.util').service('$templateFactory', $TemplateFactory);\n\t\n\tvar $$UMFP; // reference to $UrlMatcherFactoryProvider\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.util.type:UrlMatcher\n\t *\n\t * @description\n\t * Matches URLs against patterns and extracts named parameters from the path or the search\n\t * part of the URL. A URL pattern consists of a path pattern, optionally followed by '?' and a list\n\t * of search parameters. Multiple search parameter names are separated by '&'. Search parameters\n\t * do not influence whether or not a URL is matched, but their values are passed through into\n\t * the matched parameters returned by {@link ui.router.util.type:UrlMatcher#methods_exec exec}.\n\t *\n\t * Path parameter placeholders can be specified using simple colon/catch-all syntax or curly brace\n\t * syntax, which optionally allows a regular expression for the parameter to be specified:\n\t *\n\t * * `':'` name - colon placeholder\n\t * * `'*'` name - catch-all placeholder\n\t * * `'{' name '}'` - curly placeholder\n\t * * `'{' name ':' regexp|type '}'` - curly placeholder with regexp or type name. Should the\n\t *   regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n\t *\n\t * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n\t * must be unique within the pattern (across both path and search parameters). For colon\n\t * placeholders or curly placeholders without an explicit regexp, a path parameter matches any\n\t * number of characters other than '/'. For catch-all placeholders the path parameter matches\n\t * any number of characters.\n\t *\n\t * Examples:\n\t *\n\t * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n\t *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n\t * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n\t *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n\t * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n\t * * `'/user/{id:[^/]*}'` - Same as the previous example.\n\t * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n\t *   parameter consists of 1 to 8 hex digits.\n\t * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n\t *   path into the parameter 'path'.\n\t * * `'/files/*path'` - ditto.\n\t * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n\t *   in the built-in  `date` Type matches `2014-11-12`) and provides a Date object in $stateParams.start\n\t *\n\t * @param {string} pattern  The pattern to compile into a matcher.\n\t * @param {Object} config  A configuration object hash:\n\t * @param {Object=} parentMatcher Used to concatenate the pattern/config onto\n\t *   an existing UrlMatcher\n\t *\n\t * * `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n\t * * `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\n\t *\n\t * @property {string} prefix  A static prefix of this pattern. The matcher guarantees that any\n\t *   URL matching this matcher (i.e. any string for which {@link ui.router.util.type:UrlMatcher#methods_exec exec()} returns\n\t *   non-null) will start with this prefix.\n\t *\n\t * @property {string} source  The pattern that was passed into the constructor\n\t *\n\t * @property {string} sourcePath  The path portion of the source property\n\t *\n\t * @property {string} sourceSearch  The search portion of the source property\n\t *\n\t * @property {string} regex  The constructed regex that will be used to match against the url when\n\t *   it is time to determine which url will match.\n\t *\n\t * @returns {Object}  New `UrlMatcher` object\n\t */\n\tfunction UrlMatcher(pattern, config, parentMatcher) {\n\t  config = extend({ params: {} }, isObject(config) ? config : {});\n\t\n\t  // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n\t  //   '*' name\n\t  //   ':' name\n\t  //   '{' name '}'\n\t  //   '{' name ':' regexp '}'\n\t  // The regular expression is somewhat complicated due to the need to allow curly braces\n\t  // inside the regular expression. The placeholder regexp breaks down as follows:\n\t  //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n\t  //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n\t  //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n\t  //    [^{}\\\\]+                       - anything other than curly braces or backslash\n\t  //    \\\\.                            - a backslash escape\n\t  //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n\t  var placeholder       = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n\t      searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n\t      compiled = '^', last = 0, m,\n\t      segments = this.segments = [],\n\t      parentParams = parentMatcher ? parentMatcher.params : {},\n\t      params = this.params = parentMatcher ? parentMatcher.params.$$new() : new $$UMFP.ParamSet(),\n\t      paramNames = [];\n\t\n\t  function addParameter(id, type, config, location) {\n\t    paramNames.push(id);\n\t    if (parentParams[id]) return parentParams[id];\n\t    if (!/^\\w+([-.]+\\w+)*(?:\\[\\])?$/.test(id)) throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n\t    if (params[id]) throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n\t    params[id] = new $$UMFP.Param(id, type, config, location);\n\t    return params[id];\n\t  }\n\t\n\t  function quoteRegExp(string, pattern, squash, optional) {\n\t    var surroundPattern = ['',''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\n\t    if (!pattern) return result;\n\t    switch(squash) {\n\t      case false: surroundPattern = ['(', ')' + (optional ? \"?\" : \"\")]; break;\n\t      case true:\n\t        result = result.replace(/\\/$/, '');\n\t        surroundPattern = ['(?:\\/(', ')|\\/)?'];\n\t      break;\n\t      default:    surroundPattern = ['(' + squash + \"|\", ')?']; break;\n\t    }\n\t    return result + surroundPattern[0] + pattern + surroundPattern[1];\n\t  }\n\t\n\t  this.source = pattern;\n\t\n\t  // Split into static segments separated by path parameter placeholders.\n\t  // The number of segments is always 1 more than the number of parameters.\n\t  function matchDetails(m, isSearch) {\n\t    var id, regexp, segment, type, cfg, arrayMode;\n\t    id          = m[2] || m[3]; // IE[78] returns '' for unmatched groups instead of null\n\t    cfg         = config.params[id];\n\t    segment     = pattern.substring(last, m.index);\n\t    regexp      = isSearch ? m[4] : m[4] || (m[1] == '*' ? '.*' : null);\n\t\n\t    if (regexp) {\n\t      type      = $$UMFP.type(regexp) || inherit($$UMFP.type(\"string\"), { pattern: new RegExp(regexp, config.caseInsensitive ? 'i' : undefined) });\n\t    }\n\t\n\t    return {\n\t      id: id, regexp: regexp, segment: segment, type: type, cfg: cfg\n\t    };\n\t  }\n\t\n\t  var p, param, segment;\n\t  while ((m = placeholder.exec(pattern))) {\n\t    p = matchDetails(m, false);\n\t    if (p.segment.indexOf('?') >= 0) break; // we're into the search part\n\t\n\t    param = addParameter(p.id, p.type, p.cfg, \"path\");\n\t    compiled += quoteRegExp(p.segment, param.type.pattern.source, param.squash, param.isOptional);\n\t    segments.push(p.segment);\n\t    last = placeholder.lastIndex;\n\t  }\n\t  segment = pattern.substring(last);\n\t\n\t  // Find any search parameter names and remove them from the last segment\n\t  var i = segment.indexOf('?');\n\t\n\t  if (i >= 0) {\n\t    var search = this.sourceSearch = segment.substring(i);\n\t    segment = segment.substring(0, i);\n\t    this.sourcePath = pattern.substring(0, last + i);\n\t\n\t    if (search.length > 0) {\n\t      last = 0;\n\t      while ((m = searchPlaceholder.exec(search))) {\n\t        p = matchDetails(m, true);\n\t        param = addParameter(p.id, p.type, p.cfg, \"search\");\n\t        last = placeholder.lastIndex;\n\t        // check if ?&\n\t      }\n\t    }\n\t  } else {\n\t    this.sourcePath = pattern;\n\t    this.sourceSearch = '';\n\t  }\n\t\n\t  compiled += quoteRegExp(segment) + (config.strict === false ? '\\/?' : '') + '$';\n\t  segments.push(segment);\n\t\n\t  this.regexp = new RegExp(compiled, config.caseInsensitive ? 'i' : undefined);\n\t  this.prefix = segments[0];\n\t  this.$$paramNames = paramNames;\n\t}\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:UrlMatcher#concat\n\t * @methodOf ui.router.util.type:UrlMatcher\n\t *\n\t * @description\n\t * Returns a new matcher for a pattern constructed by appending the path part and adding the\n\t * search parameters of the specified pattern to this pattern. The current pattern is not\n\t * modified. This can be understood as creating a pattern for URLs that are relative to (or\n\t * suffixes of) the current pattern.\n\t *\n\t * @example\n\t * The following two matchers are equivalent:\n\t * <pre>\n\t * new UrlMatcher('/user/{id}?q').concat('/details?date');\n\t * new UrlMatcher('/user/{id}/details?q&date');\n\t * </pre>\n\t *\n\t * @param {string} pattern  The pattern to append.\n\t * @param {Object} config  An object hash of the configuration for the matcher.\n\t * @returns {UrlMatcher}  A matcher for the concatenated pattern.\n\t */\n\tUrlMatcher.prototype.concat = function (pattern, config) {\n\t  // Because order of search parameters is irrelevant, we can add our own search\n\t  // parameters to the end of the new pattern. Parse the new pattern by itself\n\t  // and then join the bits together, but it's much easier to do this on a string level.\n\t  var defaultConfig = {\n\t    caseInsensitive: $$UMFP.caseInsensitive(),\n\t    strict: $$UMFP.strictMode(),\n\t    squash: $$UMFP.defaultSquashPolicy()\n\t  };\n\t  return new UrlMatcher(this.sourcePath + pattern + this.sourceSearch, extend(defaultConfig, config), this);\n\t};\n\t\n\tUrlMatcher.prototype.toString = function () {\n\t  return this.source;\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:UrlMatcher#exec\n\t * @methodOf ui.router.util.type:UrlMatcher\n\t *\n\t * @description\n\t * Tests the specified path against this matcher, and returns an object containing the captured\n\t * parameter values, or null if the path does not match. The returned object contains the values\n\t * of any search parameters that are mentioned in the pattern, but their value may be null if\n\t * they are not present in `searchParams`. This means that search parameters are always treated\n\t * as optional.\n\t *\n\t * @example\n\t * <pre>\n\t * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n\t *   x: '1', q: 'hello'\n\t * });\n\t * // returns { id: 'bob', q: 'hello', r: null }\n\t * </pre>\n\t *\n\t * @param {string} path  The URL path to match, e.g. `$location.path()`.\n\t * @param {Object} searchParams  URL search parameters, e.g. `$location.search()`.\n\t * @returns {Object}  The captured parameter values.\n\t */\n\tUrlMatcher.prototype.exec = function (path, searchParams) {\n\t  var m = this.regexp.exec(path);\n\t  if (!m) return null;\n\t  searchParams = searchParams || {};\n\t\n\t  var paramNames = this.parameters(), nTotal = paramNames.length,\n\t    nPath = this.segments.length - 1,\n\t    values = {}, i, j, cfg, paramName;\n\t\n\t  if (nPath !== m.length - 1) throw new Error(\"Unbalanced capture group in route '\" + this.source + \"'\");\n\t\n\t  function decodePathArray(string) {\n\t    function reverseString(str) { return str.split(\"\").reverse().join(\"\"); }\n\t    function unquoteDashes(str) { return str.replace(/\\\\-/g, \"-\"); }\n\t\n\t    var split = reverseString(string).split(/-(?!\\\\)/);\n\t    var allReversed = map(split, reverseString);\n\t    return map(allReversed, unquoteDashes).reverse();\n\t  }\n\t\n\t  var param, paramVal;\n\t  for (i = 0; i < nPath; i++) {\n\t    paramName = paramNames[i];\n\t    param = this.params[paramName];\n\t    paramVal = m[i+1];\n\t    // if the param value matches a pre-replace pair, replace the value before decoding.\n\t    for (j = 0; j < param.replace.length; j++) {\n\t      if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;\n\t    }\n\t    if (paramVal && param.array === true) paramVal = decodePathArray(paramVal);\n\t    if (isDefined(paramVal)) paramVal = param.type.decode(paramVal);\n\t    values[paramName] = param.value(paramVal);\n\t  }\n\t  for (/**/; i < nTotal; i++) {\n\t    paramName = paramNames[i];\n\t    values[paramName] = this.params[paramName].value(searchParams[paramName]);\n\t    param = this.params[paramName];\n\t    paramVal = searchParams[paramName];\n\t    for (j = 0; j < param.replace.length; j++) {\n\t      if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;\n\t    }\n\t    if (isDefined(paramVal)) paramVal = param.type.decode(paramVal);\n\t    values[paramName] = param.value(paramVal);\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:UrlMatcher#parameters\n\t * @methodOf ui.router.util.type:UrlMatcher\n\t *\n\t * @description\n\t * Returns the names of all path and search parameters of this pattern in an unspecified order.\n\t *\n\t * @returns {Array.<string>}  An array of parameter names. Must be treated as read-only. If the\n\t *    pattern has no parameters, an empty array is returned.\n\t */\n\tUrlMatcher.prototype.parameters = function (param) {\n\t  if (!isDefined(param)) return this.$$paramNames;\n\t  return this.params[param] || null;\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:UrlMatcher#validates\n\t * @methodOf ui.router.util.type:UrlMatcher\n\t *\n\t * @description\n\t * Checks an object hash of parameters to validate their correctness according to the parameter\n\t * types of this `UrlMatcher`.\n\t *\n\t * @param {Object} params The object hash of parameters to validate.\n\t * @returns {boolean} Returns `true` if `params` validates, otherwise `false`.\n\t */\n\tUrlMatcher.prototype.validates = function (params) {\n\t  return this.params.$$validates(params);\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:UrlMatcher#format\n\t * @methodOf ui.router.util.type:UrlMatcher\n\t *\n\t * @description\n\t * Creates a URL that matches this pattern by substituting the specified values\n\t * for the path and search parameters. Null values for path parameters are\n\t * treated as empty strings.\n\t *\n\t * @example\n\t * <pre>\n\t * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n\t * // returns '/user/bob?q=yes'\n\t * </pre>\n\t *\n\t * @param {Object} values  the values to substitute for the parameters in this pattern.\n\t * @returns {string}  the formatted URL (path and optionally search part).\n\t */\n\tUrlMatcher.prototype.format = function (values) {\n\t  values = values || {};\n\t  var segments = this.segments, params = this.parameters(), paramset = this.params;\n\t  if (!this.validates(values)) return null;\n\t\n\t  var i, search = false, nPath = segments.length - 1, nTotal = params.length, result = segments[0];\n\t\n\t  function encodeDashes(str) { // Replace dashes with encoded \"\\-\"\n\t    return encodeURIComponent(str).replace(/-/g, function(c) { return '%5C%' + c.charCodeAt(0).toString(16).toUpperCase(); });\n\t  }\n\t\n\t  for (i = 0; i < nTotal; i++) {\n\t    var isPathParam = i < nPath;\n\t    var name = params[i], param = paramset[name], value = param.value(values[name]);\n\t    var isDefaultValue = param.isOptional && param.type.equals(param.value(), value);\n\t    var squash = isDefaultValue ? param.squash : false;\n\t    var encoded = param.type.encode(value);\n\t\n\t    if (isPathParam) {\n\t      var nextSegment = segments[i + 1];\n\t      var isFinalPathParam = i + 1 === nPath;\n\t\n\t      if (squash === false) {\n\t        if (encoded != null) {\n\t          if (isArray(encoded)) {\n\t            result += map(encoded, encodeDashes).join(\"-\");\n\t          } else {\n\t            result += encodeURIComponent(encoded);\n\t          }\n\t        }\n\t        result += nextSegment;\n\t      } else if (squash === true) {\n\t        var capture = result.match(/\\/$/) ? /\\/?(.*)/ : /(.*)/;\n\t        result += nextSegment.match(capture)[1];\n\t      } else if (isString(squash)) {\n\t        result += squash + nextSegment;\n\t      }\n\t\n\t      if (isFinalPathParam && param.squash === true && result.slice(-1) === '/') result = result.slice(0, -1);\n\t    } else {\n\t      if (encoded == null || (isDefaultValue && squash !== false)) continue;\n\t      if (!isArray(encoded)) encoded = [ encoded ];\n\t      if (encoded.length === 0) continue;\n\t      encoded = map(encoded, encodeURIComponent).join('&' + name + '=');\n\t      result += (search ? '&' : '?') + (name + '=' + encoded);\n\t      search = true;\n\t    }\n\t  }\n\t\n\t  return result;\n\t};\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.util.type:Type\n\t *\n\t * @description\n\t * Implements an interface to define custom parameter types that can be decoded from and encoded to\n\t * string parameters matched in a URL. Used by {@link ui.router.util.type:UrlMatcher `UrlMatcher`}\n\t * objects when matching or formatting URLs, or comparing or validating parameter values.\n\t *\n\t * See {@link ui.router.util.$urlMatcherFactory#methods_type `$urlMatcherFactory#type()`} for more\n\t * information on registering custom types.\n\t *\n\t * @param {Object} config  A configuration object which contains the custom type definition.  The object's\n\t *        properties will override the default methods and/or pattern in `Type`'s public interface.\n\t * @example\n\t * <pre>\n\t * {\n\t *   decode: function(val) { return parseInt(val, 10); },\n\t *   encode: function(val) { return val && val.toString(); },\n\t *   equals: function(a, b) { return this.is(a) && a === b; },\n\t *   is: function(val) { return angular.isNumber(val) isFinite(val) && val % 1 === 0; },\n\t *   pattern: /\\d+/\n\t * }\n\t * </pre>\n\t *\n\t * @property {RegExp} pattern The regular expression pattern used to match values of this type when\n\t *           coming from a substring of a URL.\n\t *\n\t * @returns {Object}  Returns a new `Type` object.\n\t */\n\tfunction Type(config) {\n\t  extend(this, config);\n\t}\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:Type#is\n\t * @methodOf ui.router.util.type:Type\n\t *\n\t * @description\n\t * Detects whether a value is of a particular type. Accepts a native (decoded) value\n\t * and determines whether it matches the current `Type` object.\n\t *\n\t * @param {*} val  The value to check.\n\t * @param {string} key  Optional. If the type check is happening in the context of a specific\n\t *        {@link ui.router.util.type:UrlMatcher `UrlMatcher`} object, this is the name of the\n\t *        parameter in which `val` is stored. Can be used for meta-programming of `Type` objects.\n\t * @returns {Boolean}  Returns `true` if the value matches the type, otherwise `false`.\n\t */\n\tType.prototype.is = function(val, key) {\n\t  return true;\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:Type#encode\n\t * @methodOf ui.router.util.type:Type\n\t *\n\t * @description\n\t * Encodes a custom/native type value to a string that can be embedded in a URL. Note that the\n\t * return value does *not* need to be URL-safe (i.e. passed through `encodeURIComponent()`), it\n\t * only needs to be a representation of `val` that has been coerced to a string.\n\t *\n\t * @param {*} val  The value to encode.\n\t * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n\t *        meta-programming of `Type` objects.\n\t * @returns {string}  Returns a string representation of `val` that can be encoded in a URL.\n\t */\n\tType.prototype.encode = function(val, key) {\n\t  return val;\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:Type#decode\n\t * @methodOf ui.router.util.type:Type\n\t *\n\t * @description\n\t * Converts a parameter value (from URL string or transition param) to a custom/native value.\n\t *\n\t * @param {string} val  The URL parameter value to decode.\n\t * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n\t *        meta-programming of `Type` objects.\n\t * @returns {*}  Returns a custom representation of the URL parameter value.\n\t */\n\tType.prototype.decode = function(val, key) {\n\t  return val;\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @name ui.router.util.type:Type#equals\n\t * @methodOf ui.router.util.type:Type\n\t *\n\t * @description\n\t * Determines whether two decoded values are equivalent.\n\t *\n\t * @param {*} a  A value to compare against.\n\t * @param {*} b  A value to compare against.\n\t * @returns {Boolean}  Returns `true` if the values are equivalent/equal, otherwise `false`.\n\t */\n\tType.prototype.equals = function(a, b) {\n\t  return a == b;\n\t};\n\t\n\tType.prototype.$subPattern = function() {\n\t  var sub = this.pattern.toString();\n\t  return sub.substr(1, sub.length - 2);\n\t};\n\t\n\tType.prototype.pattern = /.*/;\n\t\n\tType.prototype.toString = function() { return \"{Type:\" + this.name + \"}\"; };\n\t\n\t/** Given an encoded string, or a decoded object, returns a decoded object */\n\tType.prototype.$normalize = function(val) {\n\t  return this.is(val) ? val : this.decode(val);\n\t};\n\t\n\t/*\n\t * Wraps an existing custom Type as an array of Type, depending on 'mode'.\n\t * e.g.:\n\t * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n\t * - url: \"/path?queryParam=1&queryParam=2\n\t * - $stateParams.queryParam will be [1, 2]\n\t * if `mode` is \"auto\", then\n\t * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n\t * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n\t */\n\tType.prototype.$asArray = function(mode, isSearch) {\n\t  if (!mode) return this;\n\t  if (mode === \"auto\" && !isSearch) throw new Error(\"'auto' array mode is for query parameters only\");\n\t\n\t  function ArrayType(type, mode) {\n\t    function bindTo(type, callbackName) {\n\t      return function() {\n\t        return type[callbackName].apply(type, arguments);\n\t      };\n\t    }\n\t\n\t    // Wrap non-array value as array\n\t    function arrayWrap(val) { return isArray(val) ? val : (isDefined(val) ? [ val ] : []); }\n\t    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n\t    function arrayUnwrap(val) {\n\t      switch(val.length) {\n\t        case 0: return undefined;\n\t        case 1: return mode === \"auto\" ? val[0] : val;\n\t        default: return val;\n\t      }\n\t    }\n\t    function falsey(val) { return !val; }\n\t\n\t    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n\t    function arrayHandler(callback, allTruthyMode) {\n\t      return function handleArray(val) {\n\t        if (isArray(val) && val.length === 0) return val;\n\t        val = arrayWrap(val);\n\t        var result = map(val, callback);\n\t        if (allTruthyMode === true)\n\t          return filter(result, falsey).length === 0;\n\t        return arrayUnwrap(result);\n\t      };\n\t    }\n\t\n\t    // Wraps type (.equals) functions to operate on each value of an array\n\t    function arrayEqualsHandler(callback) {\n\t      return function handleArray(val1, val2) {\n\t        var left = arrayWrap(val1), right = arrayWrap(val2);\n\t        if (left.length !== right.length) return false;\n\t        for (var i = 0; i < left.length; i++) {\n\t          if (!callback(left[i], right[i])) return false;\n\t        }\n\t        return true;\n\t      };\n\t    }\n\t\n\t    this.encode = arrayHandler(bindTo(type, 'encode'));\n\t    this.decode = arrayHandler(bindTo(type, 'decode'));\n\t    this.is     = arrayHandler(bindTo(type, 'is'), true);\n\t    this.equals = arrayEqualsHandler(bindTo(type, 'equals'));\n\t    this.pattern = type.pattern;\n\t    this.$normalize = arrayHandler(bindTo(type, '$normalize'));\n\t    this.name = type.name;\n\t    this.$arrayMode = mode;\n\t  }\n\t\n\t  return new ArrayType(this, mode);\n\t};\n\t\n\t\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.util.$urlMatcherFactory\n\t *\n\t * @description\n\t * Factory for {@link ui.router.util.type:UrlMatcher `UrlMatcher`} instances. The factory\n\t * is also available to providers under the name `$urlMatcherFactoryProvider`.\n\t */\n\tfunction $UrlMatcherFactory() {\n\t  $$UMFP = this;\n\t\n\t  var isCaseInsensitive = false, isStrictMode = true, defaultSquashPolicy = false;\n\t\n\t  // Use tildes to pre-encode slashes.\n\t  // If the slashes are simply URLEncoded, the browser can choose to pre-decode them,\n\t  // and bidirectional encoding/decoding fails.\n\t  // Tilde was chosen because it's not a RFC 3986 section 2.2 Reserved Character\n\t  function valToString(val) { return val != null ? val.toString().replace(/(~|\\/)/g, function (m) { return {'~':'~~', '/':'~2F'}[m]; }) : val; }\n\t  function valFromString(val) { return val != null ? val.toString().replace(/(~~|~2F)/g, function (m) { return {'~~':'~', '~2F':'/'}[m]; }) : val; }\n\t\n\t  var $types = {}, enqueue = true, typeQueue = [], injector, defaultTypes = {\n\t    \"string\": {\n\t      encode: valToString,\n\t      decode: valFromString,\n\t      // TODO: in 1.0, make string .is() return false if value is undefined/null by default.\n\t      // In 0.2.x, string params are optional by default for backwards compat\n\t      is: function(val) { return val == null || !isDefined(val) || typeof val === \"string\"; },\n\t      pattern: /[^/]*/\n\t    },\n\t    \"int\": {\n\t      encode: valToString,\n\t      decode: function(val) { return parseInt(val, 10); },\n\t      is: function(val) { return isDefined(val) && this.decode(val.toString()) === val; },\n\t      pattern: /\\d+/\n\t    },\n\t    \"bool\": {\n\t      encode: function(val) { return val ? 1 : 0; },\n\t      decode: function(val) { return parseInt(val, 10) !== 0; },\n\t      is: function(val) { return val === true || val === false; },\n\t      pattern: /0|1/\n\t    },\n\t    \"date\": {\n\t      encode: function (val) {\n\t        if (!this.is(val))\n\t          return undefined;\n\t        return [ val.getFullYear(),\n\t          ('0' + (val.getMonth() + 1)).slice(-2),\n\t          ('0' + val.getDate()).slice(-2)\n\t        ].join(\"-\");\n\t      },\n\t      decode: function (val) {\n\t        if (this.is(val)) return val;\n\t        var match = this.capture.exec(val);\n\t        return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n\t      },\n\t      is: function(val) { return val instanceof Date && !isNaN(val.valueOf()); },\n\t      equals: function (a, b) { return this.is(a) && this.is(b) && a.toISOString() === b.toISOString(); },\n\t      pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n\t      capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\n\t    },\n\t    \"json\": {\n\t      encode: angular.toJson,\n\t      decode: angular.fromJson,\n\t      is: angular.isObject,\n\t      equals: angular.equals,\n\t      pattern: /[^/]*/\n\t    },\n\t    \"any\": { // does not encode/decode\n\t      encode: angular.identity,\n\t      decode: angular.identity,\n\t      equals: angular.equals,\n\t      pattern: /.*/\n\t    }\n\t  };\n\t\n\t  function getDefaultConfig() {\n\t    return {\n\t      strict: isStrictMode,\n\t      caseInsensitive: isCaseInsensitive\n\t    };\n\t  }\n\t\n\t  function isInjectable(value) {\n\t    return (isFunction(value) || (isArray(value) && isFunction(value[value.length - 1])));\n\t  }\n\t\n\t  /**\n\t   * [Internal] Get the default value of a parameter, which may be an injectable function.\n\t   */\n\t  $UrlMatcherFactory.$$getDefaultValue = function(config) {\n\t    if (!isInjectable(config.value)) return config.value;\n\t    if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n\t    return injector.invoke(config.value);\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$urlMatcherFactory#caseInsensitive\n\t   * @methodOf ui.router.util.$urlMatcherFactory\n\t   *\n\t   * @description\n\t   * Defines whether URL matching should be case sensitive (the default behavior), or not.\n\t   *\n\t   * @param {boolean} value `false` to match URL in a case sensitive manner; otherwise `true`;\n\t   * @returns {boolean} the current value of caseInsensitive\n\t   */\n\t  this.caseInsensitive = function(value) {\n\t    if (isDefined(value))\n\t      isCaseInsensitive = value;\n\t    return isCaseInsensitive;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$urlMatcherFactory#strictMode\n\t   * @methodOf ui.router.util.$urlMatcherFactory\n\t   *\n\t   * @description\n\t   * Defines whether URLs should match trailing slashes, or not (the default behavior).\n\t   *\n\t   * @param {boolean=} value `false` to match trailing slashes in URLs, otherwise `true`.\n\t   * @returns {boolean} the current value of strictMode\n\t   */\n\t  this.strictMode = function(value) {\n\t    if (isDefined(value))\n\t      isStrictMode = value;\n\t    return isStrictMode;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$urlMatcherFactory#defaultSquashPolicy\n\t   * @methodOf ui.router.util.$urlMatcherFactory\n\t   *\n\t   * @description\n\t   * Sets the default behavior when generating or matching URLs with default parameter values.\n\t   *\n\t   * @param {string} value A string that defines the default parameter URL squashing behavior.\n\t   *    `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n\t   *    `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n\t   *             parameter is surrounded by slashes, squash (remove) one slash from the URL\n\t   *    any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n\t   *             the parameter value from the URL and replace it with this string.\n\t   */\n\t  this.defaultSquashPolicy = function(value) {\n\t    if (!isDefined(value)) return defaultSquashPolicy;\n\t    if (value !== true && value !== false && !isString(value))\n\t      throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n\t    defaultSquashPolicy = value;\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$urlMatcherFactory#compile\n\t   * @methodOf ui.router.util.$urlMatcherFactory\n\t   *\n\t   * @description\n\t   * Creates a {@link ui.router.util.type:UrlMatcher `UrlMatcher`} for the specified pattern.\n\t   *\n\t   * @param {string} pattern  The URL pattern.\n\t   * @param {Object} config  The config object hash.\n\t   * @returns {UrlMatcher}  The UrlMatcher.\n\t   */\n\t  this.compile = function (pattern, config) {\n\t    return new UrlMatcher(pattern, extend(getDefaultConfig(), config));\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$urlMatcherFactory#isMatcher\n\t   * @methodOf ui.router.util.$urlMatcherFactory\n\t   *\n\t   * @description\n\t   * Returns true if the specified object is a `UrlMatcher`, or false otherwise.\n\t   *\n\t   * @param {Object} object  The object to perform the type check against.\n\t   * @returns {Boolean}  Returns `true` if the object matches the `UrlMatcher` interface, by\n\t   *          implementing all the same methods.\n\t   */\n\t  this.isMatcher = function (o) {\n\t    if (!isObject(o)) return false;\n\t    var result = true;\n\t\n\t    forEach(UrlMatcher.prototype, function(val, name) {\n\t      if (isFunction(val)) {\n\t        result = result && (isDefined(o[name]) && isFunction(o[name]));\n\t      }\n\t    });\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.util.$urlMatcherFactory#type\n\t   * @methodOf ui.router.util.$urlMatcherFactory\n\t   *\n\t   * @description\n\t   * Registers a custom {@link ui.router.util.type:Type `Type`} object that can be used to\n\t   * generate URLs with typed parameters.\n\t   *\n\t   * @param {string} name  The type name.\n\t   * @param {Object|Function} definition   The type definition. See\n\t   *        {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n\t   * @param {Object|Function} definitionFn (optional) A function that is injected before the app\n\t   *        runtime starts.  The result of this function is merged into the existing `definition`.\n\t   *        See {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n\t   *\n\t   * @returns {Object}  Returns `$urlMatcherFactoryProvider`.\n\t   *\n\t   * @example\n\t   * This is a simple example of a custom type that encodes and decodes items from an\n\t   * array, using the array index as the URL-encoded value:\n\t   *\n\t   * <pre>\n\t   * var list = ['John', 'Paul', 'George', 'Ringo'];\n\t   *\n\t   * $urlMatcherFactoryProvider.type('listItem', {\n\t   *   encode: function(item) {\n\t   *     // Represent the list item in the URL using its corresponding index\n\t   *     return list.indexOf(item);\n\t   *   },\n\t   *   decode: function(item) {\n\t   *     // Look up the list item by index\n\t   *     return list[parseInt(item, 10)];\n\t   *   },\n\t   *   is: function(item) {\n\t   *     // Ensure the item is valid by checking to see that it appears\n\t   *     // in the list\n\t   *     return list.indexOf(item) > -1;\n\t   *   }\n\t   * });\n\t   *\n\t   * $stateProvider.state('list', {\n\t   *   url: \"/list/{item:listItem}\",\n\t   *   controller: function($scope, $stateParams) {\n\t   *     console.log($stateParams.item);\n\t   *   }\n\t   * });\n\t   *\n\t   * // ...\n\t   *\n\t   * // Changes URL to '/list/3', logs \"Ringo\" to the console\n\t   * $state.go('list', { item: \"Ringo\" });\n\t   * </pre>\n\t   *\n\t   * This is a more complex example of a type that relies on dependency injection to\n\t   * interact with services, and uses the parameter name from the URL to infer how to\n\t   * handle encoding and decoding parameter values:\n\t   *\n\t   * <pre>\n\t   * // Defines a custom type that gets a value from a service,\n\t   * // where each service gets different types of values from\n\t   * // a backend API:\n\t   * $urlMatcherFactoryProvider.type('dbObject', {}, function(Users, Posts) {\n\t   *\n\t   *   // Matches up services to URL parameter names\n\t   *   var services = {\n\t   *     user: Users,\n\t   *     post: Posts\n\t   *   };\n\t   *\n\t   *   return {\n\t   *     encode: function(object) {\n\t   *       // Represent the object in the URL using its unique ID\n\t   *       return object.id;\n\t   *     },\n\t   *     decode: function(value, key) {\n\t   *       // Look up the object by ID, using the parameter\n\t   *       // name (key) to call the correct service\n\t   *       return services[key].findById(value);\n\t   *     },\n\t   *     is: function(object, key) {\n\t   *       // Check that object is a valid dbObject\n\t   *       return angular.isObject(object) && object.id && services[key];\n\t   *     }\n\t   *     equals: function(a, b) {\n\t   *       // Check the equality of decoded objects by comparing\n\t   *       // their unique IDs\n\t   *       return a.id === b.id;\n\t   *     }\n\t   *   };\n\t   * });\n\t   *\n\t   * // In a config() block, you can then attach URLs with\n\t   * // type-annotated parameters:\n\t   * $stateProvider.state('users', {\n\t   *   url: \"/users\",\n\t   *   // ...\n\t   * }).state('users.item', {\n\t   *   url: \"/{user:dbObject}\",\n\t   *   controller: function($scope, $stateParams) {\n\t   *     // $stateParams.user will now be an object returned from\n\t   *     // the Users service\n\t   *   },\n\t   *   // ...\n\t   * });\n\t   * </pre>\n\t   */\n\t  this.type = function (name, definition, definitionFn) {\n\t    if (!isDefined(definition)) return $types[name];\n\t    if ($types.hasOwnProperty(name)) throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n\t\n\t    $types[name] = new Type(extend({ name: name }, definition));\n\t    if (definitionFn) {\n\t      typeQueue.push({ name: name, def: definitionFn });\n\t      if (!enqueue) flushTypeQueue();\n\t    }\n\t    return this;\n\t  };\n\t\n\t  // `flushTypeQueue()` waits until `$urlMatcherFactory` is injected before invoking the queued `definitionFn`s\n\t  function flushTypeQueue() {\n\t    while(typeQueue.length) {\n\t      var type = typeQueue.shift();\n\t      if (type.pattern) throw new Error(\"You cannot override a type's .pattern at runtime.\");\n\t      angular.extend($types[type.name], injector.invoke(type.def));\n\t    }\n\t  }\n\t\n\t  // Register default types. Store them in the prototype of $types.\n\t  forEach(defaultTypes, function(type, name) { $types[name] = new Type(extend({name: name}, type)); });\n\t  $types = inherit($types, {});\n\t\n\t  /* No need to document $get, since it returns this */\n\t  this.$get = ['$injector', function ($injector) {\n\t    injector = $injector;\n\t    enqueue = false;\n\t    flushTypeQueue();\n\t\n\t    forEach(defaultTypes, function(type, name) {\n\t      if (!$types[name]) $types[name] = new Type(type);\n\t    });\n\t    return this;\n\t  }];\n\t\n\t  this.Param = function Param(id, type, config, location) {\n\t    var self = this;\n\t    config = unwrapShorthand(config);\n\t    type = getType(config, type, location);\n\t    var arrayMode = getArrayMode();\n\t    type = arrayMode ? type.$asArray(arrayMode, location === \"search\") : type;\n\t    if (type.name === \"string\" && !arrayMode && location === \"path\" && config.value === undefined)\n\t      config.value = \"\"; // for 0.2.x; in 0.3.0+ do not automatically default to \"\"\n\t    var isOptional = config.value !== undefined;\n\t    var squash = getSquashPolicy(config, isOptional);\n\t    var replace = getReplace(config, arrayMode, isOptional, squash);\n\t\n\t    function unwrapShorthand(config) {\n\t      var keys = isObject(config) ? objectKeys(config) : [];\n\t      var isShorthand = indexOf(keys, \"value\") === -1 && indexOf(keys, \"type\") === -1 &&\n\t                        indexOf(keys, \"squash\") === -1 && indexOf(keys, \"array\") === -1;\n\t      if (isShorthand) config = { value: config };\n\t      config.$$fn = isInjectable(config.value) ? config.value : function () { return config.value; };\n\t      return config;\n\t    }\n\t\n\t    function getType(config, urlType, location) {\n\t      if (config.type && urlType) throw new Error(\"Param '\"+id+\"' has two type configurations.\");\n\t      if (urlType) return urlType;\n\t      if (!config.type) return (location === \"config\" ? $types.any : $types.string);\n\t\n\t      if (angular.isString(config.type))\n\t        return $types[config.type];\n\t      if (config.type instanceof Type)\n\t        return config.type;\n\t      return new Type(config.type);\n\t    }\n\t\n\t    // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n\t    function getArrayMode() {\n\t      var arrayDefaults = { array: (location === \"search\" ? \"auto\" : false) };\n\t      var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n\t      return extend(arrayDefaults, arrayParamNomenclature, config).array;\n\t    }\n\t\n\t    /**\n\t     * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n\t     */\n\t    function getSquashPolicy(config, isOptional) {\n\t      var squash = config.squash;\n\t      if (!isOptional || squash === false) return false;\n\t      if (!isDefined(squash) || squash == null) return defaultSquashPolicy;\n\t      if (squash === true || isString(squash)) return squash;\n\t      throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n\t    }\n\t\n\t    function getReplace(config, arrayMode, isOptional, squash) {\n\t      var replace, configuredKeys, defaultPolicy = [\n\t        { from: \"\",   to: (isOptional || arrayMode ? undefined : \"\") },\n\t        { from: null, to: (isOptional || arrayMode ? undefined : \"\") }\n\t      ];\n\t      replace = isArray(config.replace) ? config.replace : [];\n\t      if (isString(squash))\n\t        replace.push({ from: squash, to: undefined });\n\t      configuredKeys = map(replace, function(item) { return item.from; } );\n\t      return filter(defaultPolicy, function(item) { return indexOf(configuredKeys, item.from) === -1; }).concat(replace);\n\t    }\n\t\n\t    /**\n\t     * [Internal] Get the default value of a parameter, which may be an injectable function.\n\t     */\n\t    function $$getDefaultValue() {\n\t      if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n\t      var defaultValue = injector.invoke(config.$$fn);\n\t      if (defaultValue !== null && defaultValue !== undefined && !self.type.is(defaultValue))\n\t        throw new Error(\"Default value (\" + defaultValue + \") for parameter '\" + self.id + \"' is not an instance of Type (\" + self.type.name + \")\");\n\t      return defaultValue;\n\t    }\n\t\n\t    /**\n\t     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n\t     * default value, which may be the result of an injectable function.\n\t     */\n\t    function $value(value) {\n\t      function hasReplaceVal(val) { return function(obj) { return obj.from === val; }; }\n\t      function $replace(value) {\n\t        var replacement = map(filter(self.replace, hasReplaceVal(value)), function(obj) { return obj.to; });\n\t        return replacement.length ? replacement[0] : value;\n\t      }\n\t      value = $replace(value);\n\t      return !isDefined(value) ? $$getDefaultValue() : self.type.$normalize(value);\n\t    }\n\t\n\t    function toString() { return \"{Param:\" + id + \" \" + type + \" squash: '\" + squash + \"' optional: \" + isOptional + \"}\"; }\n\t\n\t    extend(this, {\n\t      id: id,\n\t      type: type,\n\t      location: location,\n\t      array: arrayMode,\n\t      squash: squash,\n\t      replace: replace,\n\t      isOptional: isOptional,\n\t      value: $value,\n\t      dynamic: undefined,\n\t      config: config,\n\t      toString: toString\n\t    });\n\t  };\n\t\n\t  function ParamSet(params) {\n\t    extend(this, params || {});\n\t  }\n\t\n\t  ParamSet.prototype = {\n\t    $$new: function() {\n\t      return inherit(this, extend(new ParamSet(), { $$parent: this}));\n\t    },\n\t    $$keys: function () {\n\t      var keys = [], chain = [], parent = this,\n\t        ignore = objectKeys(ParamSet.prototype);\n\t      while (parent) { chain.push(parent); parent = parent.$$parent; }\n\t      chain.reverse();\n\t      forEach(chain, function(paramset) {\n\t        forEach(objectKeys(paramset), function(key) {\n\t            if (indexOf(keys, key) === -1 && indexOf(ignore, key) === -1) keys.push(key);\n\t        });\n\t      });\n\t      return keys;\n\t    },\n\t    $$values: function(paramValues) {\n\t      var values = {}, self = this;\n\t      forEach(self.$$keys(), function(key) {\n\t        values[key] = self[key].value(paramValues && paramValues[key]);\n\t      });\n\t      return values;\n\t    },\n\t    $$equals: function(paramValues1, paramValues2) {\n\t      var equal = true, self = this;\n\t      forEach(self.$$keys(), function(key) {\n\t        var left = paramValues1 && paramValues1[key], right = paramValues2 && paramValues2[key];\n\t        if (!self[key].type.equals(left, right)) equal = false;\n\t      });\n\t      return equal;\n\t    },\n\t    $$validates: function $$validate(paramValues) {\n\t      var keys = this.$$keys(), i, param, rawVal, normalized, encoded;\n\t      for (i = 0; i < keys.length; i++) {\n\t        param = this[keys[i]];\n\t        rawVal = paramValues[keys[i]];\n\t        if ((rawVal === undefined || rawVal === null) && param.isOptional)\n\t          break; // There was no parameter value, but the param is optional\n\t        normalized = param.type.$normalize(rawVal);\n\t        if (!param.type.is(normalized))\n\t          return false; // The value was not of the correct Type, and could not be decoded to the correct Type\n\t        encoded = param.type.encode(normalized);\n\t        if (angular.isString(encoded) && !param.type.pattern.exec(encoded))\n\t          return false; // The value was of the correct type, but when encoded, did not match the Type's regexp\n\t      }\n\t      return true;\n\t    },\n\t    $$parent: undefined\n\t  };\n\t\n\t  this.ParamSet = ParamSet;\n\t}\n\t\n\t// Register as a provider so it's available to other providers\n\tangular.module('ui.router.util').provider('$urlMatcherFactory', $UrlMatcherFactory);\n\tangular.module('ui.router.util').run(['$urlMatcherFactory', function($urlMatcherFactory) { }]);\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.router.$urlRouterProvider\n\t *\n\t * @requires ui.router.util.$urlMatcherFactoryProvider\n\t * @requires $locationProvider\n\t *\n\t * @description\n\t * `$urlRouterProvider` has the responsibility of watching `$location`. \n\t * When `$location` changes it runs through a list of rules one by one until a \n\t * match is found. `$urlRouterProvider` is used behind the scenes anytime you specify \n\t * a url in a state configuration. All urls are compiled into a UrlMatcher object.\n\t *\n\t * There are several methods on `$urlRouterProvider` that make it useful to use directly\n\t * in your module config.\n\t */\n\t$UrlRouterProvider.$inject = ['$locationProvider', '$urlMatcherFactoryProvider'];\n\tfunction $UrlRouterProvider(   $locationProvider,   $urlMatcherFactory) {\n\t  var rules = [], otherwise = null, interceptDeferred = false, listener;\n\t\n\t  // Returns a string that is a prefix of all strings matching the RegExp\n\t  function regExpPrefix(re) {\n\t    var prefix = /^\\^((?:\\\\[^a-zA-Z0-9]|[^\\\\\\[\\]\\^$*+?.()|{}]+)*)/.exec(re.source);\n\t    return (prefix != null) ? prefix[1].replace(/\\\\(.)/g, \"$1\") : '';\n\t  }\n\t\n\t  // Interpolates matched values into a String.replace()-style pattern\n\t  function interpolate(pattern, match) {\n\t    return pattern.replace(/\\$(\\$|\\d{1,2})/, function (m, what) {\n\t      return match[what === '$' ? 0 : Number(what)];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.router.$urlRouterProvider#rule\n\t   * @methodOf ui.router.router.$urlRouterProvider\n\t   *\n\t   * @description\n\t   * Defines rules that are used by `$urlRouterProvider` to find matches for\n\t   * specific URLs.\n\t   *\n\t   * @example\n\t   * <pre>\n\t   * var app = angular.module('app', ['ui.router.router']);\n\t   *\n\t   * app.config(function ($urlRouterProvider) {\n\t   *   // Here's an example of how you might allow case insensitive urls\n\t   *   $urlRouterProvider.rule(function ($injector, $location) {\n\t   *     var path = $location.path(),\n\t   *         normalized = path.toLowerCase();\n\t   *\n\t   *     if (path !== normalized) {\n\t   *       return normalized;\n\t   *     }\n\t   *   });\n\t   * });\n\t   * </pre>\n\t   *\n\t   * @param {function} rule Handler function that takes `$injector` and `$location`\n\t   * services as arguments. You can use them to return a valid path as a string.\n\t   *\n\t   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n\t   */\n\t  this.rule = function (rule) {\n\t    if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n\t    rules.push(rule);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc object\n\t   * @name ui.router.router.$urlRouterProvider#otherwise\n\t   * @methodOf ui.router.router.$urlRouterProvider\n\t   *\n\t   * @description\n\t   * Defines a path that is used when an invalid route is requested.\n\t   *\n\t   * @example\n\t   * <pre>\n\t   * var app = angular.module('app', ['ui.router.router']);\n\t   *\n\t   * app.config(function ($urlRouterProvider) {\n\t   *   // if the path doesn't match any of the urls you configured\n\t   *   // otherwise will take care of routing the user to the\n\t   *   // specified url\n\t   *   $urlRouterProvider.otherwise('/index');\n\t   *\n\t   *   // Example of using function rule as param\n\t   *   $urlRouterProvider.otherwise(function ($injector, $location) {\n\t   *     return '/a/valid/url';\n\t   *   });\n\t   * });\n\t   * </pre>\n\t   *\n\t   * @param {string|function} rule The url path you want to redirect to or a function \n\t   * rule that returns the url path. The function version is passed two params: \n\t   * `$injector` and `$location` services, and must return a url string.\n\t   *\n\t   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n\t   */\n\t  this.otherwise = function (rule) {\n\t    if (isString(rule)) {\n\t      var redirect = rule;\n\t      rule = function () { return redirect; };\n\t    }\n\t    else if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n\t    otherwise = rule;\n\t    return this;\n\t  };\n\t\n\t\n\t  function handleIfMatch($injector, handler, match) {\n\t    if (!match) return false;\n\t    var result = $injector.invoke(handler, handler, { $match: match });\n\t    return isDefined(result) ? result : true;\n\t  }\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.router.$urlRouterProvider#when\n\t   * @methodOf ui.router.router.$urlRouterProvider\n\t   *\n\t   * @description\n\t   * Registers a handler for a given url matching. \n\t   * \n\t   * If the handler is a string, it is\n\t   * treated as a redirect, and is interpolated according to the syntax of match\n\t   * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n\t   *\n\t   * If the handler is a function, it is injectable. It gets invoked if `$location`\n\t   * matches. You have the option of inject the match object as `$match`.\n\t   *\n\t   * The handler can return\n\t   *\n\t   * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n\t   *   will continue trying to find another one that matches.\n\t   * - **string** which is treated as a redirect and passed to `$location.url()`\n\t   * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n\t   *\n\t   * @example\n\t   * <pre>\n\t   * var app = angular.module('app', ['ui.router.router']);\n\t   *\n\t   * app.config(function ($urlRouterProvider) {\n\t   *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n\t   *     if ($state.$current.navigable !== state ||\n\t   *         !equalForKeys($match, $stateParams) {\n\t   *      $state.transitionTo(state, $match, false);\n\t   *     }\n\t   *   });\n\t   * });\n\t   * </pre>\n\t   *\n\t   * @param {string|object} what The incoming path that you want to redirect.\n\t   * @param {string|function} handler The path you want to redirect your user to.\n\t   */\n\t  this.when = function (what, handler) {\n\t    var redirect, handlerIsString = isString(handler);\n\t    if (isString(what)) what = $urlMatcherFactory.compile(what);\n\t\n\t    if (!handlerIsString && !isFunction(handler) && !isArray(handler))\n\t      throw new Error(\"invalid 'handler' in when()\");\n\t\n\t    var strategies = {\n\t      matcher: function (what, handler) {\n\t        if (handlerIsString) {\n\t          redirect = $urlMatcherFactory.compile(handler);\n\t          handler = ['$match', function ($match) { return redirect.format($match); }];\n\t        }\n\t        return extend(function ($injector, $location) {\n\t          return handleIfMatch($injector, handler, what.exec($location.path(), $location.search()));\n\t        }, {\n\t          prefix: isString(what.prefix) ? what.prefix : ''\n\t        });\n\t      },\n\t      regex: function (what, handler) {\n\t        if (what.global || what.sticky) throw new Error(\"when() RegExp must not be global or sticky\");\n\t\n\t        if (handlerIsString) {\n\t          redirect = handler;\n\t          handler = ['$match', function ($match) { return interpolate(redirect, $match); }];\n\t        }\n\t        return extend(function ($injector, $location) {\n\t          return handleIfMatch($injector, handler, what.exec($location.path()));\n\t        }, {\n\t          prefix: regExpPrefix(what)\n\t        });\n\t      }\n\t    };\n\t\n\t    var check = { matcher: $urlMatcherFactory.isMatcher(what), regex: what instanceof RegExp };\n\t\n\t    for (var n in check) {\n\t      if (check[n]) return this.rule(strategies[n](what, handler));\n\t    }\n\t\n\t    throw new Error(\"invalid 'what' in when()\");\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.router.$urlRouterProvider#deferIntercept\n\t   * @methodOf ui.router.router.$urlRouterProvider\n\t   *\n\t   * @description\n\t   * Disables (or enables) deferring location change interception.\n\t   *\n\t   * If you wish to customize the behavior of syncing the URL (for example, if you wish to\n\t   * defer a transition but maintain the current URL), call this method at configuration time.\n\t   * Then, at run time, call `$urlRouter.listen()` after you have configured your own\n\t   * `$locationChangeSuccess` event handler.\n\t   *\n\t   * @example\n\t   * <pre>\n\t   * var app = angular.module('app', ['ui.router.router']);\n\t   *\n\t   * app.config(function ($urlRouterProvider) {\n\t   *\n\t   *   // Prevent $urlRouter from automatically intercepting URL changes;\n\t   *   // this allows you to configure custom behavior in between\n\t   *   // location changes and route synchronization:\n\t   *   $urlRouterProvider.deferIntercept();\n\t   *\n\t   * }).run(function ($rootScope, $urlRouter, UserService) {\n\t   *\n\t   *   $rootScope.$on('$locationChangeSuccess', function(e) {\n\t   *     // UserService is an example service for managing user state\n\t   *     if (UserService.isLoggedIn()) return;\n\t   *\n\t   *     // Prevent $urlRouter's default handler from firing\n\t   *     e.preventDefault();\n\t   *\n\t   *     UserService.handleLogin().then(function() {\n\t   *       // Once the user has logged in, sync the current URL\n\t   *       // to the router:\n\t   *       $urlRouter.sync();\n\t   *     });\n\t   *   });\n\t   *\n\t   *   // Configures $urlRouter's listener *after* your custom listener\n\t   *   $urlRouter.listen();\n\t   * });\n\t   * </pre>\n\t   *\n\t   * @param {boolean} defer Indicates whether to defer location change interception. Passing\n\t            no parameter is equivalent to `true`.\n\t   */\n\t  this.deferIntercept = function (defer) {\n\t    if (defer === undefined) defer = true;\n\t    interceptDeferred = defer;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc object\n\t   * @name ui.router.router.$urlRouter\n\t   *\n\t   * @requires $location\n\t   * @requires $rootScope\n\t   * @requires $injector\n\t   * @requires $browser\n\t   *\n\t   * @description\n\t   *\n\t   */\n\t  this.$get = $get;\n\t  $get.$inject = ['$location', '$rootScope', '$injector', '$browser', '$sniffer'];\n\t  function $get(   $location,   $rootScope,   $injector,   $browser,   $sniffer) {\n\t\n\t    var baseHref = $browser.baseHref(), location = $location.url(), lastPushedUrl;\n\t\n\t    function appendBasePath(url, isHtml5, absolute) {\n\t      if (baseHref === '/') return url;\n\t      if (isHtml5) return baseHref.slice(0, -1) + url;\n\t      if (absolute) return baseHref.slice(1) + url;\n\t      return url;\n\t    }\n\t\n\t    // TODO: Optimize groups of rules with non-empty prefix into some sort of decision tree\n\t    function update(evt) {\n\t      if (evt && evt.defaultPrevented) return;\n\t      var ignoreUpdate = lastPushedUrl && $location.url() === lastPushedUrl;\n\t      lastPushedUrl = undefined;\n\t      // TODO: Re-implement this in 1.0 for https://github.com/angular-ui/ui-router/issues/1573\n\t      //if (ignoreUpdate) return true;\n\t\n\t      function check(rule) {\n\t        var handled = rule($injector, $location);\n\t\n\t        if (!handled) return false;\n\t        if (isString(handled)) $location.replace().url(handled);\n\t        return true;\n\t      }\n\t      var n = rules.length, i;\n\t\n\t      for (i = 0; i < n; i++) {\n\t        if (check(rules[i])) return;\n\t      }\n\t      // always check otherwise last to allow dynamic updates to the set of rules\n\t      if (otherwise) check(otherwise);\n\t    }\n\t\n\t    function listen() {\n\t      listener = listener || $rootScope.$on('$locationChangeSuccess', update);\n\t      return listener;\n\t    }\n\t\n\t    if (!interceptDeferred) listen();\n\t\n\t    return {\n\t      /**\n\t       * @ngdoc function\n\t       * @name ui.router.router.$urlRouter#sync\n\t       * @methodOf ui.router.router.$urlRouter\n\t       *\n\t       * @description\n\t       * Triggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.\n\t       * This method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,\n\t       * perform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed\n\t       * with the transition by calling `$urlRouter.sync()`.\n\t       *\n\t       * @example\n\t       * <pre>\n\t       * angular.module('app', ['ui.router'])\n\t       *   .run(function($rootScope, $urlRouter) {\n\t       *     $rootScope.$on('$locationChangeSuccess', function(evt) {\n\t       *       // Halt state change from even starting\n\t       *       evt.preventDefault();\n\t       *       // Perform custom logic\n\t       *       var meetsRequirement = ...\n\t       *       // Continue with the update and state transition if logic allows\n\t       *       if (meetsRequirement) $urlRouter.sync();\n\t       *     });\n\t       * });\n\t       * </pre>\n\t       */\n\t      sync: function() {\n\t        update();\n\t      },\n\t\n\t      listen: function() {\n\t        return listen();\n\t      },\n\t\n\t      update: function(read) {\n\t        if (read) {\n\t          location = $location.url();\n\t          return;\n\t        }\n\t        if ($location.url() === location) return;\n\t\n\t        $location.url(location);\n\t        $location.replace();\n\t      },\n\t\n\t      push: function(urlMatcher, params, options) {\n\t         var url = urlMatcher.format(params || {});\n\t\n\t        // Handle the special hash param, if needed\n\t        if (url !== null && params && params['#']) {\n\t            url += '#' + params['#'];\n\t        }\n\t\n\t        $location.url(url);\n\t        lastPushedUrl = options && options.$$avoidResync ? $location.url() : undefined;\n\t        if (options && options.replace) $location.replace();\n\t      },\n\t\n\t      /**\n\t       * @ngdoc function\n\t       * @name ui.router.router.$urlRouter#href\n\t       * @methodOf ui.router.router.$urlRouter\n\t       *\n\t       * @description\n\t       * A URL generation method that returns the compiled URL for a given\n\t       * {@link ui.router.util.type:UrlMatcher `UrlMatcher`}, populated with the provided parameters.\n\t       *\n\t       * @example\n\t       * <pre>\n\t       * $bob = $urlRouter.href(new UrlMatcher(\"/about/:person\"), {\n\t       *   person: \"bob\"\n\t       * });\n\t       * // $bob == \"/about/bob\";\n\t       * </pre>\n\t       *\n\t       * @param {UrlMatcher} urlMatcher The `UrlMatcher` object which is used as the template of the URL to generate.\n\t       * @param {object=} params An object of parameter values to fill the matcher's required parameters.\n\t       * @param {object=} options Options object. The options are:\n\t       *\n\t       * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n\t       *\n\t       * @returns {string} Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n\t       */\n\t      href: function(urlMatcher, params, options) {\n\t        if (!urlMatcher.validates(params)) return null;\n\t\n\t        var isHtml5 = $locationProvider.html5Mode();\n\t        if (angular.isObject(isHtml5)) {\n\t          isHtml5 = isHtml5.enabled;\n\t        }\n\t\n\t        isHtml5 = isHtml5 && $sniffer.history;\n\t        \n\t        var url = urlMatcher.format(params);\n\t        options = options || {};\n\t\n\t        if (!isHtml5 && url !== null) {\n\t          url = \"#\" + $locationProvider.hashPrefix() + url;\n\t        }\n\t\n\t        // Handle special hash param, if needed\n\t        if (url !== null && params && params['#']) {\n\t          url += '#' + params['#'];\n\t        }\n\t\n\t        url = appendBasePath(url, isHtml5, options.absolute);\n\t\n\t        if (!options.absolute || !url) {\n\t          return url;\n\t        }\n\t\n\t        var slash = (!isHtml5 && url ? '/' : ''), port = $location.port();\n\t        port = (port === 80 || port === 443 ? '' : ':' + port);\n\t\n\t        return [$location.protocol(), '://', $location.host(), port, slash, url].join('');\n\t      }\n\t    };\n\t  }\n\t}\n\t\n\tangular.module('ui.router.router').provider('$urlRouter', $UrlRouterProvider);\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.state.$stateProvider\n\t *\n\t * @requires ui.router.router.$urlRouterProvider\n\t * @requires ui.router.util.$urlMatcherFactoryProvider\n\t *\n\t * @description\n\t * The new `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n\t * on state.\n\t *\n\t * A state corresponds to a \"place\" in the application in terms of the overall UI and\n\t * navigation. A state describes (via the controller / template / view properties) what\n\t * the UI looks like and does at that place.\n\t *\n\t * States often have things in common, and the primary way of factoring out these\n\t * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n\t * nested states.\n\t *\n\t * The `$stateProvider` provides interfaces to declare these states for your app.\n\t */\n\t$StateProvider.$inject = ['$urlRouterProvider', '$urlMatcherFactoryProvider'];\n\tfunction $StateProvider(   $urlRouterProvider,   $urlMatcherFactory) {\n\t\n\t  var root, states = {}, $state, queue = {}, abstractKey = 'abstract';\n\t\n\t  // Builds state properties from definition passed to registerState()\n\t  var stateBuilder = {\n\t\n\t    // Derive parent state from a hierarchical name only if 'parent' is not explicitly defined.\n\t    // state.children = [];\n\t    // if (parent) parent.children.push(state);\n\t    parent: function(state) {\n\t      if (isDefined(state.parent) && state.parent) return findState(state.parent);\n\t      // regex matches any valid composite state name\n\t      // would match \"contact.list\" but not \"contacts\"\n\t      var compositeName = /^(.+)\\.[^.]+$/.exec(state.name);\n\t      return compositeName ? findState(compositeName[1]) : root;\n\t    },\n\t\n\t    // inherit 'data' from parent and override by own values (if any)\n\t    data: function(state) {\n\t      if (state.parent && state.parent.data) {\n\t        state.data = state.self.data = inherit(state.parent.data, state.data);\n\t      }\n\t      return state.data;\n\t    },\n\t\n\t    // Build a URLMatcher if necessary, either via a relative or absolute URL\n\t    url: function(state) {\n\t      var url = state.url, config = { params: state.params || {} };\n\t\n\t      if (isString(url)) {\n\t        if (url.charAt(0) == '^') return $urlMatcherFactory.compile(url.substring(1), config);\n\t        return (state.parent.navigable || root).url.concat(url, config);\n\t      }\n\t\n\t      if (!url || $urlMatcherFactory.isMatcher(url)) return url;\n\t      throw new Error(\"Invalid url '\" + url + \"' in state '\" + state + \"'\");\n\t    },\n\t\n\t    // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n\t    navigable: function(state) {\n\t      return state.url ? state : (state.parent ? state.parent.navigable : null);\n\t    },\n\t\n\t    // Own parameters for this state. state.url.params is already built at this point. Create and add non-url params\n\t    ownParams: function(state) {\n\t      var params = state.url && state.url.params || new $$UMFP.ParamSet();\n\t      forEach(state.params || {}, function(config, id) {\n\t        if (!params[id]) params[id] = new $$UMFP.Param(id, null, config, \"config\");\n\t      });\n\t      return params;\n\t    },\n\t\n\t    // Derive parameters for this state and ensure they're a super-set of parent's parameters\n\t    params: function(state) {\n\t      var ownParams = pick(state.ownParams, state.ownParams.$$keys());\n\t      return state.parent && state.parent.params ? extend(state.parent.params.$$new(), ownParams) : new $$UMFP.ParamSet();\n\t    },\n\t\n\t    // If there is no explicit multi-view configuration, make one up so we don't have\n\t    // to handle both cases in the view directive later. Note that having an explicit\n\t    // 'views' property will mean the default unnamed view properties are ignored. This\n\t    // is also a good time to resolve view names to absolute names, so everything is a\n\t    // straight lookup at link time.\n\t    views: function(state) {\n\t      var views = {};\n\t\n\t      forEach(isDefined(state.views) ? state.views : { '': state }, function (view, name) {\n\t        if (name.indexOf('@') < 0) name += '@' + state.parent.name;\n\t        view.resolveAs = view.resolveAs || state.resolveAs || '$resolve';\n\t        views[name] = view;\n\t      });\n\t      return views;\n\t    },\n\t\n\t    // Keep a full path from the root down to this state as this is needed for state activation.\n\t    path: function(state) {\n\t      return state.parent ? state.parent.path.concat(state) : []; // exclude root from path\n\t    },\n\t\n\t    // Speed up $state.contains() as it's used a lot\n\t    includes: function(state) {\n\t      var includes = state.parent ? extend({}, state.parent.includes) : {};\n\t      includes[state.name] = true;\n\t      return includes;\n\t    },\n\t\n\t    $delegates: {}\n\t  };\n\t\n\t  function isRelative(stateName) {\n\t    return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\n\t  }\n\t\n\t  function findState(stateOrName, base) {\n\t    if (!stateOrName) return undefined;\n\t\n\t    var isStr = isString(stateOrName),\n\t        name  = isStr ? stateOrName : stateOrName.name,\n\t        path  = isRelative(name);\n\t\n\t    if (path) {\n\t      if (!base) throw new Error(\"No reference point given for path '\"  + name + \"'\");\n\t      base = findState(base);\n\t      \n\t      var rel = name.split(\".\"), i = 0, pathLength = rel.length, current = base;\n\t\n\t      for (; i < pathLength; i++) {\n\t        if (rel[i] === \"\" && i === 0) {\n\t          current = base;\n\t          continue;\n\t        }\n\t        if (rel[i] === \"^\") {\n\t          if (!current.parent) throw new Error(\"Path '\" + name + \"' not valid for state '\" + base.name + \"'\");\n\t          current = current.parent;\n\t          continue;\n\t        }\n\t        break;\n\t      }\n\t      rel = rel.slice(i).join(\".\");\n\t      name = current.name + (current.name && rel ? \".\" : \"\") + rel;\n\t    }\n\t    var state = states[name];\n\t\n\t    if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n\t      return state;\n\t    }\n\t    return undefined;\n\t  }\n\t\n\t  function queueState(parentName, state) {\n\t    if (!queue[parentName]) {\n\t      queue[parentName] = [];\n\t    }\n\t    queue[parentName].push(state);\n\t  }\n\t\n\t  function flushQueuedChildren(parentName) {\n\t    var queued = queue[parentName] || [];\n\t    while(queued.length) {\n\t      registerState(queued.shift());\n\t    }\n\t  }\n\t\n\t  function registerState(state) {\n\t    // Wrap a new object around the state so we can store our private details easily.\n\t    state = inherit(state, {\n\t      self: state,\n\t      resolve: state.resolve || {},\n\t      toString: function() { return this.name; }\n\t    });\n\t\n\t    var name = state.name;\n\t    if (!isString(name) || name.indexOf('@') >= 0) throw new Error(\"State must have a valid name\");\n\t    if (states.hasOwnProperty(name)) throw new Error(\"State '\" + name + \"' is already defined\");\n\t\n\t    // Get parent name\n\t    var parentName = (name.indexOf('.') !== -1) ? name.substring(0, name.lastIndexOf('.'))\n\t        : (isString(state.parent)) ? state.parent\n\t        : (isObject(state.parent) && isString(state.parent.name)) ? state.parent.name\n\t        : '';\n\t\n\t    // If parent is not registered yet, add state to queue and register later\n\t    if (parentName && !states[parentName]) {\n\t      return queueState(parentName, state.self);\n\t    }\n\t\n\t    for (var key in stateBuilder) {\n\t      if (isFunction(stateBuilder[key])) state[key] = stateBuilder[key](state, stateBuilder.$delegates[key]);\n\t    }\n\t    states[name] = state;\n\t\n\t    // Register the state in the global state list and with $urlRouter if necessary.\n\t    if (!state[abstractKey] && state.url) {\n\t      $urlRouterProvider.when(state.url, ['$match', '$stateParams', function ($match, $stateParams) {\n\t        if ($state.$current.navigable != state || !equalForKeys($match, $stateParams)) {\n\t          $state.transitionTo(state, $match, { inherit: true, location: false });\n\t        }\n\t      }]);\n\t    }\n\t\n\t    // Register any queued children\n\t    flushQueuedChildren(name);\n\t\n\t    return state;\n\t  }\n\t\n\t  // Checks text to see if it looks like a glob.\n\t  function isGlob (text) {\n\t    return text.indexOf('*') > -1;\n\t  }\n\t\n\t  // Returns true if glob matches current $state name.\n\t  function doesStateMatchGlob (glob) {\n\t    var globSegments = glob.split('.'),\n\t        segments = $state.$current.name.split('.');\n\t\n\t    //match single stars\n\t    for (var i = 0, l = globSegments.length; i < l; i++) {\n\t      if (globSegments[i] === '*') {\n\t        segments[i] = '*';\n\t      }\n\t    }\n\t\n\t    //match greedy starts\n\t    if (globSegments[0] === '**') {\n\t       segments = segments.slice(indexOf(segments, globSegments[1]));\n\t       segments.unshift('**');\n\t    }\n\t    //match greedy ends\n\t    if (globSegments[globSegments.length - 1] === '**') {\n\t       segments.splice(indexOf(segments, globSegments[globSegments.length - 2]) + 1, Number.MAX_VALUE);\n\t       segments.push('**');\n\t    }\n\t\n\t    if (globSegments.length != segments.length) {\n\t      return false;\n\t    }\n\t\n\t    return segments.join('') === globSegments.join('');\n\t  }\n\t\n\t\n\t  // Implicit root state that is always active\n\t  root = registerState({\n\t    name: '',\n\t    url: '^',\n\t    views: null,\n\t    'abstract': true\n\t  });\n\t  root.navigable = null;\n\t\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.state.$stateProvider#decorator\n\t   * @methodOf ui.router.state.$stateProvider\n\t   *\n\t   * @description\n\t   * Allows you to extend (carefully) or override (at your own peril) the \n\t   * `stateBuilder` object used internally by `$stateProvider`. This can be used \n\t   * to add custom functionality to ui-router, for example inferring templateUrl \n\t   * based on the state name.\n\t   *\n\t   * When passing only a name, it returns the current (original or decorated) builder\n\t   * function that matches `name`.\n\t   *\n\t   * The builder functions that can be decorated are listed below. Though not all\n\t   * necessarily have a good use case for decoration, that is up to you to decide.\n\t   *\n\t   * In addition, users can attach custom decorators, which will generate new \n\t   * properties within the state's internal definition. There is currently no clear \n\t   * use-case for this beyond accessing internal states (i.e. $state.$current), \n\t   * however, expect this to become increasingly relevant as we introduce additional \n\t   * meta-programming features.\n\t   *\n\t   * **Warning**: Decorators should not be interdependent because the order of \n\t   * execution of the builder functions in non-deterministic. Builder functions \n\t   * should only be dependent on the state definition object and super function.\n\t   *\n\t   *\n\t   * Existing builder functions and current return values:\n\t   *\n\t   * - **parent** `{object}` - returns the parent state object.\n\t   * - **data** `{object}` - returns state data, including any inherited data that is not\n\t   *   overridden by own values (if any).\n\t   * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n\t   *   or `null`.\n\t   * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is \n\t   *   navigable).\n\t   * - **params** `{object}` - returns an array of state params that are ensured to \n\t   *   be a super-set of parent's params.\n\t   * - **views** `{object}` - returns a views object where each key is an absolute view \n\t   *   name (i.e. \"viewName@stateName\") and each value is the config object \n\t   *   (template, controller) for the view. Even when you don't use the views object \n\t   *   explicitly on a state config, one is still created for you internally.\n\t   *   So by decorating this builder function you have access to decorating template \n\t   *   and controller properties.\n\t   * - **ownParams** `{object}` - returns an array of params that belong to the state, \n\t   *   not including any params defined by ancestor states.\n\t   * - **path** `{string}` - returns the full path from the root down to this state. \n\t   *   Needed for state activation.\n\t   * - **includes** `{object}` - returns an object that includes every state that \n\t   *   would pass a `$state.includes()` test.\n\t   *\n\t   * @example\n\t   * <pre>\n\t   * // Override the internal 'views' builder with a function that takes the state\n\t   * // definition, and a reference to the internal function being overridden:\n\t   * $stateProvider.decorator('views', function (state, parent) {\n\t   *   var result = {},\n\t   *       views = parent(state);\n\t   *\n\t   *   angular.forEach(views, function (config, name) {\n\t   *     var autoName = (state.name + '.' + name).replace('.', '/');\n\t   *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n\t   *     result[name] = config;\n\t   *   });\n\t   *   return result;\n\t   * });\n\t   *\n\t   * $stateProvider.state('home', {\n\t   *   views: {\n\t   *     'contact.list': { controller: 'ListController' },\n\t   *     'contact.item': { controller: 'ItemController' }\n\t   *   }\n\t   * });\n\t   *\n\t   * // ...\n\t   *\n\t   * $state.go('home');\n\t   * // Auto-populates list and item views with /partials/home/contact/list.html,\n\t   * // and /partials/home/contact/item.html, respectively.\n\t   * </pre>\n\t   *\n\t   * @param {string} name The name of the builder function to decorate. \n\t   * @param {object} func A function that is responsible for decorating the original \n\t   * builder function. The function receives two parameters:\n\t   *\n\t   *   - `{object}` - state - The state config object.\n\t   *   - `{object}` - super - The original builder function.\n\t   *\n\t   * @return {object} $stateProvider - $stateProvider instance\n\t   */\n\t  this.decorator = decorator;\n\t  function decorator(name, func) {\n\t    /*jshint validthis: true */\n\t    if (isString(name) && !isDefined(func)) {\n\t      return stateBuilder[name];\n\t    }\n\t    if (!isFunction(func) || !isString(name)) {\n\t      return this;\n\t    }\n\t    if (stateBuilder[name] && !stateBuilder.$delegates[name]) {\n\t      stateBuilder.$delegates[name] = stateBuilder[name];\n\t    }\n\t    stateBuilder[name] = func;\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.state.$stateProvider#state\n\t   * @methodOf ui.router.state.$stateProvider\n\t   *\n\t   * @description\n\t   * Registers a state configuration under a given state name. The stateConfig object\n\t   * has the following acceptable properties.\n\t   *\n\t   * @param {string} name A unique state name, e.g. \"home\", \"about\", \"contacts\".\n\t   * To create a parent/child state use a dot, e.g. \"about.sales\", \"home.newest\".\n\t   * @param {object} stateConfig State configuration object.\n\t   * @param {string|function=} stateConfig.template\n\t   * <a id='template'></a>\n\t   *   html template as a string or a function that returns\n\t   *   an html template as a string which should be used by the uiView directives. This property \n\t   *   takes precedence over templateUrl.\n\t   *   \n\t   *   If `template` is a function, it will be called with the following parameters:\n\t   *\n\t   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\n\t   *     applying the current state\n\t   *\n\t   * <pre>template:\n\t   *   \"<h1>inline template definition</h1>\" +\n\t   *   \"<div ui-view></div>\"</pre>\n\t   * <pre>template: function(params) {\n\t   *       return \"<h1>generated template</h1>\"; }</pre>\n\t   * </div>\n\t   *\n\t   * @param {string|function=} stateConfig.templateUrl\n\t   * <a id='templateUrl'></a>\n\t   *\n\t   *   path or function that returns a path to an html\n\t   *   template that should be used by uiView.\n\t   *   \n\t   *   If `templateUrl` is a function, it will be called with the following parameters:\n\t   *\n\t   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by \n\t   *     applying the current state\n\t   *\n\t   * <pre>templateUrl: \"home.html\"</pre>\n\t   * <pre>templateUrl: function(params) {\n\t   *     return myTemplates[params.pageId]; }</pre>\n\t   *\n\t   * @param {function=} stateConfig.templateProvider\n\t   * <a id='templateProvider'></a>\n\t   *    Provider function that returns HTML content string.\n\t   * <pre> templateProvider:\n\t   *       function(MyTemplateService, params) {\n\t   *         return MyTemplateService.getTemplate(params.pageId);\n\t   *       }</pre>\n\t   *\n\t   * @param {string|function=} stateConfig.controller\n\t   * <a id='controller'></a>\n\t   *\n\t   *  Controller fn that should be associated with newly\n\t   *   related scope or the name of a registered controller if passed as a string.\n\t   *   Optionally, the ControllerAs may be declared here.\n\t   * <pre>controller: \"MyRegisteredController\"</pre>\n\t   * <pre>controller:\n\t   *     \"MyRegisteredController as fooCtrl\"}</pre>\n\t   * <pre>controller: function($scope, MyService) {\n\t   *     $scope.data = MyService.getData(); }</pre>\n\t   *\n\t   * @param {function=} stateConfig.controllerProvider\n\t   * <a id='controllerProvider'></a>\n\t   *\n\t   * Injectable provider function that returns the actual controller or string.\n\t   * <pre>controllerProvider:\n\t   *   function(MyResolveData) {\n\t   *     if (MyResolveData.foo)\n\t   *       return \"FooCtrl\"\n\t   *     else if (MyResolveData.bar)\n\t   *       return \"BarCtrl\";\n\t   *     else return function($scope) {\n\t   *       $scope.baz = \"Qux\";\n\t   *     }\n\t   *   }</pre>\n\t   *\n\t   * @param {string=} stateConfig.controllerAs\n\t   * <a id='controllerAs'></a>\n\t   * \n\t   * A controller alias name. If present the controller will be\n\t   *   published to scope under the controllerAs name.\n\t   * <pre>controllerAs: \"myCtrl\"</pre>\n\t   *\n\t   * @param {string|object=} stateConfig.parent\n\t   * <a id='parent'></a>\n\t   * Optionally specifies the parent state of this state.\n\t   *\n\t   * <pre>parent: 'parentState'</pre>\n\t   * <pre>parent: parentState // JS variable</pre>\n\t   *\n\t   * @param {object=} stateConfig.resolve\n\t   * <a id='resolve'></a>\n\t   *\n\t   * An optional map&lt;string, function&gt; of dependencies which\n\t   *   should be injected into the controller. If any of these dependencies are promises, \n\t   *   the router will wait for them all to be resolved before the controller is instantiated.\n\t   *   If all the promises are resolved successfully, the $stateChangeSuccess event is fired\n\t   *   and the values of the resolved promises are injected into any controllers that reference them.\n\t   *   If any  of the promises are rejected the $stateChangeError event is fired.\n\t   *\n\t   *   The map object is:\n\t   *   \n\t   *   - key - {string}: name of dependency to be injected into controller\n\t   *   - factory - {string|function}: If string then it is alias for service. Otherwise if function, \n\t   *     it is injected and return value it treated as dependency. If result is a promise, it is \n\t   *     resolved before its value is injected into controller.\n\t   *\n\t   * <pre>resolve: {\n\t   *     myResolve1:\n\t   *       function($http, $stateParams) {\n\t   *         return $http.get(\"/api/foos/\"+stateParams.fooID);\n\t   *       }\n\t   *     }</pre>\n\t   *\n\t   * @param {string=} stateConfig.url\n\t   * <a id='url'></a>\n\t   *\n\t   *   A url fragment with optional parameters. When a state is navigated or\n\t   *   transitioned to, the `$stateParams` service will be populated with any \n\t   *   parameters that were passed.\n\t   *\n\t   *   (See {@link ui.router.util.type:UrlMatcher UrlMatcher} `UrlMatcher`} for\n\t   *   more details on acceptable patterns )\n\t   *\n\t   * examples:\n\t   * <pre>url: \"/home\"\n\t   * url: \"/users/:userid\"\n\t   * url: \"/books/{bookid:[a-zA-Z_-]}\"\n\t   * url: \"/books/{categoryid:int}\"\n\t   * url: \"/books/{publishername:string}/{categoryid:int}\"\n\t   * url: \"/messages?before&after\"\n\t   * url: \"/messages?{before:date}&{after:date}\"\n\t   * url: \"/messages/:mailboxid?{before:date}&{after:date}\"\n\t   * </pre>\n\t   *\n\t   * @param {object=} stateConfig.views\n\t   * <a id='views'></a>\n\t   * an optional map&lt;string, object&gt; which defined multiple views, or targets views\n\t   * manually/explicitly.\n\t   *\n\t   * Examples:\n\t   *\n\t   * Targets three named `ui-view`s in the parent state's template\n\t   * <pre>views: {\n\t   *     header: {\n\t   *       controller: \"headerCtrl\",\n\t   *       templateUrl: \"header.html\"\n\t   *     }, body: {\n\t   *       controller: \"bodyCtrl\",\n\t   *       templateUrl: \"body.html\"\n\t   *     }, footer: {\n\t   *       controller: \"footCtrl\",\n\t   *       templateUrl: \"footer.html\"\n\t   *     }\n\t   *   }</pre>\n\t   *\n\t   * Targets named `ui-view=\"header\"` from grandparent state 'top''s template, and named `ui-view=\"body\" from parent state's template.\n\t   * <pre>views: {\n\t   *     'header@top': {\n\t   *       controller: \"msgHeaderCtrl\",\n\t   *       templateUrl: \"msgHeader.html\"\n\t   *     }, 'body': {\n\t   *       controller: \"messagesCtrl\",\n\t   *       templateUrl: \"messages.html\"\n\t   *     }\n\t   *   }</pre>\n\t   *\n\t   * @param {boolean=} [stateConfig.abstract=false]\n\t   * <a id='abstract'></a>\n\t   * An abstract state will never be directly activated,\n\t   *   but can provide inherited properties to its common children states.\n\t   * <pre>abstract: true</pre>\n\t   *\n\t   * @param {function=} stateConfig.onEnter\n\t   * <a id='onEnter'></a>\n\t   *\n\t   * Callback function for when a state is entered. Good way\n\t   *   to trigger an action or dispatch an event, such as opening a dialog.\n\t   * If minifying your scripts, make sure to explicitly annotate this function,\n\t   * because it won't be automatically annotated by your build tools.\n\t   *\n\t   * <pre>onEnter: function(MyService, $stateParams) {\n\t   *     MyService.foo($stateParams.myParam);\n\t   * }</pre>\n\t   *\n\t   * @param {function=} stateConfig.onExit\n\t   * <a id='onExit'></a>\n\t   *\n\t   * Callback function for when a state is exited. Good way to\n\t   *   trigger an action or dispatch an event, such as opening a dialog.\n\t   * If minifying your scripts, make sure to explicitly annotate this function,\n\t   * because it won't be automatically annotated by your build tools.\n\t   *\n\t   * <pre>onExit: function(MyService, $stateParams) {\n\t   *     MyService.cleanup($stateParams.myParam);\n\t   * }</pre>\n\t   *\n\t   * @param {boolean=} [stateConfig.reloadOnSearch=true]\n\t   * <a id='reloadOnSearch'></a>\n\t   *\n\t   * If `false`, will not retrigger the same state\n\t   *   just because a search/query parameter has changed (via $location.search() or $location.hash()). \n\t   *   Useful for when you'd like to modify $location.search() without triggering a reload.\n\t   * <pre>reloadOnSearch: false</pre>\n\t   *\n\t   * @param {object=} stateConfig.data\n\t   * <a id='data'></a>\n\t   *\n\t   * Arbitrary data object, useful for custom configuration.  The parent state's `data` is\n\t   *   prototypally inherited.  In other words, adding a data property to a state adds it to\n\t   *   the entire subtree via prototypal inheritance.\n\t   *\n\t   * <pre>data: {\n\t   *     requiredRole: 'foo'\n\t   * } </pre>\n\t   *\n\t   * @param {object=} stateConfig.params\n\t   * <a id='params'></a>\n\t   *\n\t   * A map which optionally configures parameters declared in the `url`, or\n\t   *   defines additional non-url parameters.  For each parameter being\n\t   *   configured, add a configuration object keyed to the name of the parameter.\n\t   *\n\t   *   Each parameter configuration object may contain the following properties:\n\t   *\n\t   *   - ** value ** - {object|function=}: specifies the default value for this\n\t   *     parameter.  This implicitly sets this parameter as optional.\n\t   *\n\t   *     When UI-Router routes to a state and no value is\n\t   *     specified for this parameter in the URL or transition, the\n\t   *     default value will be used instead.  If `value` is a function,\n\t   *     it will be injected and invoked, and the return value used.\n\t   *\n\t   *     *Note*: `undefined` is treated as \"no default value\" while `null`\n\t   *     is treated as \"the default value is `null`\".\n\t   *\n\t   *     *Shorthand*: If you only need to configure the default value of the\n\t   *     parameter, you may use a shorthand syntax.   In the **`params`**\n\t   *     map, instead mapping the param name to a full parameter configuration\n\t   *     object, simply set map it to the default parameter value, e.g.:\n\t   *\n\t   * <pre>// define a parameter's default value\n\t   * params: {\n\t   *     param1: { value: \"defaultValue\" }\n\t   * }\n\t   * // shorthand default values\n\t   * params: {\n\t   *     param1: \"defaultValue\",\n\t   *     param2: \"param2Default\"\n\t   * }</pre>\n\t   *\n\t   *   - ** array ** - {boolean=}: *(default: false)* If true, the param value will be\n\t   *     treated as an array of values.  If you specified a Type, the value will be\n\t   *     treated as an array of the specified Type.  Note: query parameter values\n\t   *     default to a special `\"auto\"` mode.\n\t   *\n\t   *     For query parameters in `\"auto\"` mode, if multiple  values for a single parameter\n\t   *     are present in the URL (e.g.: `/foo?bar=1&bar=2&bar=3`) then the values\n\t   *     are mapped to an array (e.g.: `{ foo: [ '1', '2', '3' ] }`).  However, if\n\t   *     only one value is present (e.g.: `/foo?bar=1`) then the value is treated as single\n\t   *     value (e.g.: `{ foo: '1' }`).\n\t   *\n\t   * <pre>params: {\n\t   *     param1: { array: true }\n\t   * }</pre>\n\t   *\n\t   *   - ** squash ** - {bool|string=}: `squash` configures how a default parameter value is represented in the URL when\n\t   *     the current parameter value is the same as the default value. If `squash` is not set, it uses the\n\t   *     configured default squash policy.\n\t   *     (See {@link ui.router.util.$urlMatcherFactory#methods_defaultSquashPolicy `defaultSquashPolicy()`})\n\t   *\n\t   *   There are three squash settings:\n\t   *\n\t   *     - false: The parameter's default value is not squashed.  It is encoded and included in the URL\n\t   *     - true: The parameter's default value is omitted from the URL.  If the parameter is preceeded and followed\n\t   *       by slashes in the state's `url` declaration, then one of those slashes are omitted.\n\t   *       This can allow for cleaner looking URLs.\n\t   *     - `\"<arbitrary string>\"`: The parameter's default value is replaced with an arbitrary placeholder of  your choice.\n\t   *\n\t   * <pre>params: {\n\t   *     param1: {\n\t   *       value: \"defaultId\",\n\t   *       squash: true\n\t   * } }\n\t   * // squash \"defaultValue\" to \"~\"\n\t   * params: {\n\t   *     param1: {\n\t   *       value: \"defaultValue\",\n\t   *       squash: \"~\"\n\t   * } }\n\t   * </pre>\n\t   *\n\t   *\n\t   * @example\n\t   * <pre>\n\t   * // Some state name examples\n\t   *\n\t   * // stateName can be a single top-level name (must be unique).\n\t   * $stateProvider.state(\"home\", {});\n\t   *\n\t   * // Or it can be a nested state name. This state is a child of the\n\t   * // above \"home\" state.\n\t   * $stateProvider.state(\"home.newest\", {});\n\t   *\n\t   * // Nest states as deeply as needed.\n\t   * $stateProvider.state(\"home.newest.abc.xyz.inception\", {});\n\t   *\n\t   * // state() returns $stateProvider, so you can chain state declarations.\n\t   * $stateProvider\n\t   *   .state(\"home\", {})\n\t   *   .state(\"about\", {})\n\t   *   .state(\"contacts\", {});\n\t   * </pre>\n\t   *\n\t   */\n\t  this.state = state;\n\t  function state(name, definition) {\n\t    /*jshint validthis: true */\n\t    if (isObject(name)) definition = name;\n\t    else definition.name = name;\n\t    registerState(definition);\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * @ngdoc object\n\t   * @name ui.router.state.$state\n\t   *\n\t   * @requires $rootScope\n\t   * @requires $q\n\t   * @requires ui.router.state.$view\n\t   * @requires $injector\n\t   * @requires ui.router.util.$resolve\n\t   * @requires ui.router.state.$stateParams\n\t   * @requires ui.router.router.$urlRouter\n\t   *\n\t   * @property {object} params A param object, e.g. {sectionId: section.id)}, that \n\t   * you'd like to test against the current active state.\n\t   * @property {object} current A reference to the state's config object. However \n\t   * you passed it in. Useful for accessing custom data.\n\t   * @property {object} transition Currently pending transition. A promise that'll \n\t   * resolve or reject.\n\t   *\n\t   * @description\n\t   * `$state` service is responsible for representing states as well as transitioning\n\t   * between them. It also provides interfaces to ask for current state or even states\n\t   * you're coming from.\n\t   */\n\t  this.$get = $get;\n\t  $get.$inject = ['$rootScope', '$q', '$view', '$injector', '$resolve', '$stateParams', '$urlRouter', '$location', '$urlMatcherFactory'];\n\t  function $get(   $rootScope,   $q,   $view,   $injector,   $resolve,   $stateParams,   $urlRouter,   $location,   $urlMatcherFactory) {\n\t\n\t    var TransitionSupersededError = new Error('transition superseded');\n\t\n\t    var TransitionSuperseded = silenceUncaughtInPromise($q.reject(TransitionSupersededError));\n\t    var TransitionPrevented = silenceUncaughtInPromise($q.reject(new Error('transition prevented')));\n\t    var TransitionAborted = silenceUncaughtInPromise($q.reject(new Error('transition aborted')));\n\t    var TransitionFailed = silenceUncaughtInPromise($q.reject(new Error('transition failed')));\n\t\n\t    // Handles the case where a state which is the target of a transition is not found, and the user\n\t    // can optionally retry or defer the transition\n\t    function handleRedirect(redirect, state, params, options) {\n\t      /**\n\t       * @ngdoc event\n\t       * @name ui.router.state.$state#$stateNotFound\n\t       * @eventOf ui.router.state.$state\n\t       * @eventType broadcast on root scope\n\t       * @description\n\t       * Fired when a requested state **cannot be found** using the provided state name during transition.\n\t       * The event is broadcast allowing any handlers a single chance to deal with the error (usually by\n\t       * lazy-loading the unfound state). A special `unfoundState` object is passed to the listener handler,\n\t       * you can see its three properties in the example. You can use `event.preventDefault()` to abort the\n\t       * transition and the promise returned from `go` will be rejected with a `'transition aborted'` value.\n\t       *\n\t       * @param {Object} event Event object.\n\t       * @param {Object} unfoundState Unfound State information. Contains: `to, toParams, options` properties.\n\t       * @param {State} fromState Current state object.\n\t       * @param {Object} fromParams Current state params.\n\t       *\n\t       * @example\n\t       *\n\t       * <pre>\n\t       * // somewhere, assume lazy.state has not been defined\n\t       * $state.go(\"lazy.state\", {a:1, b:2}, {inherit:false});\n\t       *\n\t       * // somewhere else\n\t       * $scope.$on('$stateNotFound',\n\t       * function(event, unfoundState, fromState, fromParams){\n\t       *     console.log(unfoundState.to); // \"lazy.state\"\n\t       *     console.log(unfoundState.toParams); // {a:1, b:2}\n\t       *     console.log(unfoundState.options); // {inherit:false} + default options\n\t       * })\n\t       * </pre>\n\t       */\n\t      var evt = $rootScope.$broadcast('$stateNotFound', redirect, state, params);\n\t\n\t      if (evt.defaultPrevented) {\n\t        $urlRouter.update();\n\t        return TransitionAborted;\n\t      }\n\t\n\t      if (!evt.retry) {\n\t        return null;\n\t      }\n\t\n\t      // Allow the handler to return a promise to defer state lookup retry\n\t      if (options.$retry) {\n\t        $urlRouter.update();\n\t        return TransitionFailed;\n\t      }\n\t      var retryTransition = $state.transition = $q.when(evt.retry);\n\t\n\t      retryTransition.then(function() {\n\t        if (retryTransition !== $state.transition) {\n\t          $rootScope.$broadcast('$stateChangeCancel', redirect.to, redirect.toParams, state, params);\n\t          return TransitionSuperseded;\n\t        }\n\t        redirect.options.$retry = true;\n\t        return $state.transitionTo(redirect.to, redirect.toParams, redirect.options);\n\t      }, function() {\n\t        return TransitionAborted;\n\t      });\n\t      $urlRouter.update();\n\t\n\t      return retryTransition;\n\t    }\n\t\n\t    root.locals = { resolve: null, globals: { $stateParams: {} } };\n\t\n\t    $state = {\n\t      params: {},\n\t      current: root.self,\n\t      $current: root,\n\t      transition: null\n\t    };\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name ui.router.state.$state#reload\n\t     * @methodOf ui.router.state.$state\n\t     *\n\t     * @description\n\t     * A method that force reloads the current state. All resolves are re-resolved,\n\t     * controllers reinstantiated, and events re-fired.\n\t     *\n\t     * @example\n\t     * <pre>\n\t     * var app angular.module('app', ['ui.router']);\n\t     *\n\t     * app.controller('ctrl', function ($scope, $state) {\n\t     *   $scope.reload = function(){\n\t     *     $state.reload();\n\t     *   }\n\t     * });\n\t     * </pre>\n\t     *\n\t     * `reload()` is just an alias for:\n\t     * <pre>\n\t     * $state.transitionTo($state.current, $stateParams, { \n\t     *   reload: true, inherit: false, notify: true\n\t     * });\n\t     * </pre>\n\t     *\n\t     * @param {string=|object=} state - A state name or a state object, which is the root of the resolves to be re-resolved.\n\t     * @example\n\t     * <pre>\n\t     * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item' \n\t     * //and current state is 'contacts.detail.item'\n\t     * var app angular.module('app', ['ui.router']);\n\t     *\n\t     * app.controller('ctrl', function ($scope, $state) {\n\t     *   $scope.reload = function(){\n\t     *     //will reload 'contact.detail' and 'contact.detail.item' states\n\t     *     $state.reload('contact.detail');\n\t     *   }\n\t     * });\n\t     * </pre>\n\t     *\n\t     * `reload()` is just an alias for:\n\t     * <pre>\n\t     * $state.transitionTo($state.current, $stateParams, { \n\t     *   reload: true, inherit: false, notify: true\n\t     * });\n\t     * </pre>\n\t\n\t     * @returns {promise} A promise representing the state of the new transition. See\n\t     * {@link ui.router.state.$state#methods_go $state.go}.\n\t     */\n\t    $state.reload = function reload(state) {\n\t      return $state.transitionTo($state.current, $stateParams, { reload: state || true, inherit: false, notify: true});\n\t    };\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name ui.router.state.$state#go\n\t     * @methodOf ui.router.state.$state\n\t     *\n\t     * @description\n\t     * Convenience method for transitioning to a new state. `$state.go` calls \n\t     * `$state.transitionTo` internally but automatically sets options to \n\t     * `{ location: true, inherit: true, relative: $state.$current, notify: true }`. \n\t     * This allows you to easily use an absolute or relative to path and specify \n\t     * only the parameters you'd like to update (while letting unspecified parameters \n\t     * inherit from the currently active ancestor states).\n\t     *\n\t     * @example\n\t     * <pre>\n\t     * var app = angular.module('app', ['ui.router']);\n\t     *\n\t     * app.controller('ctrl', function ($scope, $state) {\n\t     *   $scope.changeState = function () {\n\t     *     $state.go('contact.detail');\n\t     *   };\n\t     * });\n\t     * </pre>\n\t     * <img src='../ngdoc_assets/StateGoExamples.png'/>\n\t     *\n\t     * @param {string} to Absolute state name or relative state path. Some examples:\n\t     *\n\t     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n\t     * - `$state.go('^')` - will go to a parent state\n\t     * - `$state.go('^.sibling')` - will go to a sibling state\n\t     * - `$state.go('.child.grandchild')` - will go to grandchild state\n\t     *\n\t     * @param {object=} params A map of the parameters that will be sent to the state, \n\t     * will populate $stateParams. Any parameters that are not specified will be inherited from currently \n\t     * defined parameters. Only parameters specified in the state definition can be overridden, new \n\t     * parameters will be ignored. This allows, for example, going to a sibling state that shares parameters\n\t     * specified in a parent state. Parameter inheritance only works between common ancestor states, I.e.\n\t     * transitioning to a sibling will get you the parameters for all parents, transitioning to a child\n\t     * will get you all current parameters, etc.\n\t     * @param {object=} options Options object. The options are:\n\t     *\n\t     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n\t     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n\t     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n\t     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n\t     *    defines which state to be relative from.\n\t     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n\t     * - **`reload`** (v0.2.5) - {boolean=false|string|object}, If `true` will force transition even if no state or params\n\t     *    have changed.  It will reload the resolves and views of the current state and parent states.\n\t     *    If `reload` is a string (or state object), the state object is fetched (by name, or object reference); and \\\n\t     *    the transition reloads the resolves and views for that matched state, and all its children states.\n\t     *\n\t     * @returns {promise} A promise representing the state of the new transition.\n\t     *\n\t     * Possible success values:\n\t     *\n\t     * - $state.current\n\t     *\n\t     * <br/>Possible rejection values:\n\t     *\n\t     * - 'transition superseded' - when a newer transition has been started after this one\n\t     * - 'transition prevented' - when `event.preventDefault()` has been called in a `$stateChangeStart` listener\n\t     * - 'transition aborted' - when `event.preventDefault()` has been called in a `$stateNotFound` listener or\n\t     *   when a `$stateNotFound` `event.retry` promise errors.\n\t     * - 'transition failed' - when a state has been unsuccessfully found after 2 tries.\n\t     * - *resolve error* - when an error has occurred with a `resolve`\n\t     *\n\t     */\n\t    $state.go = function go(to, params, options) {\n\t      return $state.transitionTo(to, params, extend({ inherit: true, relative: $state.$current }, options));\n\t    };\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name ui.router.state.$state#transitionTo\n\t     * @methodOf ui.router.state.$state\n\t     *\n\t     * @description\n\t     * Low-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}\n\t     * uses `transitionTo` internally. `$state.go` is recommended in most situations.\n\t     *\n\t     * @example\n\t     * <pre>\n\t     * var app = angular.module('app', ['ui.router']);\n\t     *\n\t     * app.controller('ctrl', function ($scope, $state) {\n\t     *   $scope.changeState = function () {\n\t     *     $state.transitionTo('contact.detail');\n\t     *   };\n\t     * });\n\t     * </pre>\n\t     *\n\t     * @param {string} to State name.\n\t     * @param {object=} toParams A map of the parameters that will be sent to the state,\n\t     * will populate $stateParams.\n\t     * @param {object=} options Options object. The options are:\n\t     *\n\t     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n\t     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n\t     * - **`inherit`** - {boolean=false}, If `true` will inherit url parameters from current url.\n\t     * - **`relative`** - {object=}, When transitioning with relative path (e.g '^'), \n\t     *    defines which state to be relative from.\n\t     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n\t     * - **`reload`** (v0.2.5) - {boolean=false|string=|object=}, If `true` will force transition even if the state or params \n\t     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\n\t     *    use this when you want to force a reload when *everything* is the same, including search params.\n\t     *    if String, then will reload the state with the name given in reload, and any children.\n\t     *    if Object, then a stateObj is expected, will reload the state found in stateObj, and any children.\n\t     *\n\t     * @returns {promise} A promise representing the state of the new transition. See\n\t     * {@link ui.router.state.$state#methods_go $state.go}.\n\t     */\n\t    $state.transitionTo = function transitionTo(to, toParams, options) {\n\t      toParams = toParams || {};\n\t      options = extend({\n\t        location: true, inherit: false, relative: null, notify: true, reload: false, $retry: false\n\t      }, options || {});\n\t\n\t      var from = $state.$current, fromParams = $state.params, fromPath = from.path;\n\t      var evt, toState = findState(to, options.relative);\n\t\n\t      // Store the hash param for later (since it will be stripped out by various methods)\n\t      var hash = toParams['#'];\n\t\n\t      if (!isDefined(toState)) {\n\t        var redirect = { to: to, toParams: toParams, options: options };\n\t        var redirectResult = handleRedirect(redirect, from.self, fromParams, options);\n\t\n\t        if (redirectResult) {\n\t          return redirectResult;\n\t        }\n\t\n\t        // Always retry once if the $stateNotFound was not prevented\n\t        // (handles either redirect changed or state lazy-definition)\n\t        to = redirect.to;\n\t        toParams = redirect.toParams;\n\t        options = redirect.options;\n\t        toState = findState(to, options.relative);\n\t\n\t        if (!isDefined(toState)) {\n\t          if (!options.relative) throw new Error(\"No such state '\" + to + \"'\");\n\t          throw new Error(\"Could not resolve '\" + to + \"' from state '\" + options.relative + \"'\");\n\t        }\n\t      }\n\t      if (toState[abstractKey]) throw new Error(\"Cannot transition to abstract state '\" + to + \"'\");\n\t      if (options.inherit) toParams = inheritParams($stateParams, toParams || {}, $state.$current, toState);\n\t      if (!toState.params.$$validates(toParams)) return TransitionFailed;\n\t\n\t      toParams = toState.params.$$values(toParams);\n\t      to = toState;\n\t\n\t      var toPath = to.path;\n\t\n\t      // Starting from the root of the path, keep all levels that haven't changed\n\t      var keep = 0, state = toPath[keep], locals = root.locals, toLocals = [];\n\t\n\t      if (!options.reload) {\n\t        while (state && state === fromPath[keep] && state.ownParams.$$equals(toParams, fromParams)) {\n\t          locals = toLocals[keep] = state.locals;\n\t          keep++;\n\t          state = toPath[keep];\n\t        }\n\t      } else if (isString(options.reload) || isObject(options.reload)) {\n\t        if (isObject(options.reload) && !options.reload.name) {\n\t          throw new Error('Invalid reload state object');\n\t        }\n\t        \n\t        var reloadState = options.reload === true ? fromPath[0] : findState(options.reload);\n\t        if (options.reload && !reloadState) {\n\t          throw new Error(\"No such reload state '\" + (isString(options.reload) ? options.reload : options.reload.name) + \"'\");\n\t        }\n\t\n\t        while (state && state === fromPath[keep] && state !== reloadState) {\n\t          locals = toLocals[keep] = state.locals;\n\t          keep++;\n\t          state = toPath[keep];\n\t        }\n\t      }\n\t\n\t      // If we're going to the same state and all locals are kept, we've got nothing to do.\n\t      // But clear 'transition', as we still want to cancel any other pending transitions.\n\t      // TODO: We may not want to bump 'transition' if we're called from a location change\n\t      // that we've initiated ourselves, because we might accidentally abort a legitimate\n\t      // transition initiated from code?\n\t      if (shouldSkipReload(to, toParams, from, fromParams, locals, options)) {\n\t        if (hash) toParams['#'] = hash;\n\t        $state.params = toParams;\n\t        copy($state.params, $stateParams);\n\t        copy(filterByKeys(to.params.$$keys(), $stateParams), to.locals.globals.$stateParams);\n\t        if (options.location && to.navigable && to.navigable.url) {\n\t          $urlRouter.push(to.navigable.url, toParams, {\n\t            $$avoidResync: true, replace: options.location === 'replace'\n\t          });\n\t          $urlRouter.update(true);\n\t        }\n\t        $state.transition = null;\n\t        return $q.when($state.current);\n\t      }\n\t\n\t      // Filter parameters before we pass them to event handlers etc.\n\t      toParams = filterByKeys(to.params.$$keys(), toParams || {});\n\t      \n\t      // Re-add the saved hash before we start returning things or broadcasting $stateChangeStart\n\t      if (hash) toParams['#'] = hash;\n\t      \n\t      // Broadcast start event and cancel the transition if requested\n\t      if (options.notify) {\n\t        /**\n\t         * @ngdoc event\n\t         * @name ui.router.state.$state#$stateChangeStart\n\t         * @eventOf ui.router.state.$state\n\t         * @eventType broadcast on root scope\n\t         * @description\n\t         * Fired when the state transition **begins**. You can use `event.preventDefault()`\n\t         * to prevent the transition from happening and then the transition promise will be\n\t         * rejected with a `'transition prevented'` value.\n\t         *\n\t         * @param {Object} event Event object.\n\t         * @param {State} toState The state being transitioned to.\n\t         * @param {Object} toParams The params supplied to the `toState`.\n\t         * @param {State} fromState The current state, pre-transition.\n\t         * @param {Object} fromParams The params supplied to the `fromState`.\n\t         *\n\t         * @example\n\t         *\n\t         * <pre>\n\t         * $rootScope.$on('$stateChangeStart',\n\t         * function(event, toState, toParams, fromState, fromParams){\n\t         *     event.preventDefault();\n\t         *     // transitionTo() promise will be rejected with\n\t         *     // a 'transition prevented' error\n\t         * })\n\t         * </pre>\n\t         */\n\t        if ($rootScope.$broadcast('$stateChangeStart', to.self, toParams, from.self, fromParams, options).defaultPrevented) {\n\t          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n\t          //Don't update and resync url if there's been a new transition started. see issue #2238, #600\n\t          if ($state.transition == null) $urlRouter.update();\n\t          return TransitionPrevented;\n\t        }\n\t      }\n\t\n\t      // Resolve locals for the remaining states, but don't update any global state just\n\t      // yet -- if anything fails to resolve the current state needs to remain untouched.\n\t      // We also set up an inheritance chain for the locals here. This allows the view directive\n\t      // to quickly look up the correct definition for each view in the current state. Even\n\t      // though we create the locals object itself outside resolveState(), it is initially\n\t      // empty and gets filled asynchronously. We need to keep track of the promise for the\n\t      // (fully resolved) current locals, and pass this down the chain.\n\t      var resolved = $q.when(locals);\n\t\n\t      for (var l = keep; l < toPath.length; l++, state = toPath[l]) {\n\t        locals = toLocals[l] = inherit(locals);\n\t        resolved = resolveState(state, toParams, state === to, resolved, locals, options);\n\t      }\n\t\n\t      // Once everything is resolved, we are ready to perform the actual transition\n\t      // and return a promise for the new state. We also keep track of what the\n\t      // current promise is, so that we can detect overlapping transitions and\n\t      // keep only the outcome of the last transition.\n\t      var transition = $state.transition = resolved.then(function () {\n\t        var l, entering, exiting;\n\t\n\t        if ($state.transition !== transition) {\n\t          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n\t          return TransitionSuperseded;\n\t        }\n\t\n\t        // Exit 'from' states not kept\n\t        for (l = fromPath.length - 1; l >= keep; l--) {\n\t          exiting = fromPath[l];\n\t          if (exiting.self.onExit) {\n\t            $injector.invoke(exiting.self.onExit, exiting.self, exiting.locals.globals);\n\t          }\n\t          exiting.locals = null;\n\t        }\n\t\n\t        // Enter 'to' states not kept\n\t        for (l = keep; l < toPath.length; l++) {\n\t          entering = toPath[l];\n\t          entering.locals = toLocals[l];\n\t          if (entering.self.onEnter) {\n\t            $injector.invoke(entering.self.onEnter, entering.self, entering.locals.globals);\n\t          }\n\t        }\n\t\n\t        // Run it again, to catch any transitions in callbacks\n\t        if ($state.transition !== transition) {\n\t          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n\t          return TransitionSuperseded;\n\t        }\n\t\n\t        // Update globals in $state\n\t        $state.$current = to;\n\t        $state.current = to.self;\n\t        $state.params = toParams;\n\t        copy($state.params, $stateParams);\n\t        $state.transition = null;\n\t\n\t        if (options.location && to.navigable) {\n\t          $urlRouter.push(to.navigable.url, to.navigable.locals.globals.$stateParams, {\n\t            $$avoidResync: true, replace: options.location === 'replace'\n\t          });\n\t        }\n\t\n\t        if (options.notify) {\n\t        /**\n\t         * @ngdoc event\n\t         * @name ui.router.state.$state#$stateChangeSuccess\n\t         * @eventOf ui.router.state.$state\n\t         * @eventType broadcast on root scope\n\t         * @description\n\t         * Fired once the state transition is **complete**.\n\t         *\n\t         * @param {Object} event Event object.\n\t         * @param {State} toState The state being transitioned to.\n\t         * @param {Object} toParams The params supplied to the `toState`.\n\t         * @param {State} fromState The current state, pre-transition.\n\t         * @param {Object} fromParams The params supplied to the `fromState`.\n\t         */\n\t          $rootScope.$broadcast('$stateChangeSuccess', to.self, toParams, from.self, fromParams);\n\t        }\n\t        $urlRouter.update(true);\n\t\n\t        return $state.current;\n\t      }).then(null, function (error) {\n\t        // propagate TransitionSuperseded error without emitting $stateChangeCancel\n\t        // as it was already emitted in the success handler above\n\t        if (error === TransitionSupersededError) return TransitionSuperseded;\n\t\n\t        if ($state.transition !== transition) {\n\t          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n\t          return TransitionSuperseded;\n\t        }\n\t\n\t        $state.transition = null;\n\t        /**\n\t         * @ngdoc event\n\t         * @name ui.router.state.$state#$stateChangeError\n\t         * @eventOf ui.router.state.$state\n\t         * @eventType broadcast on root scope\n\t         * @description\n\t         * Fired when an **error occurs** during transition. It's important to note that if you\n\t         * have any errors in your resolve functions (javascript errors, non-existent services, etc)\n\t         * they will not throw traditionally. You must listen for this $stateChangeError event to\n\t         * catch **ALL** errors.\n\t         *\n\t         * @param {Object} event Event object.\n\t         * @param {State} toState The state being transitioned to.\n\t         * @param {Object} toParams The params supplied to the `toState`.\n\t         * @param {State} fromState The current state, pre-transition.\n\t         * @param {Object} fromParams The params supplied to the `fromState`.\n\t         * @param {Error} error The resolve error object.\n\t         */\n\t        evt = $rootScope.$broadcast('$stateChangeError', to.self, toParams, from.self, fromParams, error);\n\t\n\t        if (!evt.defaultPrevented) {\n\t          $urlRouter.update();\n\t        }\n\t\n\t        return $q.reject(error);\n\t      });\n\t\n\t      return transition;\n\t    };\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name ui.router.state.$state#is\n\t     * @methodOf ui.router.state.$state\n\t     *\n\t     * @description\n\t     * Similar to {@link ui.router.state.$state#methods_includes $state.includes},\n\t     * but only checks for the full state name. If params is supplied then it will be\n\t     * tested for strict equality against the current active params object, so all params\n\t     * must match with none missing and no extras.\n\t     *\n\t     * @example\n\t     * <pre>\n\t     * $state.$current.name = 'contacts.details.item';\n\t     *\n\t     * // absolute name\n\t     * $state.is('contact.details.item'); // returns true\n\t     * $state.is(contactDetailItemStateObject); // returns true\n\t     *\n\t     * // relative name (. and ^), typically from a template\n\t     * // E.g. from the 'contacts.details' template\n\t     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n\t     * </pre>\n\t     *\n\t     * @param {string|object} stateOrName The state name (absolute or relative) or state object you'd like to check.\n\t     * @param {object=} params A param object, e.g. `{sectionId: section.id}`, that you'd like\n\t     * to test against the current active state.\n\t     * @param {object=} options An options object.  The options are:\n\t     *\n\t     * - **`relative`** - {string|object} -  If `stateOrName` is a relative state name and `options.relative` is set, .is will\n\t     * test relative to `options.relative` state (or name).\n\t     *\n\t     * @returns {boolean} Returns true if it is the state.\n\t     */\n\t    $state.is = function is(stateOrName, params, options) {\n\t      options = extend({ relative: $state.$current }, options || {});\n\t      var state = findState(stateOrName, options.relative);\n\t\n\t      if (!isDefined(state)) { return undefined; }\n\t      if ($state.$current !== state) { return false; }\n\t      return params ? equalForKeys(state.params.$$values(params), $stateParams) : true;\n\t    };\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name ui.router.state.$state#includes\n\t     * @methodOf ui.router.state.$state\n\t     *\n\t     * @description\n\t     * A method to determine if the current active state is equal to or is the child of the\n\t     * state stateName. If any params are passed then they will be tested for a match as well.\n\t     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n\t     *\n\t     * @example\n\t     * Partial and relative names\n\t     * <pre>\n\t     * $state.$current.name = 'contacts.details.item';\n\t     *\n\t     * // Using partial names\n\t     * $state.includes(\"contacts\"); // returns true\n\t     * $state.includes(\"contacts.details\"); // returns true\n\t     * $state.includes(\"contacts.details.item\"); // returns true\n\t     * $state.includes(\"contacts.list\"); // returns false\n\t     * $state.includes(\"about\"); // returns false\n\t     *\n\t     * // Using relative names (. and ^), typically from a template\n\t     * // E.g. from the 'contacts.details' template\n\t     * <div ng-class=\"{highlighted: $state.includes('.item')}\">Item</div>\n\t     * </pre>\n\t     *\n\t     * Basic globbing patterns\n\t     * <pre>\n\t     * $state.$current.name = 'contacts.details.item.url';\n\t     *\n\t     * $state.includes(\"*.details.*.*\"); // returns true\n\t     * $state.includes(\"*.details.**\"); // returns true\n\t     * $state.includes(\"**.item.**\"); // returns true\n\t     * $state.includes(\"*.details.item.url\"); // returns true\n\t     * $state.includes(\"*.details.*.url\"); // returns true\n\t     * $state.includes(\"*.details.*\"); // returns false\n\t     * $state.includes(\"item.**\"); // returns false\n\t     * </pre>\n\t     *\n\t     * @param {string} stateOrName A partial name, relative name, or glob pattern\n\t     * to be searched for within the current state name.\n\t     * @param {object=} params A param object, e.g. `{sectionId: section.id}`,\n\t     * that you'd like to test against the current active state.\n\t     * @param {object=} options An options object.  The options are:\n\t     *\n\t     * - **`relative`** - {string|object=} -  If `stateOrName` is a relative state reference and `options.relative` is set,\n\t     * .includes will test relative to `options.relative` state (or name).\n\t     *\n\t     * @returns {boolean} Returns true if it does include the state\n\t     */\n\t    $state.includes = function includes(stateOrName, params, options) {\n\t      options = extend({ relative: $state.$current }, options || {});\n\t      if (isString(stateOrName) && isGlob(stateOrName)) {\n\t        if (!doesStateMatchGlob(stateOrName)) {\n\t          return false;\n\t        }\n\t        stateOrName = $state.$current.name;\n\t      }\n\t\n\t      var state = findState(stateOrName, options.relative);\n\t      if (!isDefined(state)) { return undefined; }\n\t      if (!isDefined($state.$current.includes[state.name])) { return false; }\n\t      if (!params) { return true; }\n\t\n\t      var keys = objectKeys(params);\n\t      for (var i = 0; i < keys.length; i++) {\n\t        var key = keys[i], paramDef = state.params[key];\n\t        if (paramDef && !paramDef.type.equals($stateParams[key], params[key])) {\n\t          return false;\n\t        }\n\t      }\n\t\n\t      return true;\n\t    };\n\t\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name ui.router.state.$state#href\n\t     * @methodOf ui.router.state.$state\n\t     *\n\t     * @description\n\t     * A url generation method that returns the compiled url for the given state populated with the given params.\n\t     *\n\t     * @example\n\t     * <pre>\n\t     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n\t     * </pre>\n\t     *\n\t     * @param {string|object} stateOrName The state name or state object you'd like to generate a url from.\n\t     * @param {object=} params An object of parameter values to fill the state's required parameters.\n\t     * @param {object=} options Options object. The options are:\n\t     *\n\t     * - **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the\n\t     *    first parameter, then the constructed href url will be built from the first navigable ancestor (aka\n\t     *    ancestor with a valid url).\n\t     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n\t     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n\t     *    defines which state to be relative from.\n\t     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n\t     * \n\t     * @returns {string} compiled state url\n\t     */\n\t    $state.href = function href(stateOrName, params, options) {\n\t      options = extend({\n\t        lossy:    true,\n\t        inherit:  true,\n\t        absolute: false,\n\t        relative: $state.$current\n\t      }, options || {});\n\t\n\t      var state = findState(stateOrName, options.relative);\n\t\n\t      if (!isDefined(state)) return null;\n\t      if (options.inherit) params = inheritParams($stateParams, params || {}, $state.$current, state);\n\t      \n\t      var nav = (state && options.lossy) ? state.navigable : state;\n\t\n\t      if (!nav || nav.url === undefined || nav.url === null) {\n\t        return null;\n\t      }\n\t      return $urlRouter.href(nav.url, filterByKeys(state.params.$$keys().concat('#'), params || {}), {\n\t        absolute: options.absolute\n\t      });\n\t    };\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name ui.router.state.$state#get\n\t     * @methodOf ui.router.state.$state\n\t     *\n\t     * @description\n\t     * Returns the state configuration object for any specific state or all states.\n\t     *\n\t     * @param {string|object=} stateOrName (absolute or relative) If provided, will only get the config for\n\t     * the requested state. If not provided, returns an array of ALL state configs.\n\t     * @param {string|object=} context When stateOrName is a relative state reference, the state will be retrieved relative to context.\n\t     * @returns {Object|Array} State configuration object or array of all objects.\n\t     */\n\t    $state.get = function (stateOrName, context) {\n\t      if (arguments.length === 0) return map(objectKeys(states), function(name) { return states[name].self; });\n\t      var state = findState(stateOrName, context || $state.$current);\n\t      return (state && state.self) ? state.self : null;\n\t    };\n\t\n\t    function resolveState(state, params, paramsAreFiltered, inherited, dst, options) {\n\t      // Make a restricted $stateParams with only the parameters that apply to this state if\n\t      // necessary. In addition to being available to the controller and onEnter/onExit callbacks,\n\t      // we also need $stateParams to be available for any $injector calls we make during the\n\t      // dependency resolution process.\n\t      var $stateParams = (paramsAreFiltered) ? params : filterByKeys(state.params.$$keys(), params);\n\t      var locals = { $stateParams: $stateParams };\n\t\n\t      // Resolve 'global' dependencies for the state, i.e. those not specific to a view.\n\t      // We're also including $stateParams in this; that way the parameters are restricted\n\t      // to the set that should be visible to the state, and are independent of when we update\n\t      // the global $state and $stateParams values.\n\t      dst.resolve = $resolve.resolve(state.resolve, locals, dst.resolve, state);\n\t      var promises = [dst.resolve.then(function (globals) {\n\t        dst.globals = globals;\n\t      })];\n\t      if (inherited) promises.push(inherited);\n\t\n\t      function resolveViews() {\n\t        var viewsPromises = [];\n\t\n\t        // Resolve template and dependencies for all views.\n\t        forEach(state.views, function (view, name) {\n\t          var injectables = (view.resolve && view.resolve !== state.resolve ? view.resolve : {});\n\t          injectables.$template = [ function () {\n\t            return $view.load(name, { view: view, locals: dst.globals, params: $stateParams, notify: options.notify }) || '';\n\t          }];\n\t\n\t          viewsPromises.push($resolve.resolve(injectables, dst.globals, dst.resolve, state).then(function (result) {\n\t            // References to the controller (only instantiated at link time)\n\t            if (isFunction(view.controllerProvider) || isArray(view.controllerProvider)) {\n\t              var injectLocals = angular.extend({}, injectables, dst.globals);\n\t              result.$$controller = $injector.invoke(view.controllerProvider, null, injectLocals);\n\t            } else {\n\t              result.$$controller = view.controller;\n\t            }\n\t            // Provide access to the state itself for internal use\n\t            result.$$state = state;\n\t            result.$$controllerAs = view.controllerAs;\n\t            result.$$resolveAs = view.resolveAs;\n\t            dst[name] = result;\n\t          }));\n\t        });\n\t\n\t        return $q.all(viewsPromises).then(function(){\n\t          return dst.globals;\n\t        });\n\t      }\n\t\n\t      // Wait for all the promises and then return the activation object\n\t      return $q.all(promises).then(resolveViews).then(function (values) {\n\t        return dst;\n\t      });\n\t    }\n\t\n\t    return $state;\n\t  }\n\t\n\t  function shouldSkipReload(to, toParams, from, fromParams, locals, options) {\n\t    // Return true if there are no differences in non-search (path/object) params, false if there are differences\n\t    function nonSearchParamsEqual(fromAndToState, fromParams, toParams) {\n\t      // Identify whether all the parameters that differ between `fromParams` and `toParams` were search params.\n\t      function notSearchParam(key) {\n\t        return fromAndToState.params[key].location != \"search\";\n\t      }\n\t      var nonQueryParamKeys = fromAndToState.params.$$keys().filter(notSearchParam);\n\t      var nonQueryParams = pick.apply({}, [fromAndToState.params].concat(nonQueryParamKeys));\n\t      var nonQueryParamSet = new $$UMFP.ParamSet(nonQueryParams);\n\t      return nonQueryParamSet.$$equals(fromParams, toParams);\n\t    }\n\t\n\t    // If reload was not explicitly requested\n\t    // and we're transitioning to the same state we're already in\n\t    // and    the locals didn't change\n\t    //     or they changed in a way that doesn't merit reloading\n\t    //        (reloadOnParams:false, or reloadOnSearch.false and only search params changed)\n\t    // Then return true.\n\t    if (!options.reload && to === from &&\n\t      (locals === from.locals || (to.self.reloadOnSearch === false && nonSearchParamsEqual(from, fromParams, toParams)))) {\n\t      return true;\n\t    }\n\t  }\n\t}\n\t\n\tangular.module('ui.router.state')\n\t  .factory('$stateParams', function () { return {}; })\n\t  .constant(\"$state.runtime\", { autoinject: true })\n\t  .provider('$state', $StateProvider)\n\t  // Inject $state to initialize when entering runtime. #2574\n\t  .run(['$injector', function ($injector) {\n\t    // Allow tests (stateSpec.js) to turn this off by defining this constant\n\t    if ($injector.get(\"$state.runtime\").autoinject) {\n\t      $injector.get('$state');\n\t    }\n\t  }]);\n\t\n\t\n\t$ViewProvider.$inject = [];\n\tfunction $ViewProvider() {\n\t\n\t  this.$get = $get;\n\t  /**\n\t   * @ngdoc object\n\t   * @name ui.router.state.$view\n\t   *\n\t   * @requires ui.router.util.$templateFactory\n\t   * @requires $rootScope\n\t   *\n\t   * @description\n\t   *\n\t   */\n\t  $get.$inject = ['$rootScope', '$templateFactory'];\n\t  function $get(   $rootScope,   $templateFactory) {\n\t    return {\n\t      // $view.load('full.viewName', { template: ..., controller: ..., resolve: ..., async: false, params: ... })\n\t      /**\n\t       * @ngdoc function\n\t       * @name ui.router.state.$view#load\n\t       * @methodOf ui.router.state.$view\n\t       *\n\t       * @description\n\t       *\n\t       * @param {string} name name\n\t       * @param {object} options option object.\n\t       */\n\t      load: function load(name, options) {\n\t        var result, defaults = {\n\t          template: null, controller: null, view: null, locals: null, notify: true, async: true, params: {}\n\t        };\n\t        options = extend(defaults, options);\n\t\n\t        if (options.view) {\n\t          result = $templateFactory.fromConfig(options.view, options.params, options.locals);\n\t        }\n\t        return result;\n\t      }\n\t    };\n\t  }\n\t}\n\t\n\tangular.module('ui.router.state').provider('$view', $ViewProvider);\n\t\n\t/**\n\t * @ngdoc object\n\t * @name ui.router.state.$uiViewScrollProvider\n\t *\n\t * @description\n\t * Provider that returns the {@link ui.router.state.$uiViewScroll} service function.\n\t */\n\tfunction $ViewScrollProvider() {\n\t\n\t  var useAnchorScroll = false;\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name ui.router.state.$uiViewScrollProvider#useAnchorScroll\n\t   * @methodOf ui.router.state.$uiViewScrollProvider\n\t   *\n\t   * @description\n\t   * Reverts back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll) service for\n\t   * scrolling based on the url anchor.\n\t   */\n\t  this.useAnchorScroll = function () {\n\t    useAnchorScroll = true;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc object\n\t   * @name ui.router.state.$uiViewScroll\n\t   *\n\t   * @requires $anchorScroll\n\t   * @requires $timeout\n\t   *\n\t   * @description\n\t   * When called with a jqLite element, it scrolls the element into view (after a\n\t   * `$timeout` so the DOM has time to refresh).\n\t   *\n\t   * If you prefer to rely on `$anchorScroll` to scroll the view to the anchor,\n\t   * this can be enabled by calling {@link ui.router.state.$uiViewScrollProvider#methods_useAnchorScroll `$uiViewScrollProvider.useAnchorScroll()`}.\n\t   */\n\t  this.$get = ['$anchorScroll', '$timeout', function ($anchorScroll, $timeout) {\n\t    if (useAnchorScroll) {\n\t      return $anchorScroll;\n\t    }\n\t\n\t    return function ($element) {\n\t      return $timeout(function () {\n\t        $element[0].scrollIntoView();\n\t      }, 0, false);\n\t    };\n\t  }];\n\t}\n\t\n\tangular.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ui.router.state.directive:ui-view\n\t *\n\t * @requires ui.router.state.$state\n\t * @requires $compile\n\t * @requires $controller\n\t * @requires $injector\n\t * @requires ui.router.state.$uiViewScroll\n\t * @requires $document\n\t *\n\t * @restrict ECA\n\t *\n\t * @description\n\t * The ui-view directive tells $state where to place your templates.\n\t *\n\t * @param {string=} name A view name. The name should be unique amongst the other views in the\n\t * same state. You can have views of the same name that live in different states.\n\t *\n\t * @param {string=} autoscroll It allows you to set the scroll behavior of the browser window\n\t * when a view is populated. By default, $anchorScroll is overridden by ui-router's custom scroll\n\t * service, {@link ui.router.state.$uiViewScroll}. This custom service let's you\n\t * scroll ui-view elements into view when they are populated during a state activation.\n\t *\n\t * *Note: To revert back to old [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll)\n\t * functionality, call `$uiViewScrollProvider.useAnchorScroll()`.*\n\t *\n\t * @param {string=} onload Expression to evaluate whenever the view updates.\n\t *\n\t * @example\n\t * A view can be unnamed or named.\n\t * <pre>\n\t * <!-- Unnamed -->\n\t * <div ui-view></div>\n\t *\n\t * <!-- Named -->\n\t * <div ui-view=\"viewName\"></div>\n\t * </pre>\n\t *\n\t * You can only have one unnamed view within any template (or root html). If you are only using a\n\t * single view and it is unnamed then you can populate it like so:\n\t * <pre>\n\t * <div ui-view></div>\n\t * $stateProvider.state(\"home\", {\n\t *   template: \"<h1>HELLO!</h1>\"\n\t * })\n\t * </pre>\n\t *\n\t * The above is a convenient shortcut equivalent to specifying your view explicitly with the {@link ui.router.state.$stateProvider#methods_state `views`}\n\t * config property, by name, in this case an empty name:\n\t * <pre>\n\t * $stateProvider.state(\"home\", {\n\t *   views: {\n\t *     \"\": {\n\t *       template: \"<h1>HELLO!</h1>\"\n\t *     }\n\t *   }    \n\t * })\n\t * </pre>\n\t *\n\t * But typically you'll only use the views property if you name your view or have more than one view\n\t * in the same template. There's not really a compelling reason to name a view if its the only one,\n\t * but you could if you wanted, like so:\n\t * <pre>\n\t * <div ui-view=\"main\"></div>\n\t * </pre>\n\t * <pre>\n\t * $stateProvider.state(\"home\", {\n\t *   views: {\n\t *     \"main\": {\n\t *       template: \"<h1>HELLO!</h1>\"\n\t *     }\n\t *   }    \n\t * })\n\t * </pre>\n\t *\n\t * Really though, you'll use views to set up multiple views:\n\t * <pre>\n\t * <div ui-view></div>\n\t * <div ui-view=\"chart\"></div>\n\t * <div ui-view=\"data\"></div>\n\t * </pre>\n\t *\n\t * <pre>\n\t * $stateProvider.state(\"home\", {\n\t *   views: {\n\t *     \"\": {\n\t *       template: \"<h1>HELLO!</h1>\"\n\t *     },\n\t *     \"chart\": {\n\t *       template: \"<chart_thing/>\"\n\t *     },\n\t *     \"data\": {\n\t *       template: \"<data_thing/>\"\n\t *     }\n\t *   }    \n\t * })\n\t * </pre>\n\t *\n\t * Examples for `autoscroll`:\n\t *\n\t * <pre>\n\t * <!-- If autoscroll present with no expression,\n\t *      then scroll ui-view into view -->\n\t * <ui-view autoscroll/>\n\t *\n\t * <!-- If autoscroll present with valid expression,\n\t *      then scroll ui-view into view if expression evaluates to true -->\n\t * <ui-view autoscroll='true'/>\n\t * <ui-view autoscroll='false'/>\n\t * <ui-view autoscroll='scopeVariable'/>\n\t * </pre>\n\t *\n\t * Resolve data:\n\t *\n\t * The resolved data from the state's `resolve` block is placed on the scope as `$resolve` (this\n\t * can be customized using [[ViewDeclaration.resolveAs]]).  This can be then accessed from the template.\n\t *\n\t * Note that when `controllerAs` is being used, `$resolve` is set on the controller instance *after* the\n\t * controller is instantiated.  The `$onInit()` hook can be used to perform initialization code which\n\t * depends on `$resolve` data.\n\t *\n\t * Example usage of $resolve in a view template\n\t * <pre>\n\t * $stateProvider.state('home', {\n\t *   template: '<my-component user=\"$resolve.user\"></my-component>',\n\t *   resolve: {\n\t *     user: function(UserService) { return UserService.fetchUser(); }\n\t *   }\n\t * });\n\t * </pre>\n\t */\n\t$ViewDirective.$inject = ['$state', '$injector', '$uiViewScroll', '$interpolate', '$q'];\n\tfunction $ViewDirective(   $state,   $injector,   $uiViewScroll,   $interpolate,   $q) {\n\t\n\t  function getService() {\n\t    return ($injector.has) ? function(service) {\n\t      return $injector.has(service) ? $injector.get(service) : null;\n\t    } : function(service) {\n\t      try {\n\t        return $injector.get(service);\n\t      } catch (e) {\n\t        return null;\n\t      }\n\t    };\n\t  }\n\t\n\t  var service = getService(),\n\t      $animator = service('$animator'),\n\t      $animate = service('$animate');\n\t\n\t  // Returns a set of DOM manipulation functions based on which Angular version\n\t  // it should use\n\t  function getRenderer(attrs, scope) {\n\t    var statics = function() {\n\t      return {\n\t        enter: function (element, target, cb) { target.after(element); cb(); },\n\t        leave: function (element, cb) { element.remove(); cb(); }\n\t      };\n\t    };\n\t\n\t    if ($animate) {\n\t      return {\n\t        enter: function(element, target, cb) {\n\t          if (angular.version.minor > 2) {\n\t            $animate.enter(element, null, target).then(cb);\n\t          } else {\n\t            $animate.enter(element, null, target, cb);\n\t          }\n\t        },\n\t        leave: function(element, cb) {\n\t          if (angular.version.minor > 2) {\n\t            $animate.leave(element).then(cb);\n\t          } else {\n\t            $animate.leave(element, cb);\n\t          }\n\t        }\n\t      };\n\t    }\n\t\n\t    if ($animator) {\n\t      var animate = $animator && $animator(scope, attrs);\n\t\n\t      return {\n\t        enter: function(element, target, cb) {animate.enter(element, null, target); cb(); },\n\t        leave: function(element, cb) { animate.leave(element); cb(); }\n\t      };\n\t    }\n\t\n\t    return statics();\n\t  }\n\t\n\t  var directive = {\n\t    restrict: 'ECA',\n\t    terminal: true,\n\t    priority: 400,\n\t    transclude: 'element',\n\t    compile: function (tElement, tAttrs, $transclude) {\n\t      return function (scope, $element, attrs) {\n\t        var previousEl, currentEl, currentScope, latestLocals,\n\t            onloadExp     = attrs.onload || '',\n\t            autoScrollExp = attrs.autoscroll,\n\t            renderer      = getRenderer(attrs, scope),\n\t            inherited     = $element.inheritedData('$uiView');\n\t\n\t        scope.$on('$stateChangeSuccess', function() {\n\t          updateView(false);\n\t        });\n\t\n\t        updateView(true);\n\t\n\t        function cleanupLastView() {\n\t          if (previousEl) {\n\t            previousEl.remove();\n\t            previousEl = null;\n\t          }\n\t\n\t          if (currentScope) {\n\t            currentScope.$destroy();\n\t            currentScope = null;\n\t          }\n\t\n\t          if (currentEl) {\n\t            var $uiViewData = currentEl.data('$uiViewAnim');\n\t            renderer.leave(currentEl, function() {\n\t              $uiViewData.$$animLeave.resolve();\n\t              previousEl = null;\n\t            });\n\t\n\t            previousEl = currentEl;\n\t            currentEl = null;\n\t          }\n\t        }\n\t\n\t        function updateView(firstTime) {\n\t          var newScope,\n\t              name            = getUiViewName(scope, attrs, $element, $interpolate),\n\t              previousLocals  = name && $state.$current && $state.$current.locals[name];\n\t\n\t          if (!firstTime && previousLocals === latestLocals) return; // nothing to do\n\t          newScope = scope.$new();\n\t          latestLocals = $state.$current.locals[name];\n\t\n\t          /**\n\t           * @ngdoc event\n\t           * @name ui.router.state.directive:ui-view#$viewContentLoading\n\t           * @eventOf ui.router.state.directive:ui-view\n\t           * @eventType emits on ui-view directive scope\n\t           * @description\n\t           *\n\t           * Fired once the view **begins loading**, *before* the DOM is rendered.\n\t           *\n\t           * @param {Object} event Event object.\n\t           * @param {string} viewName Name of the view.\n\t           */\n\t          newScope.$emit('$viewContentLoading', name);\n\t\n\t          var clone = $transclude(newScope, function(clone) {\n\t            var animEnter = $q.defer(), animLeave = $q.defer();\n\t            var viewAnimData = {\n\t              $animEnter: animEnter.promise,\n\t              $animLeave: animLeave.promise,\n\t              $$animLeave: animLeave\n\t            };\n\t\n\t            clone.data('$uiViewAnim', viewAnimData);\n\t            renderer.enter(clone, $element, function onUiViewEnter() {\n\t              animEnter.resolve();\n\t              if(currentScope) {\n\t                currentScope.$emit('$viewContentAnimationEnded');\n\t              }\n\t\n\t              if (angular.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {\n\t                $uiViewScroll(clone);\n\t              }\n\t            });\n\t            cleanupLastView();\n\t          });\n\t\n\t          currentEl = clone;\n\t          currentScope = newScope;\n\t          /**\n\t           * @ngdoc event\n\t           * @name ui.router.state.directive:ui-view#$viewContentLoaded\n\t           * @eventOf ui.router.state.directive:ui-view\n\t           * @eventType emits on ui-view directive scope\n\t           * @description\n\t           * Fired once the view is **loaded**, *after* the DOM is rendered.\n\t           *\n\t           * @param {Object} event Event object.\n\t           * @param {string} viewName Name of the view.\n\t           */\n\t          currentScope.$emit('$viewContentLoaded', name);\n\t          currentScope.$eval(onloadExp);\n\t        }\n\t      };\n\t    }\n\t  };\n\t\n\t  return directive;\n\t}\n\t\n\t$ViewDirectiveFill.$inject = ['$compile', '$controller', '$state', '$interpolate'];\n\tfunction $ViewDirectiveFill (  $compile,   $controller,   $state,   $interpolate) {\n\t  return {\n\t    restrict: 'ECA',\n\t    priority: -400,\n\t    compile: function (tElement) {\n\t      var initial = tElement.html();\n\t      return function (scope, $element, attrs) {\n\t        var current = $state.$current,\n\t            name = getUiViewName(scope, attrs, $element, $interpolate),\n\t            locals  = current && current.locals[name];\n\t\n\t        if (! locals) {\n\t          return;\n\t        }\n\t\n\t        $element.data('$uiView', { name: name, state: locals.$$state });\n\t        $element.html(locals.$template ? locals.$template : initial);\n\t\n\t        var resolveData = angular.extend({}, locals);\n\t        scope[locals.$$resolveAs] = resolveData;\n\t\n\t        var link = $compile($element.contents());\n\t\n\t        if (locals.$$controller) {\n\t          locals.$scope = scope;\n\t          locals.$element = $element;\n\t          var controller = $controller(locals.$$controller, locals);\n\t          if (locals.$$controllerAs) {\n\t            scope[locals.$$controllerAs] = controller;\n\t            scope[locals.$$controllerAs][locals.$$resolveAs] = resolveData;\n\t          }\n\t          if (isFunction(controller.$onInit)) controller.$onInit();\n\t          $element.data('$ngControllerController', controller);\n\t          $element.children().data('$ngControllerController', controller);\n\t        }\n\t\n\t        link(scope);\n\t      };\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Shared ui-view code for both directives:\n\t * Given scope, element, and its attributes, return the view's name\n\t */\n\tfunction getUiViewName(scope, attrs, element, $interpolate) {\n\t  var name = $interpolate(attrs.uiView || attrs.name || '')(scope);\n\t  var uiViewCreatedBy = element.inheritedData('$uiView');\n\t  return name.indexOf('@') >= 0 ?  name :  (name + '@' + (uiViewCreatedBy ? uiViewCreatedBy.state.name : ''));\n\t}\n\t\n\tangular.module('ui.router.state').directive('uiView', $ViewDirective);\n\tangular.module('ui.router.state').directive('uiView', $ViewDirectiveFill);\n\t\n\tfunction parseStateRef(ref, current) {\n\t  var preparsed = ref.match(/^\\s*({[^}]*})\\s*$/), parsed;\n\t  if (preparsed) ref = current + '(' + preparsed[1] + ')';\n\t  parsed = ref.replace(/\\n/g, \" \").match(/^([^(]+?)\\s*(\\((.*)\\))?$/);\n\t  if (!parsed || parsed.length !== 4) throw new Error(\"Invalid state ref '\" + ref + \"'\");\n\t  return { state: parsed[1], paramExpr: parsed[3] || null };\n\t}\n\t\n\tfunction stateContext(el) {\n\t  var stateData = el.parent().inheritedData('$uiView');\n\t\n\t  if (stateData && stateData.state && stateData.state.name) {\n\t    return stateData.state;\n\t  }\n\t}\n\t\n\tfunction getTypeInfo(el) {\n\t  // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n\t  var isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';\n\t  var isForm = el[0].nodeName === \"FORM\";\n\t\n\t  return {\n\t    attr: isForm ? \"action\" : (isSvg ? 'xlink:href' : 'href'),\n\t    isAnchor: el.prop(\"tagName\").toUpperCase() === \"A\",\n\t    clickable: !isForm\n\t  };\n\t}\n\t\n\tfunction clickHook(el, $state, $timeout, type, current) {\n\t  return function(e) {\n\t    var button = e.which || e.button, target = current();\n\t\n\t    if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || el.attr('target'))) {\n\t      // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\n\t      var transition = $timeout(function() {\n\t        $state.go(target.state, target.params, target.options);\n\t      });\n\t      e.preventDefault();\n\t\n\t      // if the state has no URL, ignore one preventDefault from the <a> directive.\n\t      var ignorePreventDefaultCount = type.isAnchor && !target.href ? 1: 0;\n\t\n\t      e.preventDefault = function() {\n\t        if (ignorePreventDefaultCount-- <= 0) $timeout.cancel(transition);\n\t      };\n\t    }\n\t  };\n\t}\n\t\n\tfunction defaultOpts(el, $state) {\n\t  return { relative: stateContext(el) || $state.$current, inherit: true };\n\t}\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ui.router.state.directive:ui-sref\n\t *\n\t * @requires ui.router.state.$state\n\t * @requires $timeout\n\t *\n\t * @restrict A\n\t *\n\t * @description\n\t * A directive that binds a link (`<a>` tag) to a state. If the state has an associated\n\t * URL, the directive will automatically generate & update the `href` attribute via\n\t * the {@link ui.router.state.$state#methods_href $state.href()} method. Clicking\n\t * the link will trigger a state transition with optional parameters.\n\t *\n\t * Also middle-clicking, right-clicking, and ctrl-clicking on the link will be\n\t * handled natively by the browser.\n\t *\n\t * You can also use relative state paths within ui-sref, just like the relative\n\t * paths passed to `$state.go()`. You just need to be aware that the path is relative\n\t * to the state that the link lives in, in other words the state that loaded the\n\t * template containing the link.\n\t *\n\t * You can specify options to pass to {@link ui.router.state.$state#methods_go $state.go()}\n\t * using the `ui-sref-opts` attribute. Options are restricted to `location`, `inherit`,\n\t * and `reload`.\n\t *\n\t * @example\n\t * Here's an example of how you'd use ui-sref and how it would compile. If you have the\n\t * following template:\n\t * <pre>\n\t * <a ui-sref=\"home\">Home</a> | <a ui-sref=\"about\">About</a> | <a ui-sref=\"{page: 2}\">Next page</a>\n\t *\n\t * <ul>\n\t *     <li ng-repeat=\"contact in contacts\">\n\t *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n\t *     </li>\n\t * </ul>\n\t * </pre>\n\t *\n\t * Then the compiled html would be (assuming Html5Mode is off and current state is contacts):\n\t * <pre>\n\t * <a href=\"#/home\" ui-sref=\"home\">Home</a> | <a href=\"#/about\" ui-sref=\"about\">About</a> | <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n\t *\n\t * <ul>\n\t *     <li ng-repeat=\"contact in contacts\">\n\t *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n\t *     </li>\n\t *     <li ng-repeat=\"contact in contacts\">\n\t *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n\t *     </li>\n\t *     <li ng-repeat=\"contact in contacts\">\n\t *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n\t *     </li>\n\t * </ul>\n\t *\n\t * <a ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n\t * </pre>\n\t *\n\t * @param {string} ui-sref 'stateName' can be any valid absolute or relative state\n\t * @param {Object} ui-sref-opts options to pass to {@link ui.router.state.$state#methods_go $state.go()}\n\t */\n\t$StateRefDirective.$inject = ['$state', '$timeout'];\n\tfunction $StateRefDirective($state, $timeout) {\n\t  return {\n\t    restrict: 'A',\n\t    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n\t    link: function(scope, element, attrs, uiSrefActive) {\n\t      var ref    = parseStateRef(attrs.uiSref, $state.current.name);\n\t      var def    = { state: ref.state, href: null, params: null };\n\t      var type   = getTypeInfo(element);\n\t      var active = uiSrefActive[1] || uiSrefActive[0];\n\t      var unlinkInfoFn = null;\n\t      var hookFn;\n\t\n\t      def.options = extend(defaultOpts(element, $state), attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {});\n\t\n\t      var update = function(val) {\n\t        if (val) def.params = angular.copy(val);\n\t        def.href = $state.href(ref.state, def.params, def.options);\n\t\n\t        if (unlinkInfoFn) unlinkInfoFn();\n\t        if (active) unlinkInfoFn = active.$$addStateInfo(ref.state, def.params);\n\t        if (def.href !== null) attrs.$set(type.attr, def.href);\n\t      };\n\t\n\t      if (ref.paramExpr) {\n\t        scope.$watch(ref.paramExpr, function(val) { if (val !== def.params) update(val); }, true);\n\t        def.params = angular.copy(scope.$eval(ref.paramExpr));\n\t      }\n\t      update();\n\t\n\t      if (!type.clickable) return;\n\t      hookFn = clickHook(element, $state, $timeout, type, function() { return def; });\n\t      element[element.on ? 'on' : 'bind'](\"click\", hookFn);\n\t      scope.$on('$destroy', function() {\n\t        element[element.off ? 'off' : 'unbind'](\"click\", hookFn);\n\t      });\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ui.router.state.directive:ui-state\n\t *\n\t * @requires ui.router.state.uiSref\n\t *\n\t * @restrict A\n\t *\n\t * @description\n\t * Much like ui-sref, but will accept named $scope properties to evaluate for a state definition,\n\t * params and override options.\n\t *\n\t * @param {string} ui-state 'stateName' can be any valid absolute or relative state\n\t * @param {Object} ui-state-params params to pass to {@link ui.router.state.$state#methods_href $state.href()}\n\t * @param {Object} ui-state-opts options to pass to {@link ui.router.state.$state#methods_go $state.go()}\n\t */\n\t$StateRefDynamicDirective.$inject = ['$state', '$timeout'];\n\tfunction $StateRefDynamicDirective($state, $timeout) {\n\t  return {\n\t    restrict: 'A',\n\t    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n\t    link: function(scope, element, attrs, uiSrefActive) {\n\t      var type   = getTypeInfo(element);\n\t      var active = uiSrefActive[1] || uiSrefActive[0];\n\t      var group  = [attrs.uiState, attrs.uiStateParams || null, attrs.uiStateOpts || null];\n\t      var watch  = '[' + group.map(function(val) { return val || 'null'; }).join(', ') + ']';\n\t      var def    = { state: null, params: null, options: null, href: null };\n\t      var unlinkInfoFn = null;\n\t      var hookFn;\n\t\n\t      function runStateRefLink (group) {\n\t        def.state = group[0]; def.params = group[1]; def.options = group[2];\n\t        def.href = $state.href(def.state, def.params, def.options);\n\t\n\t        if (unlinkInfoFn) unlinkInfoFn();\n\t        if (active) unlinkInfoFn = active.$$addStateInfo(def.state, def.params);\n\t        if (def.href) attrs.$set(type.attr, def.href);\n\t      }\n\t\n\t      scope.$watch(watch, runStateRefLink, true);\n\t      runStateRefLink(scope.$eval(watch));\n\t\n\t      if (!type.clickable) return;\n\t      hookFn = clickHook(element, $state, $timeout, type, function() { return def; });\n\t      element[element.on ? 'on' : 'bind'](\"click\", hookFn);\n\t      scope.$on('$destroy', function() {\n\t        element[element.off ? 'off' : 'unbind'](\"click\", hookFn);\n\t      });\n\t    }\n\t  };\n\t}\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ui.router.state.directive:ui-sref-active\n\t *\n\t * @requires ui.router.state.$state\n\t * @requires ui.router.state.$stateParams\n\t * @requires $interpolate\n\t *\n\t * @restrict A\n\t *\n\t * @description\n\t * A directive working alongside ui-sref to add classes to an element when the\n\t * related ui-sref directive's state is active, and removing them when it is inactive.\n\t * The primary use-case is to simplify the special appearance of navigation menus\n\t * relying on `ui-sref`, by having the \"active\" state's menu button appear different,\n\t * distinguishing it from the inactive menu items.\n\t *\n\t * ui-sref-active can live on the same element as ui-sref or on a parent element. The first\n\t * ui-sref-active found at the same level or above the ui-sref will be used.\n\t *\n\t * Will activate when the ui-sref's target state or any child state is active. If you\n\t * need to activate only when the ui-sref target state is active and *not* any of\n\t * it's children, then you will use\n\t * {@link ui.router.state.directive:ui-sref-active-eq ui-sref-active-eq}\n\t *\n\t * @example\n\t * Given the following template:\n\t * <pre>\n\t * <ul>\n\t *   <li ui-sref-active=\"active\" class=\"item\">\n\t *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n\t *   </li>\n\t * </ul>\n\t * </pre>\n\t *\n\t *\n\t * When the app state is \"app.user\" (or any children states), and contains the state parameter \"user\" with value \"bilbobaggins\",\n\t * the resulting HTML will appear as (note the 'active' class):\n\t * <pre>\n\t * <ul>\n\t *   <li ui-sref-active=\"active\" class=\"item active\">\n\t *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n\t *   </li>\n\t * </ul>\n\t * </pre>\n\t *\n\t * The class name is interpolated **once** during the directives link time (any further changes to the\n\t * interpolated value are ignored).\n\t *\n\t * Multiple classes may be specified in a space-separated format:\n\t * <pre>\n\t * <ul>\n\t *   <li ui-sref-active='class1 class2 class3'>\n\t *     <a ui-sref=\"app.user\">link</a>\n\t *   </li>\n\t * </ul>\n\t * </pre>\n\t *\n\t * It is also possible to pass ui-sref-active an expression that evaluates\n\t * to an object hash, whose keys represent active class names and whose\n\t * values represent the respective state names/globs.\n\t * ui-sref-active will match if the current active state **includes** any of\n\t * the specified state names/globs, even the abstract ones.\n\t *\n\t * @Example\n\t * Given the following template, with \"admin\" being an abstract state:\n\t * <pre>\n\t * <div ui-sref-active=\"{'active': 'admin.*'}\">\n\t *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n\t * </div>\n\t * </pre>\n\t *\n\t * When the current state is \"admin.roles\" the \"active\" class will be applied\n\t * to both the <div> and <a> elements. It is important to note that the state\n\t * names/globs passed to ui-sref-active shadow the state provided by ui-sref.\n\t */\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ui.router.state.directive:ui-sref-active-eq\n\t *\n\t * @requires ui.router.state.$state\n\t * @requires ui.router.state.$stateParams\n\t * @requires $interpolate\n\t *\n\t * @restrict A\n\t *\n\t * @description\n\t * The same as {@link ui.router.state.directive:ui-sref-active ui-sref-active} but will only activate\n\t * when the exact target state used in the `ui-sref` is active; no child states.\n\t *\n\t */\n\t$StateRefActiveDirective.$inject = ['$state', '$stateParams', '$interpolate'];\n\tfunction $StateRefActiveDirective($state, $stateParams, $interpolate) {\n\t  return  {\n\t    restrict: \"A\",\n\t    controller: ['$scope', '$element', '$attrs', '$timeout', function ($scope, $element, $attrs, $timeout) {\n\t      var states = [], activeClasses = {}, activeEqClass, uiSrefActive;\n\t\n\t      // There probably isn't much point in $observing this\n\t      // uiSrefActive and uiSrefActiveEq share the same directive object with some\n\t      // slight difference in logic routing\n\t      activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);\n\t\n\t      try {\n\t        uiSrefActive = $scope.$eval($attrs.uiSrefActive);\n\t      } catch (e) {\n\t        // Do nothing. uiSrefActive is not a valid expression.\n\t        // Fall back to using $interpolate below\n\t      }\n\t      uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);\n\t      if (isObject(uiSrefActive)) {\n\t        forEach(uiSrefActive, function(stateOrName, activeClass) {\n\t          if (isString(stateOrName)) {\n\t            var ref = parseStateRef(stateOrName, $state.current.name);\n\t            addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);\n\t          }\n\t        });\n\t      }\n\t\n\t      // Allow uiSref to communicate with uiSrefActive[Equals]\n\t      this.$$addStateInfo = function (newState, newParams) {\n\t        // we already got an explicit state provided by ui-sref-active, so we\n\t        // shadow the one that comes from ui-sref\n\t        if (isObject(uiSrefActive) && states.length > 0) {\n\t          return;\n\t        }\n\t        var deregister = addState(newState, newParams, uiSrefActive);\n\t        update();\n\t        return deregister;\n\t      };\n\t\n\t      $scope.$on('$stateChangeSuccess', update);\n\t\n\t      function addState(stateName, stateParams, activeClass) {\n\t        var state = $state.get(stateName, stateContext($element));\n\t        var stateHash = createStateHash(stateName, stateParams);\n\t\n\t        var stateInfo = {\n\t          state: state || { name: stateName },\n\t          params: stateParams,\n\t          hash: stateHash\n\t        };\n\t\n\t        states.push(stateInfo);\n\t        activeClasses[stateHash] = activeClass;\n\t\n\t        return function removeState() {\n\t          var idx = states.indexOf(stateInfo);\n\t          if (idx !== -1) states.splice(idx, 1);\n\t        };\n\t      }\n\t\n\t      /**\n\t       * @param {string} state\n\t       * @param {Object|string} [params]\n\t       * @return {string}\n\t       */\n\t      function createStateHash(state, params) {\n\t        if (!isString(state)) {\n\t          throw new Error('state should be a string');\n\t        }\n\t        if (isObject(params)) {\n\t          return state + toJson(params);\n\t        }\n\t        params = $scope.$eval(params);\n\t        if (isObject(params)) {\n\t          return state + toJson(params);\n\t        }\n\t        return state;\n\t      }\n\t\n\t      // Update route state\n\t      function update() {\n\t        for (var i = 0; i < states.length; i++) {\n\t          if (anyMatch(states[i].state, states[i].params)) {\n\t            addClass($element, activeClasses[states[i].hash]);\n\t          } else {\n\t            removeClass($element, activeClasses[states[i].hash]);\n\t          }\n\t\n\t          if (exactMatch(states[i].state, states[i].params)) {\n\t            addClass($element, activeEqClass);\n\t          } else {\n\t            removeClass($element, activeEqClass);\n\t          }\n\t        }\n\t      }\n\t\n\t      function addClass(el, className) { $timeout(function () { el.addClass(className); }); }\n\t      function removeClass(el, className) { el.removeClass(className); }\n\t      function anyMatch(state, params) { return $state.includes(state.name, params); }\n\t      function exactMatch(state, params) { return $state.is(state.name, params); }\n\t\n\t      update();\n\t    }]\n\t  };\n\t}\n\t\n\tangular.module('ui.router.state')\n\t  .directive('uiSref', $StateRefDirective)\n\t  .directive('uiSrefActive', $StateRefActiveDirective)\n\t  .directive('uiSrefActiveEq', $StateRefActiveDirective)\n\t  .directive('uiState', $StateRefDynamicDirective);\n\t\n\t/**\n\t * @ngdoc filter\n\t * @name ui.router.state.filter:isState\n\t *\n\t * @requires ui.router.state.$state\n\t *\n\t * @description\n\t * Translates to {@link ui.router.state.$state#methods_is $state.is(\"stateName\")}.\n\t */\n\t$IsStateFilter.$inject = ['$state'];\n\tfunction $IsStateFilter($state) {\n\t  var isFilter = function (state, params) {\n\t    return $state.is(state, params);\n\t  };\n\t  isFilter.$stateful = true;\n\t  return isFilter;\n\t}\n\t\n\t/**\n\t * @ngdoc filter\n\t * @name ui.router.state.filter:includedByState\n\t *\n\t * @requires ui.router.state.$state\n\t *\n\t * @description\n\t * Translates to {@link ui.router.state.$state#methods_includes $state.includes('fullOrPartialStateName')}.\n\t */\n\t$IncludedByStateFilter.$inject = ['$state'];\n\tfunction $IncludedByStateFilter($state) {\n\t  var includesFilter = function (state, params, options) {\n\t    return $state.includes(state, params, options);\n\t  };\n\t  includesFilter.$stateful = true;\n\t  return  includesFilter;\n\t}\n\t\n\tangular.module('ui.router.state')\n\t  .filter('isState', $IsStateFilter)\n\t  .filter('includedByState', $IncludedByStateFilter);\n\t})(window, window.angular);\n\n/***/ },\n\n/***/ 176:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {module.exports = global[\"SVGMorpheus\"] = __webpack_require__(239);\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 189:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(227);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(11)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js!./../../../node_modules/sass-loader/index.js!./index.scss\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js!./../../../node_modules/sass-loader/index.js!./index.scss\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 198:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar module_1 = __webpack_require__(12);\n\t__webpack_require__(336);\n\t__webpack_require__(333);\n\t__webpack_require__(332);\n\t__webpack_require__(334);\n\t__webpack_require__(335);\n\t__webpack_require__(337);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = module_1.default;\n\n\n/***/ },\n\n/***/ 199:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar module_1 = __webpack_require__(156);\n\t__webpack_require__(338);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = module_1.default;\n\n\n/***/ },\n\n/***/ 200:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar home_controller_1 = __webpack_require__(340);\n\tvar sidenavl_controller_1 = __webpack_require__(341);\n\tvar content_controller_1 = __webpack_require__(339);\n\texports.initRouter = function ($urlRouterProvider, $stateProvider) {\n\t    $urlRouterProvider.otherwise(function ($injector) {\n\t        var $state = $injector.get(\"$state\");\n\t        $state.go(\"home\");\n\t    });\n\t    $stateProvider.state(\"home\", {\n\t        url: \"/\",\n\t        data: {\n\t            permissions: {\n\t                except: [\"anonymous\"],\n\t                only: [\"user\"]\n\t            }\n\t        },\n\t        views: {\n\t            \"\": {\n\t                controller: home_controller_1.HomeController,\n\t                controllerAs: \"homeCtl\",\n\t                template: __webpack_require__(278)(),\n\t            },\n\t            \"sidenavLeft@home\": {\n\t                controller: sidenavl_controller_1.SidenavLeftController,\n\t                controllerAs: \"sideLeftCtl\",\n\t                template: __webpack_require__(279)(),\n\t            },\n\t            \"content@home\": {\n\t                controller: content_controller_1.ContentController,\n\t                controllerAs: \"contentCtl\",\n\t                template: __webpack_require__(277)(),\n\t            }\n\t        }\n\t    });\n\t};\n\n\n/***/ },\n\n/***/ 204:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar _ = __webpack_require__(3);\n\tvar ngMaterialIcons = __webpack_require__(19);\n\tvar ngMaterial = __webpack_require__(7);\n\tvar Service = (function () {\n\t    function Service() {\n\t    }\n\t    return Service;\n\t}());\n\tService._name = \"svgUtils\";\n\tService.provider = [\"$q\", \"$templateRequest\", \"$templateCache\", \"ngMdIconService\", function ($q, $templateRequest, $templateCache, ngMdIconService) {\n\t        var Service = (function () {\n\t            function Service() {\n\t            }\n\t            Service.prototype.getAllIcons = function () {\n\t                return ngMdIconService.getShapes();\n\t            };\n\t            Service.prototype.loadSvgUrl = function (url) {\n\t                var defer = $q.defer();\n\t                var viewBox;\n\t                if ($templateCache.get(url)) {\n\t                    defer.resolve();\n\t                }\n\t                else {\n\t                    $templateRequest(url, true).then(function (response) {\n\t                        var svg = angular.element('<div>').append(response).find('svg')[0];\n\t                        viewBox = svg.attributes[\"viewBox\"];\n\t                        _.each(svg.querySelectorAll(\"[id]\"), function (g) {\n\t                            ngMdIconService.addShape(g.id, g.innerHTML);\n\t                            if (viewBox && viewBox.value) {\n\t                                ngMdIconService.addViewBox(g.id, viewBox.value);\n\t                            }\n\t                        });\n\t                        defer.resolve();\n\t                    }, defer.resolve);\n\t                }\n\t                return defer.promise;\n\t            };\n\t            return Service;\n\t        }());\n\t        return new Service();\n\t    }];\n\tvar module = angular.module(\"mdSvgModule\", [ngMaterialIcons, ngMaterial]);\n\tmodule.service(Service._name, Service.provider);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = \"\" + module.name;\n\n\n/***/ },\n\n/***/ 226:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(10)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".side-menu li,.side-menu ul{padding:0;margin:0}.side-menu ul li button{text-align:left}.side-menu a,.side-menu button{padding:0;margin:0}.side-menu a>md-content,.side-menu button>md-content{padding-left:5px}.side-menu .side-menu-child{position:relative;display:block}.side-menu .side-menu-child a,.side-menu .side-menu-child button{border-radius:0;background:transparent}.side-menu .side-menu-child a:hover>md-content:before,.side-menu .side-menu-child button:hover>md-content:before{display:block}.side-menu .side-menu-child>ul li a,.side-menu .side-menu-child>ul li button{padding-left:25px}.side-menu .side-menu-child>ul li a:before,.side-menu .side-menu-child>ul li button:before{display:none;background-color:transparent;padding-left:20px;content:\\\"\\\";position:absolute;z-index:1;left:0;top:0;bottom:0;border-left:3px solid #e2e2e2}.side-menu .side-menu-child .side-menu-child ul li a,.side-menu .side-menu-child .side-menu-child ul li button{padding-left:50px}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 227:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(10)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".logo{height:64px;min-height:64px!important;line-height:64px;margin:5px;padding-left:64px;background:transparent url(\" + __webpack_require__(355) + \") no-repeat 0 0;background-size:contain}.logo.center{background-position:top;height:150px}.gridster .gridster-item{overflow:hidden}.md-no-padding{padding:0}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 239:\n/***/ function(module, exports) {\n\n\t/*!\n\t * SVG Morpheus v0.3.0\n\t * https://github.com/alexk111/SVG-Morpheus\n\t *\n\t * Copyright (c) 2016 Alex Kaul\n\t * License: MIT\n\t *\n\t * Generated at Saturday, May 7th, 2016, 4:52:57 PM\n\t */\n\tvar SVGMorpheus=(function() {\n\t'use strict';\n\t\n\t/*\n\t * Easing functions\n\t */\n\t\n\tvar easings={};\n\teasings['circ-in']=function (t) {\n\t  return -1 * (Math.sqrt(1 - t*t) - 1);\n\t};\n\teasings['circ-out']=function (t) {\n\t  return Math.sqrt(1 - (t=t-1)*t);\n\t};\n\teasings['circ-in-out']=function (t) {\n\t  if ((t/=1/2) < 1) return -1/2 * (Math.sqrt(1 - t*t) - 1);\n\t  return 1/2 * (Math.sqrt(1 - (t-=2)*t) + 1);\n\t};\n\teasings['cubic-in']=function (t) { return t*t*t };\n\teasings['cubic-out']=function (t) { return (--t)*t*t+1 };\n\teasings['cubic-in-out']=function (t) { return t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1 };\n\teasings['elastic-in']=function (t) {\n\t  var s=1.70158;var p=0;var a=1;\n\t  if (t==0) return 0;  if (t==1) return 1;  if (!p) p=.3;\n\t  if (a < Math.abs(1)) { a=1; var s=p/4; }\n\t  else var s = p/(2*Math.PI) * Math.asin (1/a);\n\t  return -(a*Math.pow(2,10*(t-=1)) * Math.sin( (t-s)*(2*Math.PI)/p ));\n\t};\n\teasings['elastic-out']=function (t) {\n\t  var s=1.70158;var p=0;var a=1;\n\t  if (t==0) return 0;  if (t==1) return 1;  if (!p) p=.3;\n\t  if (a < Math.abs(1)) { a=1; var s=p/4; }\n\t  else var s = p/(2*Math.PI) * Math.asin (1/a);\n\t  return a*Math.pow(2,-10*t) * Math.sin( (t-s)*(2*Math.PI)/p ) + 1;\n\t};\n\teasings['elastic-in-out']=function (t) {\n\t  var s=1.70158;var p=0;var a=1;\n\t  if (t==0) return 0;  if ((t/=1/2)==2) return 1;  if (!p) p=1*(.3*1.5);\n\t  if (a < Math.abs(1)) { a=1; var s=p/4; }\n\t  else var s = p/(2*Math.PI) * Math.asin (1/a);\n\t  if (t < 1) return -.5*(a*Math.pow(2,10*(t-=1)) * Math.sin( (t-s)*(2*Math.PI)/p ));\n\t  return a*Math.pow(2,-10*(t-=1)) * Math.sin( (t-s)*(2*Math.PI)/p )*.5 + 1;\n\t};\n\teasings['expo-in']=function (t) {\n\t  return (t==0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t};\n\teasings['expo-out']=function (t) {\n\t  return (t==1) ? 1 : 1-Math.pow(2, -10 * t);\n\t};\n\teasings['expo-in-out']=function (t) {\n\t  if (t==0) return 0;\n\t  if (t==1) return 1;\n\t  if ((t/=1/2) < 1) return 1/2 * Math.pow(2, 10 * (t - 1));\n\t  return 1/2 * (-Math.pow(2, -10 * --t) + 2);\n\t};\n\teasings['linear']=function (t) { return t };\n\teasings['quad-in']=function (t) { return t*t };\n\teasings['quad-out']=function (t) { return t*(2-t) };\n\teasings['quad-in-out']=function (t) { return t<.5 ? 2*t*t : -1+(4-2*t)*t };\n\teasings['quart-in']=function (t) { return t*t*t*t };\n\teasings['quart-out']=function (t) { return 1-(--t)*t*t*t };\n\teasings['quart-in-out']=function (t) { return t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t };\n\teasings['quint-in']=function (t) { return t*t*t*t*t };\n\teasings['quint-out']=function (t) { return 1+(--t)*t*t*t*t };\n\teasings['quint-in-out']=function (t) { return t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t };\n\teasings['sine-in']=function (t) {\n\t  return 1-Math.cos(t * (Math.PI/2));\n\t};\n\teasings['sine-out']=function (t) {\n\t  return Math.sin(t * (Math.PI/2));\n\t};\n\teasings['sine-in-out']=function (t) {\n\t  return 1/2 * (1-Math.cos(Math.PI*t));\n\t};\n\t\n\t\n\t/*\n\t * Helper functions\n\t */\n\t\n\tvar _reqAnimFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.oRequestAnimationFrame;\n\tvar _cancelAnimFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.oCancelAnimationFrame;\n\t\n\t// Calculate style\n\tfunction styleNormCalc(styleNormFrom, styleNormTo, progress) {\n\t  var i, len, styleNorm={};\n\t  for(i in styleNormFrom) {\n\t    switch (i) {\n\t      case 'fill':\n\t      case 'stroke':\n\t        styleNorm[i]=clone(styleNormFrom[i]);\n\t        styleNorm[i].r=styleNormFrom[i].r+(styleNormTo[i].r-styleNormFrom[i].r)*progress;\n\t        styleNorm[i].g=styleNormFrom[i].g+(styleNormTo[i].g-styleNormFrom[i].g)*progress;\n\t        styleNorm[i].b=styleNormFrom[i].b+(styleNormTo[i].b-styleNormFrom[i].b)*progress;\n\t        styleNorm[i].opacity=styleNormFrom[i].opacity+(styleNormTo[i].opacity-styleNormFrom[i].opacity)*progress;\n\t        break;\n\t      case 'opacity':\n\t      case 'fill-opacity':\n\t      case 'stroke-opacity':\n\t      case 'stroke-width':\n\t        styleNorm[i]=styleNormFrom[i]+(styleNormTo[i]-styleNormFrom[i])*progress;\n\t        break;\n\t    }\n\t  }\n\t  return styleNorm;\n\t}\n\t\n\tfunction styleNormToString(styleNorm) {\n\t  var i;\n\t  var style={};\n\t  for(i in styleNorm) {\n\t    switch (i) {\n\t      case 'fill':\n\t      case 'stroke':\n\t        style[i]=rgbToString(styleNorm[i]);\n\t        break;\n\t      case 'opacity':\n\t      case 'fill-opacity':\n\t      case 'stroke-opacity':\n\t      case 'stroke-width':\n\t        style[i]=styleNorm[i];\n\t        break;\n\t    }\n\t  }\n\t  return style;\n\t}\n\t\n\tfunction styleToNorm(styleFrom, styleTo) {\n\t  var styleNorm=[{},{}];\n\t  var i;\n\t  for(i in styleFrom) {\n\t    switch(i) {\n\t      case 'fill':\n\t      case 'stroke':\n\t        styleNorm[0][i]=getRGB(styleFrom[i]);\n\t        if(styleTo[i]===undefined) {\n\t          styleNorm[1][i]=getRGB(styleFrom[i]);\n\t          styleNorm[1][i].opacity=0;\n\t        }\n\t        break;\n\t      case 'opacity':\n\t      case 'fill-opacity':\n\t      case 'stroke-opacity':\n\t      case 'stroke-width':\n\t        styleNorm[0][i]=styleFrom[i];\n\t        if(styleTo[i]===undefined) {\n\t          styleNorm[1][i]=1;\n\t        }\n\t        break;\n\t    }\n\t  }\n\t  for(i in styleTo) {\n\t    switch(i) {\n\t      case 'fill':\n\t      case 'stroke':\n\t        styleNorm[1][i]=getRGB(styleTo[i]);\n\t        if(styleFrom[i]===undefined) {\n\t          styleNorm[0][i]=getRGB(styleTo[i]);\n\t          styleNorm[0][i].opacity=0;\n\t        }\n\t        break;\n\t      case 'opacity':\n\t      case 'fill-opacity':\n\t      case 'stroke-opacity':\n\t      case 'stroke-width':\n\t        styleNorm[1][i]=styleTo[i];\n\t        if(styleFrom[i]===undefined) {\n\t          styleNorm[0][i]=1;\n\t        }\n\t        break;\n\t    }\n\t  }\n\t  return styleNorm;\n\t}\n\t\n\t// Calculate transform progress\n\tfunction transCalc(transFrom, transTo, progress) {\n\t  var res={};\n\t  for(var i in transFrom) {\n\t    switch(i) {\n\t      case 'rotate':\n\t        res[i]=[0,0,0];\n\t        for(var j=0;j<3;j++) {\n\t          res[i][j]=transFrom[i][j]+(transTo[i][j]-transFrom[i][j])*progress;\n\t        }\n\t        break;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\tfunction trans2string(trans) {\n\t  var res='';\n\t  if(!!trans.rotate) {\n\t    res+='rotate('+trans.rotate.join(' ')+')';\n\t  }\n\t  return res;\n\t}\n\t\n\t// Calculate curve progress\n\tfunction curveCalc(curveFrom, curveTo, progress) {\n\t  var curve=[];\n\t  for(var i=0,len1=curveFrom.length;i<len1;i++) {\n\t    curve.push([curveFrom[i][0]]);\n\t    for(var j=1,len2=curveFrom[i].length;j<len2;j++) {\n\t      curve[i].push(curveFrom[i][j]+(curveTo[i][j]-curveFrom[i][j])*progress);\n\t    }\n\t  }\n\t  return curve;\n\t}\n\t\n\tfunction clone(obj) {\n\t  var copy;\n\t\n\t  // Handle Array\n\t  if (obj instanceof Array) {\n\t    copy = [];\n\t    for (var i = 0, len = obj.length; i < len; i++) {\n\t      copy[i] = clone(obj[i]);\n\t    }\n\t    return copy;\n\t  }\n\t\n\t  // Handle Object\n\t  if (obj instanceof Object) {\n\t    copy = {};\n\t    for (var attr in obj) {\n\t      if (obj.hasOwnProperty(attr)) {\n\t        copy[attr] = clone(obj[attr]);\n\t      }\n\t    }\n\t    return copy;\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\t\n\t\n\t/*\n\t * Useful things from Adobe's Snap.svg adopted to the library needs\n\t */\n\t\n\t/*\n\t * Paths\n\t */\n\t\n\tvar spaces = \"\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029\";\n\tvar pathCommand = new RegExp(\"([a-z])[\" + spaces + \",]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\" + spaces + \"]*,?[\" + spaces + \"]*)+)\", \"ig\");\n\tvar pathValues = new RegExp(\"(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[\" + spaces + \"]*,?[\" + spaces + \"]*\", \"ig\");\n\t\n\t// Parses given path string into an array of arrays of path segments\n\tvar parsePathString = function (pathString) {\n\t  if (!pathString) {\n\t    return null;\n\t  }\n\t\n\t  if(typeof pathString === typeof []) {\n\t    return pathString;\n\t  } else {\n\t    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n\t        data = [];\n\t\n\t    String(pathString).replace(pathCommand, function (a, b, c) {\n\t      var params = [],\n\t          name = b.toLowerCase();\n\t      c.replace(pathValues, function (a, b) {\n\t        b && params.push(+b);\n\t      });\n\t      if (name == \"m\" && params.length > 2) {\n\t        data.push([b].concat(params.splice(0, 2)));\n\t        name = \"l\";\n\t        b = b == \"m\" ? \"l\" : \"L\";\n\t      }\n\t      if (name == \"o\" && params.length == 1) {\n\t        data.push([b, params[0]]);\n\t      }\n\t      if (name == \"r\") {\n\t        data.push([b].concat(params));\n\t      } else while (params.length >= paramCounts[name]) {\n\t        data.push([b].concat(params.splice(0, paramCounts[name])));\n\t        if (!paramCounts[name]) {\n\t          break;\n\t        }\n\t      }\n\t    });\n\t\n\t    return data;\n\t  }\n\t};\n\t\n\t// http://schepers.cc/getting-to-the-point\n\tvar catmullRom2bezier=function(crp, z) {\n\t  var d = [];\n\t  for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n\t    var p = [\n\t              {x: +crp[i - 2], y: +crp[i - 1]},\n\t              {x: +crp[i],     y: +crp[i + 1]},\n\t              {x: +crp[i + 2], y: +crp[i + 3]},\n\t              {x: +crp[i + 4], y: +crp[i + 5]}\n\t            ];\n\t    if (z) {\n\t      if (!i) {\n\t        p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n\t      } else if (iLen - 4 == i) {\n\t        p[3] = {x: +crp[0], y: +crp[1]};\n\t      } else if (iLen - 2 == i) {\n\t        p[2] = {x: +crp[0], y: +crp[1]};\n\t        p[3] = {x: +crp[2], y: +crp[3]};\n\t      }\n\t    } else {\n\t      if (iLen - 4 == i) {\n\t        p[3] = p[2];\n\t      } else if (!i) {\n\t        p[0] = {x: +crp[i], y: +crp[i + 1]};\n\t      }\n\t    }\n\t    d.push([\"C\",\n\t          (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n\t          (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n\t          (p[1].x + 6 * p[2].x - p[3].x) / 6,\n\t          (p[1].y + 6*p[2].y - p[3].y) / 6,\n\t          p[2].x,\n\t          p[2].y\n\t    ]);\n\t  }\n\t\n\t  return d;\n\t\n\t};\n\t\n\tvar ellipsePath=function(x, y, rx, ry, a) {\n\t  if (a == null && ry == null) {\n\t    ry = rx;\n\t  }\n\t  x = +x;\n\t  y = +y;\n\t  rx = +rx;\n\t  ry = +ry;\n\t  if (a != null) {\n\t    var rad = Math.PI / 180,\n\t        x1 = x + rx * Math.cos(-ry * rad),\n\t        x2 = x + rx * Math.cos(-a * rad),\n\t        y1 = y + rx * Math.sin(-ry * rad),\n\t        y2 = y + rx * Math.sin(-a * rad),\n\t        res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n\t  } else {\n\t    res = [\n\t        [\"M\", x, y],\n\t        [\"m\", 0, -ry],\n\t        [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n\t        [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n\t        [\"z\"]\n\t    ];\n\t  }\n\t  return res;\n\t};\n\t\n\tvar pathToAbsolute=function(pathArray) {\n\t  pathArray = parsePathString(pathArray);\n\t\n\t  if (!pathArray || !pathArray.length) {\n\t    return [[\"M\", 0, 0]];\n\t  }\n\t  var res = [],\n\t      x = 0,\n\t      y = 0,\n\t      mx = 0,\n\t      my = 0,\n\t      start = 0,\n\t      pa0;\n\t  if (pathArray[0][0] == \"M\") {\n\t    x = +pathArray[0][1];\n\t    y = +pathArray[0][2];\n\t    mx = x;\n\t    my = y;\n\t    start++;\n\t    res[0] = [\"M\", x, y];\n\t  }\n\t  var crz = pathArray.length == 3 &&\n\t      pathArray[0][0] == \"M\" &&\n\t      pathArray[1][0].toUpperCase() == \"R\" &&\n\t      pathArray[2][0].toUpperCase() == \"Z\";\n\t  for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n\t    res.push(r = []);\n\t    pa = pathArray[i];\n\t    pa0 = pa[0];\n\t    if (pa0 != pa0.toUpperCase()) {\n\t      r[0] = pa0.toUpperCase();\n\t      switch (r[0]) {\n\t        case \"A\":\n\t          r[1] = pa[1];\n\t          r[2] = pa[2];\n\t          r[3] = pa[3];\n\t          r[4] = pa[4];\n\t          r[5] = pa[5];\n\t          r[6] = +pa[6] + x;\n\t          r[7] = +pa[7] + y;\n\t          break;\n\t        case \"V\":\n\t          r[1] = +pa[1] + y;\n\t          break;\n\t        case \"H\":\n\t          r[1] = +pa[1] + x;\n\t          break;\n\t        case \"R\":\n\t          var dots = [x, y].concat(pa.slice(1));\n\t          for (var j = 2, jj = dots.length; j < jj; j++) {\n\t            dots[j] = +dots[j] + x;\n\t            dots[++j] = +dots[j] + y;\n\t          }\n\t          res.pop();\n\t          res = res.concat(catmullRom2bezier(dots, crz));\n\t          break;\n\t        case \"O\":\n\t          res.pop();\n\t          dots = ellipsePath(x, y, pa[1], pa[2]);\n\t          dots.push(dots[0]);\n\t          res = res.concat(dots);\n\t          break;\n\t        case \"U\":\n\t          res.pop();\n\t          res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n\t          r = [\"U\"].concat(res[res.length - 1].slice(-2));\n\t          break;\n\t        case \"M\":\n\t          mx = +pa[1] + x;\n\t          my = +pa[2] + y;\n\t        default:\n\t          for (j = 1, jj = pa.length; j < jj; j++) {\n\t            r[j] = +pa[j] + ((j % 2) ? x : y);\n\t          }\n\t      }\n\t    } else if (pa0 == \"R\") {\n\t      dots = [x, y].concat(pa.slice(1));\n\t      res.pop();\n\t      res = res.concat(catmullRom2bezier(dots, crz));\n\t      r = [\"R\"].concat(pa.slice(-2));\n\t    } else if (pa0 == \"O\") {\n\t      res.pop();\n\t      dots = ellipsePath(x, y, pa[1], pa[2]);\n\t      dots.push(dots[0]);\n\t      res = res.concat(dots);\n\t    } else if (pa0 == \"U\") {\n\t      res.pop();\n\t      res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n\t      r = [\"U\"].concat(res[res.length - 1].slice(-2));\n\t    } else {\n\t      for (var k = 0, kk = pa.length; k < kk; k++) {\n\t        r[k] = pa[k];\n\t      }\n\t    }\n\t    pa0 = pa0.toUpperCase();\n\t    if (pa0 != \"O\") {\n\t      switch (r[0]) {\n\t        case \"Z\":\n\t          x = +mx;\n\t          y = +my;\n\t          break;\n\t        case \"H\":\n\t          x = r[1];\n\t          break;\n\t        case \"V\":\n\t          y = r[1];\n\t          break;\n\t        case \"M\":\n\t          mx = r[r.length - 2];\n\t          my = r[r.length - 1];\n\t        default:\n\t          x = r[r.length - 2];\n\t          y = r[r.length - 1];\n\t      }\n\t    }\n\t  }\n\t\n\t  return res;\n\t};\n\t\n\tvar l2c = function(x1, y1, x2, y2) {\n\t  return [x1, y1, x2, y2, x2, y2];\n\t};\n\tvar q2c = function(x1, y1, ax, ay, x2, y2) {\n\t  var _13 = 1 / 3,\n\t      _23 = 2 / 3;\n\t  return [\n\t          _13 * x1 + _23 * ax,\n\t          _13 * y1 + _23 * ay,\n\t          _13 * x2 + _23 * ax,\n\t          _13 * y2 + _23 * ay,\n\t          x2,\n\t          y2\n\t      ];\n\t};\n\tvar a2c = function(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n\t  // for more information of where this math came from visit:\n\t  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n\t  var _120 = Math.PI * 120 / 180,\n\t      rad = Math.PI / 180 * (+angle || 0),\n\t      res = [],\n\t      xy,\n\t      rotate = function (x, y, rad) {\n\t          var X = x * Math.cos(rad) - y * Math.sin(rad),\n\t              Y = x * Math.sin(rad) + y * Math.cos(rad);\n\t          return {x: X, y: Y};\n\t      };\n\t  if (!recursive) {\n\t    xy = rotate(x1, y1, -rad);\n\t    x1 = xy.x;\n\t    y1 = xy.y;\n\t    xy = rotate(x2, y2, -rad);\n\t    x2 = xy.x;\n\t    y2 = xy.y;\n\t    var cos = Math.cos(Math.PI / 180 * angle),\n\t        sin = Math.sin(Math.PI / 180 * angle),\n\t        x = (x1 - x2) / 2,\n\t        y = (y1 - y2) / 2;\n\t    var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n\t    if (h > 1) {\n\t      h = Math.sqrt(h);\n\t      rx = h * rx;\n\t      ry = h * ry;\n\t    }\n\t    var rx2 = rx * rx,\n\t        ry2 = ry * ry,\n\t        k = (large_arc_flag == sweep_flag ? -1 : 1) *\n\t            Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n\t        cx = k * rx * y / ry + (x1 + x2) / 2,\n\t        cy = k * -ry * x / rx + (y1 + y2) / 2,\n\t        f1 = Math.asin(((y1 - cy) / ry).toFixed(9)),\n\t        f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\n\t\n\t    f1 = x1 < cx ? Math.PI - f1 : f1;\n\t    f2 = x2 < cx ? Math.PI - f2 : f2;\n\t    f1 < 0 && (f1 = Math.PI * 2 + f1);\n\t    f2 < 0 && (f2 = Math.PI * 2 + f2);\n\t    if (sweep_flag && f1 > f2) {\n\t      f1 = f1 - Math.PI * 2;\n\t    }\n\t    if (!sweep_flag && f2 > f1) {\n\t      f2 = f2 - Math.PI * 2;\n\t    }\n\t  } else {\n\t    f1 = recursive[0];\n\t    f2 = recursive[1];\n\t    cx = recursive[2];\n\t    cy = recursive[3];\n\t  }\n\t  var df = f2 - f1;\n\t  if (Math.abs(df) > _120) {\n\t    var f2old = f2,\n\t        x2old = x2,\n\t        y2old = y2;\n\t    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n\t    x2 = cx + rx * Math.cos(f2);\n\t    y2 = cy + ry * Math.sin(f2);\n\t    res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n\t  }\n\t  df = f2 - f1;\n\t  var c1 = Math.cos(f1),\n\t      s1 = Math.sin(f1),\n\t      c2 = Math.cos(f2),\n\t      s2 = Math.sin(f2),\n\t      t = Math.tan(df / 4),\n\t      hx = 4 / 3 * rx * t,\n\t      hy = 4 / 3 * ry * t,\n\t      m1 = [x1, y1],\n\t      m2 = [x1 + hx * s1, y1 - hy * c1],\n\t      m3 = [x2 + hx * s2, y2 - hy * c2],\n\t      m4 = [x2, y2];\n\t  m2[0] = 2 * m1[0] - m2[0];\n\t  m2[1] = 2 * m1[1] - m2[1];\n\t  if (recursive) {\n\t    return [m2, m3, m4].concat(res);\n\t  } else {\n\t    res = [m2, m3, m4].concat(res).join().split(\",\");\n\t    var newres = [];\n\t    for (var i = 0, ii = res.length; i < ii; i++) {\n\t      newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n\t    }\n\t    return newres;\n\t  }\n\t};\n\t\n\tvar path2curve=function(path, path2) {\n\t  var p = pathToAbsolute(path),\n\t      p2 = path2 && pathToAbsolute(path2),\n\t      attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n\t      attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n\t      processPath = function (path, d, pcom) {\n\t        var nx, ny;\n\t        if (!path) {\n\t          return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n\t        }\n\t        !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n\t        switch (path[0]) {\n\t          case \"M\":\n\t            d.X = path[1];\n\t            d.Y = path[2];\n\t            break;\n\t          case \"A\":\n\t            path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n\t            break;\n\t          case \"S\":\n\t            if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n\t              nx = d.x * 2 - d.bx;          // And reflect the previous\n\t              ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n\t            }\n\t            else {                            // or some else or nothing\n\t              nx = d.x;\n\t              ny = d.y;\n\t            }\n\t            path = [\"C\", nx, ny].concat(path.slice(1));\n\t            break;\n\t          case \"T\":\n\t            if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n\t              d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n\t              d.qy = d.y * 2 - d.qy;        // to case \"S\".\n\t            }\n\t            else {                            // or something else or nothing\n\t              d.qx = d.x;\n\t              d.qy = d.y;\n\t            }\n\t            path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n\t            break;\n\t          case \"Q\":\n\t            d.qx = path[1];\n\t            d.qy = path[2];\n\t            path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n\t            break;\n\t          case \"L\":\n\t            path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n\t            break;\n\t          case \"H\":\n\t            path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n\t            break;\n\t          case \"V\":\n\t            path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n\t            break;\n\t          case \"Z\":\n\t            path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n\t            break;\n\t        }\n\t        return path;\n\t      },\n\t      fixArc = function (pp, i) {\n\t        if (pp[i].length > 7) {\n\t          pp[i].shift();\n\t          var pi = pp[i];\n\t          while (pi.length) {\n\t            pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n\t            p2 && (pcoms2[i] = \"A\"); // the same as above\n\t            pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n\t          }\n\t          pp.splice(i, 1);\n\t          ii = Math.max(p.length, p2 && p2.length || 0);\n\t        }\n\t      },\n\t      fixM = function (path1, path2, a1, a2, i) {\n\t        if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n\t          path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n\t          a1.bx = 0;\n\t          a1.by = 0;\n\t          a1.x = path1[i][1];\n\t          a1.y = path1[i][2];\n\t          ii = Math.max(p.length, p2 && p2.length || 0);\n\t        }\n\t      },\n\t      pcoms1 = [], // path commands of original path p\n\t      pcoms2 = [], // path commands of original path p2\n\t      pfirst = \"\", // temporary holder for original path command\n\t      pcom = \"\"; // holder for previous path command of original path\n\t  for (var i = 0, ii = Math.max(p.length, p2 && p2.length || 0); i < ii; i++) {\n\t    p[i] && (pfirst = p[i][0]); // save current path command\n\t\n\t    if (pfirst != \"C\") { // C is not saved yet, because it may be result of conversion\n\t      pcoms1[i] = pfirst; // Save current path command\n\t      i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n\t    }\n\t    p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\t\n\t    if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n\t    // which may produce multiple C:s\n\t    // so we have to make sure that C is also C in original path\n\t\n\t    fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\t\n\t    if (p2) { // the same procedures is done to p2\n\t      p2[i] && (pfirst = p2[i][0]);\n\t      if (pfirst != \"C\") {\n\t        pcoms2[i] = pfirst;\n\t        i && (pcom = pcoms2[i - 1]);\n\t      }\n\t      p2[i] = processPath(p2[i], attrs2, pcom);\n\t\n\t      if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n\t        pcoms2[i] = \"C\";\n\t      }\n\t\n\t      fixArc(p2, i);\n\t    }\n\t    fixM(p, p2, attrs, attrs2, i);\n\t    fixM(p2, p, attrs2, attrs, i);\n\t    var seg = p[i],\n\t        seg2 = p2 && p2[i],\n\t        seglen = seg.length,\n\t        seg2len = p2 && seg2.length;\n\t    attrs.x = seg[seglen - 2];\n\t    attrs.y = seg[seglen - 1];\n\t    attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;\n\t    attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;\n\t    attrs2.bx = p2 && (parseFloat(seg2[seg2len - 4]) || attrs2.x);\n\t    attrs2.by = p2 && (parseFloat(seg2[seg2len - 3]) || attrs2.y);\n\t    attrs2.x = p2 && seg2[seg2len - 2];\n\t    attrs2.y = p2 && seg2[seg2len - 1];\n\t  }\n\t\n\t  return p2 ? [p, p2] : p;\n\t};\n\t\n\tvar box=function(x, y, width, height) {\n\t  if (x == null) {\n\t    x = y = width = height = 0;\n\t  }\n\t  if (y == null) {\n\t    y = x.y;\n\t    width = x.width;\n\t    height = x.height;\n\t    x = x.x;\n\t  }\n\t  return {\n\t    x: x,\n\t    y: y,\n\t    w: width,\n\t    h: height,\n\t    cx: x + width / 2,\n\t    cy: y + height / 2\n\t  };\n\t};\n\t\n\t// Returns bounding box of cubic bezier curve.\n\t// Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n\t// Original version: NISHIO Hirokazu\n\t// Modifications: https://github.com/timo22345\n\tvar curveDim=function(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var tvalues = [],\n\t      bounds = [[], []],\n\t      a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\t  for (var i = 0; i < 2; ++i) {\n\t    if (i == 0) {\n\t      b = 6 * x0 - 12 * x1 + 6 * x2;\n\t      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n\t      c = 3 * x1 - 3 * x0;\n\t    } else {\n\t      b = 6 * y0 - 12 * y1 + 6 * y2;\n\t      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n\t      c = 3 * y1 - 3 * y0;\n\t    }\n\t    if (Math.abs(a) < 1e-12) {\n\t      if (Math.abs(b) < 1e-12) {\n\t        continue;\n\t      }\n\t      t = -c / b;\n\t      if (0 < t && t < 1) {\n\t        tvalues.push(t);\n\t      }\n\t      continue;\n\t    }\n\t    b2ac = b * b - 4 * c * a;\n\t    sqrtb2ac = Math.sqrt(b2ac);\n\t    if (b2ac < 0) {\n\t      continue;\n\t    }\n\t    t1 = (-b + sqrtb2ac) / (2 * a);\n\t    if (0 < t1 && t1 < 1) {\n\t      tvalues.push(t1);\n\t    }\n\t    t2 = (-b - sqrtb2ac) / (2 * a);\n\t    if (0 < t2 && t2 < 1) {\n\t      tvalues.push(t2);\n\t    }\n\t  }\n\t\n\t  var x, y, j = tvalues.length,\n\t      jlen = j,\n\t      mt;\n\t  while (j--) {\n\t    t = tvalues[j];\n\t    mt = 1 - t;\n\t    bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n\t    bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n\t  }\n\t\n\t  bounds[0][jlen] = x0;\n\t  bounds[1][jlen] = y0;\n\t  bounds[0][jlen + 1] = x3;\n\t  bounds[1][jlen + 1] = y3;\n\t  bounds[0].length = bounds[1].length = jlen + 2;\n\t\n\t  return {\n\t    min: {x: Math.min.apply(0, bounds[0]), y: Math.min.apply(0, bounds[1])},\n\t    max: {x: Math.max.apply(0, bounds[0]), y: Math.max.apply(0, bounds[1])}\n\t  };\n\t};\n\t\n\tvar curvePathBBox=function(path) {\n\t  var x = 0,\n\t      y = 0,\n\t      X = [],\n\t      Y = [],\n\t      p;\n\t  for (var i = 0, ii = path.length; i < ii; i++) {\n\t    p = path[i];\n\t    if (p[0] == \"M\") {\n\t      x = p[1];\n\t      y = p[2];\n\t      X.push(x);\n\t      Y.push(y);\n\t    } else {\n\t      var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n\t      X = X.concat(dim.min.x, dim.max.x);\n\t      Y = Y.concat(dim.min.y, dim.max.y);\n\t      x = p[5];\n\t      y = p[6];\n\t    }\n\t  }\n\t  var xmin = Math.min.apply(0, X),\n\t      ymin = Math.min.apply(0, Y),\n\t      xmax = Math.max.apply(0, X),\n\t      ymax = Math.max.apply(0, Y),\n\t      bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n\t\n\t  return bb;\n\t};\n\t\n\tvar p2s=/,?([a-z]),?/gi;\n\tvar path2string=function(path) {\n\t  return path.join(',').replace(p2s, \"$1\");\n\t};\n\t\n\t/*\n\t * Styles\n\t */\n\t\n\tvar hsrg = {hs: 1, rg: 1},\n\t    has = \"hasOwnProperty\",\n\t    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n\t    commaSpaces = new RegExp(\"[\" + spaces + \"]*,[\" + spaces + \"]*\");\n\t\n\t// Converts RGB values to a hex representation of the color\n\t// var rgb = function (r, g, b, o) {\n\t//   if (isFinite(o)) {\n\t//     var round = math.round;\n\t//     return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n\t//   }\n\t//   return \"#\" + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1);\n\t// };\n\tvar rgbToString = function (rgb) {\n\t  var round = Math.round;\n\t  return \"rgba(\" + [round(rgb.r), round(rgb.g), round(rgb.b), +rgb.opacity.toFixed(2)] + \")\";\n\t};\n\tvar toHex = function (color) {\n\t  var i = window.document.getElementsByTagName(\"head\")[0] || window.document.getElementsByTagName(\"svg\")[0],\n\t      red = \"rgb(255, 0, 0)\";\n\t  toHex = function (color) {\n\t    if (color.toLowerCase() == \"red\") {\n\t      return red;\n\t    }\n\t    i.style.color = red;\n\t    i.style.color = color;\n\t    var out = window.document.defaultView.getComputedStyle(i, \"\").getPropertyValue(\"color\");\n\t    return out == red ? null : out;\n\t  };\n\t  return toHex(color);\n\t};\n\t\n\tvar packageRGB = function (r, g, b, o) {\n\t  r = Math.round(r * 255);\n\t  g = Math.round(g * 255);\n\t  b = Math.round(b * 255);\n\t  var rgb = {\n\t      r: r,\n\t      g: g,\n\t      b: b,\n\t      opacity: isFinite(o) ? o : 1\n\t  };\n\t  return rgb;\n\t};\n\t\n\t// Converts HSB values to an RGB object\n\tvar hsb2rgb = function (h, s, v, o) {\n\t  if (typeof h === typeof {} && \"h\" in h && \"s\" in h && \"b\" in h) {\n\t      v = h.b;\n\t      s = h.s;\n\t      h = h.h;\n\t      o = h.o;\n\t  }\n\t  h *= 360;\n\t  var R, G, B, X, C;\n\t  h = (h % 360) / 60;\n\t  C = v * s;\n\t  X = C * (1 - Math.abs(h % 2 - 1));\n\t  R = G = B = v - C;\n\t\n\t  h = ~~h;\n\t  R += [C, X, 0, 0, X, C][h];\n\t  G += [X, C, C, X, 0, 0][h];\n\t  B += [0, 0, X, C, C, X][h];\n\t  return packageRGB(R, G, B, o);\n\t};\n\t\n\t// Converts HSL values to an RGB object\n\tvar hsl2rgb = function (h, s, l, o) {\n\t  if (typeof h === typeof {} && \"h\" in h && \"s\" in h && \"l\" in h) {\n\t    l = h.l;\n\t    s = h.s;\n\t    h = h.h;\n\t  }\n\t  if (h > 1 || s > 1 || l > 1) {\n\t    h /= 360;\n\t    s /= 100;\n\t    l /= 100;\n\t  }\n\t  h *= 360;\n\t  var R, G, B, X, C;\n\t  h = (h % 360) / 60;\n\t  C = 2 * s * (l < .5 ? l : 1 - l);\n\t  X = C * (1 - Math.abs(h % 2 - 1));\n\t  R = G = B = l - C / 2;\n\t\n\t  h = ~~h;\n\t  R += [C, X, 0, 0, X, C][h];\n\t  G += [X, C, C, X, 0, 0][h];\n\t  B += [0, 0, X, C, C, X][h];\n\t  return packageRGB(R, G, B, o);\n\t};\n\t\n\t// Parses color string as RGB object\n\tvar getRGB = function (colour) {\n\t  if (!colour || !!((colour = String(colour)).indexOf(\"-\") + 1)) {\n\t    return {r: -1, g: -1, b: -1, opacity: -1, error: 1};\n\t  }\n\t  if (colour == \"none\") {\n\t    return {r: -1, g: -1, b: -1, opacity: -1};\n\t  }\n\t  !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n\t  if (!colour) {\n\t    return {r: -1, g: -1, b: -1, opacity: -1, error: 1};\n\t  }\n\t  var res,\n\t      red,\n\t      green,\n\t      blue,\n\t      opacity,\n\t      t,\n\t      values,\n\t      rgb = colour.match(colourRegExp);\n\t  if (rgb) {\n\t    if (rgb[2]) {\n\t      blue = parseInt(rgb[2].substring(5), 16);\n\t      green = parseInt(rgb[2].substring(3, 5), 16);\n\t      red = parseInt(rgb[2].substring(1, 3), 16);\n\t    }\n\t    if (rgb[3]) {\n\t      blue = parseInt((t = rgb[3].charAt(3)) + t, 16);\n\t      green = parseInt((t = rgb[3].charAt(2)) + t, 16);\n\t      red = parseInt((t = rgb[3].charAt(1)) + t, 16);\n\t    }\n\t    if (rgb[4]) {\n\t      values = rgb[4].split(commaSpaces);\n\t      red = parseFloat(values[0]);\n\t      values[0].slice(-1) == \"%\" && (red *= 2.55);\n\t      green = parseFloat(values[1]);\n\t      values[1].slice(-1) == \"%\" && (green *= 2.55);\n\t      blue = parseFloat(values[2]);\n\t      values[2].slice(-1) == \"%\" && (blue *= 2.55);\n\t      rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = parseFloat(values[3]));\n\t      values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t    }\n\t    if (rgb[5]) {\n\t      values = rgb[5].split(commaSpaces);\n\t      red = parseFloat(values[0]);\n\t      values[0].slice(-1) == \"%\" && (red /= 100);\n\t      green = parseFloat(values[1]);\n\t      values[1].slice(-1) == \"%\" && (green /= 100);\n\t      blue = parseFloat(values[2]);\n\t      values[2].slice(-1) == \"%\" && (blue /= 100);\n\t      (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n\t      rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = parseFloat(values[3]));\n\t      values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t      return hsb2rgb(red, green, blue, opacity);\n\t    }\n\t    if (rgb[6]) {\n\t      values = rgb[6].split(commaSpaces);\n\t      red = parseFloat(values[0]);\n\t      values[0].slice(-1) == \"%\" && (red /= 100);\n\t      green = parseFloat(values[1]);\n\t      values[1].slice(-1) == \"%\" && (green /= 100);\n\t      blue = parseFloat(values[2]);\n\t      values[2].slice(-1) == \"%\" && (blue /= 100);\n\t      (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n\t      rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = parseFloat(values[3]));\n\t      values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t      return hsl2rgb(red, green, blue, opacity);\n\t    }\n\t    red = Math.min(Math.round(red), 255);\n\t    green = Math.min(Math.round(green), 255);\n\t    blue = Math.min(Math.round(blue), 255);\n\t    opacity = Math.min(Math.max(opacity, 0), 1);\n\t    rgb = {r: red, g: green, b: blue};\n\t    rgb.opacity = isFinite(opacity) ? opacity : 1;\n\t    return rgb;\n\t  }\n\t  return {r: -1, g: -1, b: -1, opacity: -1, error: 1};\n\t};\n\t\n\tfunction SVGMorpheus(element, options, callback) {\n\t  if (!element) {\n\t    throw new Error('SVGMorpheus > \"element\" is required');\n\t  }\n\t\n\t  if(typeof element === typeof '') {\n\t    element=document.querySelector(element);\n\t    if (!element) {\n\t      throw new Error('SVGMorpheus > \"element\" query is not related to an existing DOM node');\n\t    }\n\t  }\n\t\n\t  if (!!options && typeof options !== typeof {}) {\n\t    throw new Error('SVGMorpheus > \"options\" parameter must be an object');\n\t  }\n\t  options = options || {};\n\t\n\t  if (!!callback && typeof callback !== typeof (function(){})) {\n\t    throw new Error('SVGMorpheus > \"callback\" parameter must be a function');\n\t  }\n\t\n\t  var that=this;\n\t\n\t  this._icons={};\n\t  this._curIconId=options.iconId || '';\n\t  this._toIconId='';\n\t  this._curIconItems=[];\n\t  this._fromIconItems=[];\n\t  this._toIconItems=[];\n\t  this._morphNodes=[];\n\t  this._morphG;\n\t  this._startTime;\n\t  this._defDuration=options.duration || 750;\n\t  this._defEasing=options.easing || 'quad-in-out';\n\t  this._defRotation=options.rotation || 'clock';\n\t  this._defCallback = callback || function () {};\n\t  this._duration=this._defDuration;\n\t  this._easing=this._defEasing;\n\t  this._rotation=this._defRotation;\n\t  this._callback=this._defCallback;\n\t  this._rafid;\n\t\n\t  this._fnTick=function(timePassed) {\n\t    if(!that._startTime) {\n\t      that._startTime=timePassed;\n\t    }\n\t    var progress=Math.min((timePassed-that._startTime)/that._duration,1);\n\t    that._updateAnimationProgress(progress);\n\t    if(progress<1) {\n\t      that._rafid=_reqAnimFrame(that._fnTick);\n\t    } else {\n\t      if (that._toIconId != '') {\n\t        that._animationEnd();\n\t      }\n\t    }\n\t  };\n\t\n\t  if(element.nodeName.toUpperCase()==='SVG') {\n\t    this._svgDoc=element;\n\t  } else {\n\t    this._svgDoc = element.getSVGDocument();\n\t  }\n\t  if(!this._svgDoc) {\n\t    element.addEventListener(\"load\",function(){\n\t      that._svgDoc = element.getSVGDocument();\n\t      that._init();\n\t    },false);\n\t  } else {\n\t    that._init();\n\t  }\n\t}\n\t\n\tSVGMorpheus.prototype._init=function(){\n\t  if(this._svgDoc.nodeName.toUpperCase()!=='SVG') {\n\t    this._svgDoc=this._svgDoc.getElementsByTagName('svg')[0];\n\t  }\n\t\n\t  if(!!this._svgDoc) {\n\t    var lastIconId='',\n\t        i, len, id, items, item, j, len2, icon;\n\t\n\t    // Read Icons Data\n\t    // Icons = 1st tier G nodes having ID\n\t    for(i=this._svgDoc.childNodes.length-1;i>=0;i--) {\n\t      var nodeIcon=this._svgDoc.childNodes[i];\n\t      if(nodeIcon.nodeName.toUpperCase()==='G') {\n\t        id=nodeIcon.getAttribute('id');\n\t        if(!!id) {\n\t          items=[];\n\t          for(j=0, len2=nodeIcon.childNodes.length;j<len2;j++) {\n\t            var nodeItem=nodeIcon.childNodes[j];\n\t            item={\n\t              path: '',\n\t              attrs: {},\n\t              style: {}\n\t            };\n\t\n\t            // Get Item Path (Convert all shapes into Path Data)\n\t            switch(nodeItem.nodeName.toUpperCase()) {\n\t              case 'PATH':\n\t                item.path=nodeItem.getAttribute('d');\n\t                break;\n\t              case 'CIRCLE':\n\t                var cx=nodeItem.getAttribute('cx')*1,\n\t                    cy=nodeItem.getAttribute('cy')*1,\n\t                    r=nodeItem.getAttribute('r')*1;\n\t                item.path='M'+(cx-r)+','+cy+'a'+r+','+r+' 0 1,0 '+(r*2)+',0a'+r+','+r+' 0 1,0 -'+(r*2)+',0z';\n\t                break;\n\t              case 'ELLIPSE':\n\t                var cx=nodeItem.getAttribute('cx')*1,\n\t                    cy=nodeItem.getAttribute('cy')*1,\n\t                    rx=nodeItem.getAttribute('rx')*1,\n\t                    ry=nodeItem.getAttribute('ry')*1;\n\t                item.path='M'+(cx-rx)+','+cy+'a'+rx+','+ry+' 0 1,0 '+(rx*2)+',0a'+rx+','+ry+' 0 1,0 -'+(rx*2)+',0z';\n\t                break;\n\t              case 'RECT':\n\t                var x=nodeItem.getAttribute('x')*1,\n\t                    y=nodeItem.getAttribute('y')*1,\n\t                    w=nodeItem.getAttribute('width')*1,\n\t                    h=nodeItem.getAttribute('height')*1,\n\t                    rx=nodeItem.getAttribute('rx')*1,\n\t                    ry=nodeItem.getAttribute('ry')*1;\n\t                if(!rx && !ry) {\n\t                  item.path='M'+x+','+y+'l'+w+',0l0,'+h+'l-'+w+',0z';\n\t                } else {\n\t                  item.path='M'+(x+rx)+','+y+\n\t                            'l'+(w-rx*2)+',0'+\n\t                            'a'+rx+','+ry+' 0 0,1 '+rx+','+ry+\n\t                            'l0,'+(h-ry*2)+\n\t                            'a'+rx+','+ry+' 0 0,1 -'+rx+','+ry+\n\t                            'l'+(rx*2-w)+',0'+\n\t                            'a'+rx+','+ry+' 0 0,1 -'+rx+',-'+ry+\n\t                            'l0,'+(ry*2-h)+\n\t                            'a'+rx+','+ry+' 0 0,1 '+rx+',-'+ry+\n\t                            'z';\n\t                }\n\t                break;\n\t              case 'POLYGON':\n\t                var points=nodeItem.getAttribute('points');\n\t                var p = points.split(/\\s+/);\n\t                var path = \"\";\n\t                for( var k = 0, len = p.length; k < len; k++ ){\n\t                    path += (k && \"L\" || \"M\") + p[k]\n\t                }\n\t                item.path=path+'z';\n\t                break;\n\t              case 'LINE':\n\t                var x1=nodeItem.getAttribute('x1')*1,\n\t                    y1=nodeItem.getAttribute('y1')*1,\n\t                    x2=nodeItem.getAttribute('x2')*1,\n\t                    y2=nodeItem.getAttribute('y2')*1;\n\t                item.path='M'+x1+','+y1+'L'+x2+','+y2+'z';\n\t                break;\n\t            }\n\t            if(item.path!='') {\n\t              // Traverse all attributes and get style values\n\t              for (var k = 0, len3=nodeItem.attributes.length; k < len3; k++) {\n\t                var attrib = nodeItem.attributes[k];\n\t                if (attrib.specified) {\n\t                  var name=attrib.name.toLowerCase();\n\t                  switch (name) {\n\t                    case 'fill':\n\t                    case 'fill-opacity':\n\t                    case 'opacity':\n\t                    case 'stroke':\n\t                    case 'stroke-opacity':\n\t                    case 'stroke-width':\n\t                      item.attrs[name]=attrib.value;\n\t                  }\n\t                }\n\t              }\n\t\n\t              // Traverse all inline styles and get supported values\n\t              for (var l = 0, len4=nodeItem.style.length; l < len4; l++) {\n\t                var styleName = nodeItem.style[l];\n\t                switch (styleName) {\n\t                  case 'fill':\n\t                  case 'fill-opacity':\n\t                  case 'opacity':\n\t                  case 'stroke':\n\t                  case 'stroke-opacity':\n\t                  case 'stroke-width':\n\t                    item.style[styleName]=nodeItem.style[styleName];\n\t                }\n\t              }\n\t\n\t              items.push(item);\n\t            }\n\t          }\n\t\n\t          // Add Icon\n\t          if(items.length>0) {\n\t            icon={\n\t              id: id,\n\t              items: items\n\t            };\n\t            this._icons[id]=icon;\n\t          }\n\t\n\t          // Init Node for Icons Items and remove Icon Nodes\n\t          if(!this._morphG) {\n\t            lastIconId=id;\n\t            this._morphG=document.createElementNS('http://www.w3.org/2000/svg', 'g');\n\t            this._svgDoc.replaceChild(this._morphG,nodeIcon);\n\t          } else {\n\t            this._svgDoc.removeChild(nodeIcon);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    // To Default Icon\n\t    var defaultIcon = this._curIconId || lastIconId;\n\t    if(defaultIcon!=='') {\n\t      this._setupAnimation(defaultIcon);\n\t      this._updateAnimationProgress(1);\n\t      this._animationEnd();\n\t    }\n\t  }\n\t\n\t};\n\t\n\tSVGMorpheus.prototype._setupAnimation=function(toIconId) {\n\t  if(!!toIconId && !!this._icons[toIconId]) {\n\t    this._toIconId=toIconId;\n\t    this._startTime=undefined;\n\t    var i, len, j, len2;\n\t    this._fromIconItems=clone(this._curIconItems);\n\t    this._toIconItems=clone(this._icons[toIconId].items);\n\t\n\t    for(i=0, len=this._morphNodes.length;i<len;i++) {\n\t      var morphNode=this._morphNodes[i];\n\t      morphNode.fromIconItemIdx=i;\n\t      morphNode.toIconItemIdx=i;\n\t    }\n\t\n\t    var maxNum=Math.max(this._fromIconItems.length, this._toIconItems.length);\n\t    var toBB;\n\t    for(i=0;i<maxNum;i++) {\n\t      // Add items to fromIcon/toIcon if needed\n\t      if(!this._fromIconItems[i]) {\n\t        if(!!this._toIconItems[i]) {\n\t          toBB=curvePathBBox(path2curve(this._toIconItems[i].path));\n\t          this._fromIconItems.push({\n\t            path: 'M'+toBB.cx+','+toBB.cy+'l0,0',\n\t            attrs: {},\n\t            style: {},\n\t            trans: {\n\t              'rotate': [0,toBB.cx,toBB.cy]\n\t            }\n\t          });\n\t        } else {\n\t          this._fromIconItems.push({\n\t            path: 'M0,0l0,0',\n\t            attrs: {},\n\t            style: {},\n\t            trans: {\n\t              'rotate': [0,0,0]\n\t            }\n\t          });\n\t        }\n\t      }\n\t      if(!this._toIconItems[i]) {\n\t        if(!!this._fromIconItems[i]) {\n\t          toBB=curvePathBBox(path2curve(this._fromIconItems[i].path));\n\t          this._toIconItems.push({\n\t            path: 'M'+toBB.cx+','+toBB.cy+'l0,0',\n\t            attrs: {},\n\t            style: {},\n\t            trans: {\n\t              'rotate': [0,toBB.cx,toBB.cy]\n\t            }\n\t          });\n\t        } else {\n\t          this._toIconItems.push({\n\t            path: 'M0,0l0,0',\n\t            attrs: {},\n\t            style: {},\n\t            trans: {\n\t              'rotate': [0,0,0]\n\t            }\n\t          });\n\t        }\n\t      }\n\t\n\t      // Add Node to DOM if needed\n\t      if(!this._morphNodes[i]) {\n\t        var node=document.createElementNS('http://www.w3.org/2000/svg', 'path');\n\t        this._morphG.appendChild(node);\n\t        this._morphNodes.push({\n\t          node: node,\n\t          fromIconItemIdx: i,\n\t          toIconItemIdx: i\n\t        });\n\t      }\n\t    }\n\t\n\t    for(i=0;i<maxNum;i++) {\n\t      var fromIconItem=this._fromIconItems[i];\n\t      var toIconItem=this._toIconItems[i];\n\t\n\t      // Calculate from/to curve data and set to fromIcon/toIcon\n\t      var curves=path2curve(this._fromIconItems[i].path,this._toIconItems[i].path);\n\t      fromIconItem.curve=curves[0];\n\t      toIconItem.curve=curves[1];\n\t\n\t      // Normalize from/to attrs\n\t      var attrsNorm=styleToNorm(this._fromIconItems[i].attrs,this._toIconItems[i].attrs);\n\t      fromIconItem.attrsNorm=attrsNorm[0];\n\t      toIconItem.attrsNorm=attrsNorm[1];\n\t      fromIconItem.attrs=styleNormToString(fromIconItem.attrsNorm);\n\t      toIconItem.attrs=styleNormToString(toIconItem.attrsNorm);\n\t\n\t      // Normalize from/to style\n\t      var styleNorm=styleToNorm(this._fromIconItems[i].style,this._toIconItems[i].style);\n\t      fromIconItem.styleNorm=styleNorm[0];\n\t      toIconItem.styleNorm=styleNorm[1];\n\t      fromIconItem.style=styleNormToString(fromIconItem.styleNorm);\n\t      toIconItem.style=styleNormToString(toIconItem.styleNorm);\n\t\n\t      // Calculate from/to transform\n\t      toBB=curvePathBBox(toIconItem.curve);\n\t      toIconItem.trans={\n\t        'rotate': [0,toBB.cx,toBB.cy]\n\t      };\n\t      var rotation=this._rotation, degAdd;\n\t      if(rotation==='random') {\n\t        rotation=Math.random()<0.5?'counterclock':'clock';\n\t      }\n\t      switch(rotation) {\n\t        case 'none':\n\t          if(!!fromIconItem.trans.rotate) {\n\t            toIconItem.trans.rotate[0]=fromIconItem.trans.rotate[0];\n\t          }\n\t          break;\n\t        case 'counterclock':\n\t          if(!!fromIconItem.trans.rotate) {\n\t            toIconItem.trans.rotate[0]=fromIconItem.trans.rotate[0]-360;\n\t            degAdd=-fromIconItem.trans.rotate[0]%360;\n\t            toIconItem.trans.rotate[0]+=(degAdd<180?degAdd:degAdd-360);\n\t          } else {\n\t            toIconItem.trans.rotate[0]=-360;\n\t          }\n\t          break;\n\t        default: // Clockwise\n\t          if(!!fromIconItem.trans.rotate) {\n\t            toIconItem.trans.rotate[0]=fromIconItem.trans.rotate[0]+360;\n\t            degAdd=fromIconItem.trans.rotate[0]%360;\n\t            toIconItem.trans.rotate[0]+=(degAdd<180?-degAdd:360-degAdd);\n\t          } else {\n\t            toIconItem.trans.rotate[0]=360;\n\t          }\n\t          break;\n\t      }\n\t    }\n\t\n\t    this._curIconItems=clone(this._fromIconItems);\n\t  }\n\t};\n\t\n\tSVGMorpheus.prototype._updateAnimationProgress=function(progress) {\n\t  progress=easings[this._easing](progress);\n\t\n\t  var i, j, k, len;\n\t  // Update path/attrs/transform\n\t  for(i=0, len=this._curIconItems.length;i<len;i++) {\n\t    this._curIconItems[i].curve=curveCalc(this._fromIconItems[i].curve, this._toIconItems[i].curve, progress);\n\t    this._curIconItems[i].path=path2string(this._curIconItems[i].curve);\n\t\n\t    this._curIconItems[i].attrsNorm=styleNormCalc(this._fromIconItems[i].attrsNorm, this._toIconItems[i].attrsNorm, progress);\n\t    this._curIconItems[i].attrs=styleNormToString(this._curIconItems[i].attrsNorm);\n\t\n\t    this._curIconItems[i].styleNorm=styleNormCalc(this._fromIconItems[i].styleNorm, this._toIconItems[i].styleNorm, progress);\n\t    this._curIconItems[i].style=styleNormToString(this._curIconItems[i].styleNorm);\n\t\n\t    this._curIconItems[i].trans=transCalc(this._fromIconItems[i].trans, this._toIconItems[i].trans, progress);\n\t    this._curIconItems[i].transStr=trans2string(this._curIconItems[i].trans);\n\t  }\n\t\n\t  // Update DOM\n\t  for(i=0, len=this._morphNodes.length;i<len;i++) {\n\t    var morphNode=this._morphNodes[i];\n\t    morphNode.node.setAttribute(\"d\",this._curIconItems[i].path);\n\t    var attrs=this._curIconItems[i].attrs;\n\t    for(j in attrs) {\n\t      morphNode.node.setAttribute(j,attrs[j]);\n\t    }\n\t    var style=this._curIconItems[i].style;\n\t    for(k in style) {\n\t      morphNode.node.style[k]=style[k];\n\t    }\n\t    morphNode.node.setAttribute(\"transform\",this._curIconItems[i].transStr);\n\t  }\n\t};\n\t\n\tSVGMorpheus.prototype._animationEnd=function() {\n\t  for(var i=this._morphNodes.length-1;i>=0;i--) {\n\t    var morphNode=this._morphNodes[i];\n\t    if(!!this._icons[this._toIconId].items[i]) {\n\t      morphNode.node.setAttribute(\"d\",this._icons[this._toIconId].items[i].path);\n\t    } else {\n\t      morphNode.node.parentNode.removeChild(morphNode.node);\n\t      this._morphNodes.splice(i,1);\n\t    }\n\t  }\n\t\n\t  this._curIconId=this._toIconId;\n\t  this._toIconId='';\n\t\n\t  this._callback();\n\t};\n\t\n\t/*\n\t * Public methods\n\t */\n\t\n\t// Morph To Icon\n\tSVGMorpheus.prototype.to=function(iconId, options, callback) {\n\t  if(iconId!==this._toIconId) {\n\t    if (!!options && typeof options !== typeof {}) {\n\t      throw new Error('SVGMorpheus.to() > \"options\" parameter must be an object');\n\t    }\n\t    options = options || {};\n\t\n\t    if (!!callback && typeof callback !== typeof (function(){})) {\n\t      throw new Error('SVGMorpheus.to() > \"callback\" parameter must be a function');\n\t    }\n\t\n\t    _cancelAnimFrame(this._rafid);\n\t\n\t    this._duration=options.duration || this._defDuration;\n\t    this._easing=options.easing || this._defEasing;\n\t    this._rotation=options.rotation || this._defRotation;\n\t    this._callback=callback || this._defCallback;\n\t\n\t    this._setupAnimation(iconId);\n\t    this._rafid=_reqAnimFrame(this._fnTick);\n\t  }\n\t};\n\t\n\t// Register custom Easing function\n\tSVGMorpheus.prototype.registerEasing=function(name, fn) {\n\t  easings[name] = fn;\n\t}\n\t\n\treturn SVGMorpheus;\n\t\n\t}());\n\t\n\t/*** EXPORTS FROM exports-loader ***/\n\tmodule.exports = SVGMorpheus;\n\n/***/ },\n\n/***/ 267:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\n\tbuf.push(\"<md-input-container md-no-float class=\\\"md-icon-float md-block no-tb-margin no-errors no-borders\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\n\tbuf.push(\"<md-icon>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\n\tbuf.push(\"<ng-md-icon icon=\\\"search\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</ng-md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\n\tbuf.push(\"<input placeholder=\\\"{{title}}\\\" aria-label=\\\"{{title}}\\\" ng-model=\\\"searchText\\\">\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-input-container>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 5, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\n\tbuf.push(\"<md-divider>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-divider>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-input-container(md-no-float,class=\\\"md-icon-float md-block no-tb-margin no-errors no-borders\\\")\\n    md-icon\\n        ng-md-icon(icon=\\\"search\\\")\\n    input(placeholder=\\\"{{title}}\\\",aria-label=\\\"{{title}}\\\",  ng-model=\\\"searchText\\\")\\nmd-divider\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 268:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\n\tbuf.push(\"<ul ng-if=\\\"node.{{opts.children}}.length\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\n\tbuf.push(\"<li ng-if=\\\"node.showed\\\" ng-repeat=\\\"node in node.{{opts.children}} | filter: sideCtl.options.filterExpression | orderBy:['{{opts.orderBy}}']:true\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\n\tbuf.push(\"<div fx-side-menu-content-transclude ng-click=\\\"sideCtl.showChildren(node)\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</div>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\n\tbuf.push(\"<md-divider ng-if=\\\"node.depth===1\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-divider>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 5, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\n\tbuf.push(\"<fx-side-menu-child ng-show=\\\"sideCtl.isShowChildren(node)\\\" class=\\\"side-menu-child nga-fast nga-stagger-fast nga-slide-right\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</fx-side-menu-child>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</li>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</ul>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\n\tbuf.push(\"<md-divider ng-if=\\\"!$last &amp;&amp; node.depth&gt;1\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-divider>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"ul(ng-if=\\\"node.{{opts.children}}.length\\\")\\n    li(ng-if=\\\"node.showed\\\",ng-repeat=\\\"node in node.{{opts.children}} | filter: sideCtl.options.filterExpression | orderBy:['{{opts.orderBy}}']:true\\\")\\n        div(fx-side-menu-content-transclude,ng-click=\\\"sideCtl.showChildren(node)\\\")\\n        md-divider(ng-if=\\\"node.depth===1\\\")\\n        fx-side-menu-child.side-menu-child.nga-fast.nga-stagger-fast.nga-slide-right(ng-show=\\\"sideCtl.isShowChildren(node)\\\")\\nmd-divider(ng-if=\\\"!$last && node.depth>1\\\")\\n\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 269:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\n\tbuf.push(\"<md-button ng-if=\\\"{{btnCtl.condition}}\\\" ng-class=\\\"btnCtl.className\\\" aria-label=\\\"{{btnCtl.title}}\\\" ng-click=\\\"btnCtl.onClick($event,btnCtl.ngModel,btnCtl.index)\\\" ng-disabled=\\\"{{btnCtl.disabled}}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\n\tbuf.push(\"<md-tooltip ng-if=\\\"btnCtl.tooltip\\\" md-direction=\\\"{{btnCtl.tooltip.position}}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 2, jade_debug[0].filename ));\n\tbuf.push(\"{{btnCtl.tooltip.title || btnCtl.title}}\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-tooltip>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\n\tbuf.push(\"<md-icon ng-if=\\\"btnCtl.icon &amp;&amp; btnCtl.icon.icon\\\" md-menu-align-target ng-style=\\\"btnCtl.icon.style\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\n\tbuf.push(\"<ng-md-icon icon=\\\"{{btnCtl.icon.icon}}\\\" ng-style=\\\"btnCtl.icon.style\\\" options=\\\"{&quot;rotation&quot;:&quot;none&quot;}\\\" size=\\\"{{btnCtl.icon.size||'24px'}}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</ng-md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 5, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\n\tbuf.push(\"<span ng-if=\\\"btnCtl.showTitle\\\" layout-padding>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 5, jade_debug[0].filename ));\n\tbuf.push(\"{{btnCtl.title}} \");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</span>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\n\tbuf.push(\"<span ng-hide=\\\"true\\\" ng-bind=\\\"{{btnCtl.disabled}}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</span>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 7, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\n\tbuf.push(\"<md-icon ng-if=\\\"btnCtl.icon &amp;&amp; btnCtl.icon.ricon\\\" md-menu-align-target ng-style=\\\"btnCtl.icon.style\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 8, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\n\tbuf.push(\"<ng-md-icon icon=\\\"{{btnCtl.icon.ricon}}\\\" ng-style=\\\"btnCtl.icon.style\\\" options=\\\"{&quot;rotation&quot;:&quot;none&quot;}\\\" size=\\\"{{btnCtl.icon.size||'24px'}}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</ng-md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-button>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-button(ng-if=\\\"{{btnCtl.condition}}\\\",ng-class=\\\"btnCtl.className\\\",aria-label=\\\"{{btnCtl.title}}\\\",ng-click=\\\"btnCtl.onClick($event,btnCtl.ngModel,btnCtl.index)\\\",ng-disabled=\\\"{{btnCtl.disabled}}\\\")\\n    md-tooltip(ng-if=\\\"btnCtl.tooltip\\\",md-direction=\\\"{{btnCtl.tooltip.position}}\\\") {{btnCtl.tooltip.title || btnCtl.title}}\\n    md-icon(ng-if=\\\"btnCtl.icon && btnCtl.icon.icon\\\",md-menu-align-target,ng-style=\\\"btnCtl.icon.style\\\")\\n        ng-md-icon(icon=\\\"{{btnCtl.icon.icon}}\\\",ng-style=\\\"btnCtl.icon.style\\\",options='{\\\"rotation\\\":\\\"none\\\"}',size=\\\"{{btnCtl.icon.size||'24px'}}\\\")\\n    span(ng-if=\\\"btnCtl.showTitle\\\",layout-padding) {{btnCtl.title}} \\n    span(ng-hide=\\\"true\\\",ng-bind=\\\"{{btnCtl.disabled}}\\\")\\n    md-icon(ng-if=\\\"btnCtl.icon && btnCtl.icon.ricon\\\",md-menu-align-target,ng-style=\\\"btnCtl.icon.style\\\")\\n        ng-md-icon(icon=\\\"{{btnCtl.icon.ricon}}\\\",ng-style=\\\"btnCtl.icon.style\\\",options='{\\\"rotation\\\":\\\"none\\\"}',size=\\\"{{btnCtl.icon.size||'24px'}}\\\")\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 270:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/icon.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/icon.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/icon.jade\" ));\n\tbuf.push(\"<md-icon ng-if=\\\"iconCtl.icon\\\" md-menu-align-target ng-style=\\\"iconCtl.icon.style\\\" ng-class=\\\"iconCtl.className\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/toolbar/tpls/icon.jade\" ));\n\tbuf.push(\"<ng-md-icon icon=\\\"{{iconCtl.icon.icon}}\\\" ng-style=\\\"iconCtl.icon.style\\\" options=\\\"{&quot;rotation&quot;:&quot;none&quot;}\\\" size=\\\"{{iconCtl.icon.size||'24px'}}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</ng-md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-icon(ng-if=\\\"iconCtl.icon\\\",md-menu-align-target,ng-style=\\\"iconCtl.icon.style\\\",ng-class=\\\"iconCtl.className\\\")\\n    ng-md-icon(icon=\\\"{{iconCtl.icon.icon}}\\\",ng-style=\\\"iconCtl.icon.style\\\",options='{\\\"rotation\\\":\\\"none\\\"}',size=\\\"{{iconCtl.icon.size||'24px'}}\\\")\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 271:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/label.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/label.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/label.jade\" ));\n\tbuf.push(\"<span ng-class=\\\"labelCtl.cls\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 1, jade_debug[0].filename ));\n\tbuf.push(\"{{labelCtl.title}}\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</span>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"span(ng-class=\\\"labelCtl.cls\\\") {{labelCtl.title}}\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 272:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/layout.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/layout.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/layout.jade\" ));\n\tbuf.push(\"<div layout=\\\"{{layoutCtl.layout}}\\\" flex=\\\"{{layoutCtl.flex}}\\\" layout-align=\\\"{{layoutCtl.layoutAlign}}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</div>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"div(layout=\\\"{{layoutCtl.layout}}\\\",flex=\\\"{{layoutCtl.flex}}\\\",layout-align=\\\"{{layoutCtl.layoutAlign}}\\\")\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 273:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-divider.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-divider.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-divider.jade\" ));\n\tbuf.push(\"<md-menu-divider>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-menu-divider>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-menu-divider\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 274:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-item.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-item.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-item.jade\" ));\n\tbuf.push(\"<md-menu-item fx-toolbar ng-if=\\\"{{menuItemCtl.condition}}\\\" ng-init=\\\"item = menuItemCtl;item.type='btn'\\\" items=\\\"item\\\" ng-model=\\\"menuItemCtl.ngModel\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-menu-item>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-menu-item(fx-toolbar,ng-if=\\\"{{menuItemCtl.condition}}\\\",ng-init=\\\"item = menuItemCtl;item.type='btn'\\\",items=\\\"item\\\",ng-model=\\\"menuItemCtl.ngModel\\\")\\n\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 275:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\n\tbuf.push(\"<md-menu md-offset=\\\"2 0\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\n\tbuf.push(\"<md-button ng-class=\\\"menuCtl.className\\\" aria-label=\\\"菜单\\\" ng-click=\\\"menuCtl.materialUtils.openMenu($mdOpenMenu,$event)\\\" ng-disabled=\\\"{{menuCtl.disabled}}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\n\tbuf.push(\"<md-tooltip ng-if=\\\"menuCtl.tooltip\\\" md-direction=\\\"{{menuCtl.tooltip.position}}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 3, jade_debug[0].filename ));\n\tbuf.push(\"{{menuCtl.tooltip.title || menuCtl.title}}\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-tooltip>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\n\tbuf.push(\"<md-icon ng-if=\\\"menuCtl.icon\\\" md-menu-origin>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 5, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\n\tbuf.push(\"<ng-md-icon icon=\\\"{{menuCtl.icon.icon}}\\\" ng-style=\\\"menuCtl.icon.style\\\" options=\\\"{&quot;rotation&quot;:&quot;none&quot;}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</ng-md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-button>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\n\tbuf.push(\"<md-menu-content width=\\\"{{menuCtl.width}}\\\" fx-toolbar items=\\\"menuCtl.items\\\" ng-model=\\\"menuCtl.ngModel\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-menu-content>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-menu>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-menu(md-offset=\\\"2 0\\\")\\n    md-button(ng-class=\\\"menuCtl.className\\\",aria-label=\\\"菜单\\\",ng-click=\\\"menuCtl.materialUtils.openMenu($mdOpenMenu,$event)\\\",ng-disabled=\\\"{{menuCtl.disabled}}\\\")\\n        md-tooltip(ng-if=\\\"menuCtl.tooltip\\\",md-direction=\\\"{{menuCtl.tooltip.position}}\\\") {{menuCtl.tooltip.title || menuCtl.title}}\\n        md-icon(ng-if=\\\"menuCtl.icon\\\",md-menu-origin)\\n            ng-md-icon(icon=\\\"{{menuCtl.icon.icon}}\\\",ng-style=\\\"menuCtl.icon.style\\\",options='{\\\"rotation\\\":\\\"none\\\"}')\\n    md-menu-content(width=\\\"{{menuCtl.width}}\\\",fx-toolbar,items=\\\"menuCtl.items\\\",ng-model=\\\"menuCtl.ngModel\\\")\\n\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 276:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menubar.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/menubar.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menubar.jade\" ));\n\tbuf.push(\"<md-menu-bar md-offset=\\\"2 0\\\" ng-class=\\\"menuBarCtl.className\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/toolbar/tpls/menubar.jade\" ));\n\tbuf.push(\"<div fx-toolbar items=\\\"menuBarCtl.items\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</div>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-menu-bar>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-menu-bar(md-offset=\\\"2 0\\\",ng-class=\\\"menuBarCtl.className\\\")\\n    div(fx-toolbar,items=\\\"menuBarCtl.items\\\")\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 277:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/content.template.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/pages/home/tpls/content.template.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/content.template.jade\" ));\n\tbuf.push(\"<md-content flex>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/pages/home/tpls/content.template.jade\" ));\n\tbuf.push(\"<span>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 2, jade_debug[0].filename ));\n\tbuf.push(\"helo\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</span>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-content>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-content(flex)\\n    span helo\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 278:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<md-content flex=\\\"100\\\" layout=\\\"row\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<md-sidenav ui-view=\\\"sidenavLeft\\\" md-is-locked-open=\\\"$mdMedia('gt-md') || $root.isOpenMenu\\\" md-component-id=\\\"left\\\" md-whiteframe=\\\"4\\\" layout=\\\"column\\\" class=\\\"md-sidenav-left\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-sidenav>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<md-content flex=\\\"100\\\" layout=\\\"column\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 7, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<md-toolbar class=\\\"md-hue-3\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 8, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<div fx-toolbar items=\\\"homeCtl.toolbars\\\" layout=\\\"row\\\" ctls=\\\"homeCtl\\\" class=\\\"md-toolbar-tools\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</div>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-toolbar>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 9, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<md-divider>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-divider>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 10, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<md-content flex ui-view=\\\"content\\\" layout=\\\"column\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-content>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-content>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 11, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<div execute-cmd real-time=\\\"true\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</div>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 12, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<div ng-if=\\\"!$mdMedia('gt-md')\\\" class=\\\"lock-size\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 13, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<md-fab-speed-dial md-direction=\\\"right\\\" ng-mouseenter=\\\"$root.isOpenFab=true\\\" ng-mouseleave=\\\"$root.isOpenFab=false\\\" md-open=\\\"$root.isOpenFab\\\" class=\\\"md-scale md-fab-bottom-left\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 14, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<md-fab-trigger>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 15, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<md-button aria-label=\\\"menu\\\" ng-click=\\\"homeCtl.materialUtils.buildToggle('left')()\\\" class=\\\"md-fab md-default\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 16, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<md-icon>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 17, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\n\tbuf.push(\"<ng-md-icon icon=\\\"menu\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</ng-md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-button>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-fab-trigger>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-fab-speed-dial>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</div>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-content>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"//- md-toolbar.md-whiteframe-glow-z1.md-hue-3()\\n    //- div.md-toolbar-tools(fx-toolbar,items=\\\"homeCtl.toolbars\\\",layout=\\\"row\\\",ctls=\\\"homeCtl\\\")\\nmd-content(flex=\\\"100\\\",layout=\\\"row\\\")\\n    md-sidenav.md-sidenav-left(ui-view=\\\"sidenavLeft\\\",md-is-locked-open=\\\"$mdMedia('gt-md') || $root.isOpenMenu\\\",md-component-id=\\\"left\\\",md-whiteframe=\\\"4\\\",layout=\\\"column\\\")\\n    //- md-sidenav.md-sidenav-right(md-component-id=\\\"right\\\",ui-view=\\\"sidenavRight\\\",layout=\\\"column\\\",md-whiteframe=\\\"4\\\")\\n    md-content(flex=\\\"100\\\",layout=\\\"column\\\")\\n        md-toolbar.md-hue-3\\n            div.md-toolbar-tools(fx-toolbar,items=\\\"homeCtl.toolbars\\\",layout=\\\"row\\\",ctls=\\\"homeCtl\\\")\\n        md-divider\\n        md-content(flex,ui-view=\\\"content\\\",layout=\\\"column\\\")\\n    div(execute-cmd,real-time=\\\"true\\\")\\n    div.lock-size(ng-if=\\\"!$mdMedia('gt-md')\\\")\\n        md-fab-speed-dial.md-scale.md-fab-bottom-left(md-direction=\\\"right\\\",ng-mouseenter=\\\"$root.isOpenFab=true\\\",ng-mouseleave=\\\"$root.isOpenFab=false\\\",md-open=\\\"$root.isOpenFab\\\")\\n            md-fab-trigger\\n                md-button.md-fab.md-default(aria-label=\\\"menu\\\",ng-click=\\\"homeCtl.materialUtils.buildToggle('left')()\\\")\\n                    md-icon\\n                        ng-md-icon(icon=\\\"menu\\\")\\n           \");\n\t}\n\t}\n\n/***/ },\n\n/***/ 279:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jade = __webpack_require__(2);\n\t\n\tmodule.exports = function template(locals) {\n\tvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ) ];\n\ttry {\n\tvar buf = [];\n\tvar jade_mixins = {};\n\tvar jade_interp;\n\t\n\tjade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tjade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<md-content flex=\\\"100\\\" layout=\\\"column\\\" ng-cloak>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<section layout=\\\"row\\\" ng-href=\\\"home.page\\\" flex class=\\\"logo\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<div fx-toolbar items=\\\"sideLeftCtl.toolbar\\\" layout=\\\"row\\\" ctls=\\\"sideLeftCtl\\\" class=\\\"md-toolbar-tools\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</div>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</section>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<md-divider>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-divider>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 5, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<fx-side-menu-search>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</fx-side-menu-search>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<md-content flex=\\\"100\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 7, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<fx-side-menu selected-nodes=\\\"sideLeftCtl.selectedNodes\\\" modules=\\\"sideLeftCtl.modules\\\" ng-click=\\\"sideLeftCtl.doLinkBind\\\" class=\\\"side-menu\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 8, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<md-button ng-click=\\\"sideCtl.doLinkPre($event,node)\\\" md-style-color=\\\"{'background-color': sideCtl.isSelected(node) ? 'primary.300': 'primary.0'}\\\" class=\\\"layout-fill\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 9, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<div flex=\\\"100\\\" layout=\\\"row\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 10, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<md-icon>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 11, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<ng-md-icon icon=\\\"{{ node.icon||'apps'}}\\\" md-style-color=\\\"{'color': sideCtl.isSelected(node) ? 'accent.300': 'primary.500'}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</ng-md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 12, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<div flex=\\\"100\\\" class=\\\"md-margin\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 12, jade_debug[0].filename ));\n\tbuf.push(\"{{node.title}}\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</div>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 13, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<md-icon>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.unshift(new jade.DebugItem( 14, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<ng-md-icon options=\\\"{&quot;rotation&quot;: &quot;none&quot;}\\\" ng-if=\\\"!sideCtl.isLeaf(node)\\\" icon=\\\"{{ sideCtl.isShowChildren(node)?'expand_more':'chevron_right' }}\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</ng-md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-icon>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</div>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-button>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</fx-side-menu>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-content>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 15, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<md-divider>\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</md-divider>\");\n\tjade_debug.shift();\n\tjade_debug.unshift(new jade.DebugItem( 16, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\n\tbuf.push(\"<div fx-toolbar items=\\\"sideLeftCtl.toolbarBottom\\\">\");\n\tjade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\n\tjade_debug.shift();\n\tbuf.push(\"</div>\");\n\tjade_debug.shift();\n\tjade_debug.shift();\n\tbuf.push(\"</md-content>\");\n\tjade_debug.shift();\n\tjade_debug.shift();;return buf.join(\"\");\n\t} catch (err) {\n\t  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-content(flex=\\\"100\\\",layout=\\\"column\\\",ng-cloak)\\n    section.logo(layout=\\\"row\\\",ng-href=\\\"home.page\\\",flex)\\n        div.md-toolbar-tools(fx-toolbar,items=\\\"sideLeftCtl.toolbar\\\",layout=\\\"row\\\",ctls=\\\"sideLeftCtl\\\")\\n    md-divider\\n    fx-side-menu-search\\n    md-content(flex=\\\"100\\\")\\n        fx-side-menu.side-menu(selected-nodes=\\\"sideLeftCtl.selectedNodes\\\",modules=\\\"sideLeftCtl.modules\\\",ng-click=\\\"sideLeftCtl.doLinkBind\\\")\\n            md-button.layout-fill(ng-click=\\\"sideCtl.doLinkPre($event,node)\\\",md-style-color=\\\"{'background-color': sideCtl.isSelected(node) ? 'primary.300': 'primary.0'}\\\")\\n                div(flex=\\\"100\\\",layout=\\\"row\\\")\\n                    md-icon\\n                        ng-md-icon(icon=\\\"{{ node.icon||'apps'}}\\\",md-style-color=\\\"{'color': sideCtl.isSelected(node) ? 'accent.300': 'primary.500'}\\\")\\n                    div.md-margin(flex=\\\"100\\\") {{node.title}}\\n                    md-icon\\n                        ng-md-icon(options='{\\\"rotation\\\": \\\"none\\\"}',ng-if=\\\"!sideCtl.isLeaf(node)\\\",icon=\\\"{{ sideCtl.isShowChildren(node)?'expand_more':'chevron_right' }}\\\")\\n    md-divider\\n    div(fx-toolbar,items=\\\"sideLeftCtl.toolbarBottom\\\")\");\n\t}\n\t}\n\n/***/ },\n\n/***/ 306:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(226);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(11)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/sass-loader/index.js!./sidemenu.scss\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/sass-loader/index.js!./sidemenu.scss\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 332:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar module_1 = __webpack_require__(12);\n\tfunction Directive() {\n\t    return {\n\t        restrict: 'EA',\n\t        require: '^fxSideMenu',\n\t        link: function ($scope, $element, $attrs, $ctrl) {\n\t            $ctrl['template']($scope, function (clone) {\n\t                $element.html('').append(clone);\n\t            });\n\t        }\n\t    };\n\t}\n\tmodule_1.module.directive('fxSideMenuChild', Directive);\n\n\n/***/ },\n\n/***/ 333:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar module_1 = __webpack_require__(12);\n\tfunction Directive() {\n\t    return {\n\t        link: function ($scope, $element, $attrs, $ctrl) {\n\t            $scope['$sideMenuTransclude']($scope, function (clone) {\n\t                $element.empty();\n\t                $element.append(clone);\n\t            });\n\t        }\n\t    };\n\t}\n\tmodule_1.module.directive('fxSideMenuContentTransclude', Directive);\n\n\n/***/ },\n\n/***/ 334:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar module_1 = __webpack_require__(12);\n\tvar _name = \"mdStyleColor\";\n\tfunction Directive(mdSideMenuSections) {\n\t    return {\n\t        restrict: 'A',\n\t        scope: {\n\t            mdStyleColor: '='\n\t        },\n\t        link: function ($scope, $element, $attrs) {\n\t            var themeColors, split, hueR, colorR, colorA, hueA, colorValue, _apply_color = function () {\n\t                for (var p in $scope[_name]) {\n\t                    if ($scope[_name].hasOwnProperty(p)) {\n\t                        themeColors = mdSideMenuSections.theme.colors,\n\t                            split = ($scope[_name][p] || '').split('.');\n\t                        if (split.length < 2) {\n\t                            split.unshift('primary');\n\t                        }\n\t                        hueR = split[1] || 'hue-1';\n\t                        colorR = split[0] || 'primary';\n\t                        colorA = themeColors[colorR] ? themeColors[colorR].name : colorR;\n\t                        hueA = themeColors[colorR] ? (themeColors[colorR].hues[hueR] || hueR) : hueR;\n\t                        colorValue = mdSideMenuSections.palettes[colorA][hueA] ? mdSideMenuSections.palettes[colorA][hueA].value : mdSideMenuSections.palettes[colorA]['500'].value;\n\t                        if (hueA !== '0') {\n\t                            $element.css(p, 'rgb(' + colorValue.join(',') + ')');\n\t                        }\n\t                        else {\n\t                            $element.css(p, 'transparent');\n\t                        }\n\t                    }\n\t                }\n\t            };\n\t            if (!mdSideMenuSections.theme || !mdSideMenuSections.palettes) {\n\t                return console.warn('you probably want to ssSideNavSectionsProvider.initWithTheme($mdThemingProvider)');\n\t            }\n\t            $scope.$watch(_name, function (oldVal, newVal) {\n\t                if ((oldVal && newVal) && oldVal !== newVal) {\n\t                    _apply_color();\n\t                }\n\t            }, true);\n\t            _apply_color();\n\t        }\n\t    };\n\t}\n\tmodule_1.module.directive(_name, [\"mdSideMenuSections\", Directive]);\n\n\n/***/ },\n\n/***/ 335:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar module_1 = __webpack_require__(12);\n\tfunction Directive(mdSideMenuSections, $timeout) {\n\t    return {\n\t        restrict: 'EA',\n\t        template: __webpack_require__(267),\n\t        controllerAs: \"searchCtl\",\n\t        link: function ($scope) {\n\t            $scope.searchText = \"\";\n\t            $scope.title = \"搜索菜单\";\n\t            $scope.$watch(\"searchText\", function (newVal, oldVal) {\n\t                $timeout.cancel($scope.timeID);\n\t                $scope.timeID = $timeout(function () {\n\t                    mdSideMenuSections.options.filterExpression = newVal;\n\t                }, 1000);\n\t            });\n\t        }\n\t    };\n\t}\n\tmodule_1.module.directive('fxSideMenuSearch', [\"mdSideMenuSections\", \"$timeout\", Directive]);\n\n\n/***/ },\n\n/***/ 336:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar module_1 = __webpack_require__(12);\n\tfunction Provider() {\n\t    var _sections = [], _theme, _palettes;\n\t    this.initWithSections = function (value) {\n\t        _sections = value ? value : [];\n\t    };\n\t    this.initWithTheme = function (value) {\n\t        _theme = value.theme();\n\t        _palettes = value._PALETTES;\n\t    };\n\t    this.$get = [function () {\n\t            var MdSideMenuSections = function () {\n\t                this.sections = _sections;\n\t                this.selectedNode = null;\n\t                this.options = {};\n\t                this.theme = _theme;\n\t                this.palettes = _palettes;\n\t                this.searchStr = \"\";\n\t            };\n\t            return new MdSideMenuSections();\n\t        }];\n\t}\n\tmodule_1.module.provider('mdSideMenuSections', [Provider]);\n\n\n/***/ },\n\n/***/ 337:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar module_1 = __webpack_require__(12);\n\tvar _ = __webpack_require__(3);\n\tfunction Factory($rootScope, $timeout, mdSideMenuSections) {\n\t    var onStateChangeStart = function (event, toState, toParams) {\n\t        var options = mdSideMenuSections.options;\n\t        function digest(sections, currentSection) {\n\t            !mdSideMenuSections.selectedNode && sections &&\n\t                _.forEach(sections, function (section) {\n\t                    if (section[mdSideMenuSections.options.children] && section[mdSideMenuSections.options.children].length) {\n\t                        digest(section[mdSideMenuSections.options.children], section);\n\t                    }\n\t                    if (section.showed && toState.name == section.link && toParams.key == section.key) {\n\t                        mdSideMenuSections.selectedNode = section;\n\t                        return false;\n\t                    }\n\t                });\n\t            return false;\n\t        }\n\t        mdSideMenuSections.selectedNode = null;\n\t        $timeout(function () {\n\t            digest(mdSideMenuSections.sections, null);\n\t        }, 10);\n\t    };\n\t    $rootScope.$on('$stateChangeSuccess', onStateChangeStart);\n\t    return {\n\t        onStateChangeStart: onStateChangeStart\n\t    };\n\t}\n\tmodule_1.module.factory('fxSideMenuFactory', [\"$rootScope\", \"$timeout\", \"mdSideMenuSections\", Factory]);\n\n\n/***/ },\n\n/***/ 338:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar module_1 = __webpack_require__(156);\n\tvar _ = __webpack_require__(3);\n\t__webpack_require__(24);\n\tvar Service = (function () {\n\t    function Service() {\n\t    }\n\t    return Service;\n\t}());\n\tService._name = \"toolbarUtils\";\n\tService.provider = [function () {\n\t        var Base = (function () {\n\t            function Base(data) {\n\t                this.data = data;\n\t            }\n\t            Base.prototype.conditionBuilder = function (condition, prefix, useDisabled) {\n\t                if (prefix === void 0) { prefix = true; }\n\t                if (useDisabled === void 0) { useDisabled = false; }\n\t                this.data = _.extend({}, this.data, {\n\t                    conditionInfo: {\n\t                        condition: condition,\n\t                        prefix: prefix,\n\t                        useDisabled: useDisabled\n\t                    }\n\t                });\n\t                return this;\n\t            };\n\t            Base.prototype.className = function (className) {\n\t                this.data = _.extend({}, this.data, {\n\t                    className: className\n\t                });\n\t                return this;\n\t            };\n\t            Base.prototype.noOptions = function (tooltip, icon) {\n\t                if (tooltip === void 0) { tooltip = false; }\n\t                if (icon === void 0) { icon = false; }\n\t                tooltip && delete this.data.tooltip;\n\t                icon && delete this.data.icon;\n\t                return this;\n\t            };\n\t            Base.prototype.tooltipBuilder = function (title, position) {\n\t                if (title === void 0) { title = \"\"; }\n\t                if (position === void 0) { position = \"bottom\"; }\n\t                this.data = _.extend({}, this.data, {\n\t                    tooltip: {\n\t                        title: title,\n\t                        position: position\n\t                    }\n\t                });\n\t                return this;\n\t            };\n\t            Base.prototype.iconBuilder = function (icon, style, ricon, options, size) {\n\t                this.data = _.extend({}, this.data, {\n\t                    icon: {\n\t                        icon: icon,\n\t                        ricon: ricon,\n\t                        style: style,\n\t                        size: size || '24px'\n\t                    }\n\t                });\n\t                return this;\n\t            };\n\t            Base.prototype.attrBuilder = function (attributes) {\n\t                this.data = _.extend({}, this.data, {\n\t                    attributes: attributes\n\t                });\n\t                return this;\n\t            };\n\t            Base.prototype.toolsBuilder = function (tools) {\n\t                this.data = _.extend({}, this.data, {\n\t                    tools: tools || []\n\t                });\n\t                return this;\n\t            };\n\t            Base.prototype.btnClick = function (func) {\n\t                if (func && _.isFunction(func)) {\n\t                    this.data = _.extend({}, this.data, {\n\t                        onClick: func\n\t                    });\n\t                }\n\t                return this;\n\t            };\n\t            Base.prototype.menuOptionsBuilder = function (width, items) {\n\t                if (width === void 0) { width = 4; }\n\t                if (items === void 0) { items = []; }\n\t                this.data = _.extend({}, this.data, {\n\t                    width: width || 4,\n\t                    items: items || []\n\t                });\n\t                return this;\n\t            };\n\t            Base.prototype.items = function (items) {\n\t                if (items === void 0) { items = []; }\n\t                this.data = _.extend({}, this.data, {\n\t                    items: items || []\n\t                });\n\t                return this;\n\t            };\n\t            Base.prototype.toValue = function () {\n\t                return this.data;\n\t            };\n\t            return Base;\n\t        }());\n\t        var Service = (function (_super) {\n\t            __extends(Service, _super);\n\t            function Service(data) {\n\t                var _this = _super.call(this, data) || this;\n\t                _this.data = data;\n\t                return _this;\n\t            }\n\t            Service.prototype.btnBuilder = function (title, className, showTitle, tooltipPosition) {\n\t                if (showTitle === void 0) { showTitle = true; }\n\t                if (tooltipPosition === void 0) { tooltipPosition = \"bottom\"; }\n\t                var service = new Service({\n\t                    type: \"btn\",\n\t                    title: title,\n\t                    className: className,\n\t                    showTitle: showTitle\n\t                });\n\t                service.tooltipBuilder(title, tooltipPosition);\n\t                return service;\n\t            };\n\t            Service.prototype.menuBuilder = function (title, className, showTitle, tooltipPosition) {\n\t                if (showTitle === void 0) { showTitle = true; }\n\t                if (tooltipPosition === void 0) { tooltipPosition = \"bottom\"; }\n\t                var service = this.btnBuilder(title, className, showTitle, tooltipPosition);\n\t                service.data.type = \"menu\";\n\t                return service;\n\t            };\n\t            Service.prototype.menuItemBuilder = function (title, className, showTitle, tooltipPosition) {\n\t                if (showTitle === void 0) { showTitle = true; }\n\t                if (tooltipPosition === void 0) { tooltipPosition = \"bottom\"; }\n\t                var service = this.btnBuilder(title, className, showTitle, tooltipPosition);\n\t                service.data.type = \"menuItem\";\n\t                return service;\n\t            };\n\t            Service.prototype.labelBuilder = function (title, cls) {\n\t                return new Service({\n\t                    type: \"label\",\n\t                    title: title,\n\t                    cls: cls\n\t                });\n\t            };\n\t            Service.prototype.layoutBuilder = function (flex, layout, layoutAlign) {\n\t                if (flex === void 0) { flex = \"none\"; }\n\t                if (layout === void 0) { layout = \"none\"; }\n\t                if (layoutAlign === void 0) { layoutAlign = \"none none\"; }\n\t                return new Service({\n\t                    type: \"layout\",\n\t                    flex: flex,\n\t                    layout: layout,\n\t                    layoutAlign: layoutAlign\n\t                });\n\t            };\n\t            Service.prototype.menuBarBuilder = function () {\n\t                return new Service({\n\t                    type: \"menuBar\"\n\t                });\n\t            };\n\t            Service.prototype.noneBuilder = function (type) {\n\t                return new Service({\n\t                    type: type\n\t                });\n\t            };\n\t            return Service;\n\t        }(Base));\n\t        return new Service();\n\t    }];\n\tmodule_1.module.service(Service._name, Service.provider);\n\n\n/***/ },\n\n/***/ 339:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar _ = __webpack_require__(3);\n\tvar ContentController = (function () {\n\t    function ContentController($rootScope, $timeout, materialUtils, svgUtils, fxAction, iconInfoDetailForm) {\n\t        var _this = this;\n\t        this.$rootScope = $rootScope;\n\t        this.$timeout = $timeout;\n\t        this.materialUtils = materialUtils;\n\t        this.svgUtils = svgUtils;\n\t        this.fxAction = fxAction;\n\t        this.iconInfoDetailForm = iconInfoDetailForm;\n\t        this.icons = [];\n\t        this.icons.length = 0;\n\t        _.each(svgUtils.getAllIcons(), function (shape, key) {\n\t            _this.icons.push(key);\n\t        });\n\t        this.standardItems = [\n\t            { sizeX: 2, sizeY: 1, row: 0, col: 0, class: \"md-whiteframe-1dp\" },\n\t            { sizeX: 2, sizeY: 2, row: 0, col: 2, class: \"md-whiteframe-1dp\" },\n\t            { sizeX: 1, sizeY: 1, row: 0, col: 4, class: \"md-whiteframe-1dp\" },\n\t            { sizeX: 1, sizeY: 1, row: 0, col: 5, class: \"md-whiteframe-1dp\" },\n\t            { sizeX: 2, sizeY: 1, row: 1, col: 0, class: \"md-whiteframe-1dp\" },\n\t            { sizeX: 1, sizeY: 1, row: 1, col: 4, class: \"md-whiteframe-1dp\" },\n\t            { sizeX: 1, sizeY: 2, row: 1, col: 5, class: \"md-whiteframe-1dp\" },\n\t            { sizeX: 1, sizeY: 1, row: 2, col: 0, class: \"md-whiteframe-1dp\" },\n\t            { sizeX: 2, sizeY: 1, row: 2, col: 1, class: \"md-whiteframe-1dp\" },\n\t            { sizeX: 1, sizeY: 1, row: 2, col: 3, class: \"md-whiteframe-1dp\" },\n\t            { sizeX: 1, sizeY: 1, row: 2, col: 4, class: \"md-whiteframe-1dp\" }\n\t        ];\n\t        this.gridsterOpts = {\n\t            draggable: {\n\t                start: function (event, $element, widget) {\n\t                    widget.class = \"md-whiteframe-16dp\";\n\t                },\n\t                stop: function (event, $element, widget) {\n\t                    widget.class = \"md-whiteframe-1dp\";\n\t                }\n\t            }\n\t        };\n\t        this.getDetatInfo();\n\t    }\n\t    ContentController.prototype.doOpenIconInfo = function ($event, iconInfo) {\n\t        this.fxAction.doActionModel($event, this.iconInfoDetailForm, { key: iconInfo });\n\t    };\n\t    ContentController.prototype.getDetatInfo = function () {\n\t        var _this = this;\n\t        var promise = this.fxAction.doAction('departTreeAction', null);\n\t        promise && promise.then(function (results) {\n\t            var nodes = [];\n\t            _.forEach(results, function (result) {\n\t                if (_.isArray(result)) {\n\t                    nodes = nodes.concat(result);\n\t                }\n\t            });\n\t            var nodesGroupByDepth = _.groupBy(_.keyBy(nodes, \"key\"), \"depth\");\n\t            var depth = 0, root = {};\n\t            var _loop_1 = function () {\n\t                var nodesIsDepth = nodesGroupByDepth[depth];\n\t                var parentIsDepth = nodesGroupByDepth[depth - 1];\n\t                if (nodesIsDepth && nodesIsDepth.length > 0) {\n\t                    switch (depth) {\n\t                        case 0:\n\t                            root = nodesIsDepth[0];\n\t                            break;\n\t                        case 1:\n\t                            root['nodes'] = nodesIsDepth;\n\t                            break;\n\t                        default:\n\t                            _.forEach(parentIsDepth, function (parentNode) {\n\t                                parentNode[\"nodes\"] = _.filter(nodesIsDepth, function (node) {\n\t                                    return node.lft > parentNode.lft && parentNode.rgt > node.rgt;\n\t                                });\n\t                            });\n\t                            break;\n\t                    }\n\t                }\n\t                else {\n\t                    return \"break\";\n\t                }\n\t                depth++;\n\t            };\n\t            while (true) {\n\t                var state_1 = _loop_1();\n\t                if (state_1 === \"break\")\n\t                    break;\n\t            }\n\t            _this.departs = root[\"nodes\"];\n\t        });\n\t        this.treeOptions = {\n\t            nodeChildren: \"nodes\",\n\t            dirSelectable: false,\n\t            templateUrl: 'treeControlExternalTemplate.html',\n\t            injectClasses: {\n\t                ul: \"a1\",\n\t                li: \"a2\",\n\t                liSelected: \"a7\",\n\t                iExpanded: \"a3\",\n\t                iCollapsed: \"a4\",\n\t                iLeaf: \"a5\",\n\t                label: \"a6\",\n\t                labelSelected: \"a8\"\n\t            }\n\t        };\n\t    };\n\t    return ContentController;\n\t}());\n\tContentController.$inject = [\"$rootScope\", \"$timeout\", \"materialUtils\", \"svgUtils\", \"fxAction\", \"iconInfoDetailForm\"];\n\texports.ContentController = ContentController;\n\n\n/***/ },\n\n/***/ 340:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar HomeController = (function () {\n\t    function HomeController($rootScope, materialUtils, toolbarUtils, fxAction) {\n\t        var _this = this;\n\t        this.$rootScope = $rootScope;\n\t        this.materialUtils = materialUtils;\n\t        this.toolbarUtils = toolbarUtils;\n\t        this.fxAction = fxAction;\n\t        $rootScope[\"isOpenMenu\"] = false;\n\t        this.toolbars = [\n\t            toolbarUtils.labelBuilder(\"\").attrBuilder({ flex: \"\" }).toValue(),\n\t            toolbarUtils.noneBuilder(\"icon\").className(\"md-margin\").iconBuilder(\"people\", {}, null, null, \"24px\").toValue(),\n\t            toolbarUtils.labelBuilder(\"{{$root.user.username}}\", \"md-subhead\").attrBuilder({}).toValue(),\n\t            toolbarUtils.menuBarBuilder().className(\"md-no-padding\").tooltipBuilder(\"\").items([\n\t                toolbarUtils.menuBuilder(\"\", \"md-icon-button\").attrBuilder({ \"md-position-mode\": \"left bottom\" }).iconBuilder(\"expand_more\").menuOptionsBuilder().items([\n\t                    toolbarUtils.menuItemBuilder(\"退出登录\", \"\", true).iconBuilder(\"power-settings\").btnClick(function ($event) {\n\t                        _this.doExit($event);\n\t                    }).toValue(),\n\t                ]).toValue()\n\t            ]).toValue()\n\t        ];\n\t    }\n\t    HomeController.prototype.doExit = function ($event) {\n\t        var _this = this;\n\t        this.fxAction.getModel('logout').then(function (model) {\n\t            var promise = _this.fxAction.doActionModel($event, model);\n\t            if (promise) {\n\t                promise.then(function () {\n\t                    console.log(\"logout\");\n\t                });\n\t            }\n\t        });\n\t    };\n\t    return HomeController;\n\t}());\n\tHomeController.$inject = [\"$rootScope\", \"materialUtils\", \"toolbarUtils\", \"fxAction\"];\n\texports.HomeController = HomeController;\n\n\n/***/ },\n\n/***/ 341:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar _ = __webpack_require__(3);\n\tvar SidenavLeftController = (function () {\n\t    function SidenavLeftController($rootScope, mdSideMenuSections, toolbarUtils, fxAction, $state, $stateParams, $timeout, fxSideMenuFactory) {\n\t        this.$rootScope = $rootScope;\n\t        this.mdSideMenuSections = mdSideMenuSections;\n\t        this.toolbarUtils = toolbarUtils;\n\t        this.fxAction = fxAction;\n\t        this.$state = $state;\n\t        this.$stateParams = $stateParams;\n\t        this.$timeout = $timeout;\n\t        this.fxSideMenuFactory = fxSideMenuFactory;\n\t        this.selectedNodes = {};\n\t        this.initModules().initToolbar();\n\t        this.doLinkBind = this.doLink.bind(this);\n\t        this.toolbar = [\n\t            toolbarUtils.labelBuilder(\"CMDB\").attrBuilder({ flex: \"\" }).toValue()\n\t        ];\n\t    }\n\t    SidenavLeftController.prototype.getModules = function () {\n\t        var _this = this;\n\t        var promise = this.fxAction.doAction('moduleMenuAction', null);\n\t        promise && promise.then(function (results) {\n\t            var nodes = [];\n\t            _.forEach(results, function (result) {\n\t                if (_.isArray(result)) {\n\t                    nodes = nodes.concat(result);\n\t                }\n\t            });\n\t            var nodesGroupByDepth = _.groupBy(_.keyBy(nodes, \"key\"), \"depth\");\n\t            var depth = 0, root = {};\n\t            var _loop_1 = function () {\n\t                var nodesIsDepth = nodesGroupByDepth[depth];\n\t                var parentIsDepth = nodesGroupByDepth[depth - 1];\n\t                if (nodesIsDepth && nodesIsDepth.length > 0) {\n\t                    switch (depth) {\n\t                        case 0:\n\t                            root = nodesIsDepth[0];\n\t                            break;\n\t                        case 1:\n\t                            root['nodes'] = nodesIsDepth;\n\t                            break;\n\t                        default:\n\t                            _.forEach(parentIsDepth, function (parentNode) {\n\t                                parentNode[\"nodes\"] = _.filter(nodesIsDepth, function (node) {\n\t                                    return node.lft > parentNode.lft && parentNode.rgt > node.rgt;\n\t                                });\n\t                            });\n\t                            break;\n\t                    }\n\t                }\n\t                else {\n\t                    return \"break\";\n\t                }\n\t                depth++;\n\t            };\n\t            while (true) {\n\t                var state_1 = _loop_1();\n\t                if (state_1 === \"break\")\n\t                    break;\n\t            }\n\t            _this.mdSideMenuSections.sections = root[\"nodes\"];\n\t            _this.modules = _this.mdSideMenuSections.sections;\n\t            _this.selectedNodes = _.keyBy(nodesGroupByDepth[1], \"key\") || {};\n\t            _this.fxSideMenuFactory.onStateChangeStart(null, _this.$state.current, _this.$state.params);\n\t        });\n\t    };\n\t    SidenavLeftController.prototype.initModules = function () {\n\t        this.getModules();\n\t        this.mdSideMenuSections.options = {\n\t            children: \"nodes\",\n\t            key: 'key',\n\t            dirSelectable: false,\n\t            orderBy: 'lft',\n\t            filterField: 'key'\n\t        };\n\t        return this;\n\t    };\n\t    SidenavLeftController.prototype.initToolbar = function () {\n\t        var _this = this;\n\t        this.toolbarBottom = [\n\t            this.toolbarUtils.layoutBuilder(\"\", \"row\", \"space-around center\").toolsBuilder([\n\t                this.toolbarUtils.btnBuilder(\"刷新\", \"md-icon-button\", false, \"top\").iconBuilder(\"refresh\").btnClick(function ($event) {\n\t                    _this.getModules();\n\t                }).toValue(),\n\t                this.toolbarUtils.btnBuilder(\"全部折叠\", \"md-icon-button\", false, \"top\").iconBuilder(\"dehaze\").btnClick(function ($event) {\n\t                    _.forEach(_this.selectedNodes, function (val, key) {\n\t                        delete _this.selectedNodes[key];\n\t                    });\n\t                }).toValue(),\n\t            ]).toValue()\n\t        ];\n\t        return this;\n\t    };\n\t    SidenavLeftController.prototype.doLink = function ($event, node) {\n\t        var _this = this;\n\t        if (node && node.link && node.key) {\n\t            this.$timeout(function () {\n\t                _this.$state.go(node.link, node);\n\t            }, 200);\n\t        }\n\t    };\n\t    return SidenavLeftController;\n\t}());\n\tSidenavLeftController.$inject = [\"$rootScope\", \"mdSideMenuSections\", \"toolbarUtils\", \"fxAction\", \"$state\", \"$stateParams\", \"$timeout\", \"fxSideMenuFactory\"];\n\texports.SidenavLeftController = SidenavLeftController;\n\n\n/***/ },\n\n/***/ 342:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__dirname) {\"use strict\";\n\tvar ngMaterial = __webpack_require__(7);\n\t__webpack_require__(175);\n\tvar ngMaterialIcons = __webpack_require__(19);\n\tvar _ = __webpack_require__(3);\n\tvar action_1 = __webpack_require__(15);\n\tvar router_1 = __webpack_require__(200);\n\tvar material_service_1 = __webpack_require__(16);\n\tvar svg_service_1 = __webpack_require__(204);\n\tvar toolbar_1 = __webpack_require__(199);\n\tvar sidemenu_1 = __webpack_require__(198);\n\t__webpack_require__(176);\n\tvar action_model_1 = __webpack_require__(5);\n\t__webpack_require__(189);\n\t__webpack_require__(25);\n\t__webpack_require__(174);\n\tvar module = angular.module(\"homeModule\", [action_1.default, toolbar_1.default, sidemenu_1.default, svg_service_1.default, material_service_1.default, ngMaterial, 'ui.router', ngMaterialIcons, 'gridster', 'treeControl']);\n\tmodule.config([\n\t    \"$stateProvider\",\n\t    \"$urlRouterProvider\",\n\t    \"$httpProvider\",\n\t    \"$mdThemingProvider\",\n\t    \"$mdAriaProvider\",\n\t    \"$locationProvider\",\n\t    \"mdSideMenuSectionsProvider\",\n\t    function ($stateProvider, $urlRouterProvider, $httpProvider, $mdThemingProvider, $mdAriaProvider, $locationProvider, mdSideMenuSectionsProvider, cfpLoadingBarProvider) {\n\t        $mdThemingProvider.alwaysWatchTheme(true);\n\t        $mdAriaProvider.disableWarnings();\n\t        $mdThemingProvider.theme('default')\n\t            .primaryPalette('grey')\n\t            .accentPalette('blue')\n\t            .warnPalette('red');\n\t        router_1.initRouter($urlRouterProvider, $stateProvider);\n\t        mdSideMenuSectionsProvider.initWithTheme($mdThemingProvider);\n\t    }\n\t])\n\t    .run([\"$rootScope\", \"$state\", \"$q\", \"svgUtils\", \"fxAction\", \"fxSideMenuFactory\", function ($rootScope, $state, $q, svgUtils, fxAction) {\n\t        var state = {};\n\t        var handleResolve = function (isComplete) {\n\t            state.$$isFinish = true;\n\t            $state.go(state.toState.name, state.toParams, state.options);\n\t        };\n\t        $rootScope.$on(\"$stateRefresh\", function () {\n\t            state.$$isFinish = false;\n\t        });\n\t        $rootScope.$on(\"$stateChangeStart\", function (evt, toState, toParams, fromState, fromParams) {\n\t            console.log(\"$stateChangeStart\", evt, toState, toParams, fromState, fromParams);\n\t        });\n\t        $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams, options) {\n\t            if (!state.$$isFinish) {\n\t                _.extend(state, {\n\t                    toState: toState,\n\t                    toParams: toParams,\n\t                    fromState: fromState,\n\t                    fromParams: fromParams,\n\t                    options: options\n\t                });\n\t                event.preventDefault();\n\t                $q.all({\n\t                    mdi: svgUtils.loadSvgUrl(__dirname + 'svgs/mdi.svg'),\n\t                    weibo: svgUtils.loadSvgUrl(__dirname + 'svgs/weibo.svg'),\n\t                    configConfig: fxAction.doAction(\"configAction\", {}).then(function (result) {\n\t                        $rootScope[\"config\"] = result.configAction.config;\n\t                    }),\n\t                    userinfoAction: fxAction.doAction(\"userinfoAction\", {}).then(function (result) {\n\t                        result.userinfo && ($rootScope[\"user\"] = result.userinfo);\n\t                    })\n\t                }).then(function () { handleResolve(true); }, function () { handleResolve(false); });\n\t            }\n\t        });\n\t    }]);\n\tmodule.value(\"iconInfoDetailForm\", {\n\t    key: \"iconInfoDetailForm\",\n\t    icon: \"search\",\n\t    type: action_model_1.ActionType.form,\n\t    title: \"ICON详情\",\n\t    form: {\n\t        dataSchema: {\n\t            type: \"object\",\n\t            properties: {\n\t                key: {\n\t                    type: \"string\",\n\t                    title: \"KEY\"\n\t                }\n\t            }\n\t        },\n\t        formSchema: [{\n\t                key: \"key\",\n\t                type: \"string\",\n\t                placeHolder: \"KEY\",\n\t                htmlClass: \"md-block\"\n\t            }]\n\t    }\n\t});\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = \"\" + module.name;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"/\"))\n\n/***/ },\n\n/***/ 355:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"7af35d2f474641e3a73ea274191a9107.jpg\";\n\n/***/ }\n\n},[342]);\n\n\n/** WEBPACK FOOTER **\n ** page/home.bundle.js\n **/","/**\n * Created by NICK on 16/8/16.\n */\n\nimport * as _ from 'lodash';\nimport \"./styles/sidemenu.scss\";\n\nconst _name = \"fxSideMenu\", _module = `${_name}Module`;\n\ninterface IDirectiveScope extends ng.IScope {\n    node: Object;\n    $sideMenuTransclude: Object;\n}\n\nclass Controller {\n    static $inject = [\"$scope\", \"$compile\", \"$interpolate\", \"mdSideMenuSections\"];\n\n    template: any;\n    selectedNodes: Object;\n    doLink: Function;\n    options: Object = {};\n\n    constructor(private $scope, private $compile, private $interpolate, private mdSideMenuSections) {\n        this.template = $compile($interpolate(require(\"./tpls/sidemenu.jade\")())({\n            opts: mdSideMenuSections.options\n        }));\n\n        this.options = this.mdSideMenuSections.options;\n    }\n\n    doLinkPre($event, node) {\n        if (_.isFunction(this.doLink)) {\n            this.doLink($event, node);\n        }\n        console.log(node);\n    }\n\n    /**\n     * 显示和隐藏子菜单\n     * @param node   {Object} 菜单的数据\n     */\n    showChildren(node) {\n        let opts = this.mdSideMenuSections.options;\n\n        if (this.selectedNodes.hasOwnProperty(node[opts.key])) {\n            delete this.selectedNodes[node[opts.key]];\n        } else {\n            if (node[opts.children] && node[opts.children].length) {\n                this.selectedNodes[node[opts.key]] = node;\n            }\n        }\n    }\n\n    /**\n     * 子节点是否显示\n     * @param node {Object} 菜单的数据\n     * @returns {boolean}\n     */\n    isShowChildren(node) {\n        let opts = this.mdSideMenuSections.options;\n\n        return !!this.selectedNodes[node[opts.key]];\n    }\n\n    /**\n     * 判断是否是叶子节点\n     * @param node   {Object} 菜单的数据\n     * @returns {boolean}\n     */\n    isLeaf(node) {\n        let opts = this.mdSideMenuSections.options;\n\n        return node.rgt - node.lft == 1 || !node[opts.children] || node[opts.children].length == 0;\n    }\n\n    /**\n     * 是否选中\n     * @param node    {Object} 菜单的数据\n     * @returns {boolean}\n     */\n    isSelected(node) {\n        let opts = this.mdSideMenuSections.options;\n\n        return !!this.mdSideMenuSections.selectedNode && this.mdSideMenuSections.selectedNode[opts.key] == node[opts.key];\n    }\n\n}\n\n\n/**\n * sidemenu指令\n * @param mdSideMenuSections\n * @returns {{restrict: string, replace: boolean, require: string, transclude: boolean, controllerAs: string, scope: {modules: string}, bindToController: {selectedNodes: string}, controller: Controller, compile: (($ele:ng.IAugmentedJQuery, $attr:ng.IAttributes, childTranscludeFn:any)=>($scope:IDirectiveScope, $element:any, attrs:any, $ctrl:any)=>undefined)}}\n * @constructor\n */\nfunction Directive(mdSideMenuSections): ng.IDirective {\n    return {\n        restrict: 'EA',\n        replace: false,\n        require: _name,\n        transclude: true,\n        controllerAs: \"sideCtl\",\n        scope: {\n            modules: '='\n        },\n        bindToController: {\n            selectedNodes: '=',\n            doLink: '=?ngClick'\n        },\n        controller: Controller,\n        compile: ($ele: ng.IAugmentedJQuery, $attr: ng.IAttributes, childTranscludeFn) => {\n            return ($scope: IDirectiveScope, $element, attrs, $ctrl) => {\n                // 监听modules的变化,初始化根节点数据\n                $scope.$watch(\"modules\", function updateNodeOnRootScope(newValue) {\n                    let opts = mdSideMenuSections.options;\n\n                    if (_.isArray(newValue)) {\n                        if (angular.isDefined($scope.node) && angular.equals($scope.node[opts.children], newValue)) {\n                            return;\n                        }\n                        $scope.node = {};\n                        $scope.node[opts.children] = newValue;\n                    }\n                    else {\n                        if (angular.equals($scope.node, newValue)) {\n                            return;\n                        }\n                        $scope.node = newValue;\n                    }\n                });\n                // 应用模板\n                $ctrl[\"template\"]($scope, function (clone) {\n                    $element.html('').append(clone);\n                });\n                $scope.$sideMenuTransclude = childTranscludeFn;\n            };\n        }\n    };\n}\n\nexport const module = angular.module(_module, [\"ngAnimate\", \"ngMaterial\"]).directive(_name, [\"mdSideMenuSections\", Directive]);\nexport default `${module.name}`;\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/sidemenu/module.ts\n **/","import * as _ from 'lodash';\n\nconst _name = \"fxToolbar\";\n\ninterface IDirectiveScope extends ng.IScope {\n    ngModel: Object;\n}\n\nclass Strategy {\n    private tools: { [id: string]: string; } = {};\n\n    register(key: string, template: string) {\n        this.tools[key] = template;\n    }\n\n    get(key: string) {\n        return this.tools[key] || \"\";\n    }\n}\n\nconst strategy = new Strategy();\n\nstrategy.register(\"icon\", require('./tpls/icon.jade')());\nstrategy.register(\"btn\", require('./tpls/btn.jade')());\nstrategy.register(\"layout\", require('./tpls/layout.jade')());\nstrategy.register(\"label\", require('./tpls/label.jade')());\nstrategy.register(\"menu\", require('./tpls/menu.jade')());\nstrategy.register(\"menuItem\", require('./tpls/menu-item.jade')());\nstrategy.register(\"menuBar\", require('./tpls/menubar.jade')());\nstrategy.register(\"menuDivider\", require('./tpls/menu-divider.jade')());\n\nclass Controller {\n    static $inject = [\"$scope\", \"$rootScope\", \"$compile\", \"$interpolate\", \"materialUtils\"];\n\n    ctls: string;\n    items: Object;\n    ngModel: Object;\n    ngDisabled: Object;\n    index: number;\n\n    constructor(private $scope: ng.IScope, private $rootScope: ng.IRootScopeService, private $compile: ng.ICompileService, private $interpolate: ng.IInterpolateService, private materialUtils: fx.utils.materialStatic) {\n\n    }\n\n    openMenu($mdOpenMenu, ev) {\n        $mdOpenMenu(ev);\n    }\n\n    dig(models, $ele, $scope) {\n        _.each(models, (model) => {\n            let template = strategy.get(model['type']);\n            let $newScope = $scope.$new(true, $scope);\n            let tmp: string, $newEle: JQuery;\n\n            if (!template) {\n                template = model.template;\n            }\n            if (!template) {\n                return console.error(\"没有模板或者找不到类型!\");\n            }\n\n            model = _.cloneDeep(model);\n\n            model.disabled = `${this.ngDisabled}`;\n            model.materialUtils = this.materialUtils;\n            model.ngModel = this.ngModel;\n            model.index = this.index;\n\n            // 处理condition来控制控件的显示与隐藏\n            if (model.conditionInfo && model.conditionInfo.condition) {\n                if (model.conditionInfo.prefix) {\n                    model.condition = `${model['type']}Ctl.${model.conditionInfo.condition}`;\n                } else {\n                    model.condition = `${model.conditionInfo.condition}`;\n                }\n\n                if (model.conditionInfo.useDisabled) {\n                    model.disabled = model.condition;\n                    model.condition = \"\";\n                }\n\n            }\n            !model.condition && (model.condition = \"true\");\n\n            // 设置controllerAs\n            $newScope[`${model['type']}Ctl`] = _.clone(model);\n            if (this.ctls) {\n                $newScope[this.ctls] = $scope.$parent[this.ctls] || {};\n            }\n\n            this.$scope.$watch(() => {\n                return this.index;\n            }, (newValue, oldValue) => {\n                if (newValue != oldValue) {\n                    $newScope[`${model['type']}Ctl`][\"index\"] = newValue;\n                }\n            });\n\n            // 编译一次模板\n            tmp = this.$interpolate(template)($newScope);\n            $newEle = angular.element(tmp);\n            // 设置属性\n            _.each(model.attributes, (attr, key) => {\n                $newEle.attr(key, attr);\n            });\n            // $compile\n            $newEle = this.$compile($newEle)($newScope);\n            $ele.append($newEle);\n            // 递归\n            if (_.isArray(model.tools)) {\n                this.dig(model.tools, $newEle, $newScope);\n            }\n        });\n    }\n}\n\nfunction Directive(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        require: [_name],\n        scope: {},\n        bindToController: {\n            ctls: '@',\n            ngDisabled: '@',\n            items: \"=\",\n            ngModel: '=',\n            index: '=?'\n        },\n        controllerAs: 'toolbarCtl',\n        controller: Controller,\n        replace: false,\n        link: ($scope: IDirectiveScope, $ele: ng.IAugmentedJQuery, $attr: ng.IAttributes, $ctl: Controller) => {\n            $scope.$watchCollection(() => {\n                return $ctl[0].items;\n            }, (newValue) => {\n                let model = newValue;\n\n                if (!model) return;\n                if (!_.isObject(model) && !_.isArray(model)) {\n                    return console.error(\"items只能是对象或者数组!\");\n                }\n                $ctl[0].dig(_.isArray(model) ? model : [model], $ele, $scope);\n            });\n        }\n    }\n}\n\nDirective.$inject = [];\n\nexport const module = angular.module(`${_name}Module`, []).directive(_name, Directive);\nexport default `${module.name}`;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/toolbar/module.ts\n **/","/* commonjs package manager support (eg componentjs) */\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports){\n  module.exports = 'treeControl';\n}\n(function ( angular ) {\n    'use strict';\n\n    function createPath(startScope) {\n        return function path() {\n            var _path = [];\n            var scope = startScope;\n            var prevNode;\n            while (scope && scope.node !== startScope.synteticRoot) {\n                if (prevNode !== scope.node)\n                    _path.push(scope.node);\n                prevNode = scope.node;\n                scope = scope.$parent;\n            }\n            return _path;\n        }\n    }\n\n    function ensureDefault(obj, prop, value) {\n        if (!obj.hasOwnProperty(prop))\n            obj[prop] = value;\n    }\n\n    function defaultIsLeaf(node, $scope) {\n        return !node[$scope.options.nodeChildren] || node[$scope.options.nodeChildren].length === 0;\n    }\n\n    function shallowCopy(src, dst) {\n        if (angular.isArray(src)) {\n            dst = dst || [];\n\n            for (var i = 0; i < src.length; i++) {\n                dst[i] = src[i];\n            }\n        } else if (angular.isObject(src)) {\n            dst = dst || {};\n\n            for (var key in src) {\n                if (hasOwnProperty.call(src, key) && !(key.charAt(0) === '$' && key.charAt(1) === '$')) {\n                    dst[key] = src[key];\n                }\n            }\n        }\n\n        return dst || src;\n    }\n    function defaultEquality(a, b,$scope) {\n        if (!a || !b)\n            return false;\n        a = shallowCopy(a);\n        a[$scope.options.nodeChildren] = [];\n        b = shallowCopy(b);\n        b[$scope.options.nodeChildren] = [];\n        return angular.equals(a, b);\n    }\n\n    function defaultIsSelectable() {\n        return true;\n    }\n\n    function ensureAllDefaultOptions($scope) {\n        ensureDefault($scope.options, \"multiSelection\", false);\n        ensureDefault($scope.options, \"nodeChildren\", \"children\");\n        ensureDefault($scope.options, \"dirSelectable\", \"true\");\n        ensureDefault($scope.options, \"injectClasses\", {});\n        ensureDefault($scope.options.injectClasses, \"ul\", \"\");\n        ensureDefault($scope.options.injectClasses, \"li\", \"\");\n        ensureDefault($scope.options.injectClasses, \"liSelected\", \"\");\n        ensureDefault($scope.options.injectClasses, \"iExpanded\", \"\");\n        ensureDefault($scope.options.injectClasses, \"iCollapsed\", \"\");\n        ensureDefault($scope.options.injectClasses, \"iLeaf\", \"\");\n        ensureDefault($scope.options.injectClasses, \"label\", \"\");\n        ensureDefault($scope.options.injectClasses, \"labelSelected\", \"\");\n        ensureDefault($scope.options, \"equality\", defaultEquality);\n        ensureDefault($scope.options, \"isLeaf\", defaultIsLeaf);\n        ensureDefault($scope.options, \"allowDeselect\", true);\n        ensureDefault($scope.options, \"isSelectable\", defaultIsSelectable);\n    }\n    \n    angular.module( 'treeControl', [] )\n        .constant('treeConfig', {\n            templateUrl: null\n        })\n        .directive( 'treecontrol', ['$compile', function( $compile ) {\n            /**\n             * @param cssClass - the css class\n             * @param addClassProperty - should we wrap the class name with class=\"\"\n             */\n            function classIfDefined(cssClass, addClassProperty) {\n                if (cssClass) {\n                    if (addClassProperty)\n                        return 'class=\"' + cssClass + '\"';\n                    else\n                        return cssClass;\n                }\n                else\n                    return \"\";\n            }\n            \n            \n            \n            return {\n                restrict: 'EA',\n                require: \"treecontrol\",\n                transclude: true,\n                scope: {\n                    treeModel: \"=\",\n                    selectedNode: \"=?\",\n                    selectedNodes: \"=?\",\n                    expandedNodes: \"=?\",\n                    onSelection: \"&\",\n                    onNodeToggle: \"&\",\n                    options: \"=?\",\n                    orderBy: \"=?\",\n                    reverseOrder: \"@\",\n                    filterExpression: \"=?\",\n                    filterComparator: \"=?\"\n                },\n                controller: ['$scope', '$templateCache', '$interpolate', 'treeConfig', function ($scope, $templateCache, $interpolate, treeConfig) {\n                    \n                    $scope.options = $scope.options || {};\n                    \n                    ensureAllDefaultOptions($scope);\n                  \n                    $scope.selectedNodes = $scope.selectedNodes || [];\n                    $scope.expandedNodes = $scope.expandedNodes || [];\n                    $scope.expandedNodesMap = {};\n                    for (var i=0; i < $scope.expandedNodes.length; i++) {\n                        $scope.expandedNodesMap[\"a\"+i] = $scope.expandedNodes[i];\n                    }\n                    $scope.parentScopeOfTree = $scope.$parent;\n\n\n                    function isSelectedNode(node) {\n                        if (!$scope.options.multiSelection && ($scope.options.equality(node, $scope.selectedNode , $scope)))\n                            return true;\n                        else if ($scope.options.multiSelection && $scope.selectedNodes) {\n                            for (var i = 0; (i < $scope.selectedNodes.length); i++) {\n                                if ($scope.options.equality(node, $scope.selectedNodes[i] , $scope)) {\n                                    return true;\n                                }\n                            }\n                            return false;\n                        }\n                    }\n\n                    $scope.headClass = function(node) {\n                        var liSelectionClass = classIfDefined($scope.options.injectClasses.liSelected, false);\n                        var injectSelectionClass = \"\";\n                        if (liSelectionClass && isSelectedNode(node))\n                            injectSelectionClass = \" \" + liSelectionClass;\n                        if ($scope.options.isLeaf(node, $scope))\n                            return \"tree-leaf\" + injectSelectionClass;\n                        if ($scope.expandedNodesMap[this.$id])\n                            return \"tree-expanded\" + injectSelectionClass;\n                        else\n                            return \"tree-collapsed\" + injectSelectionClass;\n                    };\n\n                    $scope.iBranchClass = function() {\n                        if ($scope.expandedNodesMap[this.$id])\n                            return classIfDefined($scope.options.injectClasses.iExpanded);\n                        else\n                            return classIfDefined($scope.options.injectClasses.iCollapsed);\n                    };\n\n                    $scope.nodeExpanded = function() {\n                        return !!$scope.expandedNodesMap[this.$id];\n                    };\n\n                    $scope.selectNodeHead = function() {\n                        var transcludedScope = this;\n                        var expanding = $scope.expandedNodesMap[transcludedScope.$id] === undefined;\n                        $scope.expandedNodesMap[transcludedScope.$id] = (expanding ? transcludedScope.node : undefined);\n                        if (expanding) {\n                            $scope.expandedNodes.push(transcludedScope.node);\n                        }\n                        else {\n                            var index;\n                            for (var i=0; (i < $scope.expandedNodes.length) && !index; i++) {\n                                if ($scope.options.equality($scope.expandedNodes[i], transcludedScope.node , $scope)) {\n                                    index = i;\n                                }\n                            }\n                            if (index !== undefined)\n                                $scope.expandedNodes.splice(index, 1);\n                        }\n                        if ($scope.onNodeToggle) {\n                            var parentNode = (transcludedScope.$parent.node === transcludedScope.synteticRoot)?null:transcludedScope.$parent.node;\n                            var path = createPath(transcludedScope);\n                            $scope.onNodeToggle({node: transcludedScope.node, $parentNode: parentNode, $path: path,\n                              $index: transcludedScope.$index, $first: transcludedScope.$first, $middle: transcludedScope.$middle,\n                              $last: transcludedScope.$last, $odd: transcludedScope.$odd, $even: transcludedScope.$even, expanded: expanding});\n\n                        }\n                    };\n\n                    $scope.selectNodeLabel = function( selectedNode){\n                        var transcludedScope = this;\n                        if(!$scope.options.isLeaf(selectedNode, $scope) && (!$scope.options.dirSelectable || !$scope.options.isSelectable(selectedNode))) {\n                            // Branch node is not selectable, expand\n                            this.selectNodeHead();\n                        }\n                        else if($scope.options.isLeaf(selectedNode, $scope) && (!$scope.options.isSelectable(selectedNode))) {\n                            // Leaf node is not selectable\n                            return;\n                        }\n                        else {\n                            var selected = false;\n                            if ($scope.options.multiSelection) {\n                                var pos = -1;\n                                for (var i=0; i < $scope.selectedNodes.length; i++) {\n                                    if($scope.options.equality(selectedNode, $scope.selectedNodes[i] , $scope)) {\n                                        pos = i;\n                                        break;\n                                    }\n                                }\n                                if (pos === -1) {\n                                    $scope.selectedNodes.push(selectedNode);\n                                    selected = true;\n                                } else {\n                                    $scope.selectedNodes.splice(pos, 1);\n                                }\n                            } else {\n                                if (!$scope.options.equality(selectedNode, $scope.selectedNode , $scope)) {\n                                    $scope.selectedNode = selectedNode;\n                                    selected = true;\n                                }\n                                else {\n                                    if ($scope.options.allowDeselect) {\n                                        $scope.selectedNode = undefined;\n                                    } else {\n                                        $scope.selectedNode = selectedNode;\n                                        selected = true;\n                                    }\n                                }\n                            }\n                            if ($scope.onSelection) {\n                                var parentNode = (transcludedScope.$parent.node === transcludedScope.synteticRoot)?null:transcludedScope.$parent.node;\n                                var path = createPath(transcludedScope)\n                                $scope.onSelection({node: selectedNode, selected: selected, $parentNode: parentNode, $path: path,\n                                  $index: transcludedScope.$index, $first: transcludedScope.$first, $middle: transcludedScope.$middle,\n                                  $last: transcludedScope.$last, $odd: transcludedScope.$odd, $even: transcludedScope.$even});\n                            }\n                        }\n                    };\n\n                    $scope.selectedClass = function() {\n                        var isThisNodeSelected = isSelectedNode(this.node);\n                        var labelSelectionClass = classIfDefined($scope.options.injectClasses.labelSelected, false);\n                        var injectSelectionClass = \"\";\n                        if (labelSelectionClass && isThisNodeSelected)\n                            injectSelectionClass = \" \" + labelSelectionClass;\n\n                        return isThisNodeSelected ? \"tree-selected\" + injectSelectionClass : \"\";\n                    };\n\n                    $scope.unselectableClass = function() {\n                        var isThisNodeUnselectable = !$scope.options.isSelectable(this.node);\n                        var labelUnselectableClass = classIfDefined($scope.options.injectClasses.labelUnselectable, false);\n                        return isThisNodeUnselectable ? \"tree-unselectable \" + labelUnselectableClass : \"\";\n                    };\n\n                    //tree template\n                    $scope.isReverse = function() {\n                      return !($scope.reverseOrder === 'false' || $scope.reverseOrder === 'False' || $scope.reverseOrder === '' || $scope.reverseOrder === false);\n                    };\n\n                    $scope.orderByFunc = function() {\n                      return $scope.orderBy;\n                    };\n//                    return \"\" + $scope.orderBy;\n\n                    var templateOptions = {\n                        orderBy: $scope.orderBy ? \" | orderBy:orderByFunc():isReverse()\" : '',\n                        ulClass: classIfDefined($scope.options.injectClasses.ul, true),\n                        nodeChildren:  $scope.options.nodeChildren,\n                        liClass: classIfDefined($scope.options.injectClasses.li, true),\n                        iLeafClass: classIfDefined($scope.options.injectClasses.iLeaf, false),\n                        labelClass: classIfDefined($scope.options.injectClasses.label, false)\n                    };\n\n                    var template;\n                    var templateUrl = $scope.options.templateUrl || treeConfig.templateUrl;\n\n                    if(templateUrl) {\n                        template = $templateCache.get(templateUrl);\n                    }\n\n                    if(!template) {\n                        template =\n                            '<ul {{options.ulClass}} >' +\n                            '<li ng-repeat=\"node in node.{{options.nodeChildren}} | filter:filterExpression:filterComparator {{options.orderBy}}\" ng-class=\"headClass(node)\" {{options.liClass}}' +\n                            'set-node-to-data>' +\n                            '<i class=\"tree-branch-head\" ng-class=\"iBranchClass()\" ng-click=\"selectNodeHead(node)\"></i>' +\n                            '<i class=\"tree-leaf-head {{options.iLeafClass}}\"></i>' +\n                            '<div class=\"tree-label {{options.labelClass}}\" ng-class=\"[selectedClass(), unselectableClass()]\" ng-click=\"selectNodeLabel(node)\" tree-transclude></div>' +\n                            '<treeitem ng-if=\"nodeExpanded()\"></treeitem>' +\n                            '</li>' +\n                            '</ul>';\n                    }\n\n                    this.template = $compile($interpolate(template)({options: templateOptions}));\n                }],\n                compile: function(element, attrs, childTranscludeFn) {\n                    return function ( scope, element, attrs, treemodelCntr ) {\n\n                        scope.$watch(\"treeModel\", function updateNodeOnRootScope(newValue) {\n                            if (angular.isArray(newValue)) {\n                                if (angular.isDefined(scope.node) && angular.equals(scope.node[scope.options.nodeChildren], newValue))\n                                    return;\n                                scope.node = {};\n                                scope.synteticRoot = scope.node;\n                                scope.node[scope.options.nodeChildren] = newValue;\n                            }\n                            else {\n                                if (angular.equals(scope.node, newValue))\n                                    return;\n                                scope.node = newValue;\n                            }\n                        });\n\n                        scope.$watchCollection('expandedNodes', function(newValue, oldValue) {\n                            var notFoundIds = 0;\n                            var newExpandedNodesMap = {};\n                            var $liElements = element.find('li');\n                            var existingScopes = [];\n                            // find all nodes visible on the tree and the scope $id of the scopes including them\n                            angular.forEach($liElements, function(liElement) {\n                                var $liElement = angular.element(liElement);\n                                var liScope = {\n                                    $id: $liElement.data('scope-id'),\n                                    node: $liElement.data('node')\n                                };\n                                existingScopes.push(liScope);\n                            });\n                            // iterate over the newValue, the new expanded nodes, and for each find it in the existingNodesAndScopes\n                            // if found, add the mapping $id -> node into newExpandedNodesMap\n                            // if not found, add the mapping num -> node into newExpandedNodesMap\n                            angular.forEach(newValue, function(newExNode) {\n                                var found = false;\n                                for (var i=0; (i < existingScopes.length) && !found; i++) {\n                                    var existingScope = existingScopes[i];\n                                    if (scope.options.equality(newExNode, existingScope.node , scope)) {\n                                        newExpandedNodesMap[existingScope.$id] = existingScope.node;\n                                        found = true;\n                                    }\n                                }\n                                if (!found)\n                                    newExpandedNodesMap['a' + notFoundIds++] = newExNode;\n                            });\n                            scope.expandedNodesMap = newExpandedNodesMap;\n                        });\n\n//                        scope.$watch('expandedNodesMap', function(newValue) {\n//\n//                        });\n\n                        //Rendering template for a root node\n                        treemodelCntr.template( scope, function(clone) {\n                            element.html('').append( clone );\n                        });\n                        // save the transclude function from compile (which is not bound to a scope as apposed to the one from link)\n                        // we can fix this to work with the link transclude function with angular 1.2.6. as for angular 1.2.0 we need\n                        // to keep using the compile function\n                        scope.$treeTransclude = childTranscludeFn;\n                    };\n                }\n            };\n        }])\n        .directive(\"setNodeToData\", ['$parse', function($parse) {\n            return {\n                restrict: 'A',\n                link: function($scope, $element, $attrs) {\n                    $element.data('node', $scope.node);\n                    $element.data('scope-id', $scope.$id);\n                }\n            };\n        }])\n        .directive(\"treeitem\", function() {\n            return {\n                restrict: 'E',\n                require: \"^treecontrol\",\n                link: function( scope, element, attrs, treemodelCntr) {\n                    // Rendering template for the current node\n                    treemodelCntr.template(scope, function(clone) {\n                        element.html('').append(clone);\n                    });\n                }\n            };\n        })\n        .directive(\"treeTransclude\", function () {\n            return {\n                controller: ['$scope',function ($scope) {\n                    ensureAllDefaultOptions($scope);\n                }],\n\n                link: function(scope, element, attrs, controller) {\n                    if (!scope.options.isLeaf(scope.node, scope)) {\n                        angular.forEach(scope.expandedNodesMap, function (node, id) {\n                            if (scope.options.equality(node, scope.node , scope)) {\n                                scope.expandedNodesMap[scope.$id] = scope.node;\n                                scope.expandedNodesMap[id] = undefined;\n                            }\n                        });\n                    }\n                    if (!scope.options.multiSelection && scope.options.equality(scope.node, scope.selectedNode , scope)) {\n                        scope.selectedNode = scope.node;\n                    } else if (scope.options.multiSelection) {\n                        var newSelectedNodes = [];\n                        for (var i = 0; (i < scope.selectedNodes.length); i++) {\n                            if (scope.options.equality(scope.node, scope.selectedNodes[i] , scope)) {\n                                newSelectedNodes.push(scope.node);\n                            }\n                        }\n                        scope.selectedNodes = newSelectedNodes;\n                    }\n\n                    // create a scope for the transclusion, whos parent is the parent of the tree control\n                    scope.transcludeScope = scope.parentScopeOfTree.$new();\n                    scope.transcludeScope.node = scope.node;\n                    scope.transcludeScope.$path = createPath(scope);\n                    scope.transcludeScope.$parentNode = (scope.$parent.node === scope.synteticRoot)?null:scope.$parent.node;\n                    scope.transcludeScope.$index = scope.$index;\n                    scope.transcludeScope.$first = scope.$first;\n                    scope.transcludeScope.$middle = scope.$middle;\n                    scope.transcludeScope.$last = scope.$last;\n                    scope.transcludeScope.$odd = scope.$odd;\n                    scope.transcludeScope.$even = scope.$even;\n                    scope.$on('$destroy', function() {\n                        scope.transcludeScope.$destroy();\n                    });\n\n                    scope.$treeTransclude(scope.transcludeScope, function(clone) {\n                        element.empty();\n                        element.append(clone);\n                    });\n                }\n            };\n        });\n})( angular );\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-tree-control/angular-tree-control.js\n ** module id = 174\n ** module chunks = 2\n **/","/**\n * State-based routing for AngularJS\n * @version v0.3.2\n * @link http://angular-ui.github.com/\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n\n/* commonjs package manager support (eg componentjs) */\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports){\n  module.exports = 'ui.router';\n}\n\n(function (window, angular, undefined) {\n/*jshint globalstrict:true*/\n/*global angular:false*/\n'use strict';\n\nvar isDefined = angular.isDefined,\n    isFunction = angular.isFunction,\n    isString = angular.isString,\n    isObject = angular.isObject,\n    isArray = angular.isArray,\n    forEach = angular.forEach,\n    extend = angular.extend,\n    copy = angular.copy,\n    toJson = angular.toJson;\n\nfunction inherit(parent, extra) {\n  return extend(new (extend(function() {}, { prototype: parent }))(), extra);\n}\n\nfunction merge(dst) {\n  forEach(arguments, function(obj) {\n    if (obj !== dst) {\n      forEach(obj, function(value, key) {\n        if (!dst.hasOwnProperty(key)) dst[key] = value;\n      });\n    }\n  });\n  return dst;\n}\n\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nfunction ancestors(first, second) {\n  var path = [];\n\n  for (var n in first.path) {\n    if (first.path[n] !== second.path[n]) break;\n    path.push(first.path[n]);\n  }\n  return path;\n}\n\n/**\n * IE8-safe wrapper for `Object.keys()`.\n *\n * @param {Object} object A JavaScript object.\n * @return {Array} Returns the keys of the object as an array.\n */\nfunction objectKeys(object) {\n  if (Object.keys) {\n    return Object.keys(object);\n  }\n  var result = [];\n\n  forEach(object, function(val, key) {\n    result.push(key);\n  });\n  return result;\n}\n\n/**\n * IE8-safe wrapper for `Array.prototype.indexOf()`.\n *\n * @param {Array} array A JavaScript array.\n * @param {*} value A value to search the array for.\n * @return {Number} Returns the array index value of `value`, or `-1` if not present.\n */\nfunction indexOf(array, value) {\n  if (Array.prototype.indexOf) {\n    return array.indexOf(value, Number(arguments[2]) || 0);\n  }\n  var len = array.length >>> 0, from = Number(arguments[2]) || 0;\n  from = (from < 0) ? Math.ceil(from) : Math.floor(from);\n\n  if (from < 0) from += len;\n\n  for (; from < len; from++) {\n    if (from in array && array[from] === value) return from;\n  }\n  return -1;\n}\n\n/**\n * Merges a set of parameters with all parameters inherited between the common parents of the\n * current state and a given destination state.\n *\n * @param {Object} currentParams The value of the current state parameters ($stateParams).\n * @param {Object} newParams The set of parameters which will be composited with inherited params.\n * @param {Object} $current Internal definition of object representing the current state.\n * @param {Object} $to Internal definition of object representing state to transition to.\n */\nfunction inheritParams(currentParams, newParams, $current, $to) {\n  var parents = ancestors($current, $to), parentParams, inherited = {}, inheritList = [];\n\n  for (var i in parents) {\n    if (!parents[i] || !parents[i].params) continue;\n    parentParams = objectKeys(parents[i].params);\n    if (!parentParams.length) continue;\n\n    for (var j in parentParams) {\n      if (indexOf(inheritList, parentParams[j]) >= 0) continue;\n      inheritList.push(parentParams[j]);\n      inherited[parentParams[j]] = currentParams[parentParams[j]];\n    }\n  }\n  return extend({}, inherited, newParams);\n}\n\n/**\n * Performs a non-strict comparison of the subset of two objects, defined by a list of keys.\n *\n * @param {Object} a The first object.\n * @param {Object} b The second object.\n * @param {Array} keys The list of keys within each object to compare. If the list is empty or not specified,\n *                     it defaults to the list of keys in `a`.\n * @return {Boolean} Returns `true` if the keys match, otherwise `false`.\n */\nfunction equalForKeys(a, b, keys) {\n  if (!keys) {\n    keys = [];\n    for (var n in a) keys.push(n); // Used instead of Object.keys() for IE8 compatibility\n  }\n\n  for (var i=0; i<keys.length; i++) {\n    var k = keys[i];\n    if (a[k] != b[k]) return false; // Not '===', values aren't necessarily normalized\n  }\n  return true;\n}\n\n/**\n * Returns the subset of an object, based on a list of keys.\n *\n * @param {Array} keys\n * @param {Object} values\n * @return {Boolean} Returns a subset of `values`.\n */\nfunction filterByKeys(keys, values) {\n  var filtered = {};\n\n  forEach(keys, function (name) {\n    filtered[name] = values[name];\n  });\n  return filtered;\n}\n\n// like _.indexBy\n// when you know that your index values will be unique, or you want last-one-in to win\nfunction indexBy(array, propName) {\n  var result = {};\n  forEach(array, function(item) {\n    result[item[propName]] = item;\n  });\n  return result;\n}\n\n// extracted from underscore.js\n// Return a copy of the object only containing the whitelisted properties.\nfunction pick(obj) {\n  var copy = {};\n  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n  forEach(keys, function(key) {\n    if (key in obj) copy[key] = obj[key];\n  });\n  return copy;\n}\n\n// extracted from underscore.js\n// Return a copy of the object omitting the blacklisted properties.\nfunction omit(obj) {\n  var copy = {};\n  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n  for (var key in obj) {\n    if (indexOf(keys, key) == -1) copy[key] = obj[key];\n  }\n  return copy;\n}\n\nfunction pluck(collection, key) {\n  var result = isArray(collection) ? [] : {};\n\n  forEach(collection, function(val, i) {\n    result[i] = isFunction(key) ? key(val) : val[key];\n  });\n  return result;\n}\n\nfunction filter(collection, callback) {\n  var array = isArray(collection);\n  var result = array ? [] : {};\n  forEach(collection, function(val, i) {\n    if (callback(val, i)) {\n      result[array ? result.length : i] = val;\n    }\n  });\n  return result;\n}\n\nfunction map(collection, callback) {\n  var result = isArray(collection) ? [] : {};\n\n  forEach(collection, function(val, i) {\n    result[i] = callback(val, i);\n  });\n  return result;\n}\n\n// issue #2676 #2889\nfunction silenceUncaughtInPromise (promise) {\n  return promise.then(undefined, function() {}) && promise;\n}\n\n/**\n * @ngdoc overview\n * @name ui.router.util\n *\n * @description\n * # ui.router.util sub-module\n *\n * This module is a dependency of other sub-modules. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n *\n */\nangular.module('ui.router.util', ['ng']);\n\n/**\n * @ngdoc overview\n * @name ui.router.router\n * \n * @requires ui.router.util\n *\n * @description\n * # ui.router.router sub-module\n *\n * This module is a dependency of other sub-modules. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n */\nangular.module('ui.router.router', ['ui.router.util']);\n\n/**\n * @ngdoc overview\n * @name ui.router.state\n * \n * @requires ui.router.router\n * @requires ui.router.util\n *\n * @description\n * # ui.router.state sub-module\n *\n * This module is a dependency of the main ui.router module. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n * \n */\nangular.module('ui.router.state', ['ui.router.router', 'ui.router.util']);\n\n/**\n * @ngdoc overview\n * @name ui.router\n *\n * @requires ui.router.state\n *\n * @description\n * # ui.router\n * \n * ## The main module for ui.router \n * There are several sub-modules included with the ui.router module, however only this module is needed\n * as a dependency within your angular app. The other modules are for organization purposes. \n *\n * The modules are:\n * * ui.router - the main \"umbrella\" module\n * * ui.router.router - \n * \n * *You'll need to include **only** this module as the dependency within your angular app.*\n * \n * <pre>\n * <!doctype html>\n * <html ng-app=\"myApp\">\n * <head>\n *   <script src=\"js/angular.js\"></script>\n *   <!-- Include the ui-router script -->\n *   <script src=\"js/angular-ui-router.min.js\"></script>\n *   <script>\n *     // ...and add 'ui.router' as a dependency\n *     var myApp = angular.module('myApp', ['ui.router']);\n *   </script>\n * </head>\n * <body>\n * </body>\n * </html>\n * </pre>\n */\nangular.module('ui.router', ['ui.router.state']);\n\nangular.module('ui.router.compat', ['ui.router']);\n\n/**\n * @ngdoc object\n * @name ui.router.util.$resolve\n *\n * @requires $q\n * @requires $injector\n *\n * @description\n * Manages resolution of (acyclic) graphs of promises.\n */\n$Resolve.$inject = ['$q', '$injector'];\nfunction $Resolve(  $q,    $injector) {\n  \n  var VISIT_IN_PROGRESS = 1,\n      VISIT_DONE = 2,\n      NOTHING = {},\n      NO_DEPENDENCIES = [],\n      NO_LOCALS = NOTHING,\n      NO_PARENT = extend($q.when(NOTHING), { $$promises: NOTHING, $$values: NOTHING });\n  \n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$resolve#study\n   * @methodOf ui.router.util.$resolve\n   *\n   * @description\n   * Studies a set of invocables that are likely to be used multiple times.\n   * <pre>\n   * $resolve.study(invocables)(locals, parent, self)\n   * </pre>\n   * is equivalent to\n   * <pre>\n   * $resolve.resolve(invocables, locals, parent, self)\n   * </pre>\n   * but the former is more efficient (in fact `resolve` just calls `study` \n   * internally).\n   *\n   * @param {object} invocables Invocable objects\n   * @return {function} a function to pass in locals, parent and self\n   */\n  this.study = function (invocables) {\n    if (!isObject(invocables)) throw new Error(\"'invocables' must be an object\");\n    var invocableKeys = objectKeys(invocables || {});\n    \n    // Perform a topological sort of invocables to build an ordered plan\n    var plan = [], cycle = [], visited = {};\n    function visit(value, key) {\n      if (visited[key] === VISIT_DONE) return;\n      \n      cycle.push(key);\n      if (visited[key] === VISIT_IN_PROGRESS) {\n        cycle.splice(0, indexOf(cycle, key));\n        throw new Error(\"Cyclic dependency: \" + cycle.join(\" -> \"));\n      }\n      visited[key] = VISIT_IN_PROGRESS;\n      \n      if (isString(value)) {\n        plan.push(key, [ function() { return $injector.get(value); }], NO_DEPENDENCIES);\n      } else {\n        var params = $injector.annotate(value);\n        forEach(params, function (param) {\n          if (param !== key && invocables.hasOwnProperty(param)) visit(invocables[param], param);\n        });\n        plan.push(key, value, params);\n      }\n      \n      cycle.pop();\n      visited[key] = VISIT_DONE;\n    }\n    forEach(invocables, visit);\n    invocables = cycle = visited = null; // plan is all that's required\n    \n    function isResolve(value) {\n      return isObject(value) && value.then && value.$$promises;\n    }\n    \n    return function (locals, parent, self) {\n      if (isResolve(locals) && self === undefined) {\n        self = parent; parent = locals; locals = null;\n      }\n      if (!locals) locals = NO_LOCALS;\n      else if (!isObject(locals)) {\n        throw new Error(\"'locals' must be an object\");\n      }       \n      if (!parent) parent = NO_PARENT;\n      else if (!isResolve(parent)) {\n        throw new Error(\"'parent' must be a promise returned by $resolve.resolve()\");\n      }\n      \n      // To complete the overall resolution, we have to wait for the parent\n      // promise and for the promise for each invokable in our plan.\n      var resolution = $q.defer(),\n          result = resolution.promise,\n          promises = result.$$promises = {},\n          values = extend({}, locals),\n          wait = 1 + plan.length/3,\n          merged = false;\n          \n      function done() {\n        // Merge parent values we haven't got yet and publish our own $$values\n        if (!--wait) {\n          if (!merged) merge(values, parent.$$values); \n          result.$$values = values;\n          result.$$promises = result.$$promises || true; // keep for isResolve()\n          delete result.$$inheritedValues;\n          resolution.resolve(values);\n        }\n      }\n      \n      function fail(reason) {\n        result.$$failure = reason;\n        resolution.reject(reason);\n      }\n\n      // Short-circuit if parent has already failed\n      if (isDefined(parent.$$failure)) {\n        fail(parent.$$failure);\n        return result;\n      }\n      \n      if (parent.$$inheritedValues) {\n        merge(values, omit(parent.$$inheritedValues, invocableKeys));\n      }\n\n      // Merge parent values if the parent has already resolved, or merge\n      // parent promises and wait if the parent resolve is still in progress.\n      extend(promises, parent.$$promises);\n      if (parent.$$values) {\n        merged = merge(values, omit(parent.$$values, invocableKeys));\n        result.$$inheritedValues = omit(parent.$$values, invocableKeys);\n        done();\n      } else {\n        if (parent.$$inheritedValues) {\n          result.$$inheritedValues = omit(parent.$$inheritedValues, invocableKeys);\n        }        \n        parent.then(done, fail);\n      }\n      \n      // Process each invocable in the plan, but ignore any where a local of the same name exists.\n      for (var i=0, ii=plan.length; i<ii; i+=3) {\n        if (locals.hasOwnProperty(plan[i])) done();\n        else invoke(plan[i], plan[i+1], plan[i+2]);\n      }\n      \n      function invoke(key, invocable, params) {\n        // Create a deferred for this invocation. Failures will propagate to the resolution as well.\n        var invocation = $q.defer(), waitParams = 0;\n        function onfailure(reason) {\n          invocation.reject(reason);\n          fail(reason);\n        }\n        // Wait for any parameter that we have a promise for (either from parent or from this\n        // resolve; in that case study() will have made sure it's ordered before us in the plan).\n        forEach(params, function (dep) {\n          if (promises.hasOwnProperty(dep) && !locals.hasOwnProperty(dep)) {\n            waitParams++;\n            promises[dep].then(function (result) {\n              values[dep] = result;\n              if (!(--waitParams)) proceed();\n            }, onfailure);\n          }\n        });\n        if (!waitParams) proceed();\n        function proceed() {\n          if (isDefined(result.$$failure)) return;\n          try {\n            invocation.resolve($injector.invoke(invocable, self, values));\n            invocation.promise.then(function (result) {\n              values[key] = result;\n              done();\n            }, onfailure);\n          } catch (e) {\n            onfailure(e);\n          }\n        }\n        // Publish promise synchronously; invocations further down in the plan may depend on it.\n        promises[key] = invocation.promise;\n      }\n      \n      return result;\n    };\n  };\n  \n  /**\n   * @ngdoc function\n   * @name ui.router.util.$resolve#resolve\n   * @methodOf ui.router.util.$resolve\n   *\n   * @description\n   * Resolves a set of invocables. An invocable is a function to be invoked via \n   * `$injector.invoke()`, and can have an arbitrary number of dependencies. \n   * An invocable can either return a value directly,\n   * or a `$q` promise. If a promise is returned it will be resolved and the \n   * resulting value will be used instead. Dependencies of invocables are resolved \n   * (in this order of precedence)\n   *\n   * - from the specified `locals`\n   * - from another invocable that is part of this `$resolve` call\n   * - from an invocable that is inherited from a `parent` call to `$resolve` \n   *   (or recursively\n   * - from any ancestor `$resolve` of that parent).\n   *\n   * The return value of `$resolve` is a promise for an object that contains \n   * (in this order of precedence)\n   *\n   * - any `locals` (if specified)\n   * - the resolved return values of all injectables\n   * - any values inherited from a `parent` call to `$resolve` (if specified)\n   *\n   * The promise will resolve after the `parent` promise (if any) and all promises \n   * returned by injectables have been resolved. If any invocable \n   * (or `$injector.invoke`) throws an exception, or if a promise returned by an \n   * invocable is rejected, the `$resolve` promise is immediately rejected with the \n   * same error. A rejection of a `parent` promise (if specified) will likewise be \n   * propagated immediately. Once the `$resolve` promise has been rejected, no \n   * further invocables will be called.\n   * \n   * Cyclic dependencies between invocables are not permitted and will cause `$resolve`\n   * to throw an error. As a special case, an injectable can depend on a parameter \n   * with the same name as the injectable, which will be fulfilled from the `parent` \n   * injectable of the same name. This allows inherited values to be decorated. \n   * Note that in this case any other injectable in the same `$resolve` with the same\n   * dependency would see the decorated value, not the inherited value.\n   *\n   * Note that missing dependencies -- unlike cyclic dependencies -- will cause an \n   * (asynchronous) rejection of the `$resolve` promise rather than a (synchronous) \n   * exception.\n   *\n   * Invocables are invoked eagerly as soon as all dependencies are available. \n   * This is true even for dependencies inherited from a `parent` call to `$resolve`.\n   *\n   * As a special case, an invocable can be a string, in which case it is taken to \n   * be a service name to be passed to `$injector.get()`. This is supported primarily \n   * for backwards-compatibility with the `resolve` property of `$routeProvider` \n   * routes.\n   *\n   * @param {object} invocables functions to invoke or \n   * `$injector` services to fetch.\n   * @param {object} locals  values to make available to the injectables\n   * @param {object} parent  a promise returned by another call to `$resolve`.\n   * @param {object} self  the `this` for the invoked methods\n   * @return {object} Promise for an object that contains the resolved return value\n   * of all invocables, as well as any inherited and local values.\n   */\n  this.resolve = function (invocables, locals, parent, self) {\n    return this.study(invocables)(locals, parent, self);\n  };\n}\n\nangular.module('ui.router.util').service('$resolve', $Resolve);\n\n\n/**\n * @ngdoc object\n * @name ui.router.util.$templateFactory\n *\n * @requires $http\n * @requires $templateCache\n * @requires $injector\n *\n * @description\n * Service. Manages loading of templates.\n */\n$TemplateFactory.$inject = ['$http', '$templateCache', '$injector'];\nfunction $TemplateFactory(  $http,   $templateCache,   $injector) {\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromConfig\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template from a configuration object. \n   *\n   * @param {object} config Configuration object for which to load a template. \n   * The following properties are search in the specified order, and the first one \n   * that is defined is used to create the template:\n   *\n   * @param {string|object} config.template html string template or function to \n   * load via {@link ui.router.util.$templateFactory#fromString fromString}.\n   * @param {string|object} config.templateUrl url to load or a function returning \n   * the url to load via {@link ui.router.util.$templateFactory#fromUrl fromUrl}.\n   * @param {Function} config.templateProvider function to invoke via \n   * {@link ui.router.util.$templateFactory#fromProvider fromProvider}.\n   * @param {object} params  Parameters to pass to the template function.\n   * @param {object} locals Locals to pass to `invoke` if the template is loaded \n   * via a `templateProvider`. Defaults to `{ params: params }`.\n   *\n   * @return {string|object}  The template html as a string, or a promise for \n   * that string,or `null` if no template is configured.\n   */\n  this.fromConfig = function (config, params, locals) {\n    return (\n      isDefined(config.template) ? this.fromString(config.template, params) :\n      isDefined(config.templateUrl) ? this.fromUrl(config.templateUrl, params) :\n      isDefined(config.templateProvider) ? this.fromProvider(config.templateProvider, params, locals) :\n      null\n    );\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromString\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template from a string or a function returning a string.\n   *\n   * @param {string|object} template html template as a string or function that \n   * returns an html template as a string.\n   * @param {object} params Parameters to pass to the template function.\n   *\n   * @return {string|object} The template html as a string, or a promise for that \n   * string.\n   */\n  this.fromString = function (template, params) {\n    return isFunction(template) ? template(params) : template;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromUrl\n   * @methodOf ui.router.util.$templateFactory\n   * \n   * @description\n   * Loads a template from the a URL via `$http` and `$templateCache`.\n   *\n   * @param {string|Function} url url of the template to load, or a function \n   * that returns a url.\n   * @param {Object} params Parameters to pass to the url function.\n   * @return {string|Promise.<string>} The template html as a string, or a promise \n   * for that string.\n   */\n  this.fromUrl = function (url, params) {\n    if (isFunction(url)) url = url(params);\n    if (url == null) return null;\n    else return $http\n        .get(url, { cache: $templateCache, headers: { Accept: 'text/html' }})\n        .then(function(response) { return response.data; });\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromProvider\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template by invoking an injectable provider function.\n   *\n   * @param {Function} provider Function to invoke via `$injector.invoke`\n   * @param {Object} params Parameters for the template.\n   * @param {Object} locals Locals to pass to `invoke`. Defaults to \n   * `{ params: params }`.\n   * @return {string|Promise.<string>} The template html as a string, or a promise \n   * for that string.\n   */\n  this.fromProvider = function (provider, params, locals) {\n    return $injector.invoke(provider, null, locals || { params: params });\n  };\n}\n\nangular.module('ui.router.util').service('$templateFactory', $TemplateFactory);\n\nvar $$UMFP; // reference to $UrlMatcherFactoryProvider\n\n/**\n * @ngdoc object\n * @name ui.router.util.type:UrlMatcher\n *\n * @description\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL. A URL pattern consists of a path pattern, optionally followed by '?' and a list\n * of search parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by {@link ui.router.util.type:UrlMatcher#methods_exec exec}.\n *\n * Path parameter placeholders can be specified using simple colon/catch-all syntax or curly brace\n * syntax, which optionally allows a regular expression for the parameter to be specified:\n *\n * * `':'` name - colon placeholder\n * * `'*'` name - catch-all placeholder\n * * `'{' name '}'` - curly placeholder\n * * `'{' name ':' regexp|type '}'` - curly placeholder with regexp or type name. Should the\n *   regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters). For colon\n * placeholders or curly placeholders without an explicit regexp, a path parameter matches any\n * number of characters other than '/'. For catch-all placeholders the path parameter matches\n * any number of characters.\n *\n * Examples:\n *\n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` Type matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n * @param {string} pattern  The pattern to compile into a matcher.\n * @param {Object} config  A configuration object hash:\n * @param {Object=} parentMatcher Used to concatenate the pattern/config onto\n *   an existing UrlMatcher\n *\n * * `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n * * `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\n *\n * @property {string} prefix  A static prefix of this pattern. The matcher guarantees that any\n *   URL matching this matcher (i.e. any string for which {@link ui.router.util.type:UrlMatcher#methods_exec exec()} returns\n *   non-null) will start with this prefix.\n *\n * @property {string} source  The pattern that was passed into the constructor\n *\n * @property {string} sourcePath  The path portion of the source property\n *\n * @property {string} sourceSearch  The search portion of the source property\n *\n * @property {string} regex  The constructed regex that will be used to match against the url when\n *   it is time to determine which url will match.\n *\n * @returns {Object}  New `UrlMatcher` object\n */\nfunction UrlMatcher(pattern, config, parentMatcher) {\n  config = extend({ params: {} }, isObject(config) ? config : {});\n\n  // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n  //   '*' name\n  //   ':' name\n  //   '{' name '}'\n  //   '{' name ':' regexp '}'\n  // The regular expression is somewhat complicated due to the need to allow curly braces\n  // inside the regular expression. The placeholder regexp breaks down as follows:\n  //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n  //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n  //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n  //    [^{}\\\\]+                       - anything other than curly braces or backslash\n  //    \\\\.                            - a backslash escape\n  //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n  var placeholder       = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n      searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n      compiled = '^', last = 0, m,\n      segments = this.segments = [],\n      parentParams = parentMatcher ? parentMatcher.params : {},\n      params = this.params = parentMatcher ? parentMatcher.params.$$new() : new $$UMFP.ParamSet(),\n      paramNames = [];\n\n  function addParameter(id, type, config, location) {\n    paramNames.push(id);\n    if (parentParams[id]) return parentParams[id];\n    if (!/^\\w+([-.]+\\w+)*(?:\\[\\])?$/.test(id)) throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n    if (params[id]) throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n    params[id] = new $$UMFP.Param(id, type, config, location);\n    return params[id];\n  }\n\n  function quoteRegExp(string, pattern, squash, optional) {\n    var surroundPattern = ['',''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\n    if (!pattern) return result;\n    switch(squash) {\n      case false: surroundPattern = ['(', ')' + (optional ? \"?\" : \"\")]; break;\n      case true:\n        result = result.replace(/\\/$/, '');\n        surroundPattern = ['(?:\\/(', ')|\\/)?'];\n      break;\n      default:    surroundPattern = ['(' + squash + \"|\", ')?']; break;\n    }\n    return result + surroundPattern[0] + pattern + surroundPattern[1];\n  }\n\n  this.source = pattern;\n\n  // Split into static segments separated by path parameter placeholders.\n  // The number of segments is always 1 more than the number of parameters.\n  function matchDetails(m, isSearch) {\n    var id, regexp, segment, type, cfg, arrayMode;\n    id          = m[2] || m[3]; // IE[78] returns '' for unmatched groups instead of null\n    cfg         = config.params[id];\n    segment     = pattern.substring(last, m.index);\n    regexp      = isSearch ? m[4] : m[4] || (m[1] == '*' ? '.*' : null);\n\n    if (regexp) {\n      type      = $$UMFP.type(regexp) || inherit($$UMFP.type(\"string\"), { pattern: new RegExp(regexp, config.caseInsensitive ? 'i' : undefined) });\n    }\n\n    return {\n      id: id, regexp: regexp, segment: segment, type: type, cfg: cfg\n    };\n  }\n\n  var p, param, segment;\n  while ((m = placeholder.exec(pattern))) {\n    p = matchDetails(m, false);\n    if (p.segment.indexOf('?') >= 0) break; // we're into the search part\n\n    param = addParameter(p.id, p.type, p.cfg, \"path\");\n    compiled += quoteRegExp(p.segment, param.type.pattern.source, param.squash, param.isOptional);\n    segments.push(p.segment);\n    last = placeholder.lastIndex;\n  }\n  segment = pattern.substring(last);\n\n  // Find any search parameter names and remove them from the last segment\n  var i = segment.indexOf('?');\n\n  if (i >= 0) {\n    var search = this.sourceSearch = segment.substring(i);\n    segment = segment.substring(0, i);\n    this.sourcePath = pattern.substring(0, last + i);\n\n    if (search.length > 0) {\n      last = 0;\n      while ((m = searchPlaceholder.exec(search))) {\n        p = matchDetails(m, true);\n        param = addParameter(p.id, p.type, p.cfg, \"search\");\n        last = placeholder.lastIndex;\n        // check if ?&\n      }\n    }\n  } else {\n    this.sourcePath = pattern;\n    this.sourceSearch = '';\n  }\n\n  compiled += quoteRegExp(segment) + (config.strict === false ? '\\/?' : '') + '$';\n  segments.push(segment);\n\n  this.regexp = new RegExp(compiled, config.caseInsensitive ? 'i' : undefined);\n  this.prefix = segments[0];\n  this.$$paramNames = paramNames;\n}\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#concat\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Returns a new matcher for a pattern constructed by appending the path part and adding the\n * search parameters of the specified pattern to this pattern. The current pattern is not\n * modified. This can be understood as creating a pattern for URLs that are relative to (or\n * suffixes of) the current pattern.\n *\n * @example\n * The following two matchers are equivalent:\n * <pre>\n * new UrlMatcher('/user/{id}?q').concat('/details?date');\n * new UrlMatcher('/user/{id}/details?q&date');\n * </pre>\n *\n * @param {string} pattern  The pattern to append.\n * @param {Object} config  An object hash of the configuration for the matcher.\n * @returns {UrlMatcher}  A matcher for the concatenated pattern.\n */\nUrlMatcher.prototype.concat = function (pattern, config) {\n  // Because order of search parameters is irrelevant, we can add our own search\n  // parameters to the end of the new pattern. Parse the new pattern by itself\n  // and then join the bits together, but it's much easier to do this on a string level.\n  var defaultConfig = {\n    caseInsensitive: $$UMFP.caseInsensitive(),\n    strict: $$UMFP.strictMode(),\n    squash: $$UMFP.defaultSquashPolicy()\n  };\n  return new UrlMatcher(this.sourcePath + pattern + this.sourceSearch, extend(defaultConfig, config), this);\n};\n\nUrlMatcher.prototype.toString = function () {\n  return this.source;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#exec\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Tests the specified path against this matcher, and returns an object containing the captured\n * parameter values, or null if the path does not match. The returned object contains the values\n * of any search parameters that are mentioned in the pattern, but their value may be null if\n * they are not present in `searchParams`. This means that search parameters are always treated\n * as optional.\n *\n * @example\n * <pre>\n * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n *   x: '1', q: 'hello'\n * });\n * // returns { id: 'bob', q: 'hello', r: null }\n * </pre>\n *\n * @param {string} path  The URL path to match, e.g. `$location.path()`.\n * @param {Object} searchParams  URL search parameters, e.g. `$location.search()`.\n * @returns {Object}  The captured parameter values.\n */\nUrlMatcher.prototype.exec = function (path, searchParams) {\n  var m = this.regexp.exec(path);\n  if (!m) return null;\n  searchParams = searchParams || {};\n\n  var paramNames = this.parameters(), nTotal = paramNames.length,\n    nPath = this.segments.length - 1,\n    values = {}, i, j, cfg, paramName;\n\n  if (nPath !== m.length - 1) throw new Error(\"Unbalanced capture group in route '\" + this.source + \"'\");\n\n  function decodePathArray(string) {\n    function reverseString(str) { return str.split(\"\").reverse().join(\"\"); }\n    function unquoteDashes(str) { return str.replace(/\\\\-/g, \"-\"); }\n\n    var split = reverseString(string).split(/-(?!\\\\)/);\n    var allReversed = map(split, reverseString);\n    return map(allReversed, unquoteDashes).reverse();\n  }\n\n  var param, paramVal;\n  for (i = 0; i < nPath; i++) {\n    paramName = paramNames[i];\n    param = this.params[paramName];\n    paramVal = m[i+1];\n    // if the param value matches a pre-replace pair, replace the value before decoding.\n    for (j = 0; j < param.replace.length; j++) {\n      if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;\n    }\n    if (paramVal && param.array === true) paramVal = decodePathArray(paramVal);\n    if (isDefined(paramVal)) paramVal = param.type.decode(paramVal);\n    values[paramName] = param.value(paramVal);\n  }\n  for (/**/; i < nTotal; i++) {\n    paramName = paramNames[i];\n    values[paramName] = this.params[paramName].value(searchParams[paramName]);\n    param = this.params[paramName];\n    paramVal = searchParams[paramName];\n    for (j = 0; j < param.replace.length; j++) {\n      if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;\n    }\n    if (isDefined(paramVal)) paramVal = param.type.decode(paramVal);\n    values[paramName] = param.value(paramVal);\n  }\n\n  return values;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#parameters\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Returns the names of all path and search parameters of this pattern in an unspecified order.\n *\n * @returns {Array.<string>}  An array of parameter names. Must be treated as read-only. If the\n *    pattern has no parameters, an empty array is returned.\n */\nUrlMatcher.prototype.parameters = function (param) {\n  if (!isDefined(param)) return this.$$paramNames;\n  return this.params[param] || null;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#validates\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Checks an object hash of parameters to validate their correctness according to the parameter\n * types of this `UrlMatcher`.\n *\n * @param {Object} params The object hash of parameters to validate.\n * @returns {boolean} Returns `true` if `params` validates, otherwise `false`.\n */\nUrlMatcher.prototype.validates = function (params) {\n  return this.params.$$validates(params);\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#format\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Creates a URL that matches this pattern by substituting the specified values\n * for the path and search parameters. Null values for path parameters are\n * treated as empty strings.\n *\n * @example\n * <pre>\n * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n * // returns '/user/bob?q=yes'\n * </pre>\n *\n * @param {Object} values  the values to substitute for the parameters in this pattern.\n * @returns {string}  the formatted URL (path and optionally search part).\n */\nUrlMatcher.prototype.format = function (values) {\n  values = values || {};\n  var segments = this.segments, params = this.parameters(), paramset = this.params;\n  if (!this.validates(values)) return null;\n\n  var i, search = false, nPath = segments.length - 1, nTotal = params.length, result = segments[0];\n\n  function encodeDashes(str) { // Replace dashes with encoded \"\\-\"\n    return encodeURIComponent(str).replace(/-/g, function(c) { return '%5C%' + c.charCodeAt(0).toString(16).toUpperCase(); });\n  }\n\n  for (i = 0; i < nTotal; i++) {\n    var isPathParam = i < nPath;\n    var name = params[i], param = paramset[name], value = param.value(values[name]);\n    var isDefaultValue = param.isOptional && param.type.equals(param.value(), value);\n    var squash = isDefaultValue ? param.squash : false;\n    var encoded = param.type.encode(value);\n\n    if (isPathParam) {\n      var nextSegment = segments[i + 1];\n      var isFinalPathParam = i + 1 === nPath;\n\n      if (squash === false) {\n        if (encoded != null) {\n          if (isArray(encoded)) {\n            result += map(encoded, encodeDashes).join(\"-\");\n          } else {\n            result += encodeURIComponent(encoded);\n          }\n        }\n        result += nextSegment;\n      } else if (squash === true) {\n        var capture = result.match(/\\/$/) ? /\\/?(.*)/ : /(.*)/;\n        result += nextSegment.match(capture)[1];\n      } else if (isString(squash)) {\n        result += squash + nextSegment;\n      }\n\n      if (isFinalPathParam && param.squash === true && result.slice(-1) === '/') result = result.slice(0, -1);\n    } else {\n      if (encoded == null || (isDefaultValue && squash !== false)) continue;\n      if (!isArray(encoded)) encoded = [ encoded ];\n      if (encoded.length === 0) continue;\n      encoded = map(encoded, encodeURIComponent).join('&' + name + '=');\n      result += (search ? '&' : '?') + (name + '=' + encoded);\n      search = true;\n    }\n  }\n\n  return result;\n};\n\n/**\n * @ngdoc object\n * @name ui.router.util.type:Type\n *\n * @description\n * Implements an interface to define custom parameter types that can be decoded from and encoded to\n * string parameters matched in a URL. Used by {@link ui.router.util.type:UrlMatcher `UrlMatcher`}\n * objects when matching or formatting URLs, or comparing or validating parameter values.\n *\n * See {@link ui.router.util.$urlMatcherFactory#methods_type `$urlMatcherFactory#type()`} for more\n * information on registering custom types.\n *\n * @param {Object} config  A configuration object which contains the custom type definition.  The object's\n *        properties will override the default methods and/or pattern in `Type`'s public interface.\n * @example\n * <pre>\n * {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n * </pre>\n *\n * @property {RegExp} pattern The regular expression pattern used to match values of this type when\n *           coming from a substring of a URL.\n *\n * @returns {Object}  Returns a new `Type` object.\n */\nfunction Type(config) {\n  extend(this, config);\n}\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#is\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Detects whether a value is of a particular type. Accepts a native (decoded) value\n * and determines whether it matches the current `Type` object.\n *\n * @param {*} val  The value to check.\n * @param {string} key  Optional. If the type check is happening in the context of a specific\n *        {@link ui.router.util.type:UrlMatcher `UrlMatcher`} object, this is the name of the\n *        parameter in which `val` is stored. Can be used for meta-programming of `Type` objects.\n * @returns {Boolean}  Returns `true` if the value matches the type, otherwise `false`.\n */\nType.prototype.is = function(val, key) {\n  return true;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#encode\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Encodes a custom/native type value to a string that can be embedded in a URL. Note that the\n * return value does *not* need to be URL-safe (i.e. passed through `encodeURIComponent()`), it\n * only needs to be a representation of `val` that has been coerced to a string.\n *\n * @param {*} val  The value to encode.\n * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n *        meta-programming of `Type` objects.\n * @returns {string}  Returns a string representation of `val` that can be encoded in a URL.\n */\nType.prototype.encode = function(val, key) {\n  return val;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#decode\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Converts a parameter value (from URL string or transition param) to a custom/native value.\n *\n * @param {string} val  The URL parameter value to decode.\n * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n *        meta-programming of `Type` objects.\n * @returns {*}  Returns a custom representation of the URL parameter value.\n */\nType.prototype.decode = function(val, key) {\n  return val;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#equals\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Determines whether two decoded values are equivalent.\n *\n * @param {*} a  A value to compare against.\n * @param {*} b  A value to compare against.\n * @returns {Boolean}  Returns `true` if the values are equivalent/equal, otherwise `false`.\n */\nType.prototype.equals = function(a, b) {\n  return a == b;\n};\n\nType.prototype.$subPattern = function() {\n  var sub = this.pattern.toString();\n  return sub.substr(1, sub.length - 2);\n};\n\nType.prototype.pattern = /.*/;\n\nType.prototype.toString = function() { return \"{Type:\" + this.name + \"}\"; };\n\n/** Given an encoded string, or a decoded object, returns a decoded object */\nType.prototype.$normalize = function(val) {\n  return this.is(val) ? val : this.decode(val);\n};\n\n/*\n * Wraps an existing custom Type as an array of Type, depending on 'mode'.\n * e.g.:\n * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n * - url: \"/path?queryParam=1&queryParam=2\n * - $stateParams.queryParam will be [1, 2]\n * if `mode` is \"auto\", then\n * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n */\nType.prototype.$asArray = function(mode, isSearch) {\n  if (!mode) return this;\n  if (mode === \"auto\" && !isSearch) throw new Error(\"'auto' array mode is for query parameters only\");\n\n  function ArrayType(type, mode) {\n    function bindTo(type, callbackName) {\n      return function() {\n        return type[callbackName].apply(type, arguments);\n      };\n    }\n\n    // Wrap non-array value as array\n    function arrayWrap(val) { return isArray(val) ? val : (isDefined(val) ? [ val ] : []); }\n    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n    function arrayUnwrap(val) {\n      switch(val.length) {\n        case 0: return undefined;\n        case 1: return mode === \"auto\" ? val[0] : val;\n        default: return val;\n      }\n    }\n    function falsey(val) { return !val; }\n\n    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n    function arrayHandler(callback, allTruthyMode) {\n      return function handleArray(val) {\n        if (isArray(val) && val.length === 0) return val;\n        val = arrayWrap(val);\n        var result = map(val, callback);\n        if (allTruthyMode === true)\n          return filter(result, falsey).length === 0;\n        return arrayUnwrap(result);\n      };\n    }\n\n    // Wraps type (.equals) functions to operate on each value of an array\n    function arrayEqualsHandler(callback) {\n      return function handleArray(val1, val2) {\n        var left = arrayWrap(val1), right = arrayWrap(val2);\n        if (left.length !== right.length) return false;\n        for (var i = 0; i < left.length; i++) {\n          if (!callback(left[i], right[i])) return false;\n        }\n        return true;\n      };\n    }\n\n    this.encode = arrayHandler(bindTo(type, 'encode'));\n    this.decode = arrayHandler(bindTo(type, 'decode'));\n    this.is     = arrayHandler(bindTo(type, 'is'), true);\n    this.equals = arrayEqualsHandler(bindTo(type, 'equals'));\n    this.pattern = type.pattern;\n    this.$normalize = arrayHandler(bindTo(type, '$normalize'));\n    this.name = type.name;\n    this.$arrayMode = mode;\n  }\n\n  return new ArrayType(this, mode);\n};\n\n\n\n/**\n * @ngdoc object\n * @name ui.router.util.$urlMatcherFactory\n *\n * @description\n * Factory for {@link ui.router.util.type:UrlMatcher `UrlMatcher`} instances. The factory\n * is also available to providers under the name `$urlMatcherFactoryProvider`.\n */\nfunction $UrlMatcherFactory() {\n  $$UMFP = this;\n\n  var isCaseInsensitive = false, isStrictMode = true, defaultSquashPolicy = false;\n\n  // Use tildes to pre-encode slashes.\n  // If the slashes are simply URLEncoded, the browser can choose to pre-decode them,\n  // and bidirectional encoding/decoding fails.\n  // Tilde was chosen because it's not a RFC 3986 section 2.2 Reserved Character\n  function valToString(val) { return val != null ? val.toString().replace(/(~|\\/)/g, function (m) { return {'~':'~~', '/':'~2F'}[m]; }) : val; }\n  function valFromString(val) { return val != null ? val.toString().replace(/(~~|~2F)/g, function (m) { return {'~~':'~', '~2F':'/'}[m]; }) : val; }\n\n  var $types = {}, enqueue = true, typeQueue = [], injector, defaultTypes = {\n    \"string\": {\n      encode: valToString,\n      decode: valFromString,\n      // TODO: in 1.0, make string .is() return false if value is undefined/null by default.\n      // In 0.2.x, string params are optional by default for backwards compat\n      is: function(val) { return val == null || !isDefined(val) || typeof val === \"string\"; },\n      pattern: /[^/]*/\n    },\n    \"int\": {\n      encode: valToString,\n      decode: function(val) { return parseInt(val, 10); },\n      is: function(val) { return isDefined(val) && this.decode(val.toString()) === val; },\n      pattern: /\\d+/\n    },\n    \"bool\": {\n      encode: function(val) { return val ? 1 : 0; },\n      decode: function(val) { return parseInt(val, 10) !== 0; },\n      is: function(val) { return val === true || val === false; },\n      pattern: /0|1/\n    },\n    \"date\": {\n      encode: function (val) {\n        if (!this.is(val))\n          return undefined;\n        return [ val.getFullYear(),\n          ('0' + (val.getMonth() + 1)).slice(-2),\n          ('0' + val.getDate()).slice(-2)\n        ].join(\"-\");\n      },\n      decode: function (val) {\n        if (this.is(val)) return val;\n        var match = this.capture.exec(val);\n        return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n      },\n      is: function(val) { return val instanceof Date && !isNaN(val.valueOf()); },\n      equals: function (a, b) { return this.is(a) && this.is(b) && a.toISOString() === b.toISOString(); },\n      pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n      capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\n    },\n    \"json\": {\n      encode: angular.toJson,\n      decode: angular.fromJson,\n      is: angular.isObject,\n      equals: angular.equals,\n      pattern: /[^/]*/\n    },\n    \"any\": { // does not encode/decode\n      encode: angular.identity,\n      decode: angular.identity,\n      equals: angular.equals,\n      pattern: /.*/\n    }\n  };\n\n  function getDefaultConfig() {\n    return {\n      strict: isStrictMode,\n      caseInsensitive: isCaseInsensitive\n    };\n  }\n\n  function isInjectable(value) {\n    return (isFunction(value) || (isArray(value) && isFunction(value[value.length - 1])));\n  }\n\n  /**\n   * [Internal] Get the default value of a parameter, which may be an injectable function.\n   */\n  $UrlMatcherFactory.$$getDefaultValue = function(config) {\n    if (!isInjectable(config.value)) return config.value;\n    if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n    return injector.invoke(config.value);\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#caseInsensitive\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Defines whether URL matching should be case sensitive (the default behavior), or not.\n   *\n   * @param {boolean} value `false` to match URL in a case sensitive manner; otherwise `true`;\n   * @returns {boolean} the current value of caseInsensitive\n   */\n  this.caseInsensitive = function(value) {\n    if (isDefined(value))\n      isCaseInsensitive = value;\n    return isCaseInsensitive;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#strictMode\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Defines whether URLs should match trailing slashes, or not (the default behavior).\n   *\n   * @param {boolean=} value `false` to match trailing slashes in URLs, otherwise `true`.\n   * @returns {boolean} the current value of strictMode\n   */\n  this.strictMode = function(value) {\n    if (isDefined(value))\n      isStrictMode = value;\n    return isStrictMode;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#defaultSquashPolicy\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Sets the default behavior when generating or matching URLs with default parameter values.\n   *\n   * @param {string} value A string that defines the default parameter URL squashing behavior.\n   *    `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n   *    `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n   *             parameter is surrounded by slashes, squash (remove) one slash from the URL\n   *    any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n   *             the parameter value from the URL and replace it with this string.\n   */\n  this.defaultSquashPolicy = function(value) {\n    if (!isDefined(value)) return defaultSquashPolicy;\n    if (value !== true && value !== false && !isString(value))\n      throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n    defaultSquashPolicy = value;\n    return value;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#compile\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Creates a {@link ui.router.util.type:UrlMatcher `UrlMatcher`} for the specified pattern.\n   *\n   * @param {string} pattern  The URL pattern.\n   * @param {Object} config  The config object hash.\n   * @returns {UrlMatcher}  The UrlMatcher.\n   */\n  this.compile = function (pattern, config) {\n    return new UrlMatcher(pattern, extend(getDefaultConfig(), config));\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#isMatcher\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Returns true if the specified object is a `UrlMatcher`, or false otherwise.\n   *\n   * @param {Object} object  The object to perform the type check against.\n   * @returns {Boolean}  Returns `true` if the object matches the `UrlMatcher` interface, by\n   *          implementing all the same methods.\n   */\n  this.isMatcher = function (o) {\n    if (!isObject(o)) return false;\n    var result = true;\n\n    forEach(UrlMatcher.prototype, function(val, name) {\n      if (isFunction(val)) {\n        result = result && (isDefined(o[name]) && isFunction(o[name]));\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#type\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Registers a custom {@link ui.router.util.type:Type `Type`} object that can be used to\n   * generate URLs with typed parameters.\n   *\n   * @param {string} name  The type name.\n   * @param {Object|Function} definition   The type definition. See\n   *        {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n   * @param {Object|Function} definitionFn (optional) A function that is injected before the app\n   *        runtime starts.  The result of this function is merged into the existing `definition`.\n   *        See {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n   *\n   * @returns {Object}  Returns `$urlMatcherFactoryProvider`.\n   *\n   * @example\n   * This is a simple example of a custom type that encodes and decodes items from an\n   * array, using the array index as the URL-encoded value:\n   *\n   * <pre>\n   * var list = ['John', 'Paul', 'George', 'Ringo'];\n   *\n   * $urlMatcherFactoryProvider.type('listItem', {\n   *   encode: function(item) {\n   *     // Represent the list item in the URL using its corresponding index\n   *     return list.indexOf(item);\n   *   },\n   *   decode: function(item) {\n   *     // Look up the list item by index\n   *     return list[parseInt(item, 10)];\n   *   },\n   *   is: function(item) {\n   *     // Ensure the item is valid by checking to see that it appears\n   *     // in the list\n   *     return list.indexOf(item) > -1;\n   *   }\n   * });\n   *\n   * $stateProvider.state('list', {\n   *   url: \"/list/{item:listItem}\",\n   *   controller: function($scope, $stateParams) {\n   *     console.log($stateParams.item);\n   *   }\n   * });\n   *\n   * // ...\n   *\n   * // Changes URL to '/list/3', logs \"Ringo\" to the console\n   * $state.go('list', { item: \"Ringo\" });\n   * </pre>\n   *\n   * This is a more complex example of a type that relies on dependency injection to\n   * interact with services, and uses the parameter name from the URL to infer how to\n   * handle encoding and decoding parameter values:\n   *\n   * <pre>\n   * // Defines a custom type that gets a value from a service,\n   * // where each service gets different types of values from\n   * // a backend API:\n   * $urlMatcherFactoryProvider.type('dbObject', {}, function(Users, Posts) {\n   *\n   *   // Matches up services to URL parameter names\n   *   var services = {\n   *     user: Users,\n   *     post: Posts\n   *   };\n   *\n   *   return {\n   *     encode: function(object) {\n   *       // Represent the object in the URL using its unique ID\n   *       return object.id;\n   *     },\n   *     decode: function(value, key) {\n   *       // Look up the object by ID, using the parameter\n   *       // name (key) to call the correct service\n   *       return services[key].findById(value);\n   *     },\n   *     is: function(object, key) {\n   *       // Check that object is a valid dbObject\n   *       return angular.isObject(object) && object.id && services[key];\n   *     }\n   *     equals: function(a, b) {\n   *       // Check the equality of decoded objects by comparing\n   *       // their unique IDs\n   *       return a.id === b.id;\n   *     }\n   *   };\n   * });\n   *\n   * // In a config() block, you can then attach URLs with\n   * // type-annotated parameters:\n   * $stateProvider.state('users', {\n   *   url: \"/users\",\n   *   // ...\n   * }).state('users.item', {\n   *   url: \"/{user:dbObject}\",\n   *   controller: function($scope, $stateParams) {\n   *     // $stateParams.user will now be an object returned from\n   *     // the Users service\n   *   },\n   *   // ...\n   * });\n   * </pre>\n   */\n  this.type = function (name, definition, definitionFn) {\n    if (!isDefined(definition)) return $types[name];\n    if ($types.hasOwnProperty(name)) throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n\n    $types[name] = new Type(extend({ name: name }, definition));\n    if (definitionFn) {\n      typeQueue.push({ name: name, def: definitionFn });\n      if (!enqueue) flushTypeQueue();\n    }\n    return this;\n  };\n\n  // `flushTypeQueue()` waits until `$urlMatcherFactory` is injected before invoking the queued `definitionFn`s\n  function flushTypeQueue() {\n    while(typeQueue.length) {\n      var type = typeQueue.shift();\n      if (type.pattern) throw new Error(\"You cannot override a type's .pattern at runtime.\");\n      angular.extend($types[type.name], injector.invoke(type.def));\n    }\n  }\n\n  // Register default types. Store them in the prototype of $types.\n  forEach(defaultTypes, function(type, name) { $types[name] = new Type(extend({name: name}, type)); });\n  $types = inherit($types, {});\n\n  /* No need to document $get, since it returns this */\n  this.$get = ['$injector', function ($injector) {\n    injector = $injector;\n    enqueue = false;\n    flushTypeQueue();\n\n    forEach(defaultTypes, function(type, name) {\n      if (!$types[name]) $types[name] = new Type(type);\n    });\n    return this;\n  }];\n\n  this.Param = function Param(id, type, config, location) {\n    var self = this;\n    config = unwrapShorthand(config);\n    type = getType(config, type, location);\n    var arrayMode = getArrayMode();\n    type = arrayMode ? type.$asArray(arrayMode, location === \"search\") : type;\n    if (type.name === \"string\" && !arrayMode && location === \"path\" && config.value === undefined)\n      config.value = \"\"; // for 0.2.x; in 0.3.0+ do not automatically default to \"\"\n    var isOptional = config.value !== undefined;\n    var squash = getSquashPolicy(config, isOptional);\n    var replace = getReplace(config, arrayMode, isOptional, squash);\n\n    function unwrapShorthand(config) {\n      var keys = isObject(config) ? objectKeys(config) : [];\n      var isShorthand = indexOf(keys, \"value\") === -1 && indexOf(keys, \"type\") === -1 &&\n                        indexOf(keys, \"squash\") === -1 && indexOf(keys, \"array\") === -1;\n      if (isShorthand) config = { value: config };\n      config.$$fn = isInjectable(config.value) ? config.value : function () { return config.value; };\n      return config;\n    }\n\n    function getType(config, urlType, location) {\n      if (config.type && urlType) throw new Error(\"Param '\"+id+\"' has two type configurations.\");\n      if (urlType) return urlType;\n      if (!config.type) return (location === \"config\" ? $types.any : $types.string);\n\n      if (angular.isString(config.type))\n        return $types[config.type];\n      if (config.type instanceof Type)\n        return config.type;\n      return new Type(config.type);\n    }\n\n    // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n    function getArrayMode() {\n      var arrayDefaults = { array: (location === \"search\" ? \"auto\" : false) };\n      var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n      return extend(arrayDefaults, arrayParamNomenclature, config).array;\n    }\n\n    /**\n     * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n     */\n    function getSquashPolicy(config, isOptional) {\n      var squash = config.squash;\n      if (!isOptional || squash === false) return false;\n      if (!isDefined(squash) || squash == null) return defaultSquashPolicy;\n      if (squash === true || isString(squash)) return squash;\n      throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n    }\n\n    function getReplace(config, arrayMode, isOptional, squash) {\n      var replace, configuredKeys, defaultPolicy = [\n        { from: \"\",   to: (isOptional || arrayMode ? undefined : \"\") },\n        { from: null, to: (isOptional || arrayMode ? undefined : \"\") }\n      ];\n      replace = isArray(config.replace) ? config.replace : [];\n      if (isString(squash))\n        replace.push({ from: squash, to: undefined });\n      configuredKeys = map(replace, function(item) { return item.from; } );\n      return filter(defaultPolicy, function(item) { return indexOf(configuredKeys, item.from) === -1; }).concat(replace);\n    }\n\n    /**\n     * [Internal] Get the default value of a parameter, which may be an injectable function.\n     */\n    function $$getDefaultValue() {\n      if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n      var defaultValue = injector.invoke(config.$$fn);\n      if (defaultValue !== null && defaultValue !== undefined && !self.type.is(defaultValue))\n        throw new Error(\"Default value (\" + defaultValue + \") for parameter '\" + self.id + \"' is not an instance of Type (\" + self.type.name + \")\");\n      return defaultValue;\n    }\n\n    /**\n     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n     * default value, which may be the result of an injectable function.\n     */\n    function $value(value) {\n      function hasReplaceVal(val) { return function(obj) { return obj.from === val; }; }\n      function $replace(value) {\n        var replacement = map(filter(self.replace, hasReplaceVal(value)), function(obj) { return obj.to; });\n        return replacement.length ? replacement[0] : value;\n      }\n      value = $replace(value);\n      return !isDefined(value) ? $$getDefaultValue() : self.type.$normalize(value);\n    }\n\n    function toString() { return \"{Param:\" + id + \" \" + type + \" squash: '\" + squash + \"' optional: \" + isOptional + \"}\"; }\n\n    extend(this, {\n      id: id,\n      type: type,\n      location: location,\n      array: arrayMode,\n      squash: squash,\n      replace: replace,\n      isOptional: isOptional,\n      value: $value,\n      dynamic: undefined,\n      config: config,\n      toString: toString\n    });\n  };\n\n  function ParamSet(params) {\n    extend(this, params || {});\n  }\n\n  ParamSet.prototype = {\n    $$new: function() {\n      return inherit(this, extend(new ParamSet(), { $$parent: this}));\n    },\n    $$keys: function () {\n      var keys = [], chain = [], parent = this,\n        ignore = objectKeys(ParamSet.prototype);\n      while (parent) { chain.push(parent); parent = parent.$$parent; }\n      chain.reverse();\n      forEach(chain, function(paramset) {\n        forEach(objectKeys(paramset), function(key) {\n            if (indexOf(keys, key) === -1 && indexOf(ignore, key) === -1) keys.push(key);\n        });\n      });\n      return keys;\n    },\n    $$values: function(paramValues) {\n      var values = {}, self = this;\n      forEach(self.$$keys(), function(key) {\n        values[key] = self[key].value(paramValues && paramValues[key]);\n      });\n      return values;\n    },\n    $$equals: function(paramValues1, paramValues2) {\n      var equal = true, self = this;\n      forEach(self.$$keys(), function(key) {\n        var left = paramValues1 && paramValues1[key], right = paramValues2 && paramValues2[key];\n        if (!self[key].type.equals(left, right)) equal = false;\n      });\n      return equal;\n    },\n    $$validates: function $$validate(paramValues) {\n      var keys = this.$$keys(), i, param, rawVal, normalized, encoded;\n      for (i = 0; i < keys.length; i++) {\n        param = this[keys[i]];\n        rawVal = paramValues[keys[i]];\n        if ((rawVal === undefined || rawVal === null) && param.isOptional)\n          break; // There was no parameter value, but the param is optional\n        normalized = param.type.$normalize(rawVal);\n        if (!param.type.is(normalized))\n          return false; // The value was not of the correct Type, and could not be decoded to the correct Type\n        encoded = param.type.encode(normalized);\n        if (angular.isString(encoded) && !param.type.pattern.exec(encoded))\n          return false; // The value was of the correct type, but when encoded, did not match the Type's regexp\n      }\n      return true;\n    },\n    $$parent: undefined\n  };\n\n  this.ParamSet = ParamSet;\n}\n\n// Register as a provider so it's available to other providers\nangular.module('ui.router.util').provider('$urlMatcherFactory', $UrlMatcherFactory);\nangular.module('ui.router.util').run(['$urlMatcherFactory', function($urlMatcherFactory) { }]);\n\n/**\n * @ngdoc object\n * @name ui.router.router.$urlRouterProvider\n *\n * @requires ui.router.util.$urlMatcherFactoryProvider\n * @requires $locationProvider\n *\n * @description\n * `$urlRouterProvider` has the responsibility of watching `$location`. \n * When `$location` changes it runs through a list of rules one by one until a \n * match is found. `$urlRouterProvider` is used behind the scenes anytime you specify \n * a url in a state configuration. All urls are compiled into a UrlMatcher object.\n *\n * There are several methods on `$urlRouterProvider` that make it useful to use directly\n * in your module config.\n */\n$UrlRouterProvider.$inject = ['$locationProvider', '$urlMatcherFactoryProvider'];\nfunction $UrlRouterProvider(   $locationProvider,   $urlMatcherFactory) {\n  var rules = [], otherwise = null, interceptDeferred = false, listener;\n\n  // Returns a string that is a prefix of all strings matching the RegExp\n  function regExpPrefix(re) {\n    var prefix = /^\\^((?:\\\\[^a-zA-Z0-9]|[^\\\\\\[\\]\\^$*+?.()|{}]+)*)/.exec(re.source);\n    return (prefix != null) ? prefix[1].replace(/\\\\(.)/g, \"$1\") : '';\n  }\n\n  // Interpolates matched values into a String.replace()-style pattern\n  function interpolate(pattern, match) {\n    return pattern.replace(/\\$(\\$|\\d{1,2})/, function (m, what) {\n      return match[what === '$' ? 0 : Number(what)];\n    });\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#rule\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Defines rules that are used by `$urlRouterProvider` to find matches for\n   * specific URLs.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // Here's an example of how you might allow case insensitive urls\n   *   $urlRouterProvider.rule(function ($injector, $location) {\n   *     var path = $location.path(),\n   *         normalized = path.toLowerCase();\n   *\n   *     if (path !== normalized) {\n   *       return normalized;\n   *     }\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {function} rule Handler function that takes `$injector` and `$location`\n   * services as arguments. You can use them to return a valid path as a string.\n   *\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n   */\n  this.rule = function (rule) {\n    if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n    rules.push(rule);\n    return this;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.router.$urlRouterProvider#otherwise\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Defines a path that is used when an invalid route is requested.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // if the path doesn't match any of the urls you configured\n   *   // otherwise will take care of routing the user to the\n   *   // specified url\n   *   $urlRouterProvider.otherwise('/index');\n   *\n   *   // Example of using function rule as param\n   *   $urlRouterProvider.otherwise(function ($injector, $location) {\n   *     return '/a/valid/url';\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {string|function} rule The url path you want to redirect to or a function \n   * rule that returns the url path. The function version is passed two params: \n   * `$injector` and `$location` services, and must return a url string.\n   *\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n   */\n  this.otherwise = function (rule) {\n    if (isString(rule)) {\n      var redirect = rule;\n      rule = function () { return redirect; };\n    }\n    else if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n    otherwise = rule;\n    return this;\n  };\n\n\n  function handleIfMatch($injector, handler, match) {\n    if (!match) return false;\n    var result = $injector.invoke(handler, handler, { $match: match });\n    return isDefined(result) ? result : true;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#when\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Registers a handler for a given url matching. \n   * \n   * If the handler is a string, it is\n   * treated as a redirect, and is interpolated according to the syntax of match\n   * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n   *\n   * If the handler is a function, it is injectable. It gets invoked if `$location`\n   * matches. You have the option of inject the match object as `$match`.\n   *\n   * The handler can return\n   *\n   * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n   *   will continue trying to find another one that matches.\n   * - **string** which is treated as a redirect and passed to `$location.url()`\n   * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n   *     if ($state.$current.navigable !== state ||\n   *         !equalForKeys($match, $stateParams) {\n   *      $state.transitionTo(state, $match, false);\n   *     }\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {string|object} what The incoming path that you want to redirect.\n   * @param {string|function} handler The path you want to redirect your user to.\n   */\n  this.when = function (what, handler) {\n    var redirect, handlerIsString = isString(handler);\n    if (isString(what)) what = $urlMatcherFactory.compile(what);\n\n    if (!handlerIsString && !isFunction(handler) && !isArray(handler))\n      throw new Error(\"invalid 'handler' in when()\");\n\n    var strategies = {\n      matcher: function (what, handler) {\n        if (handlerIsString) {\n          redirect = $urlMatcherFactory.compile(handler);\n          handler = ['$match', function ($match) { return redirect.format($match); }];\n        }\n        return extend(function ($injector, $location) {\n          return handleIfMatch($injector, handler, what.exec($location.path(), $location.search()));\n        }, {\n          prefix: isString(what.prefix) ? what.prefix : ''\n        });\n      },\n      regex: function (what, handler) {\n        if (what.global || what.sticky) throw new Error(\"when() RegExp must not be global or sticky\");\n\n        if (handlerIsString) {\n          redirect = handler;\n          handler = ['$match', function ($match) { return interpolate(redirect, $match); }];\n        }\n        return extend(function ($injector, $location) {\n          return handleIfMatch($injector, handler, what.exec($location.path()));\n        }, {\n          prefix: regExpPrefix(what)\n        });\n      }\n    };\n\n    var check = { matcher: $urlMatcherFactory.isMatcher(what), regex: what instanceof RegExp };\n\n    for (var n in check) {\n      if (check[n]) return this.rule(strategies[n](what, handler));\n    }\n\n    throw new Error(\"invalid 'what' in when()\");\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#deferIntercept\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Disables (or enables) deferring location change interception.\n   *\n   * If you wish to customize the behavior of syncing the URL (for example, if you wish to\n   * defer a transition but maintain the current URL), call this method at configuration time.\n   * Then, at run time, call `$urlRouter.listen()` after you have configured your own\n   * `$locationChangeSuccess` event handler.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *\n   *   // Prevent $urlRouter from automatically intercepting URL changes;\n   *   // this allows you to configure custom behavior in between\n   *   // location changes and route synchronization:\n   *   $urlRouterProvider.deferIntercept();\n   *\n   * }).run(function ($rootScope, $urlRouter, UserService) {\n   *\n   *   $rootScope.$on('$locationChangeSuccess', function(e) {\n   *     // UserService is an example service for managing user state\n   *     if (UserService.isLoggedIn()) return;\n   *\n   *     // Prevent $urlRouter's default handler from firing\n   *     e.preventDefault();\n   *\n   *     UserService.handleLogin().then(function() {\n   *       // Once the user has logged in, sync the current URL\n   *       // to the router:\n   *       $urlRouter.sync();\n   *     });\n   *   });\n   *\n   *   // Configures $urlRouter's listener *after* your custom listener\n   *   $urlRouter.listen();\n   * });\n   * </pre>\n   *\n   * @param {boolean} defer Indicates whether to defer location change interception. Passing\n            no parameter is equivalent to `true`.\n   */\n  this.deferIntercept = function (defer) {\n    if (defer === undefined) defer = true;\n    interceptDeferred = defer;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.router.$urlRouter\n   *\n   * @requires $location\n   * @requires $rootScope\n   * @requires $injector\n   * @requires $browser\n   *\n   * @description\n   *\n   */\n  this.$get = $get;\n  $get.$inject = ['$location', '$rootScope', '$injector', '$browser', '$sniffer'];\n  function $get(   $location,   $rootScope,   $injector,   $browser,   $sniffer) {\n\n    var baseHref = $browser.baseHref(), location = $location.url(), lastPushedUrl;\n\n    function appendBasePath(url, isHtml5, absolute) {\n      if (baseHref === '/') return url;\n      if (isHtml5) return baseHref.slice(0, -1) + url;\n      if (absolute) return baseHref.slice(1) + url;\n      return url;\n    }\n\n    // TODO: Optimize groups of rules with non-empty prefix into some sort of decision tree\n    function update(evt) {\n      if (evt && evt.defaultPrevented) return;\n      var ignoreUpdate = lastPushedUrl && $location.url() === lastPushedUrl;\n      lastPushedUrl = undefined;\n      // TODO: Re-implement this in 1.0 for https://github.com/angular-ui/ui-router/issues/1573\n      //if (ignoreUpdate) return true;\n\n      function check(rule) {\n        var handled = rule($injector, $location);\n\n        if (!handled) return false;\n        if (isString(handled)) $location.replace().url(handled);\n        return true;\n      }\n      var n = rules.length, i;\n\n      for (i = 0; i < n; i++) {\n        if (check(rules[i])) return;\n      }\n      // always check otherwise last to allow dynamic updates to the set of rules\n      if (otherwise) check(otherwise);\n    }\n\n    function listen() {\n      listener = listener || $rootScope.$on('$locationChangeSuccess', update);\n      return listener;\n    }\n\n    if (!interceptDeferred) listen();\n\n    return {\n      /**\n       * @ngdoc function\n       * @name ui.router.router.$urlRouter#sync\n       * @methodOf ui.router.router.$urlRouter\n       *\n       * @description\n       * Triggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.\n       * This method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,\n       * perform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed\n       * with the transition by calling `$urlRouter.sync()`.\n       *\n       * @example\n       * <pre>\n       * angular.module('app', ['ui.router'])\n       *   .run(function($rootScope, $urlRouter) {\n       *     $rootScope.$on('$locationChangeSuccess', function(evt) {\n       *       // Halt state change from even starting\n       *       evt.preventDefault();\n       *       // Perform custom logic\n       *       var meetsRequirement = ...\n       *       // Continue with the update and state transition if logic allows\n       *       if (meetsRequirement) $urlRouter.sync();\n       *     });\n       * });\n       * </pre>\n       */\n      sync: function() {\n        update();\n      },\n\n      listen: function() {\n        return listen();\n      },\n\n      update: function(read) {\n        if (read) {\n          location = $location.url();\n          return;\n        }\n        if ($location.url() === location) return;\n\n        $location.url(location);\n        $location.replace();\n      },\n\n      push: function(urlMatcher, params, options) {\n         var url = urlMatcher.format(params || {});\n\n        // Handle the special hash param, if needed\n        if (url !== null && params && params['#']) {\n            url += '#' + params['#'];\n        }\n\n        $location.url(url);\n        lastPushedUrl = options && options.$$avoidResync ? $location.url() : undefined;\n        if (options && options.replace) $location.replace();\n      },\n\n      /**\n       * @ngdoc function\n       * @name ui.router.router.$urlRouter#href\n       * @methodOf ui.router.router.$urlRouter\n       *\n       * @description\n       * A URL generation method that returns the compiled URL for a given\n       * {@link ui.router.util.type:UrlMatcher `UrlMatcher`}, populated with the provided parameters.\n       *\n       * @example\n       * <pre>\n       * $bob = $urlRouter.href(new UrlMatcher(\"/about/:person\"), {\n       *   person: \"bob\"\n       * });\n       * // $bob == \"/about/bob\";\n       * </pre>\n       *\n       * @param {UrlMatcher} urlMatcher The `UrlMatcher` object which is used as the template of the URL to generate.\n       * @param {object=} params An object of parameter values to fill the matcher's required parameters.\n       * @param {object=} options Options object. The options are:\n       *\n       * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n       *\n       * @returns {string} Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n       */\n      href: function(urlMatcher, params, options) {\n        if (!urlMatcher.validates(params)) return null;\n\n        var isHtml5 = $locationProvider.html5Mode();\n        if (angular.isObject(isHtml5)) {\n          isHtml5 = isHtml5.enabled;\n        }\n\n        isHtml5 = isHtml5 && $sniffer.history;\n        \n        var url = urlMatcher.format(params);\n        options = options || {};\n\n        if (!isHtml5 && url !== null) {\n          url = \"#\" + $locationProvider.hashPrefix() + url;\n        }\n\n        // Handle special hash param, if needed\n        if (url !== null && params && params['#']) {\n          url += '#' + params['#'];\n        }\n\n        url = appendBasePath(url, isHtml5, options.absolute);\n\n        if (!options.absolute || !url) {\n          return url;\n        }\n\n        var slash = (!isHtml5 && url ? '/' : ''), port = $location.port();\n        port = (port === 80 || port === 443 ? '' : ':' + port);\n\n        return [$location.protocol(), '://', $location.host(), port, slash, url].join('');\n      }\n    };\n  }\n}\n\nangular.module('ui.router.router').provider('$urlRouter', $UrlRouterProvider);\n\n/**\n * @ngdoc object\n * @name ui.router.state.$stateProvider\n *\n * @requires ui.router.router.$urlRouterProvider\n * @requires ui.router.util.$urlMatcherFactoryProvider\n *\n * @description\n * The new `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n * on state.\n *\n * A state corresponds to a \"place\" in the application in terms of the overall UI and\n * navigation. A state describes (via the controller / template / view properties) what\n * the UI looks like and does at that place.\n *\n * States often have things in common, and the primary way of factoring out these\n * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n * nested states.\n *\n * The `$stateProvider` provides interfaces to declare these states for your app.\n */\n$StateProvider.$inject = ['$urlRouterProvider', '$urlMatcherFactoryProvider'];\nfunction $StateProvider(   $urlRouterProvider,   $urlMatcherFactory) {\n\n  var root, states = {}, $state, queue = {}, abstractKey = 'abstract';\n\n  // Builds state properties from definition passed to registerState()\n  var stateBuilder = {\n\n    // Derive parent state from a hierarchical name only if 'parent' is not explicitly defined.\n    // state.children = [];\n    // if (parent) parent.children.push(state);\n    parent: function(state) {\n      if (isDefined(state.parent) && state.parent) return findState(state.parent);\n      // regex matches any valid composite state name\n      // would match \"contact.list\" but not \"contacts\"\n      var compositeName = /^(.+)\\.[^.]+$/.exec(state.name);\n      return compositeName ? findState(compositeName[1]) : root;\n    },\n\n    // inherit 'data' from parent and override by own values (if any)\n    data: function(state) {\n      if (state.parent && state.parent.data) {\n        state.data = state.self.data = inherit(state.parent.data, state.data);\n      }\n      return state.data;\n    },\n\n    // Build a URLMatcher if necessary, either via a relative or absolute URL\n    url: function(state) {\n      var url = state.url, config = { params: state.params || {} };\n\n      if (isString(url)) {\n        if (url.charAt(0) == '^') return $urlMatcherFactory.compile(url.substring(1), config);\n        return (state.parent.navigable || root).url.concat(url, config);\n      }\n\n      if (!url || $urlMatcherFactory.isMatcher(url)) return url;\n      throw new Error(\"Invalid url '\" + url + \"' in state '\" + state + \"'\");\n    },\n\n    // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n    navigable: function(state) {\n      return state.url ? state : (state.parent ? state.parent.navigable : null);\n    },\n\n    // Own parameters for this state. state.url.params is already built at this point. Create and add non-url params\n    ownParams: function(state) {\n      var params = state.url && state.url.params || new $$UMFP.ParamSet();\n      forEach(state.params || {}, function(config, id) {\n        if (!params[id]) params[id] = new $$UMFP.Param(id, null, config, \"config\");\n      });\n      return params;\n    },\n\n    // Derive parameters for this state and ensure they're a super-set of parent's parameters\n    params: function(state) {\n      var ownParams = pick(state.ownParams, state.ownParams.$$keys());\n      return state.parent && state.parent.params ? extend(state.parent.params.$$new(), ownParams) : new $$UMFP.ParamSet();\n    },\n\n    // If there is no explicit multi-view configuration, make one up so we don't have\n    // to handle both cases in the view directive later. Note that having an explicit\n    // 'views' property will mean the default unnamed view properties are ignored. This\n    // is also a good time to resolve view names to absolute names, so everything is a\n    // straight lookup at link time.\n    views: function(state) {\n      var views = {};\n\n      forEach(isDefined(state.views) ? state.views : { '': state }, function (view, name) {\n        if (name.indexOf('@') < 0) name += '@' + state.parent.name;\n        view.resolveAs = view.resolveAs || state.resolveAs || '$resolve';\n        views[name] = view;\n      });\n      return views;\n    },\n\n    // Keep a full path from the root down to this state as this is needed for state activation.\n    path: function(state) {\n      return state.parent ? state.parent.path.concat(state) : []; // exclude root from path\n    },\n\n    // Speed up $state.contains() as it's used a lot\n    includes: function(state) {\n      var includes = state.parent ? extend({}, state.parent.includes) : {};\n      includes[state.name] = true;\n      return includes;\n    },\n\n    $delegates: {}\n  };\n\n  function isRelative(stateName) {\n    return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\n  }\n\n  function findState(stateOrName, base) {\n    if (!stateOrName) return undefined;\n\n    var isStr = isString(stateOrName),\n        name  = isStr ? stateOrName : stateOrName.name,\n        path  = isRelative(name);\n\n    if (path) {\n      if (!base) throw new Error(\"No reference point given for path '\"  + name + \"'\");\n      base = findState(base);\n      \n      var rel = name.split(\".\"), i = 0, pathLength = rel.length, current = base;\n\n      for (; i < pathLength; i++) {\n        if (rel[i] === \"\" && i === 0) {\n          current = base;\n          continue;\n        }\n        if (rel[i] === \"^\") {\n          if (!current.parent) throw new Error(\"Path '\" + name + \"' not valid for state '\" + base.name + \"'\");\n          current = current.parent;\n          continue;\n        }\n        break;\n      }\n      rel = rel.slice(i).join(\".\");\n      name = current.name + (current.name && rel ? \".\" : \"\") + rel;\n    }\n    var state = states[name];\n\n    if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n      return state;\n    }\n    return undefined;\n  }\n\n  function queueState(parentName, state) {\n    if (!queue[parentName]) {\n      queue[parentName] = [];\n    }\n    queue[parentName].push(state);\n  }\n\n  function flushQueuedChildren(parentName) {\n    var queued = queue[parentName] || [];\n    while(queued.length) {\n      registerState(queued.shift());\n    }\n  }\n\n  function registerState(state) {\n    // Wrap a new object around the state so we can store our private details easily.\n    state = inherit(state, {\n      self: state,\n      resolve: state.resolve || {},\n      toString: function() { return this.name; }\n    });\n\n    var name = state.name;\n    if (!isString(name) || name.indexOf('@') >= 0) throw new Error(\"State must have a valid name\");\n    if (states.hasOwnProperty(name)) throw new Error(\"State '\" + name + \"' is already defined\");\n\n    // Get parent name\n    var parentName = (name.indexOf('.') !== -1) ? name.substring(0, name.lastIndexOf('.'))\n        : (isString(state.parent)) ? state.parent\n        : (isObject(state.parent) && isString(state.parent.name)) ? state.parent.name\n        : '';\n\n    // If parent is not registered yet, add state to queue and register later\n    if (parentName && !states[parentName]) {\n      return queueState(parentName, state.self);\n    }\n\n    for (var key in stateBuilder) {\n      if (isFunction(stateBuilder[key])) state[key] = stateBuilder[key](state, stateBuilder.$delegates[key]);\n    }\n    states[name] = state;\n\n    // Register the state in the global state list and with $urlRouter if necessary.\n    if (!state[abstractKey] && state.url) {\n      $urlRouterProvider.when(state.url, ['$match', '$stateParams', function ($match, $stateParams) {\n        if ($state.$current.navigable != state || !equalForKeys($match, $stateParams)) {\n          $state.transitionTo(state, $match, { inherit: true, location: false });\n        }\n      }]);\n    }\n\n    // Register any queued children\n    flushQueuedChildren(name);\n\n    return state;\n  }\n\n  // Checks text to see if it looks like a glob.\n  function isGlob (text) {\n    return text.indexOf('*') > -1;\n  }\n\n  // Returns true if glob matches current $state name.\n  function doesStateMatchGlob (glob) {\n    var globSegments = glob.split('.'),\n        segments = $state.$current.name.split('.');\n\n    //match single stars\n    for (var i = 0, l = globSegments.length; i < l; i++) {\n      if (globSegments[i] === '*') {\n        segments[i] = '*';\n      }\n    }\n\n    //match greedy starts\n    if (globSegments[0] === '**') {\n       segments = segments.slice(indexOf(segments, globSegments[1]));\n       segments.unshift('**');\n    }\n    //match greedy ends\n    if (globSegments[globSegments.length - 1] === '**') {\n       segments.splice(indexOf(segments, globSegments[globSegments.length - 2]) + 1, Number.MAX_VALUE);\n       segments.push('**');\n    }\n\n    if (globSegments.length != segments.length) {\n      return false;\n    }\n\n    return segments.join('') === globSegments.join('');\n  }\n\n\n  // Implicit root state that is always active\n  root = registerState({\n    name: '',\n    url: '^',\n    views: null,\n    'abstract': true\n  });\n  root.navigable = null;\n\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$stateProvider#decorator\n   * @methodOf ui.router.state.$stateProvider\n   *\n   * @description\n   * Allows you to extend (carefully) or override (at your own peril) the \n   * `stateBuilder` object used internally by `$stateProvider`. This can be used \n   * to add custom functionality to ui-router, for example inferring templateUrl \n   * based on the state name.\n   *\n   * When passing only a name, it returns the current (original or decorated) builder\n   * function that matches `name`.\n   *\n   * The builder functions that can be decorated are listed below. Though not all\n   * necessarily have a good use case for decoration, that is up to you to decide.\n   *\n   * In addition, users can attach custom decorators, which will generate new \n   * properties within the state's internal definition. There is currently no clear \n   * use-case for this beyond accessing internal states (i.e. $state.$current), \n   * however, expect this to become increasingly relevant as we introduce additional \n   * meta-programming features.\n   *\n   * **Warning**: Decorators should not be interdependent because the order of \n   * execution of the builder functions in non-deterministic. Builder functions \n   * should only be dependent on the state definition object and super function.\n   *\n   *\n   * Existing builder functions and current return values:\n   *\n   * - **parent** `{object}` - returns the parent state object.\n   * - **data** `{object}` - returns state data, including any inherited data that is not\n   *   overridden by own values (if any).\n   * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n   *   or `null`.\n   * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is \n   *   navigable).\n   * - **params** `{object}` - returns an array of state params that are ensured to \n   *   be a super-set of parent's params.\n   * - **views** `{object}` - returns a views object where each key is an absolute view \n   *   name (i.e. \"viewName@stateName\") and each value is the config object \n   *   (template, controller) for the view. Even when you don't use the views object \n   *   explicitly on a state config, one is still created for you internally.\n   *   So by decorating this builder function you have access to decorating template \n   *   and controller properties.\n   * - **ownParams** `{object}` - returns an array of params that belong to the state, \n   *   not including any params defined by ancestor states.\n   * - **path** `{string}` - returns the full path from the root down to this state. \n   *   Needed for state activation.\n   * - **includes** `{object}` - returns an object that includes every state that \n   *   would pass a `$state.includes()` test.\n   *\n   * @example\n   * <pre>\n   * // Override the internal 'views' builder with a function that takes the state\n   * // definition, and a reference to the internal function being overridden:\n   * $stateProvider.decorator('views', function (state, parent) {\n   *   var result = {},\n   *       views = parent(state);\n   *\n   *   angular.forEach(views, function (config, name) {\n   *     var autoName = (state.name + '.' + name).replace('.', '/');\n   *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n   *     result[name] = config;\n   *   });\n   *   return result;\n   * });\n   *\n   * $stateProvider.state('home', {\n   *   views: {\n   *     'contact.list': { controller: 'ListController' },\n   *     'contact.item': { controller: 'ItemController' }\n   *   }\n   * });\n   *\n   * // ...\n   *\n   * $state.go('home');\n   * // Auto-populates list and item views with /partials/home/contact/list.html,\n   * // and /partials/home/contact/item.html, respectively.\n   * </pre>\n   *\n   * @param {string} name The name of the builder function to decorate. \n   * @param {object} func A function that is responsible for decorating the original \n   * builder function. The function receives two parameters:\n   *\n   *   - `{object}` - state - The state config object.\n   *   - `{object}` - super - The original builder function.\n   *\n   * @return {object} $stateProvider - $stateProvider instance\n   */\n  this.decorator = decorator;\n  function decorator(name, func) {\n    /*jshint validthis: true */\n    if (isString(name) && !isDefined(func)) {\n      return stateBuilder[name];\n    }\n    if (!isFunction(func) || !isString(name)) {\n      return this;\n    }\n    if (stateBuilder[name] && !stateBuilder.$delegates[name]) {\n      stateBuilder.$delegates[name] = stateBuilder[name];\n    }\n    stateBuilder[name] = func;\n    return this;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$stateProvider#state\n   * @methodOf ui.router.state.$stateProvider\n   *\n   * @description\n   * Registers a state configuration under a given state name. The stateConfig object\n   * has the following acceptable properties.\n   *\n   * @param {string} name A unique state name, e.g. \"home\", \"about\", \"contacts\".\n   * To create a parent/child state use a dot, e.g. \"about.sales\", \"home.newest\".\n   * @param {object} stateConfig State configuration object.\n   * @param {string|function=} stateConfig.template\n   * <a id='template'></a>\n   *   html template as a string or a function that returns\n   *   an html template as a string which should be used by the uiView directives. This property \n   *   takes precedence over templateUrl.\n   *   \n   *   If `template` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\n   *     applying the current state\n   *\n   * <pre>template:\n   *   \"<h1>inline template definition</h1>\" +\n   *   \"<div ui-view></div>\"</pre>\n   * <pre>template: function(params) {\n   *       return \"<h1>generated template</h1>\"; }</pre>\n   * </div>\n   *\n   * @param {string|function=} stateConfig.templateUrl\n   * <a id='templateUrl'></a>\n   *\n   *   path or function that returns a path to an html\n   *   template that should be used by uiView.\n   *   \n   *   If `templateUrl` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by \n   *     applying the current state\n   *\n   * <pre>templateUrl: \"home.html\"</pre>\n   * <pre>templateUrl: function(params) {\n   *     return myTemplates[params.pageId]; }</pre>\n   *\n   * @param {function=} stateConfig.templateProvider\n   * <a id='templateProvider'></a>\n   *    Provider function that returns HTML content string.\n   * <pre> templateProvider:\n   *       function(MyTemplateService, params) {\n   *         return MyTemplateService.getTemplate(params.pageId);\n   *       }</pre>\n   *\n   * @param {string|function=} stateConfig.controller\n   * <a id='controller'></a>\n   *\n   *  Controller fn that should be associated with newly\n   *   related scope or the name of a registered controller if passed as a string.\n   *   Optionally, the ControllerAs may be declared here.\n   * <pre>controller: \"MyRegisteredController\"</pre>\n   * <pre>controller:\n   *     \"MyRegisteredController as fooCtrl\"}</pre>\n   * <pre>controller: function($scope, MyService) {\n   *     $scope.data = MyService.getData(); }</pre>\n   *\n   * @param {function=} stateConfig.controllerProvider\n   * <a id='controllerProvider'></a>\n   *\n   * Injectable provider function that returns the actual controller or string.\n   * <pre>controllerProvider:\n   *   function(MyResolveData) {\n   *     if (MyResolveData.foo)\n   *       return \"FooCtrl\"\n   *     else if (MyResolveData.bar)\n   *       return \"BarCtrl\";\n   *     else return function($scope) {\n   *       $scope.baz = \"Qux\";\n   *     }\n   *   }</pre>\n   *\n   * @param {string=} stateConfig.controllerAs\n   * <a id='controllerAs'></a>\n   * \n   * A controller alias name. If present the controller will be\n   *   published to scope under the controllerAs name.\n   * <pre>controllerAs: \"myCtrl\"</pre>\n   *\n   * @param {string|object=} stateConfig.parent\n   * <a id='parent'></a>\n   * Optionally specifies the parent state of this state.\n   *\n   * <pre>parent: 'parentState'</pre>\n   * <pre>parent: parentState // JS variable</pre>\n   *\n   * @param {object=} stateConfig.resolve\n   * <a id='resolve'></a>\n   *\n   * An optional map&lt;string, function&gt; of dependencies which\n   *   should be injected into the controller. If any of these dependencies are promises, \n   *   the router will wait for them all to be resolved before the controller is instantiated.\n   *   If all the promises are resolved successfully, the $stateChangeSuccess event is fired\n   *   and the values of the resolved promises are injected into any controllers that reference them.\n   *   If any  of the promises are rejected the $stateChangeError event is fired.\n   *\n   *   The map object is:\n   *   \n   *   - key - {string}: name of dependency to be injected into controller\n   *   - factory - {string|function}: If string then it is alias for service. Otherwise if function, \n   *     it is injected and return value it treated as dependency. If result is a promise, it is \n   *     resolved before its value is injected into controller.\n   *\n   * <pre>resolve: {\n   *     myResolve1:\n   *       function($http, $stateParams) {\n   *         return $http.get(\"/api/foos/\"+stateParams.fooID);\n   *       }\n   *     }</pre>\n   *\n   * @param {string=} stateConfig.url\n   * <a id='url'></a>\n   *\n   *   A url fragment with optional parameters. When a state is navigated or\n   *   transitioned to, the `$stateParams` service will be populated with any \n   *   parameters that were passed.\n   *\n   *   (See {@link ui.router.util.type:UrlMatcher UrlMatcher} `UrlMatcher`} for\n   *   more details on acceptable patterns )\n   *\n   * examples:\n   * <pre>url: \"/home\"\n   * url: \"/users/:userid\"\n   * url: \"/books/{bookid:[a-zA-Z_-]}\"\n   * url: \"/books/{categoryid:int}\"\n   * url: \"/books/{publishername:string}/{categoryid:int}\"\n   * url: \"/messages?before&after\"\n   * url: \"/messages?{before:date}&{after:date}\"\n   * url: \"/messages/:mailboxid?{before:date}&{after:date}\"\n   * </pre>\n   *\n   * @param {object=} stateConfig.views\n   * <a id='views'></a>\n   * an optional map&lt;string, object&gt; which defined multiple views, or targets views\n   * manually/explicitly.\n   *\n   * Examples:\n   *\n   * Targets three named `ui-view`s in the parent state's template\n   * <pre>views: {\n   *     header: {\n   *       controller: \"headerCtrl\",\n   *       templateUrl: \"header.html\"\n   *     }, body: {\n   *       controller: \"bodyCtrl\",\n   *       templateUrl: \"body.html\"\n   *     }, footer: {\n   *       controller: \"footCtrl\",\n   *       templateUrl: \"footer.html\"\n   *     }\n   *   }</pre>\n   *\n   * Targets named `ui-view=\"header\"` from grandparent state 'top''s template, and named `ui-view=\"body\" from parent state's template.\n   * <pre>views: {\n   *     'header@top': {\n   *       controller: \"msgHeaderCtrl\",\n   *       templateUrl: \"msgHeader.html\"\n   *     }, 'body': {\n   *       controller: \"messagesCtrl\",\n   *       templateUrl: \"messages.html\"\n   *     }\n   *   }</pre>\n   *\n   * @param {boolean=} [stateConfig.abstract=false]\n   * <a id='abstract'></a>\n   * An abstract state will never be directly activated,\n   *   but can provide inherited properties to its common children states.\n   * <pre>abstract: true</pre>\n   *\n   * @param {function=} stateConfig.onEnter\n   * <a id='onEnter'></a>\n   *\n   * Callback function for when a state is entered. Good way\n   *   to trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to explicitly annotate this function,\n   * because it won't be automatically annotated by your build tools.\n   *\n   * <pre>onEnter: function(MyService, $stateParams) {\n   *     MyService.foo($stateParams.myParam);\n   * }</pre>\n   *\n   * @param {function=} stateConfig.onExit\n   * <a id='onExit'></a>\n   *\n   * Callback function for when a state is exited. Good way to\n   *   trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to explicitly annotate this function,\n   * because it won't be automatically annotated by your build tools.\n   *\n   * <pre>onExit: function(MyService, $stateParams) {\n   *     MyService.cleanup($stateParams.myParam);\n   * }</pre>\n   *\n   * @param {boolean=} [stateConfig.reloadOnSearch=true]\n   * <a id='reloadOnSearch'></a>\n   *\n   * If `false`, will not retrigger the same state\n   *   just because a search/query parameter has changed (via $location.search() or $location.hash()). \n   *   Useful for when you'd like to modify $location.search() without triggering a reload.\n   * <pre>reloadOnSearch: false</pre>\n   *\n   * @param {object=} stateConfig.data\n   * <a id='data'></a>\n   *\n   * Arbitrary data object, useful for custom configuration.  The parent state's `data` is\n   *   prototypally inherited.  In other words, adding a data property to a state adds it to\n   *   the entire subtree via prototypal inheritance.\n   *\n   * <pre>data: {\n   *     requiredRole: 'foo'\n   * } </pre>\n   *\n   * @param {object=} stateConfig.params\n   * <a id='params'></a>\n   *\n   * A map which optionally configures parameters declared in the `url`, or\n   *   defines additional non-url parameters.  For each parameter being\n   *   configured, add a configuration object keyed to the name of the parameter.\n   *\n   *   Each parameter configuration object may contain the following properties:\n   *\n   *   - ** value ** - {object|function=}: specifies the default value for this\n   *     parameter.  This implicitly sets this parameter as optional.\n   *\n   *     When UI-Router routes to a state and no value is\n   *     specified for this parameter in the URL or transition, the\n   *     default value will be used instead.  If `value` is a function,\n   *     it will be injected and invoked, and the return value used.\n   *\n   *     *Note*: `undefined` is treated as \"no default value\" while `null`\n   *     is treated as \"the default value is `null`\".\n   *\n   *     *Shorthand*: If you only need to configure the default value of the\n   *     parameter, you may use a shorthand syntax.   In the **`params`**\n   *     map, instead mapping the param name to a full parameter configuration\n   *     object, simply set map it to the default parameter value, e.g.:\n   *\n   * <pre>// define a parameter's default value\n   * params: {\n   *     param1: { value: \"defaultValue\" }\n   * }\n   * // shorthand default values\n   * params: {\n   *     param1: \"defaultValue\",\n   *     param2: \"param2Default\"\n   * }</pre>\n   *\n   *   - ** array ** - {boolean=}: *(default: false)* If true, the param value will be\n   *     treated as an array of values.  If you specified a Type, the value will be\n   *     treated as an array of the specified Type.  Note: query parameter values\n   *     default to a special `\"auto\"` mode.\n   *\n   *     For query parameters in `\"auto\"` mode, if multiple  values for a single parameter\n   *     are present in the URL (e.g.: `/foo?bar=1&bar=2&bar=3`) then the values\n   *     are mapped to an array (e.g.: `{ foo: [ '1', '2', '3' ] }`).  However, if\n   *     only one value is present (e.g.: `/foo?bar=1`) then the value is treated as single\n   *     value (e.g.: `{ foo: '1' }`).\n   *\n   * <pre>params: {\n   *     param1: { array: true }\n   * }</pre>\n   *\n   *   - ** squash ** - {bool|string=}: `squash` configures how a default parameter value is represented in the URL when\n   *     the current parameter value is the same as the default value. If `squash` is not set, it uses the\n   *     configured default squash policy.\n   *     (See {@link ui.router.util.$urlMatcherFactory#methods_defaultSquashPolicy `defaultSquashPolicy()`})\n   *\n   *   There are three squash settings:\n   *\n   *     - false: The parameter's default value is not squashed.  It is encoded and included in the URL\n   *     - true: The parameter's default value is omitted from the URL.  If the parameter is preceeded and followed\n   *       by slashes in the state's `url` declaration, then one of those slashes are omitted.\n   *       This can allow for cleaner looking URLs.\n   *     - `\"<arbitrary string>\"`: The parameter's default value is replaced with an arbitrary placeholder of  your choice.\n   *\n   * <pre>params: {\n   *     param1: {\n   *       value: \"defaultId\",\n   *       squash: true\n   * } }\n   * // squash \"defaultValue\" to \"~\"\n   * params: {\n   *     param1: {\n   *       value: \"defaultValue\",\n   *       squash: \"~\"\n   * } }\n   * </pre>\n   *\n   *\n   * @example\n   * <pre>\n   * // Some state name examples\n   *\n   * // stateName can be a single top-level name (must be unique).\n   * $stateProvider.state(\"home\", {});\n   *\n   * // Or it can be a nested state name. This state is a child of the\n   * // above \"home\" state.\n   * $stateProvider.state(\"home.newest\", {});\n   *\n   * // Nest states as deeply as needed.\n   * $stateProvider.state(\"home.newest.abc.xyz.inception\", {});\n   *\n   * // state() returns $stateProvider, so you can chain state declarations.\n   * $stateProvider\n   *   .state(\"home\", {})\n   *   .state(\"about\", {})\n   *   .state(\"contacts\", {});\n   * </pre>\n   *\n   */\n  this.state = state;\n  function state(name, definition) {\n    /*jshint validthis: true */\n    if (isObject(name)) definition = name;\n    else definition.name = name;\n    registerState(definition);\n    return this;\n  }\n\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$state\n   *\n   * @requires $rootScope\n   * @requires $q\n   * @requires ui.router.state.$view\n   * @requires $injector\n   * @requires ui.router.util.$resolve\n   * @requires ui.router.state.$stateParams\n   * @requires ui.router.router.$urlRouter\n   *\n   * @property {object} params A param object, e.g. {sectionId: section.id)}, that \n   * you'd like to test against the current active state.\n   * @property {object} current A reference to the state's config object. However \n   * you passed it in. Useful for accessing custom data.\n   * @property {object} transition Currently pending transition. A promise that'll \n   * resolve or reject.\n   *\n   * @description\n   * `$state` service is responsible for representing states as well as transitioning\n   * between them. It also provides interfaces to ask for current state or even states\n   * you're coming from.\n   */\n  this.$get = $get;\n  $get.$inject = ['$rootScope', '$q', '$view', '$injector', '$resolve', '$stateParams', '$urlRouter', '$location', '$urlMatcherFactory'];\n  function $get(   $rootScope,   $q,   $view,   $injector,   $resolve,   $stateParams,   $urlRouter,   $location,   $urlMatcherFactory) {\n\n    var TransitionSupersededError = new Error('transition superseded');\n\n    var TransitionSuperseded = silenceUncaughtInPromise($q.reject(TransitionSupersededError));\n    var TransitionPrevented = silenceUncaughtInPromise($q.reject(new Error('transition prevented')));\n    var TransitionAborted = silenceUncaughtInPromise($q.reject(new Error('transition aborted')));\n    var TransitionFailed = silenceUncaughtInPromise($q.reject(new Error('transition failed')));\n\n    // Handles the case where a state which is the target of a transition is not found, and the user\n    // can optionally retry or defer the transition\n    function handleRedirect(redirect, state, params, options) {\n      /**\n       * @ngdoc event\n       * @name ui.router.state.$state#$stateNotFound\n       * @eventOf ui.router.state.$state\n       * @eventType broadcast on root scope\n       * @description\n       * Fired when a requested state **cannot be found** using the provided state name during transition.\n       * The event is broadcast allowing any handlers a single chance to deal with the error (usually by\n       * lazy-loading the unfound state). A special `unfoundState` object is passed to the listener handler,\n       * you can see its three properties in the example. You can use `event.preventDefault()` to abort the\n       * transition and the promise returned from `go` will be rejected with a `'transition aborted'` value.\n       *\n       * @param {Object} event Event object.\n       * @param {Object} unfoundState Unfound State information. Contains: `to, toParams, options` properties.\n       * @param {State} fromState Current state object.\n       * @param {Object} fromParams Current state params.\n       *\n       * @example\n       *\n       * <pre>\n       * // somewhere, assume lazy.state has not been defined\n       * $state.go(\"lazy.state\", {a:1, b:2}, {inherit:false});\n       *\n       * // somewhere else\n       * $scope.$on('$stateNotFound',\n       * function(event, unfoundState, fromState, fromParams){\n       *     console.log(unfoundState.to); // \"lazy.state\"\n       *     console.log(unfoundState.toParams); // {a:1, b:2}\n       *     console.log(unfoundState.options); // {inherit:false} + default options\n       * })\n       * </pre>\n       */\n      var evt = $rootScope.$broadcast('$stateNotFound', redirect, state, params);\n\n      if (evt.defaultPrevented) {\n        $urlRouter.update();\n        return TransitionAborted;\n      }\n\n      if (!evt.retry) {\n        return null;\n      }\n\n      // Allow the handler to return a promise to defer state lookup retry\n      if (options.$retry) {\n        $urlRouter.update();\n        return TransitionFailed;\n      }\n      var retryTransition = $state.transition = $q.when(evt.retry);\n\n      retryTransition.then(function() {\n        if (retryTransition !== $state.transition) {\n          $rootScope.$broadcast('$stateChangeCancel', redirect.to, redirect.toParams, state, params);\n          return TransitionSuperseded;\n        }\n        redirect.options.$retry = true;\n        return $state.transitionTo(redirect.to, redirect.toParams, redirect.options);\n      }, function() {\n        return TransitionAborted;\n      });\n      $urlRouter.update();\n\n      return retryTransition;\n    }\n\n    root.locals = { resolve: null, globals: { $stateParams: {} } };\n\n    $state = {\n      params: {},\n      current: root.self,\n      $current: root,\n      transition: null\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#reload\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A method that force reloads the current state. All resolves are re-resolved,\n     * controllers reinstantiated, and events re-fired.\n     *\n     * @example\n     * <pre>\n     * var app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     $state.reload();\n     *   }\n     * });\n     * </pre>\n     *\n     * `reload()` is just an alias for:\n     * <pre>\n     * $state.transitionTo($state.current, $stateParams, { \n     *   reload: true, inherit: false, notify: true\n     * });\n     * </pre>\n     *\n     * @param {string=|object=} state - A state name or a state object, which is the root of the resolves to be re-resolved.\n     * @example\n     * <pre>\n     * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item' \n     * //and current state is 'contacts.detail.item'\n     * var app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     //will reload 'contact.detail' and 'contact.detail.item' states\n     *     $state.reload('contact.detail');\n     *   }\n     * });\n     * </pre>\n     *\n     * `reload()` is just an alias for:\n     * <pre>\n     * $state.transitionTo($state.current, $stateParams, { \n     *   reload: true, inherit: false, notify: true\n     * });\n     * </pre>\n\n     * @returns {promise} A promise representing the state of the new transition. See\n     * {@link ui.router.state.$state#methods_go $state.go}.\n     */\n    $state.reload = function reload(state) {\n      return $state.transitionTo($state.current, $stateParams, { reload: state || true, inherit: false, notify: true});\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#go\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Convenience method for transitioning to a new state. `$state.go` calls \n     * `$state.transitionTo` internally but automatically sets options to \n     * `{ location: true, inherit: true, relative: $state.$current, notify: true }`. \n     * This allows you to easily use an absolute or relative to path and specify \n     * only the parameters you'd like to update (while letting unspecified parameters \n     * inherit from the currently active ancestor states).\n     *\n     * @example\n     * <pre>\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.go('contact.detail');\n     *   };\n     * });\n     * </pre>\n     * <img src='../ngdoc_assets/StateGoExamples.png'/>\n     *\n     * @param {string} to Absolute state name or relative state path. Some examples:\n     *\n     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n     * - `$state.go('^')` - will go to a parent state\n     * - `$state.go('^.sibling')` - will go to a sibling state\n     * - `$state.go('.child.grandchild')` - will go to grandchild state\n     *\n     * @param {object=} params A map of the parameters that will be sent to the state, \n     * will populate $stateParams. Any parameters that are not specified will be inherited from currently \n     * defined parameters. Only parameters specified in the state definition can be overridden, new \n     * parameters will be ignored. This allows, for example, going to a sibling state that shares parameters\n     * specified in a parent state. Parameter inheritance only works between common ancestor states, I.e.\n     * transitioning to a sibling will get you the parameters for all parents, transitioning to a child\n     * will get you all current parameters, etc.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n     * - **`reload`** (v0.2.5) - {boolean=false|string|object}, If `true` will force transition even if no state or params\n     *    have changed.  It will reload the resolves and views of the current state and parent states.\n     *    If `reload` is a string (or state object), the state object is fetched (by name, or object reference); and \\\n     *    the transition reloads the resolves and views for that matched state, and all its children states.\n     *\n     * @returns {promise} A promise representing the state of the new transition.\n     *\n     * Possible success values:\n     *\n     * - $state.current\n     *\n     * <br/>Possible rejection values:\n     *\n     * - 'transition superseded' - when a newer transition has been started after this one\n     * - 'transition prevented' - when `event.preventDefault()` has been called in a `$stateChangeStart` listener\n     * - 'transition aborted' - when `event.preventDefault()` has been called in a `$stateNotFound` listener or\n     *   when a `$stateNotFound` `event.retry` promise errors.\n     * - 'transition failed' - when a state has been unsuccessfully found after 2 tries.\n     * - *resolve error* - when an error has occurred with a `resolve`\n     *\n     */\n    $state.go = function go(to, params, options) {\n      return $state.transitionTo(to, params, extend({ inherit: true, relative: $state.$current }, options));\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#transitionTo\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Low-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}\n     * uses `transitionTo` internally. `$state.go` is recommended in most situations.\n     *\n     * @example\n     * <pre>\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.transitionTo('contact.detail');\n     *   };\n     * });\n     * </pre>\n     *\n     * @param {string} to State name.\n     * @param {object=} toParams A map of the parameters that will be sent to the state,\n     * will populate $stateParams.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n     * - **`inherit`** - {boolean=false}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n     * - **`reload`** (v0.2.5) - {boolean=false|string=|object=}, If `true` will force transition even if the state or params \n     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\n     *    use this when you want to force a reload when *everything* is the same, including search params.\n     *    if String, then will reload the state with the name given in reload, and any children.\n     *    if Object, then a stateObj is expected, will reload the state found in stateObj, and any children.\n     *\n     * @returns {promise} A promise representing the state of the new transition. See\n     * {@link ui.router.state.$state#methods_go $state.go}.\n     */\n    $state.transitionTo = function transitionTo(to, toParams, options) {\n      toParams = toParams || {};\n      options = extend({\n        location: true, inherit: false, relative: null, notify: true, reload: false, $retry: false\n      }, options || {});\n\n      var from = $state.$current, fromParams = $state.params, fromPath = from.path;\n      var evt, toState = findState(to, options.relative);\n\n      // Store the hash param for later (since it will be stripped out by various methods)\n      var hash = toParams['#'];\n\n      if (!isDefined(toState)) {\n        var redirect = { to: to, toParams: toParams, options: options };\n        var redirectResult = handleRedirect(redirect, from.self, fromParams, options);\n\n        if (redirectResult) {\n          return redirectResult;\n        }\n\n        // Always retry once if the $stateNotFound was not prevented\n        // (handles either redirect changed or state lazy-definition)\n        to = redirect.to;\n        toParams = redirect.toParams;\n        options = redirect.options;\n        toState = findState(to, options.relative);\n\n        if (!isDefined(toState)) {\n          if (!options.relative) throw new Error(\"No such state '\" + to + \"'\");\n          throw new Error(\"Could not resolve '\" + to + \"' from state '\" + options.relative + \"'\");\n        }\n      }\n      if (toState[abstractKey]) throw new Error(\"Cannot transition to abstract state '\" + to + \"'\");\n      if (options.inherit) toParams = inheritParams($stateParams, toParams || {}, $state.$current, toState);\n      if (!toState.params.$$validates(toParams)) return TransitionFailed;\n\n      toParams = toState.params.$$values(toParams);\n      to = toState;\n\n      var toPath = to.path;\n\n      // Starting from the root of the path, keep all levels that haven't changed\n      var keep = 0, state = toPath[keep], locals = root.locals, toLocals = [];\n\n      if (!options.reload) {\n        while (state && state === fromPath[keep] && state.ownParams.$$equals(toParams, fromParams)) {\n          locals = toLocals[keep] = state.locals;\n          keep++;\n          state = toPath[keep];\n        }\n      } else if (isString(options.reload) || isObject(options.reload)) {\n        if (isObject(options.reload) && !options.reload.name) {\n          throw new Error('Invalid reload state object');\n        }\n        \n        var reloadState = options.reload === true ? fromPath[0] : findState(options.reload);\n        if (options.reload && !reloadState) {\n          throw new Error(\"No such reload state '\" + (isString(options.reload) ? options.reload : options.reload.name) + \"'\");\n        }\n\n        while (state && state === fromPath[keep] && state !== reloadState) {\n          locals = toLocals[keep] = state.locals;\n          keep++;\n          state = toPath[keep];\n        }\n      }\n\n      // If we're going to the same state and all locals are kept, we've got nothing to do.\n      // But clear 'transition', as we still want to cancel any other pending transitions.\n      // TODO: We may not want to bump 'transition' if we're called from a location change\n      // that we've initiated ourselves, because we might accidentally abort a legitimate\n      // transition initiated from code?\n      if (shouldSkipReload(to, toParams, from, fromParams, locals, options)) {\n        if (hash) toParams['#'] = hash;\n        $state.params = toParams;\n        copy($state.params, $stateParams);\n        copy(filterByKeys(to.params.$$keys(), $stateParams), to.locals.globals.$stateParams);\n        if (options.location && to.navigable && to.navigable.url) {\n          $urlRouter.push(to.navigable.url, toParams, {\n            $$avoidResync: true, replace: options.location === 'replace'\n          });\n          $urlRouter.update(true);\n        }\n        $state.transition = null;\n        return $q.when($state.current);\n      }\n\n      // Filter parameters before we pass them to event handlers etc.\n      toParams = filterByKeys(to.params.$$keys(), toParams || {});\n      \n      // Re-add the saved hash before we start returning things or broadcasting $stateChangeStart\n      if (hash) toParams['#'] = hash;\n      \n      // Broadcast start event and cancel the transition if requested\n      if (options.notify) {\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeStart\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired when the state transition **begins**. You can use `event.preventDefault()`\n         * to prevent the transition from happening and then the transition promise will be\n         * rejected with a `'transition prevented'` value.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         *\n         * @example\n         *\n         * <pre>\n         * $rootScope.$on('$stateChangeStart',\n         * function(event, toState, toParams, fromState, fromParams){\n         *     event.preventDefault();\n         *     // transitionTo() promise will be rejected with\n         *     // a 'transition prevented' error\n         * })\n         * </pre>\n         */\n        if ($rootScope.$broadcast('$stateChangeStart', to.self, toParams, from.self, fromParams, options).defaultPrevented) {\n          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n          //Don't update and resync url if there's been a new transition started. see issue #2238, #600\n          if ($state.transition == null) $urlRouter.update();\n          return TransitionPrevented;\n        }\n      }\n\n      // Resolve locals for the remaining states, but don't update any global state just\n      // yet -- if anything fails to resolve the current state needs to remain untouched.\n      // We also set up an inheritance chain for the locals here. This allows the view directive\n      // to quickly look up the correct definition for each view in the current state. Even\n      // though we create the locals object itself outside resolveState(), it is initially\n      // empty and gets filled asynchronously. We need to keep track of the promise for the\n      // (fully resolved) current locals, and pass this down the chain.\n      var resolved = $q.when(locals);\n\n      for (var l = keep; l < toPath.length; l++, state = toPath[l]) {\n        locals = toLocals[l] = inherit(locals);\n        resolved = resolveState(state, toParams, state === to, resolved, locals, options);\n      }\n\n      // Once everything is resolved, we are ready to perform the actual transition\n      // and return a promise for the new state. We also keep track of what the\n      // current promise is, so that we can detect overlapping transitions and\n      // keep only the outcome of the last transition.\n      var transition = $state.transition = resolved.then(function () {\n        var l, entering, exiting;\n\n        if ($state.transition !== transition) {\n          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n          return TransitionSuperseded;\n        }\n\n        // Exit 'from' states not kept\n        for (l = fromPath.length - 1; l >= keep; l--) {\n          exiting = fromPath[l];\n          if (exiting.self.onExit) {\n            $injector.invoke(exiting.self.onExit, exiting.self, exiting.locals.globals);\n          }\n          exiting.locals = null;\n        }\n\n        // Enter 'to' states not kept\n        for (l = keep; l < toPath.length; l++) {\n          entering = toPath[l];\n          entering.locals = toLocals[l];\n          if (entering.self.onEnter) {\n            $injector.invoke(entering.self.onEnter, entering.self, entering.locals.globals);\n          }\n        }\n\n        // Run it again, to catch any transitions in callbacks\n        if ($state.transition !== transition) {\n          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n          return TransitionSuperseded;\n        }\n\n        // Update globals in $state\n        $state.$current = to;\n        $state.current = to.self;\n        $state.params = toParams;\n        copy($state.params, $stateParams);\n        $state.transition = null;\n\n        if (options.location && to.navigable) {\n          $urlRouter.push(to.navigable.url, to.navigable.locals.globals.$stateParams, {\n            $$avoidResync: true, replace: options.location === 'replace'\n          });\n        }\n\n        if (options.notify) {\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeSuccess\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired once the state transition is **complete**.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         */\n          $rootScope.$broadcast('$stateChangeSuccess', to.self, toParams, from.self, fromParams);\n        }\n        $urlRouter.update(true);\n\n        return $state.current;\n      }).then(null, function (error) {\n        // propagate TransitionSuperseded error without emitting $stateChangeCancel\n        // as it was already emitted in the success handler above\n        if (error === TransitionSupersededError) return TransitionSuperseded;\n\n        if ($state.transition !== transition) {\n          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n          return TransitionSuperseded;\n        }\n\n        $state.transition = null;\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeError\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired when an **error occurs** during transition. It's important to note that if you\n         * have any errors in your resolve functions (javascript errors, non-existent services, etc)\n         * they will not throw traditionally. You must listen for this $stateChangeError event to\n         * catch **ALL** errors.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         * @param {Error} error The resolve error object.\n         */\n        evt = $rootScope.$broadcast('$stateChangeError', to.self, toParams, from.self, fromParams, error);\n\n        if (!evt.defaultPrevented) {\n          $urlRouter.update();\n        }\n\n        return $q.reject(error);\n      });\n\n      return transition;\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#is\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Similar to {@link ui.router.state.$state#methods_includes $state.includes},\n     * but only checks for the full state name. If params is supplied then it will be\n     * tested for strict equality against the current active params object, so all params\n     * must match with none missing and no extras.\n     *\n     * @example\n     * <pre>\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // absolute name\n     * $state.is('contact.details.item'); // returns true\n     * $state.is(contactDetailItemStateObject); // returns true\n     *\n     * // relative name (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n     * </pre>\n     *\n     * @param {string|object} stateOrName The state name (absolute or relative) or state object you'd like to check.\n     * @param {object=} params A param object, e.g. `{sectionId: section.id}`, that you'd like\n     * to test against the current active state.\n     * @param {object=} options An options object.  The options are:\n     *\n     * - **`relative`** - {string|object} -  If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     * test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it is the state.\n     */\n    $state.is = function is(stateOrName, params, options) {\n      options = extend({ relative: $state.$current }, options || {});\n      var state = findState(stateOrName, options.relative);\n\n      if (!isDefined(state)) { return undefined; }\n      if ($state.$current !== state) { return false; }\n      return params ? equalForKeys(state.params.$$values(params), $stateParams) : true;\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#includes\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A method to determine if the current active state is equal to or is the child of the\n     * state stateName. If any params are passed then they will be tested for a match as well.\n     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n     *\n     * @example\n     * Partial and relative names\n     * <pre>\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // Using partial names\n     * $state.includes(\"contacts\"); // returns true\n     * $state.includes(\"contacts.details\"); // returns true\n     * $state.includes(\"contacts.details.item\"); // returns true\n     * $state.includes(\"contacts.list\"); // returns false\n     * $state.includes(\"about\"); // returns false\n     *\n     * // Using relative names (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * <div ng-class=\"{highlighted: $state.includes('.item')}\">Item</div>\n     * </pre>\n     *\n     * Basic globbing patterns\n     * <pre>\n     * $state.$current.name = 'contacts.details.item.url';\n     *\n     * $state.includes(\"*.details.*.*\"); // returns true\n     * $state.includes(\"*.details.**\"); // returns true\n     * $state.includes(\"**.item.**\"); // returns true\n     * $state.includes(\"*.details.item.url\"); // returns true\n     * $state.includes(\"*.details.*.url\"); // returns true\n     * $state.includes(\"*.details.*\"); // returns false\n     * $state.includes(\"item.**\"); // returns false\n     * </pre>\n     *\n     * @param {string} stateOrName A partial name, relative name, or glob pattern\n     * to be searched for within the current state name.\n     * @param {object=} params A param object, e.g. `{sectionId: section.id}`,\n     * that you'd like to test against the current active state.\n     * @param {object=} options An options object.  The options are:\n     *\n     * - **`relative`** - {string|object=} -  If `stateOrName` is a relative state reference and `options.relative` is set,\n     * .includes will test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it does include the state\n     */\n    $state.includes = function includes(stateOrName, params, options) {\n      options = extend({ relative: $state.$current }, options || {});\n      if (isString(stateOrName) && isGlob(stateOrName)) {\n        if (!doesStateMatchGlob(stateOrName)) {\n          return false;\n        }\n        stateOrName = $state.$current.name;\n      }\n\n      var state = findState(stateOrName, options.relative);\n      if (!isDefined(state)) { return undefined; }\n      if (!isDefined($state.$current.includes[state.name])) { return false; }\n      if (!params) { return true; }\n\n      var keys = objectKeys(params);\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i], paramDef = state.params[key];\n        if (paramDef && !paramDef.type.equals($stateParams[key], params[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#href\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A url generation method that returns the compiled url for the given state populated with the given params.\n     *\n     * @example\n     * <pre>\n     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n     * </pre>\n     *\n     * @param {string|object} stateOrName The state name or state object you'd like to generate a url from.\n     * @param {object=} params An object of parameter values to fill the state's required parameters.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the\n     *    first parameter, then the constructed href url will be built from the first navigable ancestor (aka\n     *    ancestor with a valid url).\n     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n     * \n     * @returns {string} compiled state url\n     */\n    $state.href = function href(stateOrName, params, options) {\n      options = extend({\n        lossy:    true,\n        inherit:  true,\n        absolute: false,\n        relative: $state.$current\n      }, options || {});\n\n      var state = findState(stateOrName, options.relative);\n\n      if (!isDefined(state)) return null;\n      if (options.inherit) params = inheritParams($stateParams, params || {}, $state.$current, state);\n      \n      var nav = (state && options.lossy) ? state.navigable : state;\n\n      if (!nav || nav.url === undefined || nav.url === null) {\n        return null;\n      }\n      return $urlRouter.href(nav.url, filterByKeys(state.params.$$keys().concat('#'), params || {}), {\n        absolute: options.absolute\n      });\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#get\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Returns the state configuration object for any specific state or all states.\n     *\n     * @param {string|object=} stateOrName (absolute or relative) If provided, will only get the config for\n     * the requested state. If not provided, returns an array of ALL state configs.\n     * @param {string|object=} context When stateOrName is a relative state reference, the state will be retrieved relative to context.\n     * @returns {Object|Array} State configuration object or array of all objects.\n     */\n    $state.get = function (stateOrName, context) {\n      if (arguments.length === 0) return map(objectKeys(states), function(name) { return states[name].self; });\n      var state = findState(stateOrName, context || $state.$current);\n      return (state && state.self) ? state.self : null;\n    };\n\n    function resolveState(state, params, paramsAreFiltered, inherited, dst, options) {\n      // Make a restricted $stateParams with only the parameters that apply to this state if\n      // necessary. In addition to being available to the controller and onEnter/onExit callbacks,\n      // we also need $stateParams to be available for any $injector calls we make during the\n      // dependency resolution process.\n      var $stateParams = (paramsAreFiltered) ? params : filterByKeys(state.params.$$keys(), params);\n      var locals = { $stateParams: $stateParams };\n\n      // Resolve 'global' dependencies for the state, i.e. those not specific to a view.\n      // We're also including $stateParams in this; that way the parameters are restricted\n      // to the set that should be visible to the state, and are independent of when we update\n      // the global $state and $stateParams values.\n      dst.resolve = $resolve.resolve(state.resolve, locals, dst.resolve, state);\n      var promises = [dst.resolve.then(function (globals) {\n        dst.globals = globals;\n      })];\n      if (inherited) promises.push(inherited);\n\n      function resolveViews() {\n        var viewsPromises = [];\n\n        // Resolve template and dependencies for all views.\n        forEach(state.views, function (view, name) {\n          var injectables = (view.resolve && view.resolve !== state.resolve ? view.resolve : {});\n          injectables.$template = [ function () {\n            return $view.load(name, { view: view, locals: dst.globals, params: $stateParams, notify: options.notify }) || '';\n          }];\n\n          viewsPromises.push($resolve.resolve(injectables, dst.globals, dst.resolve, state).then(function (result) {\n            // References to the controller (only instantiated at link time)\n            if (isFunction(view.controllerProvider) || isArray(view.controllerProvider)) {\n              var injectLocals = angular.extend({}, injectables, dst.globals);\n              result.$$controller = $injector.invoke(view.controllerProvider, null, injectLocals);\n            } else {\n              result.$$controller = view.controller;\n            }\n            // Provide access to the state itself for internal use\n            result.$$state = state;\n            result.$$controllerAs = view.controllerAs;\n            result.$$resolveAs = view.resolveAs;\n            dst[name] = result;\n          }));\n        });\n\n        return $q.all(viewsPromises).then(function(){\n          return dst.globals;\n        });\n      }\n\n      // Wait for all the promises and then return the activation object\n      return $q.all(promises).then(resolveViews).then(function (values) {\n        return dst;\n      });\n    }\n\n    return $state;\n  }\n\n  function shouldSkipReload(to, toParams, from, fromParams, locals, options) {\n    // Return true if there are no differences in non-search (path/object) params, false if there are differences\n    function nonSearchParamsEqual(fromAndToState, fromParams, toParams) {\n      // Identify whether all the parameters that differ between `fromParams` and `toParams` were search params.\n      function notSearchParam(key) {\n        return fromAndToState.params[key].location != \"search\";\n      }\n      var nonQueryParamKeys = fromAndToState.params.$$keys().filter(notSearchParam);\n      var nonQueryParams = pick.apply({}, [fromAndToState.params].concat(nonQueryParamKeys));\n      var nonQueryParamSet = new $$UMFP.ParamSet(nonQueryParams);\n      return nonQueryParamSet.$$equals(fromParams, toParams);\n    }\n\n    // If reload was not explicitly requested\n    // and we're transitioning to the same state we're already in\n    // and    the locals didn't change\n    //     or they changed in a way that doesn't merit reloading\n    //        (reloadOnParams:false, or reloadOnSearch.false and only search params changed)\n    // Then return true.\n    if (!options.reload && to === from &&\n      (locals === from.locals || (to.self.reloadOnSearch === false && nonSearchParamsEqual(from, fromParams, toParams)))) {\n      return true;\n    }\n  }\n}\n\nangular.module('ui.router.state')\n  .factory('$stateParams', function () { return {}; })\n  .constant(\"$state.runtime\", { autoinject: true })\n  .provider('$state', $StateProvider)\n  // Inject $state to initialize when entering runtime. #2574\n  .run(['$injector', function ($injector) {\n    // Allow tests (stateSpec.js) to turn this off by defining this constant\n    if ($injector.get(\"$state.runtime\").autoinject) {\n      $injector.get('$state');\n    }\n  }]);\n\n\n$ViewProvider.$inject = [];\nfunction $ViewProvider() {\n\n  this.$get = $get;\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$view\n   *\n   * @requires ui.router.util.$templateFactory\n   * @requires $rootScope\n   *\n   * @description\n   *\n   */\n  $get.$inject = ['$rootScope', '$templateFactory'];\n  function $get(   $rootScope,   $templateFactory) {\n    return {\n      // $view.load('full.viewName', { template: ..., controller: ..., resolve: ..., async: false, params: ... })\n      /**\n       * @ngdoc function\n       * @name ui.router.state.$view#load\n       * @methodOf ui.router.state.$view\n       *\n       * @description\n       *\n       * @param {string} name name\n       * @param {object} options option object.\n       */\n      load: function load(name, options) {\n        var result, defaults = {\n          template: null, controller: null, view: null, locals: null, notify: true, async: true, params: {}\n        };\n        options = extend(defaults, options);\n\n        if (options.view) {\n          result = $templateFactory.fromConfig(options.view, options.params, options.locals);\n        }\n        return result;\n      }\n    };\n  }\n}\n\nangular.module('ui.router.state').provider('$view', $ViewProvider);\n\n/**\n * @ngdoc object\n * @name ui.router.state.$uiViewScrollProvider\n *\n * @description\n * Provider that returns the {@link ui.router.state.$uiViewScroll} service function.\n */\nfunction $ViewScrollProvider() {\n\n  var useAnchorScroll = false;\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$uiViewScrollProvider#useAnchorScroll\n   * @methodOf ui.router.state.$uiViewScrollProvider\n   *\n   * @description\n   * Reverts back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll) service for\n   * scrolling based on the url anchor.\n   */\n  this.useAnchorScroll = function () {\n    useAnchorScroll = true;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$uiViewScroll\n   *\n   * @requires $anchorScroll\n   * @requires $timeout\n   *\n   * @description\n   * When called with a jqLite element, it scrolls the element into view (after a\n   * `$timeout` so the DOM has time to refresh).\n   *\n   * If you prefer to rely on `$anchorScroll` to scroll the view to the anchor,\n   * this can be enabled by calling {@link ui.router.state.$uiViewScrollProvider#methods_useAnchorScroll `$uiViewScrollProvider.useAnchorScroll()`}.\n   */\n  this.$get = ['$anchorScroll', '$timeout', function ($anchorScroll, $timeout) {\n    if (useAnchorScroll) {\n      return $anchorScroll;\n    }\n\n    return function ($element) {\n      return $timeout(function () {\n        $element[0].scrollIntoView();\n      }, 0, false);\n    };\n  }];\n}\n\nangular.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-view\n *\n * @requires ui.router.state.$state\n * @requires $compile\n * @requires $controller\n * @requires $injector\n * @requires ui.router.state.$uiViewScroll\n * @requires $document\n *\n * @restrict ECA\n *\n * @description\n * The ui-view directive tells $state where to place your templates.\n *\n * @param {string=} name A view name. The name should be unique amongst the other views in the\n * same state. You can have views of the same name that live in different states.\n *\n * @param {string=} autoscroll It allows you to set the scroll behavior of the browser window\n * when a view is populated. By default, $anchorScroll is overridden by ui-router's custom scroll\n * service, {@link ui.router.state.$uiViewScroll}. This custom service let's you\n * scroll ui-view elements into view when they are populated during a state activation.\n *\n * *Note: To revert back to old [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll)\n * functionality, call `$uiViewScrollProvider.useAnchorScroll()`.*\n *\n * @param {string=} onload Expression to evaluate whenever the view updates.\n *\n * @example\n * A view can be unnamed or named.\n * <pre>\n * <!-- Unnamed -->\n * <div ui-view></div>\n *\n * <!-- Named -->\n * <div ui-view=\"viewName\"></div>\n * </pre>\n *\n * You can only have one unnamed view within any template (or root html). If you are only using a\n * single view and it is unnamed then you can populate it like so:\n * <pre>\n * <div ui-view></div>\n * $stateProvider.state(\"home\", {\n *   template: \"<h1>HELLO!</h1>\"\n * })\n * </pre>\n *\n * The above is a convenient shortcut equivalent to specifying your view explicitly with the {@link ui.router.state.$stateProvider#methods_state `views`}\n * config property, by name, in this case an empty name:\n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }    \n * })\n * </pre>\n *\n * But typically you'll only use the views property if you name your view or have more than one view\n * in the same template. There's not really a compelling reason to name a view if its the only one,\n * but you could if you wanted, like so:\n * <pre>\n * <div ui-view=\"main\"></div>\n * </pre>\n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"main\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }    \n * })\n * </pre>\n *\n * Really though, you'll use views to set up multiple views:\n * <pre>\n * <div ui-view></div>\n * <div ui-view=\"chart\"></div>\n * <div ui-view=\"data\"></div>\n * </pre>\n *\n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     },\n *     \"chart\": {\n *       template: \"<chart_thing/>\"\n *     },\n *     \"data\": {\n *       template: \"<data_thing/>\"\n *     }\n *   }    \n * })\n * </pre>\n *\n * Examples for `autoscroll`:\n *\n * <pre>\n * <!-- If autoscroll present with no expression,\n *      then scroll ui-view into view -->\n * <ui-view autoscroll/>\n *\n * <!-- If autoscroll present with valid expression,\n *      then scroll ui-view into view if expression evaluates to true -->\n * <ui-view autoscroll='true'/>\n * <ui-view autoscroll='false'/>\n * <ui-view autoscroll='scopeVariable'/>\n * </pre>\n *\n * Resolve data:\n *\n * The resolved data from the state's `resolve` block is placed on the scope as `$resolve` (this\n * can be customized using [[ViewDeclaration.resolveAs]]).  This can be then accessed from the template.\n *\n * Note that when `controllerAs` is being used, `$resolve` is set on the controller instance *after* the\n * controller is instantiated.  The `$onInit()` hook can be used to perform initialization code which\n * depends on `$resolve` data.\n *\n * Example usage of $resolve in a view template\n * <pre>\n * $stateProvider.state('home', {\n *   template: '<my-component user=\"$resolve.user\"></my-component>',\n *   resolve: {\n *     user: function(UserService) { return UserService.fetchUser(); }\n *   }\n * });\n * </pre>\n */\n$ViewDirective.$inject = ['$state', '$injector', '$uiViewScroll', '$interpolate', '$q'];\nfunction $ViewDirective(   $state,   $injector,   $uiViewScroll,   $interpolate,   $q) {\n\n  function getService() {\n    return ($injector.has) ? function(service) {\n      return $injector.has(service) ? $injector.get(service) : null;\n    } : function(service) {\n      try {\n        return $injector.get(service);\n      } catch (e) {\n        return null;\n      }\n    };\n  }\n\n  var service = getService(),\n      $animator = service('$animator'),\n      $animate = service('$animate');\n\n  // Returns a set of DOM manipulation functions based on which Angular version\n  // it should use\n  function getRenderer(attrs, scope) {\n    var statics = function() {\n      return {\n        enter: function (element, target, cb) { target.after(element); cb(); },\n        leave: function (element, cb) { element.remove(); cb(); }\n      };\n    };\n\n    if ($animate) {\n      return {\n        enter: function(element, target, cb) {\n          if (angular.version.minor > 2) {\n            $animate.enter(element, null, target).then(cb);\n          } else {\n            $animate.enter(element, null, target, cb);\n          }\n        },\n        leave: function(element, cb) {\n          if (angular.version.minor > 2) {\n            $animate.leave(element).then(cb);\n          } else {\n            $animate.leave(element, cb);\n          }\n        }\n      };\n    }\n\n    if ($animator) {\n      var animate = $animator && $animator(scope, attrs);\n\n      return {\n        enter: function(element, target, cb) {animate.enter(element, null, target); cb(); },\n        leave: function(element, cb) { animate.leave(element); cb(); }\n      };\n    }\n\n    return statics();\n  }\n\n  var directive = {\n    restrict: 'ECA',\n    terminal: true,\n    priority: 400,\n    transclude: 'element',\n    compile: function (tElement, tAttrs, $transclude) {\n      return function (scope, $element, attrs) {\n        var previousEl, currentEl, currentScope, latestLocals,\n            onloadExp     = attrs.onload || '',\n            autoScrollExp = attrs.autoscroll,\n            renderer      = getRenderer(attrs, scope),\n            inherited     = $element.inheritedData('$uiView');\n\n        scope.$on('$stateChangeSuccess', function() {\n          updateView(false);\n        });\n\n        updateView(true);\n\n        function cleanupLastView() {\n          if (previousEl) {\n            previousEl.remove();\n            previousEl = null;\n          }\n\n          if (currentScope) {\n            currentScope.$destroy();\n            currentScope = null;\n          }\n\n          if (currentEl) {\n            var $uiViewData = currentEl.data('$uiViewAnim');\n            renderer.leave(currentEl, function() {\n              $uiViewData.$$animLeave.resolve();\n              previousEl = null;\n            });\n\n            previousEl = currentEl;\n            currentEl = null;\n          }\n        }\n\n        function updateView(firstTime) {\n          var newScope,\n              name            = getUiViewName(scope, attrs, $element, $interpolate),\n              previousLocals  = name && $state.$current && $state.$current.locals[name];\n\n          if (!firstTime && previousLocals === latestLocals) return; // nothing to do\n          newScope = scope.$new();\n          latestLocals = $state.$current.locals[name];\n\n          /**\n           * @ngdoc event\n           * @name ui.router.state.directive:ui-view#$viewContentLoading\n           * @eventOf ui.router.state.directive:ui-view\n           * @eventType emits on ui-view directive scope\n           * @description\n           *\n           * Fired once the view **begins loading**, *before* the DOM is rendered.\n           *\n           * @param {Object} event Event object.\n           * @param {string} viewName Name of the view.\n           */\n          newScope.$emit('$viewContentLoading', name);\n\n          var clone = $transclude(newScope, function(clone) {\n            var animEnter = $q.defer(), animLeave = $q.defer();\n            var viewAnimData = {\n              $animEnter: animEnter.promise,\n              $animLeave: animLeave.promise,\n              $$animLeave: animLeave\n            };\n\n            clone.data('$uiViewAnim', viewAnimData);\n            renderer.enter(clone, $element, function onUiViewEnter() {\n              animEnter.resolve();\n              if(currentScope) {\n                currentScope.$emit('$viewContentAnimationEnded');\n              }\n\n              if (angular.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {\n                $uiViewScroll(clone);\n              }\n            });\n            cleanupLastView();\n          });\n\n          currentEl = clone;\n          currentScope = newScope;\n          /**\n           * @ngdoc event\n           * @name ui.router.state.directive:ui-view#$viewContentLoaded\n           * @eventOf ui.router.state.directive:ui-view\n           * @eventType emits on ui-view directive scope\n           * @description\n           * Fired once the view is **loaded**, *after* the DOM is rendered.\n           *\n           * @param {Object} event Event object.\n           * @param {string} viewName Name of the view.\n           */\n          currentScope.$emit('$viewContentLoaded', name);\n          currentScope.$eval(onloadExp);\n        }\n      };\n    }\n  };\n\n  return directive;\n}\n\n$ViewDirectiveFill.$inject = ['$compile', '$controller', '$state', '$interpolate'];\nfunction $ViewDirectiveFill (  $compile,   $controller,   $state,   $interpolate) {\n  return {\n    restrict: 'ECA',\n    priority: -400,\n    compile: function (tElement) {\n      var initial = tElement.html();\n      return function (scope, $element, attrs) {\n        var current = $state.$current,\n            name = getUiViewName(scope, attrs, $element, $interpolate),\n            locals  = current && current.locals[name];\n\n        if (! locals) {\n          return;\n        }\n\n        $element.data('$uiView', { name: name, state: locals.$$state });\n        $element.html(locals.$template ? locals.$template : initial);\n\n        var resolveData = angular.extend({}, locals);\n        scope[locals.$$resolveAs] = resolveData;\n\n        var link = $compile($element.contents());\n\n        if (locals.$$controller) {\n          locals.$scope = scope;\n          locals.$element = $element;\n          var controller = $controller(locals.$$controller, locals);\n          if (locals.$$controllerAs) {\n            scope[locals.$$controllerAs] = controller;\n            scope[locals.$$controllerAs][locals.$$resolveAs] = resolveData;\n          }\n          if (isFunction(controller.$onInit)) controller.$onInit();\n          $element.data('$ngControllerController', controller);\n          $element.children().data('$ngControllerController', controller);\n        }\n\n        link(scope);\n      };\n    }\n  };\n}\n\n/**\n * Shared ui-view code for both directives:\n * Given scope, element, and its attributes, return the view's name\n */\nfunction getUiViewName(scope, attrs, element, $interpolate) {\n  var name = $interpolate(attrs.uiView || attrs.name || '')(scope);\n  var uiViewCreatedBy = element.inheritedData('$uiView');\n  return name.indexOf('@') >= 0 ?  name :  (name + '@' + (uiViewCreatedBy ? uiViewCreatedBy.state.name : ''));\n}\n\nangular.module('ui.router.state').directive('uiView', $ViewDirective);\nangular.module('ui.router.state').directive('uiView', $ViewDirectiveFill);\n\nfunction parseStateRef(ref, current) {\n  var preparsed = ref.match(/^\\s*({[^}]*})\\s*$/), parsed;\n  if (preparsed) ref = current + '(' + preparsed[1] + ')';\n  parsed = ref.replace(/\\n/g, \" \").match(/^([^(]+?)\\s*(\\((.*)\\))?$/);\n  if (!parsed || parsed.length !== 4) throw new Error(\"Invalid state ref '\" + ref + \"'\");\n  return { state: parsed[1], paramExpr: parsed[3] || null };\n}\n\nfunction stateContext(el) {\n  var stateData = el.parent().inheritedData('$uiView');\n\n  if (stateData && stateData.state && stateData.state.name) {\n    return stateData.state;\n  }\n}\n\nfunction getTypeInfo(el) {\n  // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n  var isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';\n  var isForm = el[0].nodeName === \"FORM\";\n\n  return {\n    attr: isForm ? \"action\" : (isSvg ? 'xlink:href' : 'href'),\n    isAnchor: el.prop(\"tagName\").toUpperCase() === \"A\",\n    clickable: !isForm\n  };\n}\n\nfunction clickHook(el, $state, $timeout, type, current) {\n  return function(e) {\n    var button = e.which || e.button, target = current();\n\n    if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || el.attr('target'))) {\n      // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\n      var transition = $timeout(function() {\n        $state.go(target.state, target.params, target.options);\n      });\n      e.preventDefault();\n\n      // if the state has no URL, ignore one preventDefault from the <a> directive.\n      var ignorePreventDefaultCount = type.isAnchor && !target.href ? 1: 0;\n\n      e.preventDefault = function() {\n        if (ignorePreventDefaultCount-- <= 0) $timeout.cancel(transition);\n      };\n    }\n  };\n}\n\nfunction defaultOpts(el, $state) {\n  return { relative: stateContext(el) || $state.$current, inherit: true };\n}\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref\n *\n * @requires ui.router.state.$state\n * @requires $timeout\n *\n * @restrict A\n *\n * @description\n * A directive that binds a link (`<a>` tag) to a state. If the state has an associated\n * URL, the directive will automatically generate & update the `href` attribute via\n * the {@link ui.router.state.$state#methods_href $state.href()} method. Clicking\n * the link will trigger a state transition with optional parameters.\n *\n * Also middle-clicking, right-clicking, and ctrl-clicking on the link will be\n * handled natively by the browser.\n *\n * You can also use relative state paths within ui-sref, just like the relative\n * paths passed to `$state.go()`. You just need to be aware that the path is relative\n * to the state that the link lives in, in other words the state that loaded the\n * template containing the link.\n *\n * You can specify options to pass to {@link ui.router.state.$state#methods_go $state.go()}\n * using the `ui-sref-opts` attribute. Options are restricted to `location`, `inherit`,\n * and `reload`.\n *\n * @example\n * Here's an example of how you'd use ui-sref and how it would compile. If you have the\n * following template:\n * <pre>\n * <a ui-sref=\"home\">Home</a> | <a ui-sref=\"about\">About</a> | <a ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n *     </li>\n * </ul>\n * </pre>\n *\n * Then the compiled html would be (assuming Html5Mode is off and current state is contacts):\n * <pre>\n * <a href=\"#/home\" ui-sref=\"home\">Home</a> | <a href=\"#/about\" ui-sref=\"about\">About</a> | <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n *     </li>\n * </ul>\n *\n * <a ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n * </pre>\n *\n * @param {string} ui-sref 'stateName' can be any valid absolute or relative state\n * @param {Object} ui-sref-opts options to pass to {@link ui.router.state.$state#methods_go $state.go()}\n */\n$StateRefDirective.$inject = ['$state', '$timeout'];\nfunction $StateRefDirective($state, $timeout) {\n  return {\n    restrict: 'A',\n    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n    link: function(scope, element, attrs, uiSrefActive) {\n      var ref    = parseStateRef(attrs.uiSref, $state.current.name);\n      var def    = { state: ref.state, href: null, params: null };\n      var type   = getTypeInfo(element);\n      var active = uiSrefActive[1] || uiSrefActive[0];\n      var unlinkInfoFn = null;\n      var hookFn;\n\n      def.options = extend(defaultOpts(element, $state), attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {});\n\n      var update = function(val) {\n        if (val) def.params = angular.copy(val);\n        def.href = $state.href(ref.state, def.params, def.options);\n\n        if (unlinkInfoFn) unlinkInfoFn();\n        if (active) unlinkInfoFn = active.$$addStateInfo(ref.state, def.params);\n        if (def.href !== null) attrs.$set(type.attr, def.href);\n      };\n\n      if (ref.paramExpr) {\n        scope.$watch(ref.paramExpr, function(val) { if (val !== def.params) update(val); }, true);\n        def.params = angular.copy(scope.$eval(ref.paramExpr));\n      }\n      update();\n\n      if (!type.clickable) return;\n      hookFn = clickHook(element, $state, $timeout, type, function() { return def; });\n      element[element.on ? 'on' : 'bind'](\"click\", hookFn);\n      scope.$on('$destroy', function() {\n        element[element.off ? 'off' : 'unbind'](\"click\", hookFn);\n      });\n    }\n  };\n}\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-state\n *\n * @requires ui.router.state.uiSref\n *\n * @restrict A\n *\n * @description\n * Much like ui-sref, but will accept named $scope properties to evaluate for a state definition,\n * params and override options.\n *\n * @param {string} ui-state 'stateName' can be any valid absolute or relative state\n * @param {Object} ui-state-params params to pass to {@link ui.router.state.$state#methods_href $state.href()}\n * @param {Object} ui-state-opts options to pass to {@link ui.router.state.$state#methods_go $state.go()}\n */\n$StateRefDynamicDirective.$inject = ['$state', '$timeout'];\nfunction $StateRefDynamicDirective($state, $timeout) {\n  return {\n    restrict: 'A',\n    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n    link: function(scope, element, attrs, uiSrefActive) {\n      var type   = getTypeInfo(element);\n      var active = uiSrefActive[1] || uiSrefActive[0];\n      var group  = [attrs.uiState, attrs.uiStateParams || null, attrs.uiStateOpts || null];\n      var watch  = '[' + group.map(function(val) { return val || 'null'; }).join(', ') + ']';\n      var def    = { state: null, params: null, options: null, href: null };\n      var unlinkInfoFn = null;\n      var hookFn;\n\n      function runStateRefLink (group) {\n        def.state = group[0]; def.params = group[1]; def.options = group[2];\n        def.href = $state.href(def.state, def.params, def.options);\n\n        if (unlinkInfoFn) unlinkInfoFn();\n        if (active) unlinkInfoFn = active.$$addStateInfo(def.state, def.params);\n        if (def.href) attrs.$set(type.attr, def.href);\n      }\n\n      scope.$watch(watch, runStateRefLink, true);\n      runStateRefLink(scope.$eval(watch));\n\n      if (!type.clickable) return;\n      hookFn = clickHook(element, $state, $timeout, type, function() { return def; });\n      element[element.on ? 'on' : 'bind'](\"click\", hookFn);\n      scope.$on('$destroy', function() {\n        element[element.off ? 'off' : 'unbind'](\"click\", hookFn);\n      });\n    }\n  };\n}\n\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref-active\n *\n * @requires ui.router.state.$state\n * @requires ui.router.state.$stateParams\n * @requires $interpolate\n *\n * @restrict A\n *\n * @description\n * A directive working alongside ui-sref to add classes to an element when the\n * related ui-sref directive's state is active, and removing them when it is inactive.\n * The primary use-case is to simplify the special appearance of navigation menus\n * relying on `ui-sref`, by having the \"active\" state's menu button appear different,\n * distinguishing it from the inactive menu items.\n *\n * ui-sref-active can live on the same element as ui-sref or on a parent element. The first\n * ui-sref-active found at the same level or above the ui-sref will be used.\n *\n * Will activate when the ui-sref's target state or any child state is active. If you\n * need to activate only when the ui-sref target state is active and *not* any of\n * it's children, then you will use\n * {@link ui.router.state.directive:ui-sref-active-eq ui-sref-active-eq}\n *\n * @example\n * Given the following template:\n * <pre>\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item\">\n *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * </pre>\n *\n *\n * When the app state is \"app.user\" (or any children states), and contains the state parameter \"user\" with value \"bilbobaggins\",\n * the resulting HTML will appear as (note the 'active' class):\n * <pre>\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item active\">\n *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * </pre>\n *\n * The class name is interpolated **once** during the directives link time (any further changes to the\n * interpolated value are ignored).\n *\n * Multiple classes may be specified in a space-separated format:\n * <pre>\n * <ul>\n *   <li ui-sref-active='class1 class2 class3'>\n *     <a ui-sref=\"app.user\">link</a>\n *   </li>\n * </ul>\n * </pre>\n *\n * It is also possible to pass ui-sref-active an expression that evaluates\n * to an object hash, whose keys represent active class names and whose\n * values represent the respective state names/globs.\n * ui-sref-active will match if the current active state **includes** any of\n * the specified state names/globs, even the abstract ones.\n *\n * @Example\n * Given the following template, with \"admin\" being an abstract state:\n * <pre>\n * <div ui-sref-active=\"{'active': 'admin.*'}\">\n *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n * </div>\n * </pre>\n *\n * When the current state is \"admin.roles\" the \"active\" class will be applied\n * to both the <div> and <a> elements. It is important to note that the state\n * names/globs passed to ui-sref-active shadow the state provided by ui-sref.\n */\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref-active-eq\n *\n * @requires ui.router.state.$state\n * @requires ui.router.state.$stateParams\n * @requires $interpolate\n *\n * @restrict A\n *\n * @description\n * The same as {@link ui.router.state.directive:ui-sref-active ui-sref-active} but will only activate\n * when the exact target state used in the `ui-sref` is active; no child states.\n *\n */\n$StateRefActiveDirective.$inject = ['$state', '$stateParams', '$interpolate'];\nfunction $StateRefActiveDirective($state, $stateParams, $interpolate) {\n  return  {\n    restrict: \"A\",\n    controller: ['$scope', '$element', '$attrs', '$timeout', function ($scope, $element, $attrs, $timeout) {\n      var states = [], activeClasses = {}, activeEqClass, uiSrefActive;\n\n      // There probably isn't much point in $observing this\n      // uiSrefActive and uiSrefActiveEq share the same directive object with some\n      // slight difference in logic routing\n      activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);\n\n      try {\n        uiSrefActive = $scope.$eval($attrs.uiSrefActive);\n      } catch (e) {\n        // Do nothing. uiSrefActive is not a valid expression.\n        // Fall back to using $interpolate below\n      }\n      uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);\n      if (isObject(uiSrefActive)) {\n        forEach(uiSrefActive, function(stateOrName, activeClass) {\n          if (isString(stateOrName)) {\n            var ref = parseStateRef(stateOrName, $state.current.name);\n            addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);\n          }\n        });\n      }\n\n      // Allow uiSref to communicate with uiSrefActive[Equals]\n      this.$$addStateInfo = function (newState, newParams) {\n        // we already got an explicit state provided by ui-sref-active, so we\n        // shadow the one that comes from ui-sref\n        if (isObject(uiSrefActive) && states.length > 0) {\n          return;\n        }\n        var deregister = addState(newState, newParams, uiSrefActive);\n        update();\n        return deregister;\n      };\n\n      $scope.$on('$stateChangeSuccess', update);\n\n      function addState(stateName, stateParams, activeClass) {\n        var state = $state.get(stateName, stateContext($element));\n        var stateHash = createStateHash(stateName, stateParams);\n\n        var stateInfo = {\n          state: state || { name: stateName },\n          params: stateParams,\n          hash: stateHash\n        };\n\n        states.push(stateInfo);\n        activeClasses[stateHash] = activeClass;\n\n        return function removeState() {\n          var idx = states.indexOf(stateInfo);\n          if (idx !== -1) states.splice(idx, 1);\n        };\n      }\n\n      /**\n       * @param {string} state\n       * @param {Object|string} [params]\n       * @return {string}\n       */\n      function createStateHash(state, params) {\n        if (!isString(state)) {\n          throw new Error('state should be a string');\n        }\n        if (isObject(params)) {\n          return state + toJson(params);\n        }\n        params = $scope.$eval(params);\n        if (isObject(params)) {\n          return state + toJson(params);\n        }\n        return state;\n      }\n\n      // Update route state\n      function update() {\n        for (var i = 0; i < states.length; i++) {\n          if (anyMatch(states[i].state, states[i].params)) {\n            addClass($element, activeClasses[states[i].hash]);\n          } else {\n            removeClass($element, activeClasses[states[i].hash]);\n          }\n\n          if (exactMatch(states[i].state, states[i].params)) {\n            addClass($element, activeEqClass);\n          } else {\n            removeClass($element, activeEqClass);\n          }\n        }\n      }\n\n      function addClass(el, className) { $timeout(function () { el.addClass(className); }); }\n      function removeClass(el, className) { el.removeClass(className); }\n      function anyMatch(state, params) { return $state.includes(state.name, params); }\n      function exactMatch(state, params) { return $state.is(state.name, params); }\n\n      update();\n    }]\n  };\n}\n\nangular.module('ui.router.state')\n  .directive('uiSref', $StateRefDirective)\n  .directive('uiSrefActive', $StateRefActiveDirective)\n  .directive('uiSrefActiveEq', $StateRefActiveDirective)\n  .directive('uiState', $StateRefDynamicDirective);\n\n/**\n * @ngdoc filter\n * @name ui.router.state.filter:isState\n *\n * @requires ui.router.state.$state\n *\n * @description\n * Translates to {@link ui.router.state.$state#methods_is $state.is(\"stateName\")}.\n */\n$IsStateFilter.$inject = ['$state'];\nfunction $IsStateFilter($state) {\n  var isFilter = function (state, params) {\n    return $state.is(state, params);\n  };\n  isFilter.$stateful = true;\n  return isFilter;\n}\n\n/**\n * @ngdoc filter\n * @name ui.router.state.filter:includedByState\n *\n * @requires ui.router.state.$state\n *\n * @description\n * Translates to {@link ui.router.state.$state#methods_includes $state.includes('fullOrPartialStateName')}.\n */\n$IncludedByStateFilter.$inject = ['$state'];\nfunction $IncludedByStateFilter($state) {\n  var includesFilter = function (state, params, options) {\n    return $state.includes(state, params, options);\n  };\n  includesFilter.$stateful = true;\n  return  includesFilter;\n}\n\nangular.module('ui.router.state')\n  .filter('isState', $IsStateFilter)\n  .filter('includedByState', $IncludedByStateFilter);\n})(window, window.angular);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-router/release/angular-ui-router.js\n ** module id = 175\n ** module chunks = 2\n **/","module.exports = global[\"SVGMorpheus\"] = require(\"-!/srv/blessing/public/node_modules/exports-loader/index.js?SVGMorpheus!/srv/blessing/public/node_modules/svg-morpheus/compile/unminified/svg-morpheus.js\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/expose-loader?SVGMorpheus!./~/exports-loader?SVGMorpheus!./~/svg-morpheus/compile/unminified/svg-morpheus.js\n ** module id = 176\n ** module chunks = 2\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../node_modules/css-loader/index.js!./../../../node_modules/sass-loader/index.js!./index.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js!./../../../node_modules/sass-loader/index.js!./index.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js!./../../../node_modules/sass-loader/index.js!./index.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pages/home/index.scss\n ** module id = 189\n ** module chunks = 2\n **/","import mdl from './module';\n\nimport './section.provider';\nimport './content.directive';\nimport './child.directive';\nimport './mdcolor.directive';\nimport './search.directive';\nimport './status.factory';\n\nexport default mdl;\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/sidemenu/index.ts\n **/","import mdl from './module';\nimport './toolbar.service';\n\nexport default mdl;\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/toolbar/index.ts\n **/","/**\n * Created by NICK on 16/8/9.\n */\n\nimport {HomeController} from './ctls/home.controller';\nimport {SidenavLeftController} from './ctls/sidenavl.controller';\nimport {SidenavRightController} from './ctls/sidenavr.controller';\nimport {ContentController} from './ctls/content.controller';\n\nexport const initRouter = ($urlRouterProvider, $stateProvider) => {\n    // 设置默认路由\n    $urlRouterProvider.otherwise(($injector) => {\n        let $state = $injector.get(\"$state\");\n        $state.go(\"home\");\n    });\n    // 路由规则\n    $stateProvider.state(\"home\", {\n        url: \"/\",\n        data: {\n            permissions: {\n                except: [\"anonymous\"],\n                only: [\"user\"]\n            }\n        },\n        views: {\n            \"\": {\n                controller: HomeController,\n                controllerAs: \"homeCtl\",\n                template: require(\"./tpls/home.template.jade\")(),\n            },\n            \"sidenavLeft@home\": {\n                controller: SidenavLeftController,\n                controllerAs: \"sideLeftCtl\",\n                template: require(\"./tpls/sidenavl.template.jade\")(),\n            },\n            // \"sidenavRight@home\": {\n            //     controller: SidenavRightController,\n            //     controllerAs: \"sideRightCtl\",\n            //     template: require(\"./tpls/sidenavr.template.jade\")(),\n            // },\n            \"content@home\": {\n                controller: ContentController,\n                controllerAs: \"contentCtl\",\n                template: require(\"./tpls/content.template.jade\")(),\n            }\n        }\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/home/router.ts\n **/","/**\n * Created by NICK on 16/8/12.\n */\n\nimport * as _ from \"lodash\";\nimport * as ngMaterialIcons from 'angular-material-icons';\nimport * as ngMaterial from 'angular-material';\n\nclass Service {\n    public static _name: string = \"svgUtils\";\n\n    public static provider: Array<string | Function> = [\"$q\", \"$templateRequest\", \"$templateCache\", \"ngMdIconService\", ($q: ng.IQService, $templateRequest, $templateCache, ngMdIconService: ngMdIcon.service) => {\n        class Service {\n            /**\n             * 获取所有的shapes\n             * @returns {any}\n             */\n            getAllIcons() {\n                return ngMdIconService.getShapes();\n            }\n\n            /**\n             * 载入svg文件\n             * @param url\n             */\n            loadSvgUrl(url: string) {\n                let defer = $q.defer();\n                let viewBox;\n\n                if ($templateCache.get(url)) {\n                    defer.resolve();\n                } else {\n                    $templateRequest(url, true).then((response)=> {\n                        let svg = angular.element('<div>').append(response).find('svg')[0];\n\n                        viewBox = svg.attributes[\"viewBox\"];\n                        _.each(svg.querySelectorAll(\"[id]\"), (g)=> {\n                            ngMdIconService.addShape(g.id, g.innerHTML);\n                            if (viewBox && viewBox.value) {\n                                ngMdIconService.addViewBox(g.id, viewBox.value);\n                            }\n                        });\n                        defer.resolve();\n                    }, defer.resolve);\n                }\n\n                return defer.promise;\n            }\n        }\n\n        return new Service();\n    }];\n}\n\nconst module = angular.module(\"mdSvgModule\", [ngMaterialIcons, ngMaterial]);\n\nmodule.service(Service._name, Service.provider);\n\nexport default `${module.name}`;\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/svg.service.ts\n **/","exports = module.exports = require(\"./../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".side-menu li,.side-menu ul{padding:0;margin:0}.side-menu ul li button{text-align:left}.side-menu a,.side-menu button{padding:0;margin:0}.side-menu a>md-content,.side-menu button>md-content{padding-left:5px}.side-menu .side-menu-child{position:relative;display:block}.side-menu .side-menu-child a,.side-menu .side-menu-child button{border-radius:0;background:transparent}.side-menu .side-menu-child a:hover>md-content:before,.side-menu .side-menu-child button:hover>md-content:before{display:block}.side-menu .side-menu-child>ul li a,.side-menu .side-menu-child>ul li button{padding-left:25px}.side-menu .side-menu-child>ul li a:before,.side-menu .side-menu-child>ul li button:before{display:none;background-color:transparent;padding-left:20px;content:\\\"\\\";position:absolute;z-index:1;left:0;top:0;bottom:0;border-left:3px solid #e2e2e2}.side-menu .side-menu-child .side-menu-child ul li a,.side-menu .side-menu-child .side-menu-child ul li button{padding-left:50px}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/sass-loader!./src/directives/sidemenu/styles/sidemenu.scss\n ** module id = 226\n ** module chunks = 2\n **/","exports = module.exports = require(\"./../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".logo{height:64px;min-height:64px!important;line-height:64px;margin:5px;padding-left:64px;background:transparent url(\" + require(\"./logo.jpg\") + \") no-repeat 0 0;background-size:contain}.logo.center{background-position:top;height:150px}.gridster .gridster-item{overflow:hidden}.md-no-padding{padding:0}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/sass-loader!./src/pages/home/index.scss\n ** module id = 227\n ** module chunks = 2\n **/","/*!\n * SVG Morpheus v0.3.0\n * https://github.com/alexk111/SVG-Morpheus\n *\n * Copyright (c) 2016 Alex Kaul\n * License: MIT\n *\n * Generated at Saturday, May 7th, 2016, 4:52:57 PM\n */\nvar SVGMorpheus=(function() {\n'use strict';\n\n/*\n * Easing functions\n */\n\nvar easings={};\neasings['circ-in']=function (t) {\n  return -1 * (Math.sqrt(1 - t*t) - 1);\n};\neasings['circ-out']=function (t) {\n  return Math.sqrt(1 - (t=t-1)*t);\n};\neasings['circ-in-out']=function (t) {\n  if ((t/=1/2) < 1) return -1/2 * (Math.sqrt(1 - t*t) - 1);\n  return 1/2 * (Math.sqrt(1 - (t-=2)*t) + 1);\n};\neasings['cubic-in']=function (t) { return t*t*t };\neasings['cubic-out']=function (t) { return (--t)*t*t+1 };\neasings['cubic-in-out']=function (t) { return t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1 };\neasings['elastic-in']=function (t) {\n  var s=1.70158;var p=0;var a=1;\n  if (t==0) return 0;  if (t==1) return 1;  if (!p) p=.3;\n  if (a < Math.abs(1)) { a=1; var s=p/4; }\n  else var s = p/(2*Math.PI) * Math.asin (1/a);\n  return -(a*Math.pow(2,10*(t-=1)) * Math.sin( (t-s)*(2*Math.PI)/p ));\n};\neasings['elastic-out']=function (t) {\n  var s=1.70158;var p=0;var a=1;\n  if (t==0) return 0;  if (t==1) return 1;  if (!p) p=.3;\n  if (a < Math.abs(1)) { a=1; var s=p/4; }\n  else var s = p/(2*Math.PI) * Math.asin (1/a);\n  return a*Math.pow(2,-10*t) * Math.sin( (t-s)*(2*Math.PI)/p ) + 1;\n};\neasings['elastic-in-out']=function (t) {\n  var s=1.70158;var p=0;var a=1;\n  if (t==0) return 0;  if ((t/=1/2)==2) return 1;  if (!p) p=1*(.3*1.5);\n  if (a < Math.abs(1)) { a=1; var s=p/4; }\n  else var s = p/(2*Math.PI) * Math.asin (1/a);\n  if (t < 1) return -.5*(a*Math.pow(2,10*(t-=1)) * Math.sin( (t-s)*(2*Math.PI)/p ));\n  return a*Math.pow(2,-10*(t-=1)) * Math.sin( (t-s)*(2*Math.PI)/p )*.5 + 1;\n};\neasings['expo-in']=function (t) {\n  return (t==0) ? 0 : Math.pow(2, 10 * (t - 1));\n};\neasings['expo-out']=function (t) {\n  return (t==1) ? 1 : 1-Math.pow(2, -10 * t);\n};\neasings['expo-in-out']=function (t) {\n  if (t==0) return 0;\n  if (t==1) return 1;\n  if ((t/=1/2) < 1) return 1/2 * Math.pow(2, 10 * (t - 1));\n  return 1/2 * (-Math.pow(2, -10 * --t) + 2);\n};\neasings['linear']=function (t) { return t };\neasings['quad-in']=function (t) { return t*t };\neasings['quad-out']=function (t) { return t*(2-t) };\neasings['quad-in-out']=function (t) { return t<.5 ? 2*t*t : -1+(4-2*t)*t };\neasings['quart-in']=function (t) { return t*t*t*t };\neasings['quart-out']=function (t) { return 1-(--t)*t*t*t };\neasings['quart-in-out']=function (t) { return t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t };\neasings['quint-in']=function (t) { return t*t*t*t*t };\neasings['quint-out']=function (t) { return 1+(--t)*t*t*t*t };\neasings['quint-in-out']=function (t) { return t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t };\neasings['sine-in']=function (t) {\n  return 1-Math.cos(t * (Math.PI/2));\n};\neasings['sine-out']=function (t) {\n  return Math.sin(t * (Math.PI/2));\n};\neasings['sine-in-out']=function (t) {\n  return 1/2 * (1-Math.cos(Math.PI*t));\n};\n\n\n/*\n * Helper functions\n */\n\nvar _reqAnimFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.oRequestAnimationFrame;\nvar _cancelAnimFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.oCancelAnimationFrame;\n\n// Calculate style\nfunction styleNormCalc(styleNormFrom, styleNormTo, progress) {\n  var i, len, styleNorm={};\n  for(i in styleNormFrom) {\n    switch (i) {\n      case 'fill':\n      case 'stroke':\n        styleNorm[i]=clone(styleNormFrom[i]);\n        styleNorm[i].r=styleNormFrom[i].r+(styleNormTo[i].r-styleNormFrom[i].r)*progress;\n        styleNorm[i].g=styleNormFrom[i].g+(styleNormTo[i].g-styleNormFrom[i].g)*progress;\n        styleNorm[i].b=styleNormFrom[i].b+(styleNormTo[i].b-styleNormFrom[i].b)*progress;\n        styleNorm[i].opacity=styleNormFrom[i].opacity+(styleNormTo[i].opacity-styleNormFrom[i].opacity)*progress;\n        break;\n      case 'opacity':\n      case 'fill-opacity':\n      case 'stroke-opacity':\n      case 'stroke-width':\n        styleNorm[i]=styleNormFrom[i]+(styleNormTo[i]-styleNormFrom[i])*progress;\n        break;\n    }\n  }\n  return styleNorm;\n}\n\nfunction styleNormToString(styleNorm) {\n  var i;\n  var style={};\n  for(i in styleNorm) {\n    switch (i) {\n      case 'fill':\n      case 'stroke':\n        style[i]=rgbToString(styleNorm[i]);\n        break;\n      case 'opacity':\n      case 'fill-opacity':\n      case 'stroke-opacity':\n      case 'stroke-width':\n        style[i]=styleNorm[i];\n        break;\n    }\n  }\n  return style;\n}\n\nfunction styleToNorm(styleFrom, styleTo) {\n  var styleNorm=[{},{}];\n  var i;\n  for(i in styleFrom) {\n    switch(i) {\n      case 'fill':\n      case 'stroke':\n        styleNorm[0][i]=getRGB(styleFrom[i]);\n        if(styleTo[i]===undefined) {\n          styleNorm[1][i]=getRGB(styleFrom[i]);\n          styleNorm[1][i].opacity=0;\n        }\n        break;\n      case 'opacity':\n      case 'fill-opacity':\n      case 'stroke-opacity':\n      case 'stroke-width':\n        styleNorm[0][i]=styleFrom[i];\n        if(styleTo[i]===undefined) {\n          styleNorm[1][i]=1;\n        }\n        break;\n    }\n  }\n  for(i in styleTo) {\n    switch(i) {\n      case 'fill':\n      case 'stroke':\n        styleNorm[1][i]=getRGB(styleTo[i]);\n        if(styleFrom[i]===undefined) {\n          styleNorm[0][i]=getRGB(styleTo[i]);\n          styleNorm[0][i].opacity=0;\n        }\n        break;\n      case 'opacity':\n      case 'fill-opacity':\n      case 'stroke-opacity':\n      case 'stroke-width':\n        styleNorm[1][i]=styleTo[i];\n        if(styleFrom[i]===undefined) {\n          styleNorm[0][i]=1;\n        }\n        break;\n    }\n  }\n  return styleNorm;\n}\n\n// Calculate transform progress\nfunction transCalc(transFrom, transTo, progress) {\n  var res={};\n  for(var i in transFrom) {\n    switch(i) {\n      case 'rotate':\n        res[i]=[0,0,0];\n        for(var j=0;j<3;j++) {\n          res[i][j]=transFrom[i][j]+(transTo[i][j]-transFrom[i][j])*progress;\n        }\n        break;\n    }\n  }\n  return res;\n}\n\nfunction trans2string(trans) {\n  var res='';\n  if(!!trans.rotate) {\n    res+='rotate('+trans.rotate.join(' ')+')';\n  }\n  return res;\n}\n\n// Calculate curve progress\nfunction curveCalc(curveFrom, curveTo, progress) {\n  var curve=[];\n  for(var i=0,len1=curveFrom.length;i<len1;i++) {\n    curve.push([curveFrom[i][0]]);\n    for(var j=1,len2=curveFrom[i].length;j<len2;j++) {\n      curve[i].push(curveFrom[i][j]+(curveTo[i][j]-curveFrom[i][j])*progress);\n    }\n  }\n  return curve;\n}\n\nfunction clone(obj) {\n  var copy;\n\n  // Handle Array\n  if (obj instanceof Array) {\n    copy = [];\n    for (var i = 0, len = obj.length; i < len; i++) {\n      copy[i] = clone(obj[i]);\n    }\n    return copy;\n  }\n\n  // Handle Object\n  if (obj instanceof Object) {\n    copy = {};\n    for (var attr in obj) {\n      if (obj.hasOwnProperty(attr)) {\n        copy[attr] = clone(obj[attr]);\n      }\n    }\n    return copy;\n  }\n\n  return obj;\n}\n\n\n\n/*\n * Useful things from Adobe's Snap.svg adopted to the library needs\n */\n\n/*\n * Paths\n */\n\nvar spaces = \"\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029\";\nvar pathCommand = new RegExp(\"([a-z])[\" + spaces + \",]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\" + spaces + \"]*,?[\" + spaces + \"]*)+)\", \"ig\");\nvar pathValues = new RegExp(\"(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[\" + spaces + \"]*,?[\" + spaces + \"]*\", \"ig\");\n\n// Parses given path string into an array of arrays of path segments\nvar parsePathString = function (pathString) {\n  if (!pathString) {\n    return null;\n  }\n\n  if(typeof pathString === typeof []) {\n    return pathString;\n  } else {\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n\n    String(pathString).replace(pathCommand, function (a, b, c) {\n      var params = [],\n          name = b.toLowerCase();\n      c.replace(pathValues, function (a, b) {\n        b && params.push(+b);\n      });\n      if (name == \"m\" && params.length > 2) {\n        data.push([b].concat(params.splice(0, 2)));\n        name = \"l\";\n        b = b == \"m\" ? \"l\" : \"L\";\n      }\n      if (name == \"o\" && params.length == 1) {\n        data.push([b, params[0]]);\n      }\n      if (name == \"r\") {\n        data.push([b].concat(params));\n      } else while (params.length >= paramCounts[name]) {\n        data.push([b].concat(params.splice(0, paramCounts[name])));\n        if (!paramCounts[name]) {\n          break;\n        }\n      }\n    });\n\n    return data;\n  }\n};\n\n// http://schepers.cc/getting-to-the-point\nvar catmullRom2bezier=function(crp, z) {\n  var d = [];\n  for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n    var p = [\n              {x: +crp[i - 2], y: +crp[i - 1]},\n              {x: +crp[i],     y: +crp[i + 1]},\n              {x: +crp[i + 2], y: +crp[i + 3]},\n              {x: +crp[i + 4], y: +crp[i + 5]}\n            ];\n    if (z) {\n      if (!i) {\n        p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n      } else if (iLen - 4 == i) {\n        p[3] = {x: +crp[0], y: +crp[1]};\n      } else if (iLen - 2 == i) {\n        p[2] = {x: +crp[0], y: +crp[1]};\n        p[3] = {x: +crp[2], y: +crp[3]};\n      }\n    } else {\n      if (iLen - 4 == i) {\n        p[3] = p[2];\n      } else if (!i) {\n        p[0] = {x: +crp[i], y: +crp[i + 1]};\n      }\n    }\n    d.push([\"C\",\n          (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n          (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n          (p[1].x + 6 * p[2].x - p[3].x) / 6,\n          (p[1].y + 6*p[2].y - p[3].y) / 6,\n          p[2].x,\n          p[2].y\n    ]);\n  }\n\n  return d;\n\n};\n\nvar ellipsePath=function(x, y, rx, ry, a) {\n  if (a == null && ry == null) {\n    ry = rx;\n  }\n  x = +x;\n  y = +y;\n  rx = +rx;\n  ry = +ry;\n  if (a != null) {\n    var rad = Math.PI / 180,\n        x1 = x + rx * Math.cos(-ry * rad),\n        x2 = x + rx * Math.cos(-a * rad),\n        y1 = y + rx * Math.sin(-ry * rad),\n        y2 = y + rx * Math.sin(-a * rad),\n        res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n  } else {\n    res = [\n        [\"M\", x, y],\n        [\"m\", 0, -ry],\n        [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n        [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n        [\"z\"]\n    ];\n  }\n  return res;\n};\n\nvar pathToAbsolute=function(pathArray) {\n  pathArray = parsePathString(pathArray);\n\n  if (!pathArray || !pathArray.length) {\n    return [[\"M\", 0, 0]];\n  }\n  var res = [],\n      x = 0,\n      y = 0,\n      mx = 0,\n      my = 0,\n      start = 0,\n      pa0;\n  if (pathArray[0][0] == \"M\") {\n    x = +pathArray[0][1];\n    y = +pathArray[0][2];\n    mx = x;\n    my = y;\n    start++;\n    res[0] = [\"M\", x, y];\n  }\n  var crz = pathArray.length == 3 &&\n      pathArray[0][0] == \"M\" &&\n      pathArray[1][0].toUpperCase() == \"R\" &&\n      pathArray[2][0].toUpperCase() == \"Z\";\n  for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n    res.push(r = []);\n    pa = pathArray[i];\n    pa0 = pa[0];\n    if (pa0 != pa0.toUpperCase()) {\n      r[0] = pa0.toUpperCase();\n      switch (r[0]) {\n        case \"A\":\n          r[1] = pa[1];\n          r[2] = pa[2];\n          r[3] = pa[3];\n          r[4] = pa[4];\n          r[5] = pa[5];\n          r[6] = +pa[6] + x;\n          r[7] = +pa[7] + y;\n          break;\n        case \"V\":\n          r[1] = +pa[1] + y;\n          break;\n        case \"H\":\n          r[1] = +pa[1] + x;\n          break;\n        case \"R\":\n          var dots = [x, y].concat(pa.slice(1));\n          for (var j = 2, jj = dots.length; j < jj; j++) {\n            dots[j] = +dots[j] + x;\n            dots[++j] = +dots[j] + y;\n          }\n          res.pop();\n          res = res.concat(catmullRom2bezier(dots, crz));\n          break;\n        case \"O\":\n          res.pop();\n          dots = ellipsePath(x, y, pa[1], pa[2]);\n          dots.push(dots[0]);\n          res = res.concat(dots);\n          break;\n        case \"U\":\n          res.pop();\n          res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n          r = [\"U\"].concat(res[res.length - 1].slice(-2));\n          break;\n        case \"M\":\n          mx = +pa[1] + x;\n          my = +pa[2] + y;\n        default:\n          for (j = 1, jj = pa.length; j < jj; j++) {\n            r[j] = +pa[j] + ((j % 2) ? x : y);\n          }\n      }\n    } else if (pa0 == \"R\") {\n      dots = [x, y].concat(pa.slice(1));\n      res.pop();\n      res = res.concat(catmullRom2bezier(dots, crz));\n      r = [\"R\"].concat(pa.slice(-2));\n    } else if (pa0 == \"O\") {\n      res.pop();\n      dots = ellipsePath(x, y, pa[1], pa[2]);\n      dots.push(dots[0]);\n      res = res.concat(dots);\n    } else if (pa0 == \"U\") {\n      res.pop();\n      res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n      r = [\"U\"].concat(res[res.length - 1].slice(-2));\n    } else {\n      for (var k = 0, kk = pa.length; k < kk; k++) {\n        r[k] = pa[k];\n      }\n    }\n    pa0 = pa0.toUpperCase();\n    if (pa0 != \"O\") {\n      switch (r[0]) {\n        case \"Z\":\n          x = +mx;\n          y = +my;\n          break;\n        case \"H\":\n          x = r[1];\n          break;\n        case \"V\":\n          y = r[1];\n          break;\n        case \"M\":\n          mx = r[r.length - 2];\n          my = r[r.length - 1];\n        default:\n          x = r[r.length - 2];\n          y = r[r.length - 1];\n      }\n    }\n  }\n\n  return res;\n};\n\nvar l2c = function(x1, y1, x2, y2) {\n  return [x1, y1, x2, y2, x2, y2];\n};\nvar q2c = function(x1, y1, ax, ay, x2, y2) {\n  var _13 = 1 / 3,\n      _23 = 2 / 3;\n  return [\n          _13 * x1 + _23 * ax,\n          _13 * y1 + _23 * ay,\n          _13 * x2 + _23 * ax,\n          _13 * y2 + _23 * ay,\n          x2,\n          y2\n      ];\n};\nvar a2c = function(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n  // for more information of where this math came from visit:\n  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n  var _120 = Math.PI * 120 / 180,\n      rad = Math.PI / 180 * (+angle || 0),\n      res = [],\n      xy,\n      rotate = function (x, y, rad) {\n          var X = x * Math.cos(rad) - y * Math.sin(rad),\n              Y = x * Math.sin(rad) + y * Math.cos(rad);\n          return {x: X, y: Y};\n      };\n  if (!recursive) {\n    xy = rotate(x1, y1, -rad);\n    x1 = xy.x;\n    y1 = xy.y;\n    xy = rotate(x2, y2, -rad);\n    x2 = xy.x;\n    y2 = xy.y;\n    var cos = Math.cos(Math.PI / 180 * angle),\n        sin = Math.sin(Math.PI / 180 * angle),\n        x = (x1 - x2) / 2,\n        y = (y1 - y2) / 2;\n    var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n    if (h > 1) {\n      h = Math.sqrt(h);\n      rx = h * rx;\n      ry = h * ry;\n    }\n    var rx2 = rx * rx,\n        ry2 = ry * ry,\n        k = (large_arc_flag == sweep_flag ? -1 : 1) *\n            Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n        cx = k * rx * y / ry + (x1 + x2) / 2,\n        cy = k * -ry * x / rx + (y1 + y2) / 2,\n        f1 = Math.asin(((y1 - cy) / ry).toFixed(9)),\n        f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\n\n    f1 = x1 < cx ? Math.PI - f1 : f1;\n    f2 = x2 < cx ? Math.PI - f2 : f2;\n    f1 < 0 && (f1 = Math.PI * 2 + f1);\n    f2 < 0 && (f2 = Math.PI * 2 + f2);\n    if (sweep_flag && f1 > f2) {\n      f1 = f1 - Math.PI * 2;\n    }\n    if (!sweep_flag && f2 > f1) {\n      f2 = f2 - Math.PI * 2;\n    }\n  } else {\n    f1 = recursive[0];\n    f2 = recursive[1];\n    cx = recursive[2];\n    cy = recursive[3];\n  }\n  var df = f2 - f1;\n  if (Math.abs(df) > _120) {\n    var f2old = f2,\n        x2old = x2,\n        y2old = y2;\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n    x2 = cx + rx * Math.cos(f2);\n    y2 = cy + ry * Math.sin(f2);\n    res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n  }\n  df = f2 - f1;\n  var c1 = Math.cos(f1),\n      s1 = Math.sin(f1),\n      c2 = Math.cos(f2),\n      s2 = Math.sin(f2),\n      t = Math.tan(df / 4),\n      hx = 4 / 3 * rx * t,\n      hy = 4 / 3 * ry * t,\n      m1 = [x1, y1],\n      m2 = [x1 + hx * s1, y1 - hy * c1],\n      m3 = [x2 + hx * s2, y2 - hy * c2],\n      m4 = [x2, y2];\n  m2[0] = 2 * m1[0] - m2[0];\n  m2[1] = 2 * m1[1] - m2[1];\n  if (recursive) {\n    return [m2, m3, m4].concat(res);\n  } else {\n    res = [m2, m3, m4].concat(res).join().split(\",\");\n    var newres = [];\n    for (var i = 0, ii = res.length; i < ii; i++) {\n      newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n    }\n    return newres;\n  }\n};\n\nvar path2curve=function(path, path2) {\n  var p = pathToAbsolute(path),\n      p2 = path2 && pathToAbsolute(path2),\n      attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n      attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n      processPath = function (path, d, pcom) {\n        var nx, ny;\n        if (!path) {\n          return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n        }\n        !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n        switch (path[0]) {\n          case \"M\":\n            d.X = path[1];\n            d.Y = path[2];\n            break;\n          case \"A\":\n            path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n            break;\n          case \"S\":\n            if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n              nx = d.x * 2 - d.bx;          // And reflect the previous\n              ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n            }\n            else {                            // or some else or nothing\n              nx = d.x;\n              ny = d.y;\n            }\n            path = [\"C\", nx, ny].concat(path.slice(1));\n            break;\n          case \"T\":\n            if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n              d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n              d.qy = d.y * 2 - d.qy;        // to case \"S\".\n            }\n            else {                            // or something else or nothing\n              d.qx = d.x;\n              d.qy = d.y;\n            }\n            path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n            break;\n          case \"Q\":\n            d.qx = path[1];\n            d.qy = path[2];\n            path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n            break;\n          case \"L\":\n            path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n            break;\n          case \"H\":\n            path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n            break;\n          case \"V\":\n            path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n            break;\n          case \"Z\":\n            path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n            break;\n        }\n        return path;\n      },\n      fixArc = function (pp, i) {\n        if (pp[i].length > 7) {\n          pp[i].shift();\n          var pi = pp[i];\n          while (pi.length) {\n            pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n            p2 && (pcoms2[i] = \"A\"); // the same as above\n            pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n          }\n          pp.splice(i, 1);\n          ii = Math.max(p.length, p2 && p2.length || 0);\n        }\n      },\n      fixM = function (path1, path2, a1, a2, i) {\n        if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n          path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n          a1.bx = 0;\n          a1.by = 0;\n          a1.x = path1[i][1];\n          a1.y = path1[i][2];\n          ii = Math.max(p.length, p2 && p2.length || 0);\n        }\n      },\n      pcoms1 = [], // path commands of original path p\n      pcoms2 = [], // path commands of original path p2\n      pfirst = \"\", // temporary holder for original path command\n      pcom = \"\"; // holder for previous path command of original path\n  for (var i = 0, ii = Math.max(p.length, p2 && p2.length || 0); i < ii; i++) {\n    p[i] && (pfirst = p[i][0]); // save current path command\n\n    if (pfirst != \"C\") { // C is not saved yet, because it may be result of conversion\n      pcoms1[i] = pfirst; // Save current path command\n      i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n    }\n    p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n    if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n    // which may produce multiple C:s\n    // so we have to make sure that C is also C in original path\n\n    fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n    if (p2) { // the same procedures is done to p2\n      p2[i] && (pfirst = p2[i][0]);\n      if (pfirst != \"C\") {\n        pcoms2[i] = pfirst;\n        i && (pcom = pcoms2[i - 1]);\n      }\n      p2[i] = processPath(p2[i], attrs2, pcom);\n\n      if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n        pcoms2[i] = \"C\";\n      }\n\n      fixArc(p2, i);\n    }\n    fixM(p, p2, attrs, attrs2, i);\n    fixM(p2, p, attrs2, attrs, i);\n    var seg = p[i],\n        seg2 = p2 && p2[i],\n        seglen = seg.length,\n        seg2len = p2 && seg2.length;\n    attrs.x = seg[seglen - 2];\n    attrs.y = seg[seglen - 1];\n    attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;\n    attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;\n    attrs2.bx = p2 && (parseFloat(seg2[seg2len - 4]) || attrs2.x);\n    attrs2.by = p2 && (parseFloat(seg2[seg2len - 3]) || attrs2.y);\n    attrs2.x = p2 && seg2[seg2len - 2];\n    attrs2.y = p2 && seg2[seg2len - 1];\n  }\n\n  return p2 ? [p, p2] : p;\n};\n\nvar box=function(x, y, width, height) {\n  if (x == null) {\n    x = y = width = height = 0;\n  }\n  if (y == null) {\n    y = x.y;\n    width = x.width;\n    height = x.height;\n    x = x.x;\n  }\n  return {\n    x: x,\n    y: y,\n    w: width,\n    h: height,\n    cx: x + width / 2,\n    cy: y + height / 2\n  };\n};\n\n// Returns bounding box of cubic bezier curve.\n// Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n// Original version: NISHIO Hirokazu\n// Modifications: https://github.com/timo22345\nvar curveDim=function(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var tvalues = [],\n      bounds = [[], []],\n      a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n  for (var i = 0; i < 2; ++i) {\n    if (i == 0) {\n      b = 6 * x0 - 12 * x1 + 6 * x2;\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n      c = 3 * x1 - 3 * x0;\n    } else {\n      b = 6 * y0 - 12 * y1 + 6 * y2;\n      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n      c = 3 * y1 - 3 * y0;\n    }\n    if (Math.abs(a) < 1e-12) {\n      if (Math.abs(b) < 1e-12) {\n        continue;\n      }\n      t = -c / b;\n      if (0 < t && t < 1) {\n        tvalues.push(t);\n      }\n      continue;\n    }\n    b2ac = b * b - 4 * c * a;\n    sqrtb2ac = Math.sqrt(b2ac);\n    if (b2ac < 0) {\n      continue;\n    }\n    t1 = (-b + sqrtb2ac) / (2 * a);\n    if (0 < t1 && t1 < 1) {\n      tvalues.push(t1);\n    }\n    t2 = (-b - sqrtb2ac) / (2 * a);\n    if (0 < t2 && t2 < 1) {\n      tvalues.push(t2);\n    }\n  }\n\n  var x, y, j = tvalues.length,\n      jlen = j,\n      mt;\n  while (j--) {\n    t = tvalues[j];\n    mt = 1 - t;\n    bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n    bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n  }\n\n  bounds[0][jlen] = x0;\n  bounds[1][jlen] = y0;\n  bounds[0][jlen + 1] = x3;\n  bounds[1][jlen + 1] = y3;\n  bounds[0].length = bounds[1].length = jlen + 2;\n\n  return {\n    min: {x: Math.min.apply(0, bounds[0]), y: Math.min.apply(0, bounds[1])},\n    max: {x: Math.max.apply(0, bounds[0]), y: Math.max.apply(0, bounds[1])}\n  };\n};\n\nvar curvePathBBox=function(path) {\n  var x = 0,\n      y = 0,\n      X = [],\n      Y = [],\n      p;\n  for (var i = 0, ii = path.length; i < ii; i++) {\n    p = path[i];\n    if (p[0] == \"M\") {\n      x = p[1];\n      y = p[2];\n      X.push(x);\n      Y.push(y);\n    } else {\n      var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n      X = X.concat(dim.min.x, dim.max.x);\n      Y = Y.concat(dim.min.y, dim.max.y);\n      x = p[5];\n      y = p[6];\n    }\n  }\n  var xmin = Math.min.apply(0, X),\n      ymin = Math.min.apply(0, Y),\n      xmax = Math.max.apply(0, X),\n      ymax = Math.max.apply(0, Y),\n      bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n\n  return bb;\n};\n\nvar p2s=/,?([a-z]),?/gi;\nvar path2string=function(path) {\n  return path.join(',').replace(p2s, \"$1\");\n};\n\n/*\n * Styles\n */\n\nvar hsrg = {hs: 1, rg: 1},\n    has = \"hasOwnProperty\",\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    commaSpaces = new RegExp(\"[\" + spaces + \"]*,[\" + spaces + \"]*\");\n\n// Converts RGB values to a hex representation of the color\n// var rgb = function (r, g, b, o) {\n//   if (isFinite(o)) {\n//     var round = math.round;\n//     return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n//   }\n//   return \"#\" + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1);\n// };\nvar rgbToString = function (rgb) {\n  var round = Math.round;\n  return \"rgba(\" + [round(rgb.r), round(rgb.g), round(rgb.b), +rgb.opacity.toFixed(2)] + \")\";\n};\nvar toHex = function (color) {\n  var i = window.document.getElementsByTagName(\"head\")[0] || window.document.getElementsByTagName(\"svg\")[0],\n      red = \"rgb(255, 0, 0)\";\n  toHex = function (color) {\n    if (color.toLowerCase() == \"red\") {\n      return red;\n    }\n    i.style.color = red;\n    i.style.color = color;\n    var out = window.document.defaultView.getComputedStyle(i, \"\").getPropertyValue(\"color\");\n    return out == red ? null : out;\n  };\n  return toHex(color);\n};\n\nvar packageRGB = function (r, g, b, o) {\n  r = Math.round(r * 255);\n  g = Math.round(g * 255);\n  b = Math.round(b * 255);\n  var rgb = {\n      r: r,\n      g: g,\n      b: b,\n      opacity: isFinite(o) ? o : 1\n  };\n  return rgb;\n};\n\n// Converts HSB values to an RGB object\nvar hsb2rgb = function (h, s, v, o) {\n  if (typeof h === typeof {} && \"h\" in h && \"s\" in h && \"b\" in h) {\n      v = h.b;\n      s = h.s;\n      h = h.h;\n      o = h.o;\n  }\n  h *= 360;\n  var R, G, B, X, C;\n  h = (h % 360) / 60;\n  C = v * s;\n  X = C * (1 - Math.abs(h % 2 - 1));\n  R = G = B = v - C;\n\n  h = ~~h;\n  R += [C, X, 0, 0, X, C][h];\n  G += [X, C, C, X, 0, 0][h];\n  B += [0, 0, X, C, C, X][h];\n  return packageRGB(R, G, B, o);\n};\n\n// Converts HSL values to an RGB object\nvar hsl2rgb = function (h, s, l, o) {\n  if (typeof h === typeof {} && \"h\" in h && \"s\" in h && \"l\" in h) {\n    l = h.l;\n    s = h.s;\n    h = h.h;\n  }\n  if (h > 1 || s > 1 || l > 1) {\n    h /= 360;\n    s /= 100;\n    l /= 100;\n  }\n  h *= 360;\n  var R, G, B, X, C;\n  h = (h % 360) / 60;\n  C = 2 * s * (l < .5 ? l : 1 - l);\n  X = C * (1 - Math.abs(h % 2 - 1));\n  R = G = B = l - C / 2;\n\n  h = ~~h;\n  R += [C, X, 0, 0, X, C][h];\n  G += [X, C, C, X, 0, 0][h];\n  B += [0, 0, X, C, C, X][h];\n  return packageRGB(R, G, B, o);\n};\n\n// Parses color string as RGB object\nvar getRGB = function (colour) {\n  if (!colour || !!((colour = String(colour)).indexOf(\"-\") + 1)) {\n    return {r: -1, g: -1, b: -1, opacity: -1, error: 1};\n  }\n  if (colour == \"none\") {\n    return {r: -1, g: -1, b: -1, opacity: -1};\n  }\n  !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n  if (!colour) {\n    return {r: -1, g: -1, b: -1, opacity: -1, error: 1};\n  }\n  var res,\n      red,\n      green,\n      blue,\n      opacity,\n      t,\n      values,\n      rgb = colour.match(colourRegExp);\n  if (rgb) {\n    if (rgb[2]) {\n      blue = parseInt(rgb[2].substring(5), 16);\n      green = parseInt(rgb[2].substring(3, 5), 16);\n      red = parseInt(rgb[2].substring(1, 3), 16);\n    }\n    if (rgb[3]) {\n      blue = parseInt((t = rgb[3].charAt(3)) + t, 16);\n      green = parseInt((t = rgb[3].charAt(2)) + t, 16);\n      red = parseInt((t = rgb[3].charAt(1)) + t, 16);\n    }\n    if (rgb[4]) {\n      values = rgb[4].split(commaSpaces);\n      red = parseFloat(values[0]);\n      values[0].slice(-1) == \"%\" && (red *= 2.55);\n      green = parseFloat(values[1]);\n      values[1].slice(-1) == \"%\" && (green *= 2.55);\n      blue = parseFloat(values[2]);\n      values[2].slice(-1) == \"%\" && (blue *= 2.55);\n      rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = parseFloat(values[3]));\n      values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n    }\n    if (rgb[5]) {\n      values = rgb[5].split(commaSpaces);\n      red = parseFloat(values[0]);\n      values[0].slice(-1) == \"%\" && (red /= 100);\n      green = parseFloat(values[1]);\n      values[1].slice(-1) == \"%\" && (green /= 100);\n      blue = parseFloat(values[2]);\n      values[2].slice(-1) == \"%\" && (blue /= 100);\n      (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n      rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = parseFloat(values[3]));\n      values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n      return hsb2rgb(red, green, blue, opacity);\n    }\n    if (rgb[6]) {\n      values = rgb[6].split(commaSpaces);\n      red = parseFloat(values[0]);\n      values[0].slice(-1) == \"%\" && (red /= 100);\n      green = parseFloat(values[1]);\n      values[1].slice(-1) == \"%\" && (green /= 100);\n      blue = parseFloat(values[2]);\n      values[2].slice(-1) == \"%\" && (blue /= 100);\n      (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n      rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = parseFloat(values[3]));\n      values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n      return hsl2rgb(red, green, blue, opacity);\n    }\n    red = Math.min(Math.round(red), 255);\n    green = Math.min(Math.round(green), 255);\n    blue = Math.min(Math.round(blue), 255);\n    opacity = Math.min(Math.max(opacity, 0), 1);\n    rgb = {r: red, g: green, b: blue};\n    rgb.opacity = isFinite(opacity) ? opacity : 1;\n    return rgb;\n  }\n  return {r: -1, g: -1, b: -1, opacity: -1, error: 1};\n};\n\nfunction SVGMorpheus(element, options, callback) {\n  if (!element) {\n    throw new Error('SVGMorpheus > \"element\" is required');\n  }\n\n  if(typeof element === typeof '') {\n    element=document.querySelector(element);\n    if (!element) {\n      throw new Error('SVGMorpheus > \"element\" query is not related to an existing DOM node');\n    }\n  }\n\n  if (!!options && typeof options !== typeof {}) {\n    throw new Error('SVGMorpheus > \"options\" parameter must be an object');\n  }\n  options = options || {};\n\n  if (!!callback && typeof callback !== typeof (function(){})) {\n    throw new Error('SVGMorpheus > \"callback\" parameter must be a function');\n  }\n\n  var that=this;\n\n  this._icons={};\n  this._curIconId=options.iconId || '';\n  this._toIconId='';\n  this._curIconItems=[];\n  this._fromIconItems=[];\n  this._toIconItems=[];\n  this._morphNodes=[];\n  this._morphG;\n  this._startTime;\n  this._defDuration=options.duration || 750;\n  this._defEasing=options.easing || 'quad-in-out';\n  this._defRotation=options.rotation || 'clock';\n  this._defCallback = callback || function () {};\n  this._duration=this._defDuration;\n  this._easing=this._defEasing;\n  this._rotation=this._defRotation;\n  this._callback=this._defCallback;\n  this._rafid;\n\n  this._fnTick=function(timePassed) {\n    if(!that._startTime) {\n      that._startTime=timePassed;\n    }\n    var progress=Math.min((timePassed-that._startTime)/that._duration,1);\n    that._updateAnimationProgress(progress);\n    if(progress<1) {\n      that._rafid=_reqAnimFrame(that._fnTick);\n    } else {\n      if (that._toIconId != '') {\n        that._animationEnd();\n      }\n    }\n  };\n\n  if(element.nodeName.toUpperCase()==='SVG') {\n    this._svgDoc=element;\n  } else {\n    this._svgDoc = element.getSVGDocument();\n  }\n  if(!this._svgDoc) {\n    element.addEventListener(\"load\",function(){\n      that._svgDoc = element.getSVGDocument();\n      that._init();\n    },false);\n  } else {\n    that._init();\n  }\n}\n\nSVGMorpheus.prototype._init=function(){\n  if(this._svgDoc.nodeName.toUpperCase()!=='SVG') {\n    this._svgDoc=this._svgDoc.getElementsByTagName('svg')[0];\n  }\n\n  if(!!this._svgDoc) {\n    var lastIconId='',\n        i, len, id, items, item, j, len2, icon;\n\n    // Read Icons Data\n    // Icons = 1st tier G nodes having ID\n    for(i=this._svgDoc.childNodes.length-1;i>=0;i--) {\n      var nodeIcon=this._svgDoc.childNodes[i];\n      if(nodeIcon.nodeName.toUpperCase()==='G') {\n        id=nodeIcon.getAttribute('id');\n        if(!!id) {\n          items=[];\n          for(j=0, len2=nodeIcon.childNodes.length;j<len2;j++) {\n            var nodeItem=nodeIcon.childNodes[j];\n            item={\n              path: '',\n              attrs: {},\n              style: {}\n            };\n\n            // Get Item Path (Convert all shapes into Path Data)\n            switch(nodeItem.nodeName.toUpperCase()) {\n              case 'PATH':\n                item.path=nodeItem.getAttribute('d');\n                break;\n              case 'CIRCLE':\n                var cx=nodeItem.getAttribute('cx')*1,\n                    cy=nodeItem.getAttribute('cy')*1,\n                    r=nodeItem.getAttribute('r')*1;\n                item.path='M'+(cx-r)+','+cy+'a'+r+','+r+' 0 1,0 '+(r*2)+',0a'+r+','+r+' 0 1,0 -'+(r*2)+',0z';\n                break;\n              case 'ELLIPSE':\n                var cx=nodeItem.getAttribute('cx')*1,\n                    cy=nodeItem.getAttribute('cy')*1,\n                    rx=nodeItem.getAttribute('rx')*1,\n                    ry=nodeItem.getAttribute('ry')*1;\n                item.path='M'+(cx-rx)+','+cy+'a'+rx+','+ry+' 0 1,0 '+(rx*2)+',0a'+rx+','+ry+' 0 1,0 -'+(rx*2)+',0z';\n                break;\n              case 'RECT':\n                var x=nodeItem.getAttribute('x')*1,\n                    y=nodeItem.getAttribute('y')*1,\n                    w=nodeItem.getAttribute('width')*1,\n                    h=nodeItem.getAttribute('height')*1,\n                    rx=nodeItem.getAttribute('rx')*1,\n                    ry=nodeItem.getAttribute('ry')*1;\n                if(!rx && !ry) {\n                  item.path='M'+x+','+y+'l'+w+',0l0,'+h+'l-'+w+',0z';\n                } else {\n                  item.path='M'+(x+rx)+','+y+\n                            'l'+(w-rx*2)+',0'+\n                            'a'+rx+','+ry+' 0 0,1 '+rx+','+ry+\n                            'l0,'+(h-ry*2)+\n                            'a'+rx+','+ry+' 0 0,1 -'+rx+','+ry+\n                            'l'+(rx*2-w)+',0'+\n                            'a'+rx+','+ry+' 0 0,1 -'+rx+',-'+ry+\n                            'l0,'+(ry*2-h)+\n                            'a'+rx+','+ry+' 0 0,1 '+rx+',-'+ry+\n                            'z';\n                }\n                break;\n              case 'POLYGON':\n                var points=nodeItem.getAttribute('points');\n                var p = points.split(/\\s+/);\n                var path = \"\";\n                for( var k = 0, len = p.length; k < len; k++ ){\n                    path += (k && \"L\" || \"M\") + p[k]\n                }\n                item.path=path+'z';\n                break;\n              case 'LINE':\n                var x1=nodeItem.getAttribute('x1')*1,\n                    y1=nodeItem.getAttribute('y1')*1,\n                    x2=nodeItem.getAttribute('x2')*1,\n                    y2=nodeItem.getAttribute('y2')*1;\n                item.path='M'+x1+','+y1+'L'+x2+','+y2+'z';\n                break;\n            }\n            if(item.path!='') {\n              // Traverse all attributes and get style values\n              for (var k = 0, len3=nodeItem.attributes.length; k < len3; k++) {\n                var attrib = nodeItem.attributes[k];\n                if (attrib.specified) {\n                  var name=attrib.name.toLowerCase();\n                  switch (name) {\n                    case 'fill':\n                    case 'fill-opacity':\n                    case 'opacity':\n                    case 'stroke':\n                    case 'stroke-opacity':\n                    case 'stroke-width':\n                      item.attrs[name]=attrib.value;\n                  }\n                }\n              }\n\n              // Traverse all inline styles and get supported values\n              for (var l = 0, len4=nodeItem.style.length; l < len4; l++) {\n                var styleName = nodeItem.style[l];\n                switch (styleName) {\n                  case 'fill':\n                  case 'fill-opacity':\n                  case 'opacity':\n                  case 'stroke':\n                  case 'stroke-opacity':\n                  case 'stroke-width':\n                    item.style[styleName]=nodeItem.style[styleName];\n                }\n              }\n\n              items.push(item);\n            }\n          }\n\n          // Add Icon\n          if(items.length>0) {\n            icon={\n              id: id,\n              items: items\n            };\n            this._icons[id]=icon;\n          }\n\n          // Init Node for Icons Items and remove Icon Nodes\n          if(!this._morphG) {\n            lastIconId=id;\n            this._morphG=document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            this._svgDoc.replaceChild(this._morphG,nodeIcon);\n          } else {\n            this._svgDoc.removeChild(nodeIcon);\n          }\n        }\n      }\n    }\n    // To Default Icon\n    var defaultIcon = this._curIconId || lastIconId;\n    if(defaultIcon!=='') {\n      this._setupAnimation(defaultIcon);\n      this._updateAnimationProgress(1);\n      this._animationEnd();\n    }\n  }\n\n};\n\nSVGMorpheus.prototype._setupAnimation=function(toIconId) {\n  if(!!toIconId && !!this._icons[toIconId]) {\n    this._toIconId=toIconId;\n    this._startTime=undefined;\n    var i, len, j, len2;\n    this._fromIconItems=clone(this._curIconItems);\n    this._toIconItems=clone(this._icons[toIconId].items);\n\n    for(i=0, len=this._morphNodes.length;i<len;i++) {\n      var morphNode=this._morphNodes[i];\n      morphNode.fromIconItemIdx=i;\n      morphNode.toIconItemIdx=i;\n    }\n\n    var maxNum=Math.max(this._fromIconItems.length, this._toIconItems.length);\n    var toBB;\n    for(i=0;i<maxNum;i++) {\n      // Add items to fromIcon/toIcon if needed\n      if(!this._fromIconItems[i]) {\n        if(!!this._toIconItems[i]) {\n          toBB=curvePathBBox(path2curve(this._toIconItems[i].path));\n          this._fromIconItems.push({\n            path: 'M'+toBB.cx+','+toBB.cy+'l0,0',\n            attrs: {},\n            style: {},\n            trans: {\n              'rotate': [0,toBB.cx,toBB.cy]\n            }\n          });\n        } else {\n          this._fromIconItems.push({\n            path: 'M0,0l0,0',\n            attrs: {},\n            style: {},\n            trans: {\n              'rotate': [0,0,0]\n            }\n          });\n        }\n      }\n      if(!this._toIconItems[i]) {\n        if(!!this._fromIconItems[i]) {\n          toBB=curvePathBBox(path2curve(this._fromIconItems[i].path));\n          this._toIconItems.push({\n            path: 'M'+toBB.cx+','+toBB.cy+'l0,0',\n            attrs: {},\n            style: {},\n            trans: {\n              'rotate': [0,toBB.cx,toBB.cy]\n            }\n          });\n        } else {\n          this._toIconItems.push({\n            path: 'M0,0l0,0',\n            attrs: {},\n            style: {},\n            trans: {\n              'rotate': [0,0,0]\n            }\n          });\n        }\n      }\n\n      // Add Node to DOM if needed\n      if(!this._morphNodes[i]) {\n        var node=document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        this._morphG.appendChild(node);\n        this._morphNodes.push({\n          node: node,\n          fromIconItemIdx: i,\n          toIconItemIdx: i\n        });\n      }\n    }\n\n    for(i=0;i<maxNum;i++) {\n      var fromIconItem=this._fromIconItems[i];\n      var toIconItem=this._toIconItems[i];\n\n      // Calculate from/to curve data and set to fromIcon/toIcon\n      var curves=path2curve(this._fromIconItems[i].path,this._toIconItems[i].path);\n      fromIconItem.curve=curves[0];\n      toIconItem.curve=curves[1];\n\n      // Normalize from/to attrs\n      var attrsNorm=styleToNorm(this._fromIconItems[i].attrs,this._toIconItems[i].attrs);\n      fromIconItem.attrsNorm=attrsNorm[0];\n      toIconItem.attrsNorm=attrsNorm[1];\n      fromIconItem.attrs=styleNormToString(fromIconItem.attrsNorm);\n      toIconItem.attrs=styleNormToString(toIconItem.attrsNorm);\n\n      // Normalize from/to style\n      var styleNorm=styleToNorm(this._fromIconItems[i].style,this._toIconItems[i].style);\n      fromIconItem.styleNorm=styleNorm[0];\n      toIconItem.styleNorm=styleNorm[1];\n      fromIconItem.style=styleNormToString(fromIconItem.styleNorm);\n      toIconItem.style=styleNormToString(toIconItem.styleNorm);\n\n      // Calculate from/to transform\n      toBB=curvePathBBox(toIconItem.curve);\n      toIconItem.trans={\n        'rotate': [0,toBB.cx,toBB.cy]\n      };\n      var rotation=this._rotation, degAdd;\n      if(rotation==='random') {\n        rotation=Math.random()<0.5?'counterclock':'clock';\n      }\n      switch(rotation) {\n        case 'none':\n          if(!!fromIconItem.trans.rotate) {\n            toIconItem.trans.rotate[0]=fromIconItem.trans.rotate[0];\n          }\n          break;\n        case 'counterclock':\n          if(!!fromIconItem.trans.rotate) {\n            toIconItem.trans.rotate[0]=fromIconItem.trans.rotate[0]-360;\n            degAdd=-fromIconItem.trans.rotate[0]%360;\n            toIconItem.trans.rotate[0]+=(degAdd<180?degAdd:degAdd-360);\n          } else {\n            toIconItem.trans.rotate[0]=-360;\n          }\n          break;\n        default: // Clockwise\n          if(!!fromIconItem.trans.rotate) {\n            toIconItem.trans.rotate[0]=fromIconItem.trans.rotate[0]+360;\n            degAdd=fromIconItem.trans.rotate[0]%360;\n            toIconItem.trans.rotate[0]+=(degAdd<180?-degAdd:360-degAdd);\n          } else {\n            toIconItem.trans.rotate[0]=360;\n          }\n          break;\n      }\n    }\n\n    this._curIconItems=clone(this._fromIconItems);\n  }\n};\n\nSVGMorpheus.prototype._updateAnimationProgress=function(progress) {\n  progress=easings[this._easing](progress);\n\n  var i, j, k, len;\n  // Update path/attrs/transform\n  for(i=0, len=this._curIconItems.length;i<len;i++) {\n    this._curIconItems[i].curve=curveCalc(this._fromIconItems[i].curve, this._toIconItems[i].curve, progress);\n    this._curIconItems[i].path=path2string(this._curIconItems[i].curve);\n\n    this._curIconItems[i].attrsNorm=styleNormCalc(this._fromIconItems[i].attrsNorm, this._toIconItems[i].attrsNorm, progress);\n    this._curIconItems[i].attrs=styleNormToString(this._curIconItems[i].attrsNorm);\n\n    this._curIconItems[i].styleNorm=styleNormCalc(this._fromIconItems[i].styleNorm, this._toIconItems[i].styleNorm, progress);\n    this._curIconItems[i].style=styleNormToString(this._curIconItems[i].styleNorm);\n\n    this._curIconItems[i].trans=transCalc(this._fromIconItems[i].trans, this._toIconItems[i].trans, progress);\n    this._curIconItems[i].transStr=trans2string(this._curIconItems[i].trans);\n  }\n\n  // Update DOM\n  for(i=0, len=this._morphNodes.length;i<len;i++) {\n    var morphNode=this._morphNodes[i];\n    morphNode.node.setAttribute(\"d\",this._curIconItems[i].path);\n    var attrs=this._curIconItems[i].attrs;\n    for(j in attrs) {\n      morphNode.node.setAttribute(j,attrs[j]);\n    }\n    var style=this._curIconItems[i].style;\n    for(k in style) {\n      morphNode.node.style[k]=style[k];\n    }\n    morphNode.node.setAttribute(\"transform\",this._curIconItems[i].transStr);\n  }\n};\n\nSVGMorpheus.prototype._animationEnd=function() {\n  for(var i=this._morphNodes.length-1;i>=0;i--) {\n    var morphNode=this._morphNodes[i];\n    if(!!this._icons[this._toIconId].items[i]) {\n      morphNode.node.setAttribute(\"d\",this._icons[this._toIconId].items[i].path);\n    } else {\n      morphNode.node.parentNode.removeChild(morphNode.node);\n      this._morphNodes.splice(i,1);\n    }\n  }\n\n  this._curIconId=this._toIconId;\n  this._toIconId='';\n\n  this._callback();\n};\n\n/*\n * Public methods\n */\n\n// Morph To Icon\nSVGMorpheus.prototype.to=function(iconId, options, callback) {\n  if(iconId!==this._toIconId) {\n    if (!!options && typeof options !== typeof {}) {\n      throw new Error('SVGMorpheus.to() > \"options\" parameter must be an object');\n    }\n    options = options || {};\n\n    if (!!callback && typeof callback !== typeof (function(){})) {\n      throw new Error('SVGMorpheus.to() > \"callback\" parameter must be a function');\n    }\n\n    _cancelAnimFrame(this._rafid);\n\n    this._duration=options.duration || this._defDuration;\n    this._easing=options.easing || this._defEasing;\n    this._rotation=options.rotation || this._defRotation;\n    this._callback=callback || this._defCallback;\n\n    this._setupAnimation(iconId);\n    this._rafid=_reqAnimFrame(this._fnTick);\n  }\n};\n\n// Register custom Easing function\nSVGMorpheus.prototype.registerEasing=function(name, fn) {\n  easings[name] = fn;\n}\n\nreturn SVGMorpheus;\n\n}());\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = SVGMorpheus;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/exports-loader?SVGMorpheus!./~/svg-morpheus/compile/unminified/svg-morpheus.js\n ** module id = 239\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\nbuf.push(\"<md-input-container md-no-float class=\\\"md-icon-float md-block no-tb-margin no-errors no-borders\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\nbuf.push(\"<md-icon>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\nbuf.push(\"<ng-md-icon icon=\\\"search\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</ng-md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-icon>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\nbuf.push(\"<input placeholder=\\\"{{title}}\\\" aria-label=\\\"{{title}}\\\" ng-model=\\\"searchText\\\">\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-input-container>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 5, \"/srv/blessing/public/src/directives/sidemenu/tpls/search.jade\" ));\nbuf.push(\"<md-divider>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-divider>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-input-container(md-no-float,class=\\\"md-icon-float md-block no-tb-margin no-errors no-borders\\\")\\n    md-icon\\n        ng-md-icon(icon=\\\"search\\\")\\n    input(placeholder=\\\"{{title}}\\\",aria-label=\\\"{{title}}\\\",  ng-model=\\\"searchText\\\")\\nmd-divider\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/sidemenu/tpls/search.jade\n ** module id = 267\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\nbuf.push(\"<ul ng-if=\\\"node.{{opts.children}}.length\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\nbuf.push(\"<li ng-if=\\\"node.showed\\\" ng-repeat=\\\"node in node.{{opts.children}} | filter: sideCtl.options.filterExpression | orderBy:['{{opts.orderBy}}']:true\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\nbuf.push(\"<div fx-side-menu-content-transclude ng-click=\\\"sideCtl.showChildren(node)\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\nbuf.push(\"<md-divider ng-if=\\\"node.depth===1\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-divider>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 5, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\nbuf.push(\"<fx-side-menu-child ng-show=\\\"sideCtl.isShowChildren(node)\\\" class=\\\"side-menu-child nga-fast nga-stagger-fast nga-slide-right\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</fx-side-menu-child>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</li>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</ul>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/directives/sidemenu/tpls/sidemenu.jade\" ));\nbuf.push(\"<md-divider ng-if=\\\"!$last &amp;&amp; node.depth&gt;1\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-divider>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"ul(ng-if=\\\"node.{{opts.children}}.length\\\")\\n    li(ng-if=\\\"node.showed\\\",ng-repeat=\\\"node in node.{{opts.children}} | filter: sideCtl.options.filterExpression | orderBy:['{{opts.orderBy}}']:true\\\")\\n        div(fx-side-menu-content-transclude,ng-click=\\\"sideCtl.showChildren(node)\\\")\\n        md-divider(ng-if=\\\"node.depth===1\\\")\\n        fx-side-menu-child.side-menu-child.nga-fast.nga-stagger-fast.nga-slide-right(ng-show=\\\"sideCtl.isShowChildren(node)\\\")\\nmd-divider(ng-if=\\\"!$last && node.depth>1\\\")\\n\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/sidemenu/tpls/sidemenu.jade\n ** module id = 268\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\nbuf.push(\"<md-button ng-if=\\\"{{btnCtl.condition}}\\\" ng-class=\\\"btnCtl.className\\\" aria-label=\\\"{{btnCtl.title}}\\\" ng-click=\\\"btnCtl.onClick($event,btnCtl.ngModel,btnCtl.index)\\\" ng-disabled=\\\"{{btnCtl.disabled}}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\nbuf.push(\"<md-tooltip ng-if=\\\"btnCtl.tooltip\\\" md-direction=\\\"{{btnCtl.tooltip.position}}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 2, jade_debug[0].filename ));\nbuf.push(\"{{btnCtl.tooltip.title || btnCtl.title}}\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-tooltip>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\nbuf.push(\"<md-icon ng-if=\\\"btnCtl.icon &amp;&amp; btnCtl.icon.icon\\\" md-menu-align-target ng-style=\\\"btnCtl.icon.style\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\nbuf.push(\"<ng-md-icon icon=\\\"{{btnCtl.icon.icon}}\\\" ng-style=\\\"btnCtl.icon.style\\\" options=\\\"{&quot;rotation&quot;:&quot;none&quot;}\\\" size=\\\"{{btnCtl.icon.size||'24px'}}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</ng-md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-icon>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 5, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\nbuf.push(\"<span ng-if=\\\"btnCtl.showTitle\\\" layout-padding>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 5, jade_debug[0].filename ));\nbuf.push(\"{{btnCtl.title}} \");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</span>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\nbuf.push(\"<span ng-hide=\\\"true\\\" ng-bind=\\\"{{btnCtl.disabled}}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</span>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 7, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\nbuf.push(\"<md-icon ng-if=\\\"btnCtl.icon &amp;&amp; btnCtl.icon.ricon\\\" md-menu-align-target ng-style=\\\"btnCtl.icon.style\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 8, \"/srv/blessing/public/src/directives/toolbar/tpls/btn.jade\" ));\nbuf.push(\"<ng-md-icon icon=\\\"{{btnCtl.icon.ricon}}\\\" ng-style=\\\"btnCtl.icon.style\\\" options=\\\"{&quot;rotation&quot;:&quot;none&quot;}\\\" size=\\\"{{btnCtl.icon.size||'24px'}}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</ng-md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-button>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-button(ng-if=\\\"{{btnCtl.condition}}\\\",ng-class=\\\"btnCtl.className\\\",aria-label=\\\"{{btnCtl.title}}\\\",ng-click=\\\"btnCtl.onClick($event,btnCtl.ngModel,btnCtl.index)\\\",ng-disabled=\\\"{{btnCtl.disabled}}\\\")\\n    md-tooltip(ng-if=\\\"btnCtl.tooltip\\\",md-direction=\\\"{{btnCtl.tooltip.position}}\\\") {{btnCtl.tooltip.title || btnCtl.title}}\\n    md-icon(ng-if=\\\"btnCtl.icon && btnCtl.icon.icon\\\",md-menu-align-target,ng-style=\\\"btnCtl.icon.style\\\")\\n        ng-md-icon(icon=\\\"{{btnCtl.icon.icon}}\\\",ng-style=\\\"btnCtl.icon.style\\\",options='{\\\"rotation\\\":\\\"none\\\"}',size=\\\"{{btnCtl.icon.size||'24px'}}\\\")\\n    span(ng-if=\\\"btnCtl.showTitle\\\",layout-padding) {{btnCtl.title}} \\n    span(ng-hide=\\\"true\\\",ng-bind=\\\"{{btnCtl.disabled}}\\\")\\n    md-icon(ng-if=\\\"btnCtl.icon && btnCtl.icon.ricon\\\",md-menu-align-target,ng-style=\\\"btnCtl.icon.style\\\")\\n        ng-md-icon(icon=\\\"{{btnCtl.icon.ricon}}\\\",ng-style=\\\"btnCtl.icon.style\\\",options='{\\\"rotation\\\":\\\"none\\\"}',size=\\\"{{btnCtl.icon.size||'24px'}}\\\")\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/toolbar/tpls/btn.jade\n ** module id = 269\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/icon.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/icon.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/icon.jade\" ));\nbuf.push(\"<md-icon ng-if=\\\"iconCtl.icon\\\" md-menu-align-target ng-style=\\\"iconCtl.icon.style\\\" ng-class=\\\"iconCtl.className\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/toolbar/tpls/icon.jade\" ));\nbuf.push(\"<ng-md-icon icon=\\\"{{iconCtl.icon.icon}}\\\" ng-style=\\\"iconCtl.icon.style\\\" options=\\\"{&quot;rotation&quot;:&quot;none&quot;}\\\" size=\\\"{{iconCtl.icon.size||'24px'}}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</ng-md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-icon>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-icon(ng-if=\\\"iconCtl.icon\\\",md-menu-align-target,ng-style=\\\"iconCtl.icon.style\\\",ng-class=\\\"iconCtl.className\\\")\\n    ng-md-icon(icon=\\\"{{iconCtl.icon.icon}}\\\",ng-style=\\\"iconCtl.icon.style\\\",options='{\\\"rotation\\\":\\\"none\\\"}',size=\\\"{{iconCtl.icon.size||'24px'}}\\\")\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/toolbar/tpls/icon.jade\n ** module id = 270\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/label.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/label.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/label.jade\" ));\nbuf.push(\"<span ng-class=\\\"labelCtl.cls\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 1, jade_debug[0].filename ));\nbuf.push(\"{{labelCtl.title}}\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</span>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"span(ng-class=\\\"labelCtl.cls\\\") {{labelCtl.title}}\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/toolbar/tpls/label.jade\n ** module id = 271\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/layout.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/layout.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/layout.jade\" ));\nbuf.push(\"<div layout=\\\"{{layoutCtl.layout}}\\\" flex=\\\"{{layoutCtl.flex}}\\\" layout-align=\\\"{{layoutCtl.layoutAlign}}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"div(layout=\\\"{{layoutCtl.layout}}\\\",flex=\\\"{{layoutCtl.flex}}\\\",layout-align=\\\"{{layoutCtl.layoutAlign}}\\\")\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/toolbar/tpls/layout.jade\n ** module id = 272\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-divider.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-divider.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-divider.jade\" ));\nbuf.push(\"<md-menu-divider>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-menu-divider>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-menu-divider\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/toolbar/tpls/menu-divider.jade\n ** module id = 273\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-item.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-item.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu-item.jade\" ));\nbuf.push(\"<md-menu-item fx-toolbar ng-if=\\\"{{menuItemCtl.condition}}\\\" ng-init=\\\"item = menuItemCtl;item.type='btn'\\\" items=\\\"item\\\" ng-model=\\\"menuItemCtl.ngModel\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-menu-item>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-menu-item(fx-toolbar,ng-if=\\\"{{menuItemCtl.condition}}\\\",ng-init=\\\"item = menuItemCtl;item.type='btn'\\\",items=\\\"item\\\",ng-model=\\\"menuItemCtl.ngModel\\\")\\n\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/toolbar/tpls/menu-item.jade\n ** module id = 274\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\nbuf.push(\"<md-menu md-offset=\\\"2 0\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\nbuf.push(\"<md-button ng-class=\\\"menuCtl.className\\\" aria-label=\\\"菜单\\\" ng-click=\\\"menuCtl.materialUtils.openMenu($mdOpenMenu,$event)\\\" ng-disabled=\\\"{{menuCtl.disabled}}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\nbuf.push(\"<md-tooltip ng-if=\\\"menuCtl.tooltip\\\" md-direction=\\\"{{menuCtl.tooltip.position}}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 3, jade_debug[0].filename ));\nbuf.push(\"{{menuCtl.tooltip.title || menuCtl.title}}\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-tooltip>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\nbuf.push(\"<md-icon ng-if=\\\"menuCtl.icon\\\" md-menu-origin>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 5, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\nbuf.push(\"<ng-md-icon icon=\\\"{{menuCtl.icon.icon}}\\\" ng-style=\\\"menuCtl.icon.style\\\" options=\\\"{&quot;rotation&quot;:&quot;none&quot;}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</ng-md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-button>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/directives/toolbar/tpls/menu.jade\" ));\nbuf.push(\"<md-menu-content width=\\\"{{menuCtl.width}}\\\" fx-toolbar items=\\\"menuCtl.items\\\" ng-model=\\\"menuCtl.ngModel\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-menu-content>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-menu>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-menu(md-offset=\\\"2 0\\\")\\n    md-button(ng-class=\\\"menuCtl.className\\\",aria-label=\\\"菜单\\\",ng-click=\\\"menuCtl.materialUtils.openMenu($mdOpenMenu,$event)\\\",ng-disabled=\\\"{{menuCtl.disabled}}\\\")\\n        md-tooltip(ng-if=\\\"menuCtl.tooltip\\\",md-direction=\\\"{{menuCtl.tooltip.position}}\\\") {{menuCtl.tooltip.title || menuCtl.title}}\\n        md-icon(ng-if=\\\"menuCtl.icon\\\",md-menu-origin)\\n            ng-md-icon(icon=\\\"{{menuCtl.icon.icon}}\\\",ng-style=\\\"menuCtl.icon.style\\\",options='{\\\"rotation\\\":\\\"none\\\"}')\\n    md-menu-content(width=\\\"{{menuCtl.width}}\\\",fx-toolbar,items=\\\"menuCtl.items\\\",ng-model=\\\"menuCtl.ngModel\\\")\\n\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/toolbar/tpls/menu.jade\n ** module id = 275\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menubar.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/directives/toolbar/tpls/menubar.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/directives/toolbar/tpls/menubar.jade\" ));\nbuf.push(\"<md-menu-bar md-offset=\\\"2 0\\\" ng-class=\\\"menuBarCtl.className\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/directives/toolbar/tpls/menubar.jade\" ));\nbuf.push(\"<div fx-toolbar items=\\\"menuBarCtl.items\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-menu-bar>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-menu-bar(md-offset=\\\"2 0\\\",ng-class=\\\"menuBarCtl.className\\\")\\n    div(fx-toolbar,items=\\\"menuBarCtl.items\\\")\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/toolbar/tpls/menubar.jade\n ** module id = 276\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/content.template.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/pages/home/tpls/content.template.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/content.template.jade\" ));\nbuf.push(\"<md-content flex>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/pages/home/tpls/content.template.jade\" ));\nbuf.push(\"<span>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 2, jade_debug[0].filename ));\nbuf.push(\"helo\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</span>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-content>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-content(flex)\\n    span helo\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pages/home/tpls/content.template.jade\n ** module id = 277\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<md-content flex=\\\"100\\\" layout=\\\"row\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<md-sidenav ui-view=\\\"sidenavLeft\\\" md-is-locked-open=\\\"$mdMedia('gt-md') || $root.isOpenMenu\\\" md-component-id=\\\"left\\\" md-whiteframe=\\\"4\\\" layout=\\\"column\\\" class=\\\"md-sidenav-left\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-sidenav>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<md-content flex=\\\"100\\\" layout=\\\"column\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 7, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<md-toolbar class=\\\"md-hue-3\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 8, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<div fx-toolbar items=\\\"homeCtl.toolbars\\\" layout=\\\"row\\\" ctls=\\\"homeCtl\\\" class=\\\"md-toolbar-tools\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-toolbar>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 9, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<md-divider>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-divider>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 10, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<md-content flex ui-view=\\\"content\\\" layout=\\\"column\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-content>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-content>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 11, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<div execute-cmd real-time=\\\"true\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 12, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<div ng-if=\\\"!$mdMedia('gt-md')\\\" class=\\\"lock-size\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 13, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<md-fab-speed-dial md-direction=\\\"right\\\" ng-mouseenter=\\\"$root.isOpenFab=true\\\" ng-mouseleave=\\\"$root.isOpenFab=false\\\" md-open=\\\"$root.isOpenFab\\\" class=\\\"md-scale md-fab-bottom-left\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 14, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<md-fab-trigger>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 15, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<md-button aria-label=\\\"menu\\\" ng-click=\\\"homeCtl.materialUtils.buildToggle('left')()\\\" class=\\\"md-fab md-default\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 16, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<md-icon>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 17, \"/srv/blessing/public/src/pages/home/tpls/home.template.jade\" ));\nbuf.push(\"<ng-md-icon icon=\\\"menu\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</ng-md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-button>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-fab-trigger>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-fab-speed-dial>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-content>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"//- md-toolbar.md-whiteframe-glow-z1.md-hue-3()\\n    //- div.md-toolbar-tools(fx-toolbar,items=\\\"homeCtl.toolbars\\\",layout=\\\"row\\\",ctls=\\\"homeCtl\\\")\\nmd-content(flex=\\\"100\\\",layout=\\\"row\\\")\\n    md-sidenav.md-sidenav-left(ui-view=\\\"sidenavLeft\\\",md-is-locked-open=\\\"$mdMedia('gt-md') || $root.isOpenMenu\\\",md-component-id=\\\"left\\\",md-whiteframe=\\\"4\\\",layout=\\\"column\\\")\\n    //- md-sidenav.md-sidenav-right(md-component-id=\\\"right\\\",ui-view=\\\"sidenavRight\\\",layout=\\\"column\\\",md-whiteframe=\\\"4\\\")\\n    md-content(flex=\\\"100\\\",layout=\\\"column\\\")\\n        md-toolbar.md-hue-3\\n            div.md-toolbar-tools(fx-toolbar,items=\\\"homeCtl.toolbars\\\",layout=\\\"row\\\",ctls=\\\"homeCtl\\\")\\n        md-divider\\n        md-content(flex,ui-view=\\\"content\\\",layout=\\\"column\\\")\\n    div(execute-cmd,real-time=\\\"true\\\")\\n    div.lock-size(ng-if=\\\"!$mdMedia('gt-md')\\\")\\n        md-fab-speed-dial.md-scale.md-fab-bottom-left(md-direction=\\\"right\\\",ng-mouseenter=\\\"$root.isOpenFab=true\\\",ng-mouseleave=\\\"$root.isOpenFab=false\\\",md-open=\\\"$root.isOpenFab\\\")\\n            md-fab-trigger\\n                md-button.md-fab.md-default(aria-label=\\\"menu\\\",ng-click=\\\"homeCtl.materialUtils.buildToggle('left')()\\\")\\n                    md-icon\\n                        ng-md-icon(icon=\\\"menu\\\")\\n           \");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pages/home/tpls/home.template.jade\n ** module id = 278\n ** module chunks = 2\n **/","var jade = require(\"/srv/blessing/public/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar jade_debug = [ new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ) ];\ntry {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\njade_debug.unshift(new jade.DebugItem( 0, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\njade_debug.unshift(new jade.DebugItem( 1, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<md-content flex=\\\"100\\\" layout=\\\"column\\\" ng-cloak>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 2, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<section layout=\\\"row\\\" ng-href=\\\"home.page\\\" flex class=\\\"logo\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 3, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<div fx-toolbar items=\\\"sideLeftCtl.toolbar\\\" layout=\\\"row\\\" ctls=\\\"sideLeftCtl\\\" class=\\\"md-toolbar-tools\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</section>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 4, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<md-divider>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-divider>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 5, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<fx-side-menu-search>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</fx-side-menu-search>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 6, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<md-content flex=\\\"100\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 7, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<fx-side-menu selected-nodes=\\\"sideLeftCtl.selectedNodes\\\" modules=\\\"sideLeftCtl.modules\\\" ng-click=\\\"sideLeftCtl.doLinkBind\\\" class=\\\"side-menu\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 8, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<md-button ng-click=\\\"sideCtl.doLinkPre($event,node)\\\" md-style-color=\\\"{'background-color': sideCtl.isSelected(node) ? 'primary.300': 'primary.0'}\\\" class=\\\"layout-fill\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 9, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<div flex=\\\"100\\\" layout=\\\"row\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 10, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<md-icon>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 11, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<ng-md-icon icon=\\\"{{ node.icon||'apps'}}\\\" md-style-color=\\\"{'color': sideCtl.isSelected(node) ? 'accent.300': 'primary.500'}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</ng-md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-icon>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 12, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<div flex=\\\"100\\\" class=\\\"md-margin\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 12, jade_debug[0].filename ));\nbuf.push(\"{{node.title}}\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 13, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<md-icon>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.unshift(new jade.DebugItem( 14, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<ng-md-icon options=\\\"{&quot;rotation&quot;: &quot;none&quot;}\\\" ng-if=\\\"!sideCtl.isLeaf(node)\\\" icon=\\\"{{ sideCtl.isShowChildren(node)?'expand_more':'chevron_right' }}\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</ng-md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-icon>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-button>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</fx-side-menu>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-content>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 15, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<md-divider>\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</md-divider>\");\njade_debug.shift();\njade_debug.unshift(new jade.DebugItem( 16, \"/srv/blessing/public/src/pages/home/tpls/sidenavl.template.jade\" ));\nbuf.push(\"<div fx-toolbar items=\\\"sideLeftCtl.toolbarBottom\\\">\");\njade_debug.unshift(new jade.DebugItem( undefined, jade_debug[0].filename ));\njade_debug.shift();\nbuf.push(\"</div>\");\njade_debug.shift();\njade_debug.shift();\nbuf.push(\"</md-content>\");\njade_debug.shift();\njade_debug.shift();;return buf.join(\"\");\n} catch (err) {\n  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, \"md-content(flex=\\\"100\\\",layout=\\\"column\\\",ng-cloak)\\n    section.logo(layout=\\\"row\\\",ng-href=\\\"home.page\\\",flex)\\n        div.md-toolbar-tools(fx-toolbar,items=\\\"sideLeftCtl.toolbar\\\",layout=\\\"row\\\",ctls=\\\"sideLeftCtl\\\")\\n    md-divider\\n    fx-side-menu-search\\n    md-content(flex=\\\"100\\\")\\n        fx-side-menu.side-menu(selected-nodes=\\\"sideLeftCtl.selectedNodes\\\",modules=\\\"sideLeftCtl.modules\\\",ng-click=\\\"sideLeftCtl.doLinkBind\\\")\\n            md-button.layout-fill(ng-click=\\\"sideCtl.doLinkPre($event,node)\\\",md-style-color=\\\"{'background-color': sideCtl.isSelected(node) ? 'primary.300': 'primary.0'}\\\")\\n                div(flex=\\\"100\\\",layout=\\\"row\\\")\\n                    md-icon\\n                        ng-md-icon(icon=\\\"{{ node.icon||'apps'}}\\\",md-style-color=\\\"{'color': sideCtl.isSelected(node) ? 'accent.300': 'primary.500'}\\\")\\n                    div.md-margin(flex=\\\"100\\\") {{node.title}}\\n                    md-icon\\n                        ng-md-icon(options='{\\\"rotation\\\": \\\"none\\\"}',ng-if=\\\"!sideCtl.isLeaf(node)\\\",icon=\\\"{{ sideCtl.isShowChildren(node)?'expand_more':'chevron_right' }}\\\")\\n    md-divider\\n    div(fx-toolbar,items=\\\"sideLeftCtl.toolbarBottom\\\")\");\n}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pages/home/tpls/sidenavl.template.jade\n ** module id = 279\n ** module chunks = 2\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/sass-loader/index.js!./sidemenu.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/sass-loader/index.js!./sidemenu.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/sass-loader/index.js!./sidemenu.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/sidemenu/styles/sidemenu.scss\n ** module id = 306\n ** module chunks = 2\n **/","import {module} from './module';\n\nfunction Directive(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        require: '^fxSideMenu',\n        link: function ($scope, $element, $attrs, $ctrl) {\n            $ctrl['template']($scope, function (clone) {\n                $element.html('').append(clone);\n            });\n        }\n    };\n}\n\nmodule.directive('fxSideMenuChild', Directive);\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/sidemenu/child.directive.ts\n **/","import { module } from './module';\n\nfunction Directive(): ng.IDirective {\n    return {\n        link: ($scope, $element, $attrs, $ctrl) => {\n            $scope['$sideMenuTransclude']($scope, function (clone) {\n                $element.empty();\n                $element.append(clone);\n            });\n        }\n    };\n}\n\n// export default (module: ng.IModule)=> {\nmodule.directive('fxSideMenuContentTransclude', Directive);\n// };\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/sidemenu/content.directive.ts\n **/","import { module } from './module';\n\nconst _name = \"mdStyleColor\";\n\nfunction Directive(mdSideMenuSections): ng.IDirective {\n    return {\n        restrict: 'A',\n        scope: {\n            mdStyleColor: '='\n        },\n        link: ($scope, $element, $attrs) => {\n            let themeColors, split, hueR, colorR, colorA, hueA, colorValue,\n                _apply_color = () => {\n                    for (let p in $scope[_name]) {\n                        if ($scope[_name].hasOwnProperty(p)) {\n                            themeColors = mdSideMenuSections.theme.colors,\n                                split = ($scope[_name][p] || '').split('.');\n\n                            if (split.length < 2) {\n                                split.unshift('primary');\n                            }\n                            hueR = split[1] || 'hue-1';\n                            colorR = split[0] || 'primary'; // 'warn'\n\n                            // Absolute color: 'orange'\n                            colorA = themeColors[colorR] ? themeColors[colorR].name : colorR;\n                            // Absolute Hue: '500'\n                            hueA = themeColors[colorR] ? (themeColors[colorR].hues[hueR] || hueR) : hueR;\n                            colorValue = mdSideMenuSections.palettes[colorA][hueA] ? mdSideMenuSections.palettes[colorA][hueA].value : mdSideMenuSections.palettes[colorA]['500'].value;\n\n                            if (hueA !== '0') {\n                                $element.css(p, 'rgb(' + colorValue.join(',') + ')');\n                            } else {\n                                $element.css(p, 'transparent');\n                            }\n                        }\n                    }\n                };\n\n            if (!mdSideMenuSections.theme || !mdSideMenuSections.palettes) {\n                return console.warn('you probably want to ssSideNavSectionsProvider.initWithTheme($mdThemingProvider)');\n            }\n\n            $scope.$watch(_name, function (oldVal, newVal) {\n                if ((oldVal && newVal) && oldVal !== newVal) {\n                    _apply_color();\n                }\n            }, true);\n            _apply_color();\n        }\n    }\n}\n\nmodule.directive(_name, [\"mdSideMenuSections\", Directive]);\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/sidemenu/mdcolor.directive.ts\n **/","import { module } from './module';\n\ninterface IDirectiveScope extends ng.IScope {\n    searchText: string;\n    title: string;\n    timeID: any;\n}\n\nfunction Directive(mdSideMenuSections, $timeout): ng.IDirective {\n    return {\n        restrict: 'EA',\n        template: require(\"./tpls/search.jade\"),\n        controllerAs: \"searchCtl\",\n        link: function ($scope: IDirectiveScope) {\n            $scope.searchText = \"\";\n            $scope.title = \"搜索菜单\";\n\n            $scope.$watch(\"searchText\", (newVal, oldVal) => {\n                $timeout.cancel($scope.timeID);\n                $scope.timeID = $timeout(() => {\n                    mdSideMenuSections.options.filterExpression = newVal;\n                }, 1000);\n            });\n        }\n    };\n}\n\n// export default (module: ng.IModule)=> {\nmodule.directive('fxSideMenuSearch', [\"mdSideMenuSections\", \"$timeout\", Directive]);\n// };\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/sidemenu/search.directive.ts\n **/","import { module } from './module';\n\nfunction Provider() {\n    var _sections = [],\n        _theme,\n        _palettes;\n\n    this.initWithSections = function (value) {\n        _sections = value ? value : [];\n    };\n\n    this.initWithTheme = function (value) {\n        _theme = value.theme();\n        _palettes = value._PALETTES;\n    };\n\n    this.$get = [function () {\n        var MdSideMenuSections = function () {\n            this.sections = _sections;\n            this.selectedNode = null;\n            this.options = {};\n            this.theme = _theme;\n            this.palettes = _palettes;\n            this.searchStr = \"\";\n        };\n\n        return new MdSideMenuSections();\n    }];\n}\n\n// export default (module: ng.IModule)=> {\nmodule.provider('mdSideMenuSections', [Provider]);\n// };\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/sidemenu/section.provider.ts\n **/","import { module } from './module';\nimport * as _ from 'lodash';\n\nfunction Factory($rootScope, $timeout, mdSideMenuSections): any {\n    let onStateChangeStart = function (event, toState, toParams) {\n        let options = mdSideMenuSections.options;\n\n        function digest(sections, currentSection) {\n            !mdSideMenuSections.selectedNode && sections &&\n\n                _.forEach(sections, (section) => {\n                    if (section[mdSideMenuSections.options.children] && section[mdSideMenuSections.options.children].length) {\n                        digest(section[mdSideMenuSections.options.children], section);\n                    }\n                    if (section.showed && toState.name == section.link && toParams.key == section.key) {\n                        mdSideMenuSections.selectedNode = section;\n                        return false;\n                    }\n                });\n\n            return false;\n        }\n\n        mdSideMenuSections.selectedNode = null;\n        $timeout(() => {\n            digest(mdSideMenuSections.sections, null);\n        }, 10);\n    };\n    $rootScope.$on('$stateChangeSuccess', onStateChangeStart);\n\n    return {\n        onStateChangeStart: onStateChangeStart\n    };\n}\n\nmodule.factory('fxSideMenuFactory', [\"$rootScope\", \"$timeout\", \"mdSideMenuSections\", Factory]);\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/sidemenu/status.factory.ts\n **/","import { module } from './module';\nimport * as _ from \"lodash\";\nimport 'restangular';\n\nclass Service {\n    public static _name: string = \"toolbarUtils\";\n\n    public static provider: Array<string | Function> = [() => {\n\n        class Base {\n            constructor(public data?: any) {\n\n            }\n\n            conditionBuilder(condition: string, prefix: boolean = true, useDisabled: boolean = false) {\n                this.data = _.extend({}, this.data, {\n                    conditionInfo: {\n                        condition: condition,\n                        prefix: prefix,\n                        useDisabled:useDisabled\n                    }\n                });\n\n                return this;\n            }\n\n            className(className: string) {\n                this.data = _.extend({}, this.data, {\n                    className: className\n                });\n\n                return this;\n            }\n\n            noOptions(tooltip: boolean = false, icon: boolean = false) {\n                tooltip && delete this.data.tooltip;\n                icon && delete this.data.icon;\n\n                return this;\n            }\n\n            tooltipBuilder(title: string = \"\", position: string = \"bottom\") {\n                this.data = _.extend({}, this.data, {\n                    tooltip: {\n                        title: title,\n                        position: position\n                    }\n                });\n\n                return this;\n            }\n\n            iconBuilder(icon: string, style?: [{ (id: string): any }], ricon?: string, options?: [{ (id: string): any }], size?: string) {\n                this.data = _.extend({}, this.data, {\n                    icon: {\n                        icon: icon,\n                        ricon: ricon,\n                        style: style,\n                        size: size || '24px'\n                    }\n                });\n\n                return this;\n            }\n\n            attrBuilder(attributes: [{ (id: string): any }]) {\n                this.data = _.extend({}, this.data, {\n                    attributes: attributes\n                });\n\n                return this;\n            }\n\n            toolsBuilder(tools: Array<Object>) {\n                this.data = _.extend({}, this.data, {\n                    tools: tools || []\n                });\n\n                return this;\n            }\n\n            btnClick(func: Function) {\n                if (func && _.isFunction(func)) {\n                    this.data = _.extend({}, this.data, {\n                        onClick: func\n                    });\n                }\n\n                return this;\n            }\n\n            menuOptionsBuilder(width: number = 4, items: Array<any> = []) {\n                this.data = _.extend({}, this.data, {\n                    width: width || 4,\n                    items: items || []\n                });\n\n                return this;\n            }\n\n            items(items: Array<any> = []) {\n                this.data = _.extend({}, this.data, {\n                    items: items || []\n                });\n                return this;\n            }\n\n            toValue(): any {\n                return this.data;\n            }\n        }\n\n        class Service extends Base {\n            constructor(public data?: any) {\n                super(data);\n            }\n\n            /**\n             * 按钮配置生成方法\n             * @param title        按钮title\n             * @param cls          按钮className\n             * @param showTitle\n             * @returns {Service}\n             */\n            btnBuilder(title: string, className: string, showTitle: boolean = true, tooltipPosition: string = \"bottom\"): Service {\n                const service = new Service({\n                    type: \"btn\",\n                    title: title,\n                    className: className,\n                    showTitle: showTitle\n                });\n\n                service.tooltipBuilder(title, tooltipPosition);\n\n                return service;\n            }\n\n            menuBuilder(title: string, className: string, showTitle: boolean = true, tooltipPosition: string = \"bottom\"): Service {\n                const service = this.btnBuilder(title, className, showTitle, tooltipPosition);\n\n                service.data.type = \"menu\";\n\n                return service;\n            }\n\n            menuItemBuilder(title: string, className: string, showTitle: boolean = true, tooltipPosition: string = \"bottom\"): Service {\n                const service = this.btnBuilder(title, className, showTitle, tooltipPosition);\n\n                service.data.type = \"menuItem\";\n\n                return service;\n            }\n\n            /**\n             * label配置生成方法\n             * @param title\n             * @returns {Service}\n             */\n            labelBuilder(title: string, cls?: string): Service {\n                return new Service({\n                    type: \"label\",\n                    title: title,\n                    cls: cls\n                });\n            }\n\n            layoutBuilder(flex: string = \"none\", layout: string = \"none\", layoutAlign: string = \"none none\"): Service {\n                return new Service({\n                    type: \"layout\",\n                    flex: flex,\n                    layout: layout,\n                    layoutAlign: layoutAlign\n                });\n            }\n\n            menuBarBuilder(): Service {\n                return new Service({\n                    type: \"menuBar\"\n                });\n            }\n\n            noneBuilder(type: string) {\n                return new Service({\n                    type: type\n                });\n            }\n        }\n\n        return new Service();\n    }];\n}\n\nmodule.service(Service._name, Service.provider);\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/toolbar/toolbar.service.ts\n **/","/**\n * Created by NICK on 16/8/10.\n */\n\nimport * as _ from 'lodash';\n\nexport class ContentController {\n    public static $inject = [\"$rootScope\", \"$timeout\", \"materialUtils\", \"svgUtils\", \"fxAction\", \"iconInfoDetailForm\"];\n\n    icons: Array<string> = [];\n    filter: string;\n    text: string;\n    standardItems: any;\n    gridsterOpts: any;\n\n    departs: any;\n    treeOptions: any;\n\n    constructor(private $rootScope, private $timeout, private materialUtils, private svgUtils, private fxAction, private iconInfoDetailForm) {\n        this.icons.length = 0;\n\n        _.each(svgUtils.getAllIcons(), (shape, key) => {\n            this.icons.push(key);\n        });\n\n        this.standardItems = [\n            { sizeX: 2, sizeY: 1, row: 0, col: 0, class: \"md-whiteframe-1dp\" },\n            { sizeX: 2, sizeY: 2, row: 0, col: 2, class: \"md-whiteframe-1dp\" },\n            { sizeX: 1, sizeY: 1, row: 0, col: 4, class: \"md-whiteframe-1dp\" },\n            { sizeX: 1, sizeY: 1, row: 0, col: 5, class: \"md-whiteframe-1dp\" },\n            { sizeX: 2, sizeY: 1, row: 1, col: 0, class: \"md-whiteframe-1dp\" },\n            { sizeX: 1, sizeY: 1, row: 1, col: 4, class: \"md-whiteframe-1dp\" },\n            { sizeX: 1, sizeY: 2, row: 1, col: 5, class: \"md-whiteframe-1dp\" },\n            { sizeX: 1, sizeY: 1, row: 2, col: 0, class: \"md-whiteframe-1dp\" },\n            { sizeX: 2, sizeY: 1, row: 2, col: 1, class: \"md-whiteframe-1dp\" },\n            { sizeX: 1, sizeY: 1, row: 2, col: 3, class: \"md-whiteframe-1dp\" },\n            { sizeX: 1, sizeY: 1, row: 2, col: 4, class: \"md-whiteframe-1dp\" }\n        ];\n        this.gridsterOpts = {\n            draggable: {\n                start: function (event, $element, widget) {\n                    widget.class = \"md-whiteframe-16dp\"\n                }, // optional callback fired when drag is started,\n                stop: function (event, $element, widget) {\n                    widget.class = \"md-whiteframe-1dp\"\n                } // optional callback fired when item is finished dragging\n            }\n        };\n\n        this.getDetatInfo();\n    }\n\n    doOpenIconInfo($event, iconInfo: string) {\n        this.fxAction.doActionModel($event, this.iconInfoDetailForm, { key: iconInfo });\n    }\n\n    getDetatInfo() {\n        let promise = this.fxAction.doAction('departTreeAction', null);\n\n        promise && promise.then((results) => {\n            let nodes: Array<any> = [];\n\n            _.forEach(results, (result) => {\n                if (_.isArray(result)) {\n                    nodes = nodes.concat(result);\n                }\n            });\n\n            let nodesGroupByDepth = _.groupBy(_.keyBy(nodes, \"key\"), \"depth\");\n            let depth = 0, root = {};\n\n            while (true) {\n                let nodesIsDepth = nodesGroupByDepth[depth];\n                let parentIsDepth = nodesGroupByDepth[depth - 1];\n\n                if (nodesIsDepth && nodesIsDepth.length > 0) {\n                    switch (depth) {\n                        case 0:\n                            root = nodesIsDepth[0];\n                            break;\n                        case 1:\n                            root['nodes'] = nodesIsDepth;\n                            break;\n                        default:\n                            _.forEach(parentIsDepth, (parentNode) => {\n                                parentNode[\"nodes\"] = _.filter(nodesIsDepth, (node) => {\n                                    return node.lft > parentNode.lft && parentNode.rgt > node.rgt;\n                                });\n                            });\n                            break;\n                    }\n                } else {\n                    break;\n                }\n                depth++;\n            }\n            this.departs = root[\"nodes\"];\n        });\n\n        this.treeOptions = {\n            nodeChildren: \"nodes\",\n            dirSelectable: false,\n            templateUrl: 'treeControlExternalTemplate.html',\n            injectClasses: {\n                ul: \"a1\",\n                li: \"a2\",\n                liSelected: \"a7\",\n                iExpanded: \"a3\",\n                iCollapsed: \"a4\",\n                iLeaf: \"a5\",\n                label: \"a6\",\n                labelSelected: \"a8\"\n            }\n        };\n    }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/home/ctls/content.controller.ts\n **/","/**\n * Created by NICK on 16/8/10.\n */\n\nexport class HomeController {\n    public static $inject = [\"$rootScope\", \"materialUtils\", \"toolbarUtils\", \"fxAction\"];\n\n    toolbars: Object | Array<Object>;\n\n    constructor(private $rootScope: ng.IRootScopeService, private materialUtils: fx.utils.materialStatic, private toolbarUtils, private fxAction) {\n        $rootScope[\"isOpenMenu\"] = false;\n\n        this.toolbars = [\n            toolbarUtils.labelBuilder(\"\").attrBuilder({ flex: \"\" }).toValue(),\n            toolbarUtils.noneBuilder(\"icon\").className(\"md-margin\").iconBuilder(\"people\", {}, null, null, \"24px\").toValue(),\n            toolbarUtils.labelBuilder(\"{{$root.user.username}}\", \"md-subhead\").attrBuilder({}).toValue(),\n            toolbarUtils.menuBarBuilder().className(\"md-no-padding\").tooltipBuilder(\"\").items([\n                toolbarUtils.menuBuilder(\"\", \"md-icon-button\").attrBuilder({ \"md-position-mode\": \"left bottom\" }).iconBuilder(\"expand_more\").menuOptionsBuilder().items([\n                    // toolbarUtils.menuItemBuilder(\"系统设置\", \"\", true).iconBuilder(\"settings\").btnClick(($event) => {\n                    // }).toValue(),\n                    // toolbarUtils.noneBuilder(\"menuDivider\").toValue(),\n                    // toolbarUtils.menuItemBuilder(\"修改密码\", \"\", true).iconBuilder(\"key-change\").btnClick(($event) => {\n                    //     this.doExit($event);\n                    // }).toValue(),\n                    toolbarUtils.menuItemBuilder(\"退出登录\", \"\", true).iconBuilder(\"power-settings\").btnClick(($event) => {\n                        this.doExit($event);\n                    }).toValue(),\n                ]).toValue()\n            ]).toValue()\n        ];\n    }\n\n    /**\n    * 退出登录\n    * @param $event\n    */\n    doExit($event: MouseEvent) {\n        this.fxAction.getModel('logout').then((model) => {\n            const promise = this.fxAction.doActionModel($event, model);\n\n            if (promise) {\n                promise.then(() => {\n                    console.log(\"logout\");\n                });\n            }\n        });\n    }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/home/ctls/home.controller.ts\n **/","/**\n * Created by NICK on 16/8/10.\n */\n\nimport * as _ from 'lodash';\nimport Dictionary = _.Dictionary;\n\nexport class SidenavLeftController {\n    static $inject = [\"$rootScope\", \"mdSideMenuSections\", \"toolbarUtils\", \"fxAction\", \"$state\", \"$stateParams\", \"$timeout\", \"fxSideMenuFactory\"];\n\n    toolbarBottom: Object;\n    selectedNodes = {};\n    modules: Array<any>;\n    doLinkBind: Function;\n    toolbar: Object | Array<Object>;\n\n    constructor(private $rootScope, private mdSideMenuSections, private toolbarUtils, private fxAction, private $state: angular.ui.IStateService, private $stateParams: ng.ui.IStateParamsService, private $timeout: ng.ITimeoutService, private fxSideMenuFactory) {\n        this.initModules().initToolbar();\n        this.doLinkBind = this.doLink.bind(this);\n\n        this.toolbar = [\n            toolbarUtils.labelBuilder(\"CMDB\").attrBuilder({ flex: \"\" }).toValue()\n        ];\n    }\n\n    /**\n     * 计算模块的层级关系\n     */\n    getModules() {\n        let promise = this.fxAction.doAction('moduleMenuAction', null);\n\n        promise && promise.then((results) => {\n            let nodes: Array<any> = [];\n\n            _.forEach(results, (result) => {\n                if (_.isArray(result)) {\n                    nodes = nodes.concat(result);\n                }\n            });\n\n            let nodesGroupByDepth = _.groupBy(_.keyBy(nodes, \"key\"), \"depth\");\n            let depth = 0, root = {};\n\n            while (true) {\n                let nodesIsDepth = nodesGroupByDepth[depth];\n                let parentIsDepth = nodesGroupByDepth[depth - 1];\n\n                if (nodesIsDepth && nodesIsDepth.length > 0) {\n                    switch (depth) {\n                        case 0:\n                            root = nodesIsDepth[0];\n                            break;\n                        case 1:\n                            root['nodes'] = nodesIsDepth;\n                            break;\n                        default:\n                            _.forEach(parentIsDepth, (parentNode) => {\n                                parentNode[\"nodes\"] = _.filter(nodesIsDepth, (node) => {\n                                    return node.lft > parentNode.lft && parentNode.rgt > node.rgt;\n                                });\n                            });\n                            break;\n                    }\n                } else {\n                    break;\n                }\n                depth++;\n            }\n\n            this.mdSideMenuSections.sections = root[\"nodes\"];\n            this.modules = this.mdSideMenuSections.sections;\n            this.selectedNodes = _.keyBy(nodesGroupByDepth[1], \"key\") || {};\n            this.fxSideMenuFactory.onStateChangeStart(null, this.$state.current, this.$state.params);\n        });\n    }\n\n    /**\n     * 初始化菜单\n     * @returns {SidenavLeftController}\n     */\n    initModules() {\n        this.getModules();\n\n        this.mdSideMenuSections.options = {\n            children: \"nodes\",\n            key: 'key',\n            dirSelectable: false,\n            orderBy: 'lft',\n            filterField: 'key'\n        };\n\n        return this;\n    }\n\n    /**\n     * 初始化底部按钮\n     * @returns {SidenavLeftController}\n     */\n    initToolbar() {\n        this.toolbarBottom = [\n            this.toolbarUtils.layoutBuilder(\"\", \"row\", \"space-around center\").toolsBuilder([\n                this.toolbarUtils.btnBuilder(\"刷新\", \"md-icon-button\", false, \"top\").iconBuilder(\"refresh\").btnClick(($event) => {\n                    this.getModules();\n                }).toValue(),\n                this.toolbarUtils.btnBuilder(\"全部折叠\", \"md-icon-button\", false, \"top\").iconBuilder(\"dehaze\").btnClick(($event) => {\n                    _.forEach(this.selectedNodes, (val, key) => {\n                        delete this.selectedNodes[key];\n                    })\n                }).toValue(),\n                // this.toolbarUtils.btnBuilder(\"关掉菜单栏\", \"md-icon-button\", false, \"top\").iconBuilder(\"close\").btnClick(($event) => {\n                //     this.$rootScope[\"isOpenMenu\"] = false;\n                // }).toValue()\n            ]).toValue()\n        ];\n\n        return this;\n    }\n\n    /**\n     * 点击左侧导航栏事件\n     * @param $event\n     * @param node\n     */\n    doLink($event, node) {\n        if (node && node.link && node.key) {\n            this.$timeout(() => {\n                this.$state.go(node.link, node);\n            }, 200);\n        }\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/home/ctls/sidenavl.controller.ts\n **/","/**\n * Created by NICK on 16/8/9.\n * 首页,用于生成页面框架\n */\n\nimport * as ngMaterial from 'angular-material';\nimport 'angular-ui-router';\nimport * as ngMaterialIcons from 'angular-material-icons';\nimport * as _ from 'lodash';\nimport actionDir from '../../directives/action';\nimport { initRouter } from './router';\nimport materialService from '../../services/material.service';\nimport svgUtilsMod from '../../services/svg.service';\nimport toolbar from '../../directives/toolbar';\nimport sidemenu from '../../directives/sidemenu';\nimport 'expose?SVGMorpheus!exports?SVGMorpheus!svg-morpheus';\nimport { ActionType } from '../../directives/action/models/action.model';\nimport \"./index.scss\";\n\nimport 'angular-gridster';\nimport 'angular-tree-control';\n\nconst module = angular.module(\"homeModule\", [actionDir, toolbar, sidemenu, svgUtilsMod, materialService, ngMaterial, 'ui.router', ngMaterialIcons, 'gridster','treeControl']);\n\nmodule.config([\n    \"$stateProvider\",\n    \"$urlRouterProvider\",\n    \"$httpProvider\",\n    \"$mdThemingProvider\",\n    \"$mdAriaProvider\",\n    \"$locationProvider\",\n    \"mdSideMenuSectionsProvider\",\n    ($stateProvider, $urlRouterProvider, $httpProvider, $mdThemingProvider, $mdAriaProvider, $locationProvider, mdSideMenuSectionsProvider, cfpLoadingBarProvider: angular.loadingBar.ILoadingBarProvider) => {\n        $mdThemingProvider.alwaysWatchTheme(true);\n        $mdAriaProvider.disableWarnings();\n        $mdThemingProvider.theme('default')\n            // .dark()\n            .primaryPalette('grey')\n            .accentPalette('blue')\n            .warnPalette('red');\n        // 初始化路由\n        initRouter($urlRouterProvider, $stateProvider);\n        // sideMenu初始化\n        mdSideMenuSectionsProvider.initWithTheme($mdThemingProvider);\n    }])\n    .run([\"$rootScope\", \"$state\", \"$q\", \"svgUtils\", \"fxAction\", \"fxSideMenuFactory\", ($rootScope: ng.IRootScopeService, $state, $q: ng.IQService, svgUtils: fx.utils.svgStatic, fxAction) => {\n        let state: { $$isFinish?: boolean, toState?: ng.ui.IState, toParams?: Object, options?: Object } = {};\n        // 处理路回调\n        let handleResolve = (isComplete) => {\n            state.$$isFinish = true;\n            $state.go(state.toState.name, state.toParams, state.options);\n        };\n\n        $rootScope.$on(\"$stateRefresh\", () => {\n            state.$$isFinish = false;\n        });\n\n        // 注册路由更改事件\n        $rootScope.$on(\"$stateChangeStart\", (evt, toState, toParams, fromState, fromParams) => {\n            console.log(\"$stateChangeStart\", evt, toState, toParams, fromState, fromParams);\n        });\n        // 处理首次加载的时候,加载2个svg文件\n        $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams, options) {\n            if (!state.$$isFinish) {\n                _.extend(state, {\n                    toState: toState,\n                    toParams: toParams,\n                    fromState: fromState,\n                    fromParams: fromParams,\n                    options: options\n                });\n                event.preventDefault();\n                $q.all({\n                    mdi: svgUtils.loadSvgUrl(__dirname + 'svgs/mdi.svg'),\n                    weibo: svgUtils.loadSvgUrl(__dirname + 'svgs/weibo.svg'),\n                    configConfig: fxAction.doAction(\"configAction\", {}).then((result) => {\n                        $rootScope[\"config\"] = result.configAction.config;\n                    }),\n                    userinfoAction: fxAction.doAction(\"userinfoAction\", {}).then((result) => {\n                        result.userinfo && ($rootScope[\"user\"] = result.userinfo);\n                    })\n                }).then(() => { handleResolve(true) }, () => { handleResolve(false) });\n            }\n        });\n        // 获取服务器一些配置信息\n        // fxAction.doAction(\"configAction\", {}).then((result) => {\n        //     $rootScope[\"config\"] = result.configAction.config;\n        // });\n        // fxAction.doAction(\"userinfoAction\", {}).then((result) => {\n        //     result.userinfo && ($rootScope[\"user\"] = result.userinfo.username);\n        // });\n    }]);\n\n// 添加一个操作,显示ICON的KEY值表单\nmodule.value(\"iconInfoDetailForm\", {\n    key: \"iconInfoDetailForm\",\n    icon: \"search\",\n    type: ActionType.form,\n    title: \"ICON详情\",\n    form: {\n        dataSchema: {\n            type: \"object\",\n            properties: {\n                key: {\n                    type: \"string\",\n                    title: \"KEY\"\n                }\n            }\n        },\n        formSchema: [{\n            key: \"key\",\n            type: \"string\",\n            placeHolder: \"KEY\",\n            htmlClass: \"md-block\"\n        }]\n    }\n});\n\nexport default `${module.name}`;\n\n\n/** WEBPACK FOOTER **\n ** ./src/pages/home/index.ts\n **/","module.exports = __webpack_public_path__ + \"7af35d2f474641e3a73ea274191a9107.jpg\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pages/home/logo.jpg\n ** module id = 355\n ** module chunks = 2\n **/"],"sourceRoot":""}