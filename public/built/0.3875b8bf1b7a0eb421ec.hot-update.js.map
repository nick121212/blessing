{"version":3,"sources":["webpack:///0.3875b8bf1b7a0eb421ec.hot-update.js","webpack:///./src/directives/action/index.ts?1f08","webpack:///./src/directives/action/directives/wizard.directive.ts?b00c"],"names":["webpackHotUpdate","44","module","exports","__webpack_require__","sfLayout","args","layoutDiv","fieldFrag","querySelector","form","grid","Object","getOwnPropertyNames","forEach","property","idx","array","setAttribute","angular","ngMaterial","action_provider_1","utils_service_1","rest_service_1","login_value_1","modules_value_1","crawler_value_1","common_value_1","form_directive_1","list_directive_1","dialog_form_directive_1","search_directive_1","wizard_directive_1","dialog_wizard_directive_1","builder_directive_1","autocomplete_provider_1","jsoneditor_provider_1","_name","config","sfErrorMessageProvider","setDefaultMessage","sfBuilderProvider","schemaFormDecoratorsProvider","jsonEditorBuilder","autoCompleteBuilder","defineAddOn","stdBuilders","concat","builder","builders","sfField","condition","transclusion","run","$templateCache","put","defineProperty","value","name","154","Directive","restrict","template","scope","require","bindToController","formData","submitCallBack","key","controller","Controller","controllerAs","replace","transclude","link","$scope","$ele","$attr","$ctl","$watch","getActionModel","action_model_1","$timeout","fxAction","toolbarUtils","materialUtils","$mdDialog","_this","this","isShow","selectedIndex","initToolbar","$on","$forms","toolbars","actionModel","prototype","initForm","action","showForm","index","hasOwnProperty","doCheckCurrentForm","wizard","actions","_","isUndefined","formController","doFormCheck","doCheckForms","res","each","reset","btnBuilder","iconBuilder","conditionBuilder","btnClick","$event","toValue","isArray","length","isBusy","doAction","then","result","closeDialog","hide","isFunction","getModel","model","cloneDeep","getModels","actionModels","isString","type","ActionType","dataSchema","defaultSchema","push","$inject","directive"],"mappings":"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","file":"0.3875b8bf1b7a0eb421ec.hot-update.js","sourcesContent":["webpackHotUpdate(0,{\n\n/***/ 44:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar angular = __webpack_require__(7);\n\tvar ngMaterial = __webpack_require__(6);\n\t__webpack_require__(88);\n\t__webpack_require__(135);\n\tvar action_provider_1 = __webpack_require__(159);\n\tvar utils_service_1 = __webpack_require__(162);\n\tvar rest_service_1 = __webpack_require__(18);\n\tvar login_value_1 = __webpack_require__(157);\n\tvar modules_value_1 = __webpack_require__(158);\n\tvar crawler_value_1 = __webpack_require__(156);\n\tvar common_value_1 = __webpack_require__(155);\n\tvar form_directive_1 = __webpack_require__(151);\n\tvar list_directive_1 = __webpack_require__(152);\n\tvar dialog_form_directive_1 = __webpack_require__(149);\n\tvar search_directive_1 = __webpack_require__(153);\n\tvar wizard_directive_1 = __webpack_require__(154);\n\tvar dialog_wizard_directive_1 = __webpack_require__(150);\n\tvar builder_directive_1 = __webpack_require__(148);\n\tvar autocomplete_provider_1 = __webpack_require__(160);\n\tvar jsoneditor_provider_1 = __webpack_require__(161);\n\t__webpack_require__(69);\n\t__webpack_require__(244);\n\t__webpack_require__(163);\n\tvar _name = \"fxAction\";\n\tvar module = angular.module(_name + \"Module\", [ngMaterial, rest_service_1.default, \"schemaForm\", \"ng.jsoneditor\"]);\n\tutils_service_1.default(module);\n\taction_provider_1.default(module);\n\tform_directive_1.default(module);\n\tlist_directive_1.default(module);\n\tmodules_value_1.default(module);\n\tlogin_value_1.default(module);\n\tdialog_form_directive_1.default(module);\n\tsearch_directive_1.default(module);\n\twizard_directive_1.default(module);\n\tdialog_wizard_directive_1.default(module);\n\tbuilder_directive_1.default(module);\n\tcrawler_value_1.default(module);\n\tcommon_value_1.default(module);\n\tautocomplete_provider_1.default(module);\n\tjsoneditor_provider_1.default(module);\n\tfunction sfLayout(args) {\n\t    var layoutDiv = args.fieldFrag.querySelector('[sf-layout]');\n\t    if (layoutDiv && args.form.grid) {\n\t        Object.getOwnPropertyNames(args.form.grid).forEach(function (property, idx, array) {\n\t            layoutDiv.setAttribute(property, args.form.grid[property]);\n\t        });\n\t    }\n\t}\n\t;\n\tmodule\n\t    .config([\"sfErrorMessageProvider\", function (sfErrorMessageProvider) {\n\t        sfErrorMessageProvider.setDefaultMessage(\"302\", \"[{{title}}]是必填项\");\n\t        sfErrorMessageProvider.setDefaultMessage(\"103\", \"[{{title}}]超过了最大值{{schema.maximum}}\");\n\t        sfErrorMessageProvider.setDefaultMessage(\"101\", \"[{{title}}]小于最小值{{schema.minimum}}\");\n\t        sfErrorMessageProvider.setDefaultMessage(\"200\", \"[{{title}}]字符长度小于最小值({{schema.minLength}})\");\n\t        sfErrorMessageProvider.setDefaultMessage(\"201\", \"[{{title}}]字符长度大于最大值({{schema.maxLength}})\");\n\t        sfErrorMessageProvider.setDefaultMessage(\"400\", \"数组长度不正确，{{schema.minItems||0}}-{{schema.maxItems||'∞'}}\");\n\t        sfErrorMessageProvider.setDefaultMessage(\"500\", \"格式不正确\");\n\t    }])\n\t    .config([\"sfBuilderProvider\", \"schemaFormDecoratorsProvider\", \"jsonEditorBuilderProvider\", \"autoCompleteBuilderProvider\", function (sfBuilderProvider, schemaFormDecoratorsProvider, jsonEditorBuilder, autoCompleteBuilder) {\n\t        schemaFormDecoratorsProvider.defineAddOn('materialDecorator', 'jeditor', \"./decorators/jsoneditor.jade\", sfBuilderProvider.stdBuilders.concat(jsonEditorBuilder.builder));\n\t        schemaFormDecoratorsProvider.defineAddOn('materialDecorator', 'card', \"./decorators/card.jade\", [sfBuilderProvider.builders.sfField, sfBuilderProvider.builders.condition, sfBuilderProvider.builders.transclusion]);\n\t        schemaFormDecoratorsProvider.defineAddOn('materialDecorator', 'autocomplete-1', \"./decorators/autocomplete-1.jade\", [sfBuilderProvider.builders.sfField, sfLayout, sfBuilderProvider.builders.condition, autoCompleteBuilder.builder, sfBuilderProvider.builders.transclusion]);\n\t    }])\n\t    .run([\"$templateCache\", \"autoCompleteBuilder\", function ($templateCache) {\n\t        $templateCache.put('./decorators/jsoneditor.jade', __webpack_require__(102)());\n\t        $templateCache.put('./decorators/card.jade', __webpack_require__(101)());\n\t        $templateCache.put('./decorators/autocomplete-1.jade', __webpack_require__(100)());\n\t        $templateCache.put('./decorators/section-1.jade', __webpack_require__(103)());\n\t    }]);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = module.name;\n\n\n/***/ },\n\n/***/ 154:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar action_model_1 = __webpack_require__(5);\n\tvar Controller = (function () {\n\t    function Controller($scope, $timeout, fxAction, toolbarUtils, materialUtils, $mdDialog) {\n\t        var _this = this;\n\t        this.$scope = $scope;\n\t        this.$timeout = $timeout;\n\t        this.fxAction = fxAction;\n\t        this.toolbarUtils = toolbarUtils;\n\t        this.materialUtils = materialUtils;\n\t        this.$mdDialog = $mdDialog;\n\t        this.isShow = true;\n\t        this.selectedIndex = 0;\n\t        this.initToolbar();\n\t        this.$scope.$on(\"$destroy\", function () {\n\t            _this.formData = null;\n\t            _this.$forms = null;\n\t            _this.toolbars = null;\n\t            _this.actionModel = null;\n\t        });\n\t    }\n\t    Controller.prototype.initForm = function (action, $scope) {\n\t        if (!this.$forms) {\n\t            this.$forms = {};\n\t        }\n\t        this.$forms[action.key] = $scope[(action.key + \"Form\")];\n\t    };\n\t    Controller.prototype.showForm = function (action, index) {\n\t        return index === 0 || this.$forms.hasOwnProperty(action.key) || index == this.selectedIndex || index == this.selectedIndex + 1;\n\t    };\n\t    Controller.prototype.doCheckCurrentForm = function (index) {\n\t        var actionModel = this.actionModel.wizard.actions[_.isUndefined(index) ? this.selectedIndex : index];\n\t        if (this.$forms) {\n\t            var formController = this.$forms[(\"\" + actionModel.key)];\n\t            if (!this.fxAction.doFormCheck(formController)) {\n\t                return false;\n\t            }\n\t        }\n\t        return true;\n\t    };\n\t    Controller.prototype.doCheckForms = function () {\n\t        var _this = this;\n\t        var res = true;\n\t        _.each(this.actionModel.wizard.actions, function (action, index) {\n\t            res = _this.doCheckCurrentForm(index);\n\t            if (!res) {\n\t                _this.selectedIndex = index;\n\t                return false;\n\t            }\n\t        });\n\t        return res;\n\t    };\n\t    Controller.prototype.reset = function () {\n\t        var _this = this;\n\t        this.formData = {};\n\t        this.$forms = {};\n\t        this.selectedIndex = 0;\n\t        this.isShow = false;\n\t        this.$timeout(function () {\n\t            _this.isShow = true;\n\t        }, 0);\n\t    };\n\t    Controller.prototype.initToolbar = function () {\n\t        var _this = this;\n\t        this.toolbars = [\n\t            this.toolbarUtils.btnBuilder(\"上一步\", null, true, \"top\").iconBuilder(\"navigate_before\").conditionBuilder(\"wizardCtl.selectedIndex>0\", false).btnClick(function ($event) {\n\t                _this.selectedIndex && _this.selectedIndex--;\n\t            }).toValue(),\n\t            this.toolbarUtils.btnBuilder(\"下一步\", null, true, \"top\").iconBuilder(null, null, \"navigate_next\").conditionBuilder(\"wizardCtl.selectedIndex < wizardCtl.actionModel.wizard.actions.length-1\", false).btnClick(function ($event) {\n\t                if (_this.doCheckCurrentForm() && _.isArray(_this.actionModel.wizard.actions) && _this.actionModel.wizard.actions.length > _this.selectedIndex) {\n\t                    _this.selectedIndex++;\n\t                }\n\t            }).toValue(),\n\t            this.toolbarUtils.btnBuilder(\"完成\", \"md-primary\", true, \"top\").iconBuilder(\"done_all\").conditionBuilder(\"!wizardCtl.isBusy && wizardCtl.selectedIndex===wizardCtl.actionModel.wizard.actions.length-1\", false).btnClick(function ($event) {\n\t                if (_this.doCheckForms()) {\n\t                    _this.isBusy = true;\n\t                    _this.fxAction.doAction(_this.actionModel.key, _this.formData).then(function (result) {\n\t                        _this.actionModel.closeDialog === true && _this.$mdDialog.hide(result);\n\t                        if (_.isFunction(_this.submitCallBack)) {\n\t                            _this.submitCallBack();\n\t                        }\n\t                    }).finally(function () {\n\t                        _this.isBusy = false;\n\t                    });\n\t                }\n\t            }).toValue()\n\t        ];\n\t    };\n\t    Controller.prototype.getActionModel = function () {\n\t        var _this = this;\n\t        var actionModel;\n\t        this.fxAction.getModel(this.key).then(function (model) {\n\t            actionModel = _.cloneDeep(model);\n\t            return _this.fxAction.getModels(model.wizard.actions);\n\t        }).then(function (actionModels) {\n\t            var actions = [];\n\t            _.each(actionModel.wizard.actions, function (action) {\n\t                if (_.isString(action)) {\n\t                    action = actionModels[action];\n\t                }\n\t                if (action && (action.type === action_model_1.ActionType.form || action.type === action_model_1.ActionType.wizard)) {\n\t                    if (!action.form.dataSchema && action.type === action_model_1.ActionType.form) {\n\t                        action.form.dataSchema = actionModel.wizard.defaultSchema.dataSchema;\n\t                    }\n\t                    actions.push(action);\n\t                }\n\t            });\n\t            actionModel.wizard.actions = actions;\n\t            _this.actionModel = actionModel;\n\t        });\n\t    };\n\t    Controller.$inject = [\"$scope\", \"$timeout\", \"fxAction\", \"toolbarUtils\", \"materialUtils\", \"$mdDialog\"];\n\t    return Controller;\n\t}());\n\tfunction Directive() {\n\t    return {\n\t        restrict: 'EA',\n\t        template: __webpack_require__(112)(),\n\t        scope: true,\n\t        require: \"^fxWizardAction\",\n\t        bindToController: {\n\t            formData: \"=ngModel\",\n\t            submitCallBack: \"=?ngSubmit\",\n\t            key: \"@\"\n\t        },\n\t        controller: Controller,\n\t        controllerAs: 'wizardCtl',\n\t        replace: true,\n\t        transclude: true,\n\t        link: function ($scope, $ele, $attr, $ctl) {\n\t            $scope.$watch(function () {\n\t                return $ctl.key;\n\t            }, function () {\n\t                $ctl.getActionModel();\n\t            });\n\t        }\n\t    };\n\t}\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = function (module) {\n\t    module.directive(\"fxWizardAction\", Directive);\n\t};\n\n\n/***/ }\n\n})\n\n\n/** WEBPACK FOOTER **\n ** 0.3875b8bf1b7a0eb421ec.hot-update.js\n **/","/**\n * Created by NICK on 16/8/9.\n */\n\nimport * as angular from 'angular';\nimport * as ngMaterial from 'angular-material';\nimport 'expose?JSONEditor!jsoneditor';\nimport 'ng-jsoneditor';\n\nimport actProviderRegFunc from './services/action.provider';\nimport actUtilsFunc from './services/utils.service';\nimport restSvrMod from '../../services/rest.service';\nimport loginSchFunc from './schemas/login.value';\nimport moduleSchFunc from './schemas/modules.value';\nimport crawlerSchFunc from './schemas/crawler.value';\nimport commonSchFunc from './schemas/common.value';\nimport formActionFunc from './directives/form.directive';\nimport listActionFunc from './directives/list.directive';\nimport dialogFormFunc from './directives/dialog-form.directive';\nimport searchActionFunc from './directives/search.directive';\nimport wizardActionFunc from './directives/wizard.directive';\nimport wizardDialogActionFunc from './directives/dialog-wizard.directive';\nimport builderActionFunc from './directives/builder.directive';\n\nimport autoCompleteFunc from './services/autocomplete.provider';\nimport jsonEditorFunc from './services/jsoneditor.provider';\n\nimport 'angular-schema-form';\nimport 'angular-schema-form-ng-material';\nimport './services/validator.custom.value';\n\nconst _name = \"fxAction\";\nconst module = angular.module(`${_name}Module`, [ngMaterial, restSvrMod, \"schemaForm\", \"ng.jsoneditor\"]);\n\nactUtilsFunc(module);\nactProviderRegFunc(module);\nformActionFunc(module);\nlistActionFunc(module);\nmoduleSchFunc(module);\nloginSchFunc(module);\ndialogFormFunc(module);\nsearchActionFunc(module);\nwizardActionFunc(module);\nwizardDialogActionFunc(module);\nbuilderActionFunc(module);\ncrawlerSchFunc(module);\ncommonSchFunc(module);\nautoCompleteFunc(module);\njsonEditorFunc(module);\n\n\nfunction sfLayout(args) {\n    var layoutDiv = args.fieldFrag.querySelector('[sf-layout]');\n\n    if (layoutDiv && args.form.grid) {\n        Object.getOwnPropertyNames(args.form.grid).forEach(function (property, idx, array) {\n            layoutDiv.setAttribute(property, args.form.grid[property]);\n        });\n    }\n};\n// 处理默认的错误信息\nmodule\n    .config([\"sfErrorMessageProvider\", (sfErrorMessageProvider)=> {\n        // sfErrorMessageProvider.setDefaultMessage(\"10000\", \"邮箱格式不正确\");\n        // sfErrorMessageProvider.setDefaultMessage(\"10001\", \"两次密码不一致\");\n        // sfErrorMessageProvider.setDefaultMessage(\"10002\", \"用户名中存在非法字符\");\n        // sfErrorMessageProvider.setDefaultMessage(\"10003\", \"手机格式不正确\");\n        // sfErrorMessageProvider.setDefaultMessage(\"10004\", \"JSON格式不正确\");\n        // sfErrorMessageProvider.setDefaultMessage(\"10005\", \"地址格式不正确\");\n        sfErrorMessageProvider.setDefaultMessage(\"302\", \"[{{title}}]是必填项\");\n        sfErrorMessageProvider.setDefaultMessage(\"103\", \"[{{title}}]超过了最大值{{schema.maximum}}\");\n        sfErrorMessageProvider.setDefaultMessage(\"101\", \"[{{title}}]小于最小值{{schema.minimum}}\");\n        sfErrorMessageProvider.setDefaultMessage(\"200\", \"[{{title}}]字符长度小于最小值({{schema.minLength}})\");\n        sfErrorMessageProvider.setDefaultMessage(\"201\", \"[{{title}}]字符长度大于最大值({{schema.maxLength}})\");\n        sfErrorMessageProvider.setDefaultMessage(\"400\", \"数组长度不正确，{{schema.minItems||0}}-{{schema.maxItems||'∞'}}\");\n        sfErrorMessageProvider.setDefaultMessage(\"500\", \"格式不正确\");\n    }])\n    // 添加自定义的表单组件\n    .config([\"sfBuilderProvider\", \"schemaFormDecoratorsProvider\", \"jsonEditorBuilderProvider\", \"autoCompleteBuilderProvider\", (sfBuilderProvider, schemaFormDecoratorsProvider, jsonEditorBuilder, autoCompleteBuilder)=> {\n        // jsoneditor--schema-form组件化\n        schemaFormDecoratorsProvider.defineAddOn(\n            'materialDecorator',\n            'jeditor',\n            \"./decorators/jsoneditor.jade\",\n            sfBuilderProvider.stdBuilders.concat(jsonEditorBuilder.builder)\n        );\n        // card--schema-form组件化\n        schemaFormDecoratorsProvider.defineAddOn(\n            'materialDecorator',\n            'card',\n            \"./decorators/card.jade\",\n            [sfBuilderProvider.builders.sfField, sfBuilderProvider.builders.condition, sfBuilderProvider.builders.transclusion]\n        );\n        // autocomplete--schema-form组件化\n        schemaFormDecoratorsProvider.defineAddOn(\n            'materialDecorator',\n            'autocomplete-1',\n            \"./decorators/autocomplete-1.jade\",\n            [sfBuilderProvider.builders.sfField, sfLayout, sfBuilderProvider.builders.condition, autoCompleteBuilder.builder, sfBuilderProvider.builders.transclusion]\n        );\n        // // section--schema-section组件\n        // schemaFormDecoratorsProvider.defineAddOn(\n        //     'materialDecorator',\n        //     'section-1',\n        //     \"./decorators/section-1.jade\",\n        //     [sfBuilderProvider.builders.sfField, sfBuilderProvider.builders.ngModel, sfBuilderProvider.builders.condition, sfBuilderProvider.builders.simpleTransclusion, sfBuilderProvider.builders.array]\n        // );\n    }])\n    // 打包工具的原因,只能把模板字符串写入cache中\n    .run([\"$templateCache\", \"autoCompleteBuilder\", ($templateCache: ng.ITemplateCacheService)=> {\n        $templateCache.put('./decorators/jsoneditor.jade', require(\"./decorators/jsoneditor.jade\")());\n        $templateCache.put('./decorators/card.jade', require(\"./decorators/card.jade\")());\n        $templateCache.put('./decorators/autocomplete-1.jade', require(\"./decorators/autocomplete-1.jade\")());\n        $templateCache.put('./decorators/section-1.jade', require(\"./decorators/section-1.jade\")());\n    }]);\n\n\nexport default module.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/action/index.ts\n **/","/**\n * Created by NICK on 16/8/9.\n */\n\nimport {IActionModel, ISchemaForm, ActionType} from '../models/action.model';\n\ninterface IDirectiveScope extends ng.IScope {\n\n}\n\ninterface IDirectiveAttr extends ng.IAttributes {\n\n}\n\nclass Controller {\n    static $inject = [\"$scope\", \"$timeout\", \"fxAction\", \"toolbarUtils\", \"materialUtils\", \"$mdDialog\"];\n\n    isShow: boolean = true;\n    actionModel: IActionModel;\n    key: string;\n    formData: Object;\n    selectedIndex: number = 0;\n    toolbars: Array<any>;\n    $forms: {[id: string]: ng.IFormController};\n    isBusy: boolean;\n    submitCallBack: Function;\n\n    constructor(private $scope, private $timeout, private fxAction, private toolbarUtils, private materialUtils: fx.utils.materialStatic, private $mdDialog) {\n        this.initToolbar();\n\n        this.$scope.$on(\"$destroy\", ()=> {\n            this.formData = null;\n            this.$forms = null;\n            this.toolbars = null;\n            this.actionModel = null;\n        });\n    }\n\n    /**\n     * 初始化form，因为有多个form，所以需要用一个对象来保存所有的表单对象，用于后期验证表单的$valid\n     * @param action\n     * @param $scope\n     */\n    initForm(action: IActionModel, $scope: ng.IScope) {\n        if (!this.$forms) {\n            this.$forms = {};\n        }\n        this.$forms[action.key] = $scope[`${action.key}Form`];\n    }\n\n    /**\n     * 判断是否需要显示form\n     * @param action\n     * @param index\n     * @returns {boolean}\n     */\n    showForm(action: IActionModel, index: number) {\n        return index === 0 || this.$forms.hasOwnProperty(action.key) || index == this.selectedIndex || index == this.selectedIndex + 1;\n    }\n\n    /**\n     * 验证当前表单是否正确\n     * @returns {boolean}\n     */\n    doCheckCurrentForm(index?: number) {\n        let actionModel = this.actionModel.wizard.actions[_.isUndefined(index) ? this.selectedIndex : index];\n\n        // 验证表单是否正确\n        if (this.$forms) {\n            let formController = this.$forms[`${(actionModel as IActionModel).key}`];\n\n            if (!this.fxAction.doFormCheck(formController)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * 检查所有的表单是否正确\n     * @returns {boolean}\n     */\n    doCheckForms() {\n        let res = true;\n\n        _.each(this.actionModel.wizard.actions, (action, index)=> {\n            res = this.doCheckCurrentForm(index);\n\n            if (!res) {\n                this.selectedIndex = index;\n                return false;\n            }\n        });\n\n        return res;\n    }\n\n    /**\n     * 重置表单数据\n     */\n    reset() {\n        this.formData = {};\n        this.$forms = {};\n        this.selectedIndex = 0;\n        this.isShow = false;\n        this.$timeout(()=> {\n            this.isShow = true;\n        }, 0);\n    }\n\n    /**\n     * 添加wizard的按钮组,包括上一步,下一步和完成按钮\n     * 每个按钮都需要验证表单的正确性\n     * 每个按钮如果有接口操作,都需要调用接口,接口返回正常才可用\n     */\n    initToolbar() {\n        this.toolbars = [\n            this.toolbarUtils.btnBuilder(\"上一步\", null, true, \"top\").iconBuilder(\"navigate_before\").conditionBuilder(\"wizardCtl.selectedIndex>0\", false).btnClick(($event)=> {\n                this.selectedIndex && this.selectedIndex--;\n            }).toValue(),\n            this.toolbarUtils.btnBuilder(\"下一步\", null, true, \"top\").iconBuilder(null, null, \"navigate_next\").conditionBuilder(\"wizardCtl.selectedIndex < wizardCtl.actionModel.wizard.actions.length-1\", false).btnClick(($event)=> {\n                if (this.doCheckCurrentForm() && _.isArray(this.actionModel.wizard.actions) && this.actionModel.wizard.actions.length > this.selectedIndex) {\n                    this.selectedIndex++;\n                }\n            }).toValue(),\n            this.toolbarUtils.btnBuilder(\"完成\", \"md-primary\", true, \"top\").iconBuilder(\"done_all\").conditionBuilder(\"!wizardCtl.isBusy && wizardCtl.selectedIndex===wizardCtl.actionModel.wizard.actions.length-1\", false).btnClick(($event)=> {\n                if (this.doCheckForms()) {\n                    this.isBusy = true;\n                    this.fxAction.doAction(this.actionModel.key, this.formData).then((result)=> {\n                        this.actionModel.closeDialog === true && this.$mdDialog.hide(result);\n\n                        if (_.isFunction(this.submitCallBack)) {\n                            this.submitCallBack();\n                        }\n                        // this.materialUtils.showMsg(this.actionModel.successMsg || \"操作成功！\");\n                        // this.reset();\n                    }).finally(()=> {\n                        this.isBusy = false;\n                    });\n                }\n            }).toValue()\n        ];\n    }\n\n    /**\n     * 通过key来获取数据\n     */\n    getActionModel() {\n        let actionModel;\n\n        this.fxAction.getModel(this.key).then((model: IActionModel)=> {\n            actionModel = _.cloneDeep(model);\n\n            return this.fxAction.getModels(model.wizard.actions);\n        }).then((actionModels: Array<IActionModel>)=> {\n            let actions = [];\n\n            _.each(actionModel.wizard.actions, (action)=> {\n                if (_.isString(action)) {\n                    action = actionModels[action];\n                }\n                // 如果是form/wizard的话，判断dataSchema是否存在，不存在则使用wizard的defaultSchema\n                if (action && (action.type === ActionType.form || action.type === ActionType.wizard)) {\n                    if (!action.form.dataSchema && action.type === ActionType.form) {\n                        action.form.dataSchema = actionModel.wizard.defaultSchema.dataSchema;\n                    }\n                    actions.push(action);\n                }\n            });\n            actionModel.wizard.actions = actions;\n            this.actionModel = actionModel;\n        });\n    }\n}\n\n/**\n * 操作指令,某个表单操作\n * @returns {{restrict: string, template: any, scope: {}, replace: boolean, link: (($scope:IDirectiveScope))}}\n * @constructor\n */\nfunction Directive(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        template: require(\"../tpls/wizard.jade\")(),\n        scope: true,\n        require: \"^fxWizardAction\",\n        bindToController: {\n            formData: \"=ngModel\",\n            submitCallBack: \"=?ngSubmit\",\n            key: \"@\"\n        },\n        controller: Controller,\n        controllerAs: 'wizardCtl',\n        replace: true,\n        transclude: true,\n        link: ($scope: IDirectiveScope, $ele: ng.IAugmentedJQuery, $attr: IDirectiveAttr, $ctl: Controller) => {\n            $scope.$watch(()=> {\n                return $ctl.key;\n            }, ()=> {\n                $ctl.getActionModel();\n            });\n        }\n    };\n}\n\nexport default (module: ng.IModule)=> {\n    module.directive(\"fxWizardAction\", Directive);\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/action/directives/wizard.directive.ts\n **/"],"sourceRoot":""}