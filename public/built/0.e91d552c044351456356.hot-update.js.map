{"version":3,"sources":["webpack:///0.e91d552c044351456356.hot-update.js","webpack:///./src/directives/action/index.ts?1f08","webpack:///./src/directives/action/schemas/crawler.value.ts?2a46"],"names":["webpackHotUpdate","44","module","exports","__webpack_require__","sfLayout","args","layoutDiv","fieldFrag","querySelector","form","grid","Object","getOwnPropertyNames","forEach","property","idx","array","setAttribute","angular","ngMaterial","action_provider_1","utils_service_1","rest_service_1","login_value_1","modules_value_1","crawler_value_1","common_value_1","form_directive_1","list_directive_1","dialog_form_directive_1","search_directive_1","wizard_directive_1","dialog_wizard_directive_1","builder_directive_1","autocomplete_provider_1","jsoneditor_provider_1","_name","config","sfErrorMessageProvider","setDefaultMessage","sfBuilderProvider","schemaFormDecoratorsProvider","jsonEditorBuilder","autoCompleteBuilder","defineAddOn","stdBuilders","concat","builder","builders","sfField","condition","transclusion","run","$templateCache","put","defineProperty","value","name","156","action_model_1","interface_model_1","dataSchema","type","required","properties","key","title","host","domainWhiteList","default","items","format","whitePathList","enable","regexp","scope","description","interval","minimum","downloader","initDomain","proxySettings","useProxy","timeout","charset","ua","ipInfo","port","pages","areas","selector","dealStrategy","rule","fieldKey","strict","strictFields","fields","maxLength","List","toolbarUtils","actionUtils","actionModel","ActionType","list","icon","columns","columnBuilder","toValue","searchActionKey","Search","showRefreshBtn","showSearchBtn","showSearchPanel","toolbars","itemToolbars","itemActions","Edit","Delete","Copy","actions","Add","interfaces","method","MethodType","GET","address","path","jpp","set","/total","/rows","copy","move","del","isRestful","$inject","AddFirst","formSchema","htmlClass","titleMap","AddSecond","startEmpty","showHints","fieldHtmlClass","AddThird","AddForth","AddFifth","flex","layout","wizard","refreshList","defaultSchema","closeDialog","POST","PUT","idFieldPath","confirm","confirmTitle","confirmContent","DELETE","copyValueTo","Ack","action","options","url","startCrawler","startDeal","startDownload","startChip","group","acOptions","textField","dataField","noCache","search","actionKey","services","_","each","ser","service"],"mappings":"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","file":"0.e91d552c044351456356.hot-update.js","sourcesContent":["webpackHotUpdate(0,{\n\n/***/ 44:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar angular = __webpack_require__(7);\n\tvar ngMaterial = __webpack_require__(6);\n\t__webpack_require__(88);\n\t__webpack_require__(135);\n\tvar action_provider_1 = __webpack_require__(159);\n\tvar utils_service_1 = __webpack_require__(162);\n\tvar rest_service_1 = __webpack_require__(18);\n\tvar login_value_1 = __webpack_require__(157);\n\tvar modules_value_1 = __webpack_require__(158);\n\tvar crawler_value_1 = __webpack_require__(156);\n\tvar common_value_1 = __webpack_require__(155);\n\tvar form_directive_1 = __webpack_require__(151);\n\tvar list_directive_1 = __webpack_require__(152);\n\tvar dialog_form_directive_1 = __webpack_require__(149);\n\tvar search_directive_1 = __webpack_require__(153);\n\tvar wizard_directive_1 = __webpack_require__(154);\n\tvar dialog_wizard_directive_1 = __webpack_require__(150);\n\tvar builder_directive_1 = __webpack_require__(148);\n\tvar autocomplete_provider_1 = __webpack_require__(160);\n\tvar jsoneditor_provider_1 = __webpack_require__(161);\n\t__webpack_require__(69);\n\t__webpack_require__(244);\n\t__webpack_require__(163);\n\tvar _name = \"fxAction\";\n\tvar module = angular.module(_name + \"Module\", [ngMaterial, rest_service_1.default, \"schemaForm\", \"ng.jsoneditor\"]);\n\tutils_service_1.default(module);\n\taction_provider_1.default(module);\n\tform_directive_1.default(module);\n\tlist_directive_1.default(module);\n\tmodules_value_1.default(module);\n\tlogin_value_1.default(module);\n\tdialog_form_directive_1.default(module);\n\tsearch_directive_1.default(module);\n\twizard_directive_1.default(module);\n\tdialog_wizard_directive_1.default(module);\n\tbuilder_directive_1.default(module);\n\tcrawler_value_1.default(module);\n\tcommon_value_1.default(module);\n\tautocomplete_provider_1.default(module);\n\tjsoneditor_provider_1.default(module);\n\tfunction sfLayout(args) {\n\t    var layoutDiv = args.fieldFrag.querySelector('[sf-layout]');\n\t    if (layoutDiv && args.form.grid) {\n\t        Object.getOwnPropertyNames(args.form.grid).forEach(function (property, idx, array) {\n\t            layoutDiv.setAttribute(property, args.form.grid[property]);\n\t        });\n\t    }\n\t}\n\t;\n\tmodule\n\t    .config([\"sfErrorMessageProvider\", function (sfErrorMessageProvider) {\n\t        sfErrorMessageProvider.setDefaultMessage(\"302\", \"[{{title}}]是必填项\");\n\t        sfErrorMessageProvider.setDefaultMessage(\"103\", \"[{{title}}]超过了最大值{{schema.maximum}}\");\n\t        sfErrorMessageProvider.setDefaultMessage(\"101\", \"[{{title}}]小于最小值{{schema.minimum}}\");\n\t        sfErrorMessageProvider.setDefaultMessage(\"200\", \"[{{title}}]字符长度小于最小值({{schema.minLength}})\");\n\t        sfErrorMessageProvider.setDefaultMessage(\"201\", \"[{{title}}]字符长度大于最大值({{schema.maxLength}})\");\n\t        sfErrorMessageProvider.setDefaultMessage(\"400\", \"数组长度不正确，{{schema.minItems||0}}-{{schema.maxItems||'∞'}}\");\n\t        sfErrorMessageProvider.setDefaultMessage(\"500\", \"格式不正确\");\n\t    }])\n\t    .config([\"sfBuilderProvider\", \"schemaFormDecoratorsProvider\", \"jsonEditorBuilderProvider\", \"autoCompleteBuilderProvider\", function (sfBuilderProvider, schemaFormDecoratorsProvider, jsonEditorBuilder, autoCompleteBuilder) {\n\t        schemaFormDecoratorsProvider.defineAddOn('materialDecorator', 'jeditor', \"./decorators/jsoneditor.jade\", sfBuilderProvider.stdBuilders.concat(jsonEditorBuilder.builder));\n\t        schemaFormDecoratorsProvider.defineAddOn('materialDecorator', 'card', \"./decorators/card.jade\", [sfBuilderProvider.builders.sfField, sfBuilderProvider.builders.condition, sfBuilderProvider.builders.transclusion]);\n\t        schemaFormDecoratorsProvider.defineAddOn('materialDecorator', 'autocomplete-1', \"./decorators/autocomplete-1.jade\", [sfBuilderProvider.builders.sfField, sfLayout, sfBuilderProvider.builders.condition, autoCompleteBuilder.builder, sfBuilderProvider.builders.transclusion]);\n\t    }])\n\t    .run([\"$templateCache\", \"autoCompleteBuilder\", function ($templateCache) {\n\t        $templateCache.put('./decorators/jsoneditor.jade', __webpack_require__(102)());\n\t        $templateCache.put('./decorators/card.jade', __webpack_require__(101)());\n\t        $templateCache.put('./decorators/autocomplete-1.jade', __webpack_require__(100)());\n\t        $templateCache.put('./decorators/section-1.jade', __webpack_require__(103)());\n\t    }]);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = module.name;\n\n\n/***/ },\n\n/***/ 156:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar action_model_1 = __webpack_require__(5);\n\tvar interface_model_1 = __webpack_require__(16);\n\tvar dataSchema = {\n\t    type: \"object\",\n\t    required: [\"key\", \"host\", \"interval\"],\n\t    properties: {\n\t        key: {\n\t            type: \"string\",\n\t            title: \"KEY\"\n\t        },\n\t        host: {\n\t            type: \"string\",\n\t            title: \"主HOST\"\n\t        },\n\t        domainWhiteList: {\n\t            type: \"array\",\n\t            title: \"域名白名单\",\n\t            default: [],\n\t            items: {\n\t                type: \"string\",\n\t                format: \"url-ip\",\n\t                title: \"域名或者IP\"\n\t            }\n\t        },\n\t        whitePathList: {\n\t            type: \"array\",\n\t            title: \"路径白名单\",\n\t            default: [],\n\t            items: {\n\t                type: \"object\",\n\t                title: \"路径配置\",\n\t                required: [\"regexp\", \"scope\"],\n\t                properties: {\n\t                    enable: {\n\t                        type: \"boolean\",\n\t                        title: \"是否启用\"\n\t                    },\n\t                    regexp: {\n\t                        type: \"string\",\n\t                        title: \"正则规则\"\n\t                    },\n\t                    scope: {\n\t                        type: \"string\",\n\t                        title: \"修饰符\"\n\t                    },\n\t                    description: {\n\t                        type: \"string\",\n\t                        title: \"介绍\"\n\t                    },\n\t                }\n\t            }\n\t        },\n\t        interval: {\n\t            type: \"number\",\n\t            default: 1000,\n\t            minimum: 1000,\n\t            title: \"下载间隔，单位ms\"\n\t        },\n\t        downloader: {\n\t            type: \"string\",\n\t            default: \"superagent\",\n\t            title: \"下载策略\"\n\t        },\n\t        initDomain: {\n\t            type: \"string\",\n\t            title: \"初始化域名\"\n\t        },\n\t        proxySettings: {\n\t            type: \"object\",\n\t            title: \"基础设置\",\n\t            properties: {\n\t                useProxy: {\n\t                    type: \"boolean\",\n\t                    title: \"是否启用代理\"\n\t                },\n\t                timeout: {\n\t                    type: \"number\",\n\t                    title: \"超时时间\"\n\t                },\n\t                charset: {\n\t                    type: \"string\",\n\t                    title: \"字符编码\"\n\t                },\n\t                ua: {\n\t                    type: \"string\",\n\t                    title: \"USERAGENT\"\n\t                },\n\t                ipInfo: {\n\t                    type: \"object\",\n\t                    title: \"代理ip设置\",\n\t                    properties: {\n\t                        host: {\n\t                            type: \"string\",\n\t                            format: 'url-ip',\n\t                            title: \"代理ip或域名\"\n\t                        },\n\t                        port: {\n\t                            type: \"number\",\n\t                            title: \"代理端口\"\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        },\n\t        pages: {\n\t            type: \"array\",\n\t            title: \"分析页面配置\",\n\t            items: {\n\t                type: \"object\",\n\t                required: [\"key\", \"fieldKey\"],\n\t                title: \"分析页面配置\",\n\t                properties: {\n\t                    key: {\n\t                        type: \"string\",\n\t                        title: \"页面的KEY\"\n\t                    },\n\t                    areas: {\n\t                        type: \"array\",\n\t                        title: \"页面区域\",\n\t                        items: {\n\t                            type: \"object\",\n\t                            required: [\"selector\", \"dealStrategy\", \"key\"],\n\t                            properties: {\n\t                                key: {\n\t                                    type: \"string\",\n\t                                    title: \"区域KEY\"\n\t                                },\n\t                                selector: {\n\t                                    type: \"string\",\n\t                                    title: \"选择器\"\n\t                                },\n\t                                dealStrategy: {\n\t                                    type: \"string\",\n\t                                    default: \"jsdom\",\n\t                                    title: \"分析策略\"\n\t                                }\n\t                            }\n\t                        }\n\t                    },\n\t                    rule: {\n\t                        type: \"array\",\n\t                        title: \"匹配规则\",\n\t                        default: [],\n\t                        items: {\n\t                            type: \"object\",\n\t                            title: \"路径配置\",\n\t                            required: [\"regexp\", \"scope\"],\n\t                            properties: {\n\t                                regexp: {\n\t                                    type: \"string\",\n\t                                    title: \"正则规则\"\n\t                                },\n\t                                scope: {\n\t                                    type: \"string\",\n\t                                    title: \"修饰符\"\n\t                                }\n\t                            }\n\t                        }\n\t                    },\n\t                    fieldKey: {\n\t                        type: \"string\",\n\t                        title: \"主键字段\"\n\t                    },\n\t                    strict: {\n\t                        type: \"boolean\",\n\t                        title: \"是否启用严格模式\"\n\t                    },\n\t                    strictFields: {\n\t                        type: \"array\",\n\t                        title: \"严格模式下，验证字段\",\n\t                        default: [],\n\t                        items: {\n\t                            type: \"string\",\n\t                            title: \"验证字段\"\n\t                        }\n\t                    },\n\t                    fields: {\n\t                        type: \"object\",\n\t                        title: \"分析字段配置\"\n\t                    }\n\t                }\n\t            }\n\t        },\n\t        description: {\n\t            type: \"string\",\n\t            title: \"描述\",\n\t            maxLength: 500\n\t        }\n\t    }\n\t};\n\tvar List = (function () {\n\t    function List(toolbarUtils, actionUtils) {\n\t        var actionModel = {\n\t            key: List.key,\n\t            type: action_model_1.ActionType.list,\n\t            title: \"爬虫配置文件管理\",\n\t            icon: \"content-save-settings\",\n\t            list: {\n\t                columns: [\n\t                    actionUtils.columnBuilder(\"<span>{{::item.key}}</span>\", \"KEY\").toValue(),\n\t                    actionUtils.columnBuilder(\"<span>{{ ::item.host }}</span>\", \"域名\").toValue(),\n\t                    actionUtils.columnBuilder(\"<span>{{ ::item.interval }}</span>\", \"间隔时间\").toValue(),\n\t                    actionUtils.columnBuilder(\"<span>{{ ::item.downloader }}</span>\", \"下载策略\").toValue(),\n\t                    actionUtils.columnBuilder(\"<span>{{ ::item.description }}</span>\", \"详情\").toValue()\n\t                ],\n\t                searchActionKey: Search.key,\n\t                showRefreshBtn: true,\n\t                showSearchBtn: true,\n\t                showSearchPanel: false,\n\t                toolbars: [],\n\t                itemToolbars: []\n\t            },\n\t            itemActions: [{ key: Edit.key }, { key: Delete.key }, { key: Copy.key }],\n\t            actions: [Add.key],\n\t            interfaces: [{\n\t                    key: \"crawlerSettingList\",\n\t                    method: interface_model_1.MethodType.GET,\n\t                    address: \"\",\n\t                    port: null,\n\t                    path: \"crawler_settings\",\n\t                    jpp: {\n\t                        set: {\n\t                            \"/total\": \"/count\",\n\t                            \"/rows\": \"/rows\"\n\t                        },\n\t                        copy: {},\n\t                        move: {},\n\t                        del: {}\n\t                    },\n\t                    isRestful: true\n\t                }]\n\t        };\n\t        return actionModel;\n\t    }\n\t    List.$inject = [\"toolbarUtils\", \"actionUtils\"];\n\t    List.key = \"crawlerSettingListAction\";\n\t    return List;\n\t}());\n\tvar AddFirst = (function () {\n\t    function AddFirst(toolbarUtils, actionUtils) {\n\t        var actionModel = {\n\t            key: AddFirst.key,\n\t            type: action_model_1.ActionType.form,\n\t            title: \"基础设置\",\n\t            icon: \"add\",\n\t            form: {\n\t                formSchema: [{\n\t                        key: \"key\",\n\t                        type: \"text\",\n\t                        htmlClass: \"md-block\"\n\t                    }, {\n\t                        key: \"host\",\n\t                        type: \"text\",\n\t                        htmlClass: \"md-block\"\n\t                    }, {\n\t                        key: \"initDomain\",\n\t                        type: \"text\",\n\t                        htmlClass: \"md-block\"\n\t                    }, {\n\t                        key: \"interval\",\n\t                        type: \"number\",\n\t                        htmlClass: \"md-block\"\n\t                    }, {\n\t                        key: \"downloader\",\n\t                        type: \"select\",\n\t                        titleMap: [{\n\t                                \"name\": \"SUPERAGENT\",\n\t                                \"value\": \"superagent\"\n\t                            }, {\n\t                                \"name\": \"PHANTOM\",\n\t                                \"value\": \"phantom\"\n\t                            }],\n\t                        htmlClass: \"md-block\"\n\t                    }, {\n\t                        key: \"description\",\n\t                        type: \"textarea\",\n\t                        htmlClass: \"md-block\"\n\t                    }]\n\t            }\n\t        };\n\t        return actionModel;\n\t    }\n\t    AddFirst.$inject = [\"toolbarUtils\", \"actionUtils\"];\n\t    AddFirst.key = \"crawlerSettingAddFirstAction\";\n\t    return AddFirst;\n\t}());\n\tvar AddSecond = (function () {\n\t    function AddSecond(toolbarUtils, actionUtils) {\n\t        var actionModel = {\n\t            key: AddSecond.key,\n\t            type: action_model_1.ActionType.form,\n\t            title: \"白名单设置\",\n\t            icon: \"add\",\n\t            form: {\n\t                formSchema: [{\n\t                        key: \"domainWhiteList\",\n\t                        type: \"chips\",\n\t                        startEmpty: true,\n\t                        description: \"域名白名单，配置可以爬取的域名列表\",\n\t                        showHints: true,\n\t                        htmlClass: \"md-block\"\n\t                    }, {\n\t                        key: \"whitePathList\",\n\t                        type: \"array\",\n\t                        fieldHtmlClass: \"layout-row flex\",\n\t                        startEmpty: true,\n\t                        description: \"路径白名单，配置可以爬取的路径列表\",\n\t                        showHints: true,\n\t                        items: [{\n\t                                type: \"section\",\n\t                                htmlClass: \"layout-row flex\",\n\t                                items: [{\n\t                                        key: \"whitePathList[].enable\",\n\t                                        type: \"select\",\n\t                                        titleMap: [{\n\t                                                name: \"启用\",\n\t                                                value: true\n\t                                            }, {\n\t                                                name: \"不启用\",\n\t                                                value: false\n\t                                            }]\n\t                                    }, {\n\t                                        key: \"whitePathList[].regexp\",\n\t                                        htmlClass: \"md-block flex\",\n\t                                        type: \"text\"\n\t                                    }, {\n\t                                        key: \"whitePathList[].scope\",\n\t                                        type: \"text\"\n\t                                    }, {\n\t                                        key: \"whitePathList[].description\",\n\t                                        type: \"text\"\n\t                                    }]\n\t                            }]\n\t                    }]\n\t            }\n\t        };\n\t        return actionModel;\n\t    }\n\t    AddSecond.$inject = [\"toolbarUtils\", \"actionUtils\"];\n\t    AddSecond.key = \"crawlerSettingAddSecondAction\";\n\t    return AddSecond;\n\t}());\n\tvar AddThird = (function () {\n\t    function AddThird(toolbarUtils, actionUtils) {\n\t        var actionModel = {\n\t            key: AddThird.key,\n\t            type: action_model_1.ActionType.form,\n\t            title: \"其他设置\",\n\t            icon: \"add\",\n\t            form: {\n\t                formSchema: [{\n\t                        key: \"proxySettings\",\n\t                        type: \"card\",\n\t                        items: [{\n\t                                key: \"proxySettings.useProxy\",\n\t                                type: \"checkbox\"\n\t                            }, {\n\t                                key: \"proxySettings.timeout\",\n\t                                type: \"number\",\n\t                                htmlClass: \"md-block\"\n\t                            }, {\n\t                                key: \"proxySettings.charset\",\n\t                                type: \"text\",\n\t                                htmlClass: \"md-block\"\n\t                            }, {\n\t                                key: \"proxySettings.ua\",\n\t                                type: \"textarea\",\n\t                                maxLength: 300,\n\t                                htmlClass: \"md-block\"\n\t                            }, {\n\t                                key: \"proxySettings.ipInfo\",\n\t                                type: \"card\",\n\t                                items: [{\n\t                                        key: \"proxySettings.ipInfo.host\",\n\t                                        type: \"text\",\n\t                                        htmlClass: \"md-block\"\n\t                                    }, {\n\t                                        key: \"proxySettings.ipInfo.port\",\n\t                                        type: \"number\",\n\t                                        htmlClass: \"md-block\"\n\t                                    }]\n\t                            }],\n\t                        htmlClass: \"md-block\"\n\t                    }]\n\t            }\n\t        };\n\t        return actionModel;\n\t    }\n\t    AddThird.$inject = [\"toolbarUtils\", \"actionUtils\"];\n\t    AddThird.key = \"crawlerSettingAddThirdAction\";\n\t    return AddThird;\n\t}());\n\tvar AddForth = (function () {\n\t    function AddForth(toolbarUtils, actionUtils) {\n\t        var actionModel = {\n\t            key: AddFifth.key,\n\t            type: action_model_1.ActionType.form,\n\t            title: \"页面配置\",\n\t            icon: \"add\",\n\t            form: {\n\t                formSchema: [{\n\t                        key: \"pages\",\n\t                        type: \"tabarray\",\n\t                        startEmpty: true,\n\t                        fieldHtmlClass: \"layout-column flex\",\n\t                        items: [{\n\t                                type: \"section\",\n\t                                grid: { flex: \"\" },\n\t                                items: [{\n\t                                        key: \"pages[].key\",\n\t                                        type: \"text\",\n\t                                        htmlClass: \"md-block\"\n\t                                    }, {\n\t                                        key: \"pages[].fieldKey\",\n\t                                        type: \"text\",\n\t                                        htmlClass: \"md-block\"\n\t                                    }, {\n\t                                        key: \"pages[].strict\",\n\t                                        type: \"switch\",\n\t                                        htmlClass: \"md-block\"\n\t                                    }, {\n\t                                        key: \"pages[].strictFields\",\n\t                                        startEmpty: true,\n\t                                        type: \"chips\",\n\t                                        htmlClass: \"md-block\"\n\t                                    }, {\n\t                                        key: \"pages[].rule\",\n\t                                        type: \"array\",\n\t                                        startEmpty: true,\n\t                                        items: [{\n\t                                                type: \"section\",\n\t                                                htmlClass: \"layout-row flex\",\n\t                                                items: [{\n\t                                                        key: \"pages[].rule[].regexp\",\n\t                                                        htmlClass: \"md-block flex\",\n\t                                                        type: \"text\"\n\t                                                    }, {\n\t                                                        key: \"pages[].rule[].scope\",\n\t                                                        type: \"text\"\n\t                                                    }]\n\t                                            }]\n\t                                    }]\n\t                            }]\n\t                    }]\n\t            }\n\t        };\n\t        return actionModel;\n\t    }\n\t    AddForth.$inject = [\"toolbarUtils\", \"actionUtils\"];\n\t    AddForth.key = \"crawlerSettingAddForthAction\";\n\t    return AddForth;\n\t}());\n\tvar AddFifth = (function () {\n\t    function AddFifth(toolbarUtils, actionUtils) {\n\t        var actionModel = {\n\t            key: AddFifth.key,\n\t            type: action_model_1.ActionType.form,\n\t            title: \"页面配置\",\n\t            icon: \"add\",\n\t            form: {\n\t                formSchema: [{\n\t                        key: \"pages\",\n\t                        type: \"tabarray\",\n\t                        items: [{\n\t                                type: \"section\",\n\t                                htmlClass: \"column-row flex\",\n\t                                items: [{\n\t                                        key: \"pages[].key\",\n\t                                        type: \"text\",\n\t                                        htmlClass: \"md-block\"\n\t                                    }, {\n\t                                        key: \"pages[].areas\",\n\t                                        type: \"array\",\n\t                                        startEmpty: true,\n\t                                        description: \"区域配置，用户优化分析性能，减少dom的查询。\",\n\t                                        showHints: true,\n\t                                        items: [{\n\t                                                type: \"section\",\n\t                                                grid: { flex: \"\", layout: \"row\" },\n\t                                                items: [{\n\t                                                        key: \"pages[].areas[].key\",\n\t                                                        type: \"text\"\n\t                                                    }, {\n\t                                                        key: \"pages[].areas[].selector\",\n\t                                                        htmlClass: \"md-block flex\",\n\t                                                        type: \"text\"\n\t                                                    }, {\n\t                                                        key: \"pages[].areas[].dealStrategy\",\n\t                                                        type: \"text\"\n\t                                                    }]\n\t                                            }]\n\t                                    }, {\n\t                                        key: \"pages[].fields\",\n\t                                        type: \"jeditor\",\n\t                                        htmlClass: \"md-block\"\n\t                                    }]\n\t                            }]\n\t                    }]\n\t            }\n\t        };\n\t        return actionModel;\n\t    }\n\t    AddFifth.$inject = [\"toolbarUtils\", \"actionUtils\"];\n\t    AddFifth.key = \"crawlerSettingAddFifthAction\";\n\t    return AddFifth;\n\t}());\n\tvar Add = (function () {\n\t    function Add() {\n\t        var actionModel = {\n\t            key: Add.key,\n\t            type: action_model_1.ActionType.wizard,\n\t            title: \"新建爬虫配置文件\",\n\t            icon: \"add\",\n\t            refreshList: true,\n\t            wizard: {\n\t                defaultSchema: {\n\t                    dataSchema: dataSchema\n\t                },\n\t                actions: [AddFirst.key, AddSecond.key, AddThird.key, AddForth.key, AddFifth.key]\n\t            },\n\t            closeDialog: true,\n\t            interfaces: [{\n\t                    key: \"crawlerSettingAdd\",\n\t                    method: interface_model_1.MethodType.POST,\n\t                    address: \"\",\n\t                    port: null,\n\t                    path: \"crawler_settings\",\n\t                    isRestful: true\n\t                }]\n\t        };\n\t        return actionModel;\n\t    }\n\t    Add.key = \"crawlerSettingAddAction\";\n\t    return Add;\n\t}());\n\tvar Copy = (function () {\n\t    function Copy() {\n\t        var actionModel = {\n\t            key: Copy.key,\n\t            type: action_model_1.ActionType.wizard,\n\t            title: \"复制爬虫配置文件\",\n\t            icon: \"content_copy\",\n\t            refreshList: true,\n\t            wizard: {\n\t                defaultSchema: {\n\t                    dataSchema: dataSchema\n\t                },\n\t                actions: [AddFirst.key, AddSecond.key, AddThird.key, AddForth.key, AddFifth.key]\n\t            },\n\t            closeDialog: true,\n\t            interfaces: [{\n\t                    key: \"crawlerSettingAdd\",\n\t                    method: interface_model_1.MethodType.POST,\n\t                    address: \"\",\n\t                    port: null,\n\t                    path: \"crawler_settings\",\n\t                    isRestful: true\n\t                }]\n\t        };\n\t        return actionModel;\n\t    }\n\t    Copy.key = \"crawlerSettingCopyAction\";\n\t    return Copy;\n\t}());\n\tvar Edit = (function () {\n\t    function Edit(toolbarUtils, actionUtils) {\n\t        var actionModel = {\n\t            key: Edit.key,\n\t            type: action_model_1.ActionType.wizard,\n\t            title: \"修改爬虫配置文件\",\n\t            icon: \"edit\",\n\t            refreshList: true,\n\t            wizard: {\n\t                defaultSchema: {\n\t                    dataSchema: dataSchema\n\t                },\n\t                actions: [AddFirst.key, AddSecond.key, AddThird.key, AddForth.key, AddFifth.key]\n\t            },\n\t            closeDialog: true,\n\t            interfaces: [{\n\t                    key: \"crawlerSettingEdit\",\n\t                    method: interface_model_1.MethodType.PUT,\n\t                    idFieldPath: \"/key\",\n\t                    address: \"\",\n\t                    port: null,\n\t                    path: \"crawler_settings\",\n\t                    isRestful: true\n\t                }]\n\t        };\n\t        return actionModel;\n\t    }\n\t    Edit.$inject = [\"toolbarUtils\", \"actionUtils\"];\n\t    Edit.key = \"crawlerSettingEditAction\";\n\t    return Edit;\n\t}());\n\tvar Delete = (function () {\n\t    function Delete() {\n\t        var actionModel = {\n\t            key: Delete.key,\n\t            type: action_model_1.ActionType.confirm,\n\t            title: \"删除爬虫配置文件\",\n\t            icon: \"delete\",\n\t            refreshList: true,\n\t            confirm: {\n\t                confirmTitle: \"\",\n\t                confirmContent: \"确定要删除爬虫配置文件吗!\"\n\t            },\n\t            interfaces: [{\n\t                    key: \"crawlerSettingDelete\",\n\t                    method: interface_model_1.MethodType.DELETE,\n\t                    idFieldPath: \"/key\",\n\t                    address: \"\",\n\t                    port: null,\n\t                    path: \"crawler_settings\",\n\t                    isRestful: true\n\t                }]\n\t        };\n\t        return actionModel;\n\t    }\n\t    Delete.key = \"crawlerSettingDeleteAction\";\n\t    return Delete;\n\t}());\n\tvar Search = (function () {\n\t    function Search() {\n\t        var actionModel = {\n\t            key: Search.key,\n\t            type: action_model_1.ActionType.form,\n\t            title: \"搜索爬虫配置文件\",\n\t            icon: \"search\",\n\t            form: {\n\t                dataSchema: dataSchema,\n\t                formSchema: [{\n\t                        key: \"key\",\n\t                        type: \"text\",\n\t                        required: false,\n\t                        copyValueTo: [\"/key/$eq\"],\n\t                        htmlClass: \"md-block\"\n\t                    }]\n\t            }\n\t        };\n\t        return actionModel;\n\t    }\n\t    Search.key = \"crawlerSettingSearchAction\";\n\t    return Search;\n\t}());\n\tvar Ack = (function () {\n\t    function Ack() {\n\t        var actionModel = {\n\t            key: Ack.key,\n\t            type: action_model_1.ActionType.form,\n\t            title: \"爬虫命令\",\n\t            icon: \"apple-keyboard-command\",\n\t            form: {\n\t                dataSchema: {\n\t                    type: \"object\",\n\t                    required: [\"key\", \"action\"],\n\t                    properties: {\n\t                        key: {\n\t                            type: \"string\",\n\t                            title: \"配置文件KEY\"\n\t                        },\n\t                        action: {\n\t                            type: \"string\",\n\t                            title: \"执行的命令\"\n\t                        },\n\t                        options: {\n\t                            type: \"object\",\n\t                            title: \"可选项\",\n\t                            properties: {\n\t                                url: {\n\t                                    type: \"string\",\n\t                                    title: \"测试的地址\"\n\t                                },\n\t                                type: {\n\t                                    type: \"string\",\n\t                                    default: \"forever\",\n\t                                    title: \"爬虫启动模式\"\n\t                                },\n\t                                startCrawler: {\n\t                                    type: \"boolean\",\n\t                                    default: true,\n\t                                    title: \"开启爬取链接模块\"\n\t                                },\n\t                                startDeal: {\n\t                                    type: \"boolean\",\n\t                                    default: true,\n\t                                    title: \"开启html处理模块\"\n\t                                },\n\t                                startDownload: {\n\t                                    type: \"boolean\",\n\t                                    default: false,\n\t                                    title: \"开启图片下载模块\"\n\t                                },\n\t                                startChip: {\n\t                                    type: \"boolean\",\n\t                                    default: false,\n\t                                    title: \"开启更换ip模块\"\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                },\n\t                formSchema: [{\n\t                        key: \"action\",\n\t                        type: \"select\",\n\t                        titleMap: [\n\t                            { \"value\": \"crawler:start\", \"name\": \"开始爬虫\", \"group\": \"\" },\n\t                            { \"value\": \"crawler:stop\", \"name\": \"停止爬虫\", \"group\": \"\" },\n\t                            { \"value\": \"crawler:create\", \"name\": \"开启一个新爬虫\", \"group\": \"\" },\n\t                            { \"value\": \"crawler:reset\", \"name\": \"重置一个数据库\", \"group\": \"\" },\n\t                            { \"value\": \"crawler:test\", \"name\": \"测试地址\", \"group\": \"\" }\n\t                        ],\n\t                        htmlClass: \"md-block\"\n\t                    }, {\n\t                        key: \"key\",\n\t                        type: \"autocomplete-1\",\n\t                        condition: \"model.action==='crawler:start' || model.action==='crawler:reset'  || model.action==='crawler:test'\",\n\t                        acOptions: {\n\t                            textField: \"key\",\n\t                            dataField: \"rows\",\n\t                            noCache: false,\n\t                            search: \"/where/key/$like\",\n\t                            actionKey: List.key\n\t                        },\n\t                        htmlClass: \"md-block\"\n\t                    }, {\n\t                        key: \"options\",\n\t                        type: \"card\",\n\t                        grid: { \"flex\": \"\" },\n\t                        condition: \"!!model.action\",\n\t                        items: [{\n\t                                key: \"options.type\",\n\t                                type: \"select\",\n\t                                htmlClass: \"md-block\",\n\t                                titleMap: [\n\t                                    { \"value\": \"forever\", \"name\": \"FOREVER启动\" },\n\t                                    { \"value\": \"\", \"name\": \"NODE启动\" }\n\t                                ]\n\t                            }, {\n\t                                key: \"options.url\",\n\t                                htmlClass: \"md-block\",\n\t                                type: \"text\"\n\t                            }, {\n\t                                key: \"options.startCrawler\",\n\t                                condition: \"model.action==='crawler:start'\",\n\t                                htmlClass: \"md-block\",\n\t                                type: \"checkbox\"\n\t                            }, {\n\t                                key: \"options.startDeal\",\n\t                                condition: \"model.action==='crawler:start'\",\n\t                                htmlClass: \"md-block\",\n\t                                type: \"checkbox\"\n\t                            }, {\n\t                                key: \"options.startDownload\",\n\t                                condition: \"model.action==='crawler:start'\",\n\t                                htmlClass: \"md-block\",\n\t                                type: \"checkbox\"\n\t                            }, {\n\t                                key: \"options.startChip\",\n\t                                condition: \"model.action==='crawler:start'\",\n\t                                htmlClass: \"md-block\",\n\t                                type: \"checkbox\"\n\t                            }]\n\t                    }]\n\t            }\n\t        };\n\t        return actionModel;\n\t    }\n\t    Ack.key = \"crawlerSettingAckAction\";\n\t    return Ack;\n\t}());\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = function (module) {\n\t    var services = [List, Search, Add, Edit, Delete, Copy, Ack, AddFirst, AddSecond, AddThird, AddForth, AddFifth];\n\t    _.each(services, function (ser) {\n\t        module.service(ser.key, ser);\n\t    });\n\t};\n\n\n/***/ }\n\n})\n\n\n/** WEBPACK FOOTER **\n ** 0.e91d552c044351456356.hot-update.js\n **/","/**\n * Created by NICK on 16/8/9.\n */\n\nimport * as angular from 'angular';\nimport * as ngMaterial from 'angular-material';\nimport 'expose?JSONEditor!jsoneditor';\nimport 'ng-jsoneditor';\n\nimport actProviderRegFunc from './services/action.provider';\nimport actUtilsFunc from './services/utils.service';\nimport restSvrMod from '../../services/rest.service';\nimport loginSchFunc from './schemas/login.value';\nimport moduleSchFunc from './schemas/modules.value';\nimport crawlerSchFunc from './schemas/crawler.value';\nimport commonSchFunc from './schemas/common.value';\nimport formActionFunc from './directives/form.directive';\nimport listActionFunc from './directives/list.directive';\nimport dialogFormFunc from './directives/dialog-form.directive';\nimport searchActionFunc from './directives/search.directive';\nimport wizardActionFunc from './directives/wizard.directive';\nimport wizardDialogActionFunc from './directives/dialog-wizard.directive';\nimport builderActionFunc from './directives/builder.directive';\n\nimport autoCompleteFunc from './services/autocomplete.provider';\nimport jsonEditorFunc from './services/jsoneditor.provider';\n\nimport 'angular-schema-form';\nimport 'angular-schema-form-ng-material';\nimport './services/validator.custom.value';\n\nconst _name = \"fxAction\";\nconst module = angular.module(`${_name}Module`, [ngMaterial, restSvrMod, \"schemaForm\", \"ng.jsoneditor\"]);\n\nactUtilsFunc(module);\nactProviderRegFunc(module);\nformActionFunc(module);\nlistActionFunc(module);\nmoduleSchFunc(module);\nloginSchFunc(module);\ndialogFormFunc(module);\nsearchActionFunc(module);\nwizardActionFunc(module);\nwizardDialogActionFunc(module);\nbuilderActionFunc(module);\ncrawlerSchFunc(module);\ncommonSchFunc(module);\nautoCompleteFunc(module);\njsonEditorFunc(module);\n\n\nfunction sfLayout(args) {\n    var layoutDiv = args.fieldFrag.querySelector('[sf-layout]');\n\n    if (layoutDiv && args.form.grid) {\n        Object.getOwnPropertyNames(args.form.grid).forEach(function (property, idx, array) {\n            layoutDiv.setAttribute(property, args.form.grid[property]);\n        });\n    }\n};\n// 处理默认的错误信息\nmodule\n    .config([\"sfErrorMessageProvider\", (sfErrorMessageProvider)=> {\n        // sfErrorMessageProvider.setDefaultMessage(\"10000\", \"邮箱格式不正确\");\n        // sfErrorMessageProvider.setDefaultMessage(\"10001\", \"两次密码不一致\");\n        // sfErrorMessageProvider.setDefaultMessage(\"10002\", \"用户名中存在非法字符\");\n        // sfErrorMessageProvider.setDefaultMessage(\"10003\", \"手机格式不正确\");\n        // sfErrorMessageProvider.setDefaultMessage(\"10004\", \"JSON格式不正确\");\n        // sfErrorMessageProvider.setDefaultMessage(\"10005\", \"地址格式不正确\");\n        sfErrorMessageProvider.setDefaultMessage(\"302\", \"[{{title}}]是必填项\");\n        sfErrorMessageProvider.setDefaultMessage(\"103\", \"[{{title}}]超过了最大值{{schema.maximum}}\");\n        sfErrorMessageProvider.setDefaultMessage(\"101\", \"[{{title}}]小于最小值{{schema.minimum}}\");\n        sfErrorMessageProvider.setDefaultMessage(\"200\", \"[{{title}}]字符长度小于最小值({{schema.minLength}})\");\n        sfErrorMessageProvider.setDefaultMessage(\"201\", \"[{{title}}]字符长度大于最大值({{schema.maxLength}})\");\n        sfErrorMessageProvider.setDefaultMessage(\"400\", \"数组长度不正确，{{schema.minItems||0}}-{{schema.maxItems||'∞'}}\");\n        sfErrorMessageProvider.setDefaultMessage(\"500\", \"格式不正确\");\n    }])\n    // 添加自定义的表单组件\n    .config([\"sfBuilderProvider\", \"schemaFormDecoratorsProvider\", \"jsonEditorBuilderProvider\", \"autoCompleteBuilderProvider\", (sfBuilderProvider, schemaFormDecoratorsProvider, jsonEditorBuilder, autoCompleteBuilder)=> {\n        // jsoneditor--schema-form组件化\n        schemaFormDecoratorsProvider.defineAddOn(\n            'materialDecorator',\n            'jeditor',\n            \"./decorators/jsoneditor.jade\",\n            sfBuilderProvider.stdBuilders.concat(jsonEditorBuilder.builder)\n        );\n        // card--schema-form组件化\n        schemaFormDecoratorsProvider.defineAddOn(\n            'materialDecorator',\n            'card',\n            \"./decorators/card.jade\",\n            [sfBuilderProvider.builders.sfField, sfBuilderProvider.builders.condition, sfBuilderProvider.builders.transclusion]\n        );\n        // autocomplete--schema-form组件化\n        schemaFormDecoratorsProvider.defineAddOn(\n            'materialDecorator',\n            'autocomplete-1',\n            \"./decorators/autocomplete-1.jade\",\n            [sfBuilderProvider.builders.sfField, sfLayout, sfBuilderProvider.builders.condition, autoCompleteBuilder.builder, sfBuilderProvider.builders.transclusion]\n        );\n        // // section--schema-section组件\n        // schemaFormDecoratorsProvider.defineAddOn(\n        //     'materialDecorator',\n        //     'section-1',\n        //     \"./decorators/section-1.jade\",\n        //     [sfBuilderProvider.builders.sfField, sfBuilderProvider.builders.ngModel, sfBuilderProvider.builders.condition, sfBuilderProvider.builders.simpleTransclusion, sfBuilderProvider.builders.array]\n        // );\n    }])\n    // 打包工具的原因,只能把模板字符串写入cache中\n    .run([\"$templateCache\", \"autoCompleteBuilder\", ($templateCache: ng.ITemplateCacheService)=> {\n        $templateCache.put('./decorators/jsoneditor.jade', require(\"./decorators/jsoneditor.jade\")());\n        $templateCache.put('./decorators/card.jade', require(\"./decorators/card.jade\")());\n        $templateCache.put('./decorators/autocomplete-1.jade', require(\"./decorators/autocomplete-1.jade\")());\n        $templateCache.put('./decorators/section-1.jade', require(\"./decorators/section-1.jade\")());\n    }]);\n\n\nexport default module.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/action/index.ts\n **/","/**\n * Created by NICK on 16/8/23.\n */\n\nimport {IActionModel, ActionType} from '../models/action.model';\nimport {MethodType} from '../models/interface.model';\n\nconst dataSchema = {\n    type: \"object\",\n    required: [\"key\", \"host\", \"interval\"],\n    properties: {\n        key: {\n            type: \"string\",\n            title: \"KEY\"\n        },\n        host: {\n            type: \"string\",\n            title: \"主HOST\"\n        },\n        domainWhiteList: {\n            type: \"array\",\n            title: \"域名白名单\",\n            default: [],\n            // minItems: 2,\n            items: {\n                type: \"string\",\n                format: \"url-ip\",\n                title: \"域名或者IP\"\n            }\n        },\n        whitePathList: {\n            type: \"array\",\n            title: \"路径白名单\",\n            default: [],\n            // minItems: 2,\n            items: {\n                type: \"object\",\n                title: \"路径配置\",\n                required: [\"regexp\", \"scope\"],\n                properties: {\n                    enable: {\n                        type: \"boolean\",\n                        title: \"是否启用\"\n                    },\n                    regexp: {\n                        type: \"string\",\n                        title: \"正则规则\"\n                    },\n                    scope: {\n                        type: \"string\",\n                        title: \"修饰符\"\n                    },\n                    description: {\n                        type: \"string\",\n                        title: \"介绍\"\n                    },\n                }\n            }\n        },\n        interval: {\n            type: \"number\",\n            default: 1000,\n            minimum: 1000,\n            title: \"下载间隔，单位ms\"\n        },\n        downloader: {\n            type: \"string\",\n            default: \"superagent\",\n            title: \"下载策略\"\n        },\n        initDomain: {\n            type: \"string\",\n            title: \"初始化域名\"\n        },\n        proxySettings: {\n            type: \"object\",\n            title: \"基础设置\",\n            properties: {\n                useProxy: {\n                    type: \"boolean\",\n                    title: \"是否启用代理\"\n                },\n                timeout: {\n                    type: \"number\",\n                    title: \"超时时间\"\n                },\n                charset: {\n                    type: \"string\",\n                    title: \"字符编码\"\n                },\n                ua: {\n                    type: \"string\",\n                    title: \"USERAGENT\"\n                },\n                ipInfo: {\n                    type: \"object\",\n                    title: \"代理ip设置\",\n                    properties: {\n                        host: {\n                            type: \"string\",\n                            format: 'url-ip',\n                            title: \"代理ip或域名\"\n                        },\n                        port: {\n                            type: \"number\",\n                            title: \"代理端口\"\n                        }\n                    }\n                }\n            }\n        },\n        pages: {\n            type: \"array\",\n            title: \"分析页面配置\",\n            items: {\n                type: \"object\",\n                required: [\"key\", \"fieldKey\"],\n                title: \"分析页面配置\",\n                properties: {\n                    key: {\n                        type: \"string\",\n                        title: \"页面的KEY\"\n                    },\n                    areas: {\n                        type: \"array\",\n                        title: \"页面区域\",\n                        items: {\n                            type: \"object\",\n                            required: [\"selector\", \"dealStrategy\", \"key\"],\n                            properties: {\n                                key: {\n                                    type: \"string\",\n                                    title: \"区域KEY\"\n                                },\n                                selector: {\n                                    type: \"string\",\n                                    title: \"选择器\"\n                                },\n                                dealStrategy: {\n                                    type: \"string\",\n                                    default: \"jsdom\",\n                                    title: \"分析策略\"\n                                }\n                            }\n                        }\n                    },\n                    rule: {\n                        type: \"array\",\n                        title: \"匹配规则\",\n                        default: [],\n                        items: {\n                            type: \"object\",\n                            title: \"路径配置\",\n                            required: [\"regexp\", \"scope\"],\n                            properties: {\n                                regexp: {\n                                    type: \"string\",\n                                    title: \"正则规则\"\n                                },\n                                scope: {\n                                    type: \"string\",\n                                    title: \"修饰符\"\n                                }\n                            }\n                        }\n                    },\n                    fieldKey: {\n                        type: \"string\",\n                        title: \"主键字段\"\n                    },\n                    strict: {\n                        type: \"boolean\",\n                        title: \"是否启用严格模式\"\n                    },\n                    strictFields: {\n                        type: \"array\",\n                        title: \"严格模式下，验证字段\",\n                        default: [],\n                        items: {\n                            type: \"string\",\n                            title: \"验证字段\"\n                        }\n                    },\n                    fields: {\n                        type: \"object\",\n                        title: \"分析字段配置\"\n                    }\n                }\n            }\n        },\n        description: {\n            type: \"string\",\n            title: \"描述\",\n            maxLength: 500\n        }\n    }\n};\n\n/**\n * 模块查询\n */\nclass List {\n    static $inject = [\"toolbarUtils\", \"actionUtils\"];\n    static key: string = \"crawlerSettingListAction\";\n\n    constructor(toolbarUtils, actionUtils) {\n        let actionModel: IActionModel = {\n            key: List.key,\n            type: ActionType.list,\n            title: \"爬虫配置文件管理\",\n            icon: \"content-save-settings\",\n            list: {\n                columns: [\n                    actionUtils.columnBuilder(\"<span>{{::item.key}}</span>\", \"KEY\").toValue(),\n                    actionUtils.columnBuilder(\"<span>{{ ::item.host }}</span>\", \"域名\").toValue(),\n                    actionUtils.columnBuilder(\"<span>{{ ::item.interval }}</span>\", \"间隔时间\").toValue(),\n                    actionUtils.columnBuilder(`<span>{{ ::item.downloader }}</span>`, \"下载策略\").toValue(),\n                    actionUtils.columnBuilder(`<span>{{ ::item.description }}</span>`, \"详情\").toValue()\n                ],\n                searchActionKey: Search.key,\n                showRefreshBtn: true,\n                showSearchBtn: true,\n                showSearchPanel: false,\n                toolbars: [],\n                itemToolbars: []\n            },\n            itemActions: [{key: Edit.key}, {key: Delete.key}, {key: Copy.key}],\n            actions: [Add.key],\n            interfaces: [{\n                key: \"crawlerSettingList\",\n                method: MethodType.GET,\n                address: \"\",\n                port: null,\n                path: \"crawler_settings\",\n                jpp: {\n                    set: {\n                        \"/total\": \"/count\",\n                        \"/rows\": \"/rows\"\n                    },\n                    copy: {},\n                    move: {},\n                    del: {}\n                },\n                isRestful: true\n            }]\n        };\n\n        return actionModel;\n    }\n}\n\nclass AddFirst {\n    static $inject = [\"toolbarUtils\", \"actionUtils\"];\n    static key: string = \"crawlerSettingAddFirstAction\";\n\n    constructor(toolbarUtils, actionUtils) {\n        let actionModel: IActionModel = {\n            key: AddFirst.key,\n            type: ActionType.form,\n            title: \"基础设置\",\n            icon: \"add\",\n            form: {\n                formSchema: [{\n                    key: \"key\",\n                    type: \"text\",\n                    htmlClass: \"md-block\"\n                }, {\n                    key: \"host\",\n                    type: \"text\",\n                    htmlClass: \"md-block\"\n                }, {\n                    key: \"initDomain\",\n                    type: \"text\",\n                    htmlClass: \"md-block\"\n                }, {\n                    key: \"interval\",\n                    type: \"number\",\n                    htmlClass: \"md-block\"\n                }, {\n                    key: \"downloader\",\n                    type: \"select\",\n                    titleMap: [{\n                        \"name\": \"SUPERAGENT\",\n                        \"value\": \"superagent\"\n                    }, {\n                        \"name\": \"PHANTOM\",\n                        \"value\": \"phantom\"\n                    }],\n                    htmlClass: \"md-block\"\n                }, {\n                    key: \"description\",\n                    type: \"textarea\",\n                    htmlClass: \"md-block\"\n                }]\n            }\n        };\n\n        return actionModel;\n    }\n}\n\nclass AddSecond {\n    static $inject = [\"toolbarUtils\", \"actionUtils\"];\n    static key: string = \"crawlerSettingAddSecondAction\";\n\n    constructor(toolbarUtils, actionUtils) {\n        let actionModel: IActionModel = {\n            key: AddSecond.key,\n            type: ActionType.form,\n            title: \"白名单设置\",\n            icon: \"add\",\n            form: {\n                formSchema: [{\n                    key: \"domainWhiteList\",\n                    type: \"chips\",\n                    startEmpty: true,\n                    description: \"域名白名单，配置可以爬取的域名列表\",\n                    showHints: true,\n                    htmlClass: \"md-block\"\n                }, {\n                    key: \"whitePathList\",\n                    type: \"array\",\n                    fieldHtmlClass: \"layout-row flex\",\n                    startEmpty: true,\n                    description: \"路径白名单，配置可以爬取的路径列表\",\n                    showHints: true,\n                    items: [{\n                        type: \"section\",\n                        htmlClass: \"layout-row flex\",\n                        items: [{\n                            key: \"whitePathList[].enable\",\n                            type: \"select\",\n                            titleMap: [{\n                                name: \"启用\",\n                                value: true\n                            }, {\n                                name: \"不启用\",\n                                value: false\n                            }]\n                        }, {\n                            key: \"whitePathList[].regexp\",\n                            htmlClass: \"md-block flex\",\n                            type: \"text\"\n                        }, {\n                            key: \"whitePathList[].scope\",\n                            type: \"text\"\n                        }, {\n                            key: \"whitePathList[].description\",\n                            type: \"text\"\n                        }]\n                    }]\n                }]\n            }\n        };\n\n        return actionModel;\n    }\n}\n\nclass AddThird {\n    static $inject = [\"toolbarUtils\", \"actionUtils\"];\n    static key: string = \"crawlerSettingAddThirdAction\";\n\n    constructor(toolbarUtils, actionUtils) {\n        let actionModel: IActionModel = {\n            key: AddThird.key,\n            type: ActionType.form,\n            title: \"其他设置\",\n            icon: \"add\",\n            form: {\n                formSchema: [{\n                    key: \"proxySettings\",\n                    type: \"card\",\n                    items: [{\n                        key: \"proxySettings.useProxy\",\n                        type: \"checkbox\"\n                    }, {\n                        key: \"proxySettings.timeout\",\n                        type: \"number\",\n                        htmlClass: \"md-block\"\n                    }, {\n                        key: \"proxySettings.charset\",\n                        type: \"text\",\n                        htmlClass: \"md-block\"\n                    }, {\n                        key: \"proxySettings.ua\",\n                        type: \"textarea\",\n                        maxLength: 300,\n                        htmlClass: \"md-block\"\n                    }, {\n                        key: \"proxySettings.ipInfo\",\n                        type: \"card\",\n                        items: [{\n                            key: \"proxySettings.ipInfo.host\",\n                            type: \"text\",\n                            htmlClass: \"md-block\"\n                        }, {\n                            key: \"proxySettings.ipInfo.port\",\n                            type: \"number\",\n                            htmlClass: \"md-block\"\n                        }]\n                    }],\n                    htmlClass: \"md-block\"\n                }]\n            }\n        };\n\n        return actionModel;\n    }\n}\n\nclass AddForth {\n    static $inject = [\"toolbarUtils\", \"actionUtils\"];\n    static key: string = \"crawlerSettingAddForthAction\";\n\n    constructor(toolbarUtils, actionUtils) {\n        let actionModel: IActionModel = {\n            key: AddFifth.key,\n            type: ActionType.form,\n            title: \"页面配置\",\n            icon: \"add\",\n            form: {\n                formSchema: [{\n                    key: \"pages\",\n                    type: \"tabarray\",\n                    startEmpty: true,\n                    fieldHtmlClass: \"layout-column flex\",\n                    items: [{\n                        type: \"section\",\n                        grid: {flex: \"\"},\n                        items: [{\n                            key: \"pages[].key\",\n                            type: \"text\",\n                            htmlClass: \"md-block\"\n                        }, {\n                            key: \"pages[].fieldKey\",\n                            type: \"text\",\n                            htmlClass: \"md-block\"\n                        }, {\n                            key: \"pages[].strict\",\n                            type: \"switch\",\n                            htmlClass: \"md-block\"\n                        }, {\n                            key: \"pages[].strictFields\",\n                            startEmpty: true,\n                            type: \"chips\",\n                            htmlClass: \"md-block\"\n                        }, {\n                            key: \"pages[].rule\",\n                            type: \"array\",\n                            startEmpty: true,\n                            items: [{\n                                type: \"section\",\n                                htmlClass: \"layout-row flex\",\n                                items: [{\n                                    key: \"pages[].rule[].regexp\",\n                                    htmlClass: \"md-block flex\",\n                                    type: \"text\"\n                                }, {\n                                    key: \"pages[].rule[].scope\",\n                                    type: \"text\"\n                                }]\n                            }]\n                        }]\n                    }]\n                }]\n            }\n        };\n\n        return actionModel;\n    }\n}\n\nclass AddFifth {\n    static $inject = [\"toolbarUtils\", \"actionUtils\"];\n    static key: string = \"crawlerSettingAddFifthAction\";\n\n    constructor(toolbarUtils, actionUtils) {\n        let actionModel: IActionModel = {\n            key: AddFifth.key,\n            type: ActionType.form,\n            title: \"页面配置\",\n            icon: \"add\",\n            form: {\n                formSchema: [{\n                    key: \"pages\",\n                    type: \"tabarray\",\n                    items: [{\n                        type: \"section\",\n                        htmlClass: \"column-row flex\",\n                        items: [{\n                            key: \"pages[].key\",\n                            type: \"text\",\n                            htmlClass: \"md-block\"\n                        }, {\n                            key: \"pages[].areas\",\n                            type: \"array\",\n                            startEmpty: true,\n                            description: \"区域配置，用户优化分析性能，减少dom的查询。\",\n                            showHints: true,\n                            items: [{\n                                type: \"section\",\n                                grid: {flex: \"\", layout: \"row\"},\n                                items: [{\n                                    key: \"pages[].areas[].key\",\n                                    type: \"text\"\n                                }, {\n                                    key: \"pages[].areas[].selector\",\n                                    htmlClass: \"md-block flex\",\n                                    type: \"text\"\n                                }, {\n                                    key: \"pages[].areas[].dealStrategy\",\n                                    type: \"text\"\n                                }]\n                            }]\n                        }, {\n                            key: \"pages[].fields\",\n                            type: \"jeditor\",\n                            htmlClass: \"md-block\"\n                        }]\n                    }]\n                }]\n            }\n        };\n\n        return actionModel;\n    }\n}\n\nclass Add {\n    static key: string = \"crawlerSettingAddAction\";\n\n    constructor() {\n        let actionModel: IActionModel = {\n            key: Add.key,\n            type: ActionType.wizard,\n            title: \"新建爬虫配置文件\",\n            icon: \"add\",\n            refreshList: true,\n            wizard: {\n                defaultSchema: {\n                    dataSchema: dataSchema\n                },\n                actions: [AddFirst.key, AddSecond.key, AddThird.key, AddForth.key, AddFifth.key]\n            },\n            closeDialog: true,\n            interfaces: [{\n                key: \"crawlerSettingAdd\",\n                method: MethodType.POST,\n                address: \"\",\n                port: null,\n                path: \"crawler_settings\",\n                isRestful: true\n            }]\n        };\n\n        return actionModel;\n    }\n}\n\nclass Copy {\n    static key: string = \"crawlerSettingCopyAction\";\n\n    constructor() {\n        let actionModel: IActionModel = {\n            key: Copy.key,\n            type: ActionType.wizard,\n            title: \"复制爬虫配置文件\",\n            icon: \"content_copy\",\n            refreshList: true,\n            wizard: {\n                defaultSchema: {\n                    dataSchema: dataSchema\n                },\n                actions: [AddFirst.key, AddSecond.key, AddThird.key, AddForth.key, AddFifth.key]\n            },\n            closeDialog: true,\n            interfaces: [{\n                key: \"crawlerSettingAdd\",\n                method: MethodType.POST,\n                address: \"\",\n                port: null,\n                path: \"crawler_settings\",\n                isRestful: true\n            }]\n        };\n\n        return actionModel;\n    }\n}\n\nclass Edit {\n    static $inject = [\"toolbarUtils\", \"actionUtils\"];\n    static key: string = \"crawlerSettingEditAction\";\n\n    constructor(toolbarUtils, actionUtils) {\n        let actionModel: IActionModel = {\n            key: Edit.key,\n            type: ActionType.wizard,\n            title: \"修改爬虫配置文件\",\n            icon: \"edit\",\n            refreshList: true,\n            wizard: {\n                defaultSchema: {\n                    dataSchema: dataSchema\n                },\n                actions: [AddFirst.key, AddSecond.key, AddThird.key, AddForth.key, AddFifth.key]\n            },\n            closeDialog: true,\n            interfaces: [{\n                key: \"crawlerSettingEdit\",\n                method: MethodType.PUT,\n                idFieldPath: \"/key\",\n                address: \"\",\n                port: null,\n                path: \"crawler_settings\",\n                isRestful: true\n            }]\n        };\n\n        return actionModel;\n    }\n}\n\nclass Delete {\n    static key: string = \"crawlerSettingDeleteAction\";\n\n    constructor() {\n        let actionModel: IActionModel = {\n            key: Delete.key,\n            type: ActionType.confirm,\n            title: \"删除爬虫配置文件\",\n            icon: \"delete\",\n            refreshList: true,\n            confirm: {\n                confirmTitle: \"\",\n                confirmContent: \"确定要删除爬虫配置文件吗!\"\n            },\n            interfaces: [{\n                key: \"crawlerSettingDelete\",\n                method: MethodType.DELETE,\n                idFieldPath: \"/key\",\n                address: \"\",\n                port: null,\n                path: \"crawler_settings\",\n                isRestful: true\n            }]\n        };\n\n        return actionModel;\n    }\n}\n\nclass Search {\n    static key: string = \"crawlerSettingSearchAction\";\n\n    constructor() {\n        let actionModel: IActionModel = {\n            key: Search.key,\n            type: ActionType.form,\n            title: \"搜索爬虫配置文件\",\n            icon: \"search\",\n            form: {\n                dataSchema: dataSchema,\n                formSchema: [{\n                    key: \"key\",\n                    type: \"text\",\n                    required: false,\n                    copyValueTo: [\"/key/$eq\"],\n                    htmlClass: \"md-block\"\n                }]\n            }\n        };\n\n        return actionModel;\n    }\n}\n\nclass Ack {\n    static key: string = \"crawlerSettingAckAction\";\n\n    constructor() {\n        let actionModel: IActionModel = {\n            key: Ack.key,\n            type: ActionType.form,\n            title: \"爬虫命令\",\n            icon: \"apple-keyboard-command\",\n            form: {\n                dataSchema: {\n                    type: \"object\",\n                    required: [\"key\", \"action\"],\n                    properties: {\n                        key: {\n                            type: \"string\",\n                            title: \"配置文件KEY\"\n                        },\n                        action: {\n                            type: \"string\",\n                            title: \"执行的命令\"\n                        },\n                        options: {\n                            type: \"object\",\n                            title: \"可选项\",\n                            properties: {\n                                url: {\n                                    type: \"string\",\n                                    title: \"测试的地址\"\n                                },\n                                type: {\n                                    type: \"string\",\n                                    default: \"forever\",\n                                    title: \"爬虫启动模式\"\n                                },\n                                startCrawler: {\n                                    type: \"boolean\",\n                                    default: true,\n                                    title: \"开启爬取链接模块\"\n                                },\n                                startDeal: {\n                                    type: \"boolean\",\n                                    default: true,\n                                    title: \"开启html处理模块\"\n                                },\n                                startDownload: {\n                                    type: \"boolean\",\n                                    default: false,\n                                    title: \"开启图片下载模块\"\n                                },\n                                startChip: {\n                                    type: \"boolean\",\n                                    default: false,\n                                    title: \"开启更换ip模块\"\n                                }\n                            }\n                        }\n                    }\n                },\n                formSchema: [{\n                    key: \"action\",\n                    type: \"select\",\n                    titleMap: [\n                        {\"value\": \"crawler:start\", \"name\": \"开始爬虫\", \"group\": \"\"},\n                        {\"value\": \"crawler:stop\", \"name\": \"停止爬虫\", \"group\": \"\"},\n                        {\"value\": \"crawler:create\", \"name\": \"开启一个新爬虫\", \"group\": \"\"},\n                        {\"value\": \"crawler:reset\", \"name\": \"重置一个数据库\", \"group\": \"\"},\n                        {\"value\": \"crawler:test\", \"name\": \"测试地址\", \"group\": \"\"}\n                    ],\n                    htmlClass: \"md-block\"\n                }, {\n                    key: \"key\",\n                    type: \"autocomplete-1\",\n                    condition: \"model.action==='crawler:start' || model.action==='crawler:reset'  || model.action==='crawler:test'\",\n                    acOptions: {\n                        textField: \"key\",\n                        dataField: \"rows\",\n                        noCache: false,\n                        search: \"/where/key/$like\",\n                        actionKey: List.key\n                    },\n                    htmlClass: \"md-block\"\n                }, {\n                    key: \"options\",\n                    type: \"card\",\n                    grid: {\"flex\": \"\"},\n                    condition: \"!!model.action\",\n                    items: [{\n                        key: \"options.type\",\n                        type: \"select\",\n                        htmlClass: \"md-block\",\n                        titleMap: [\n                            {\"value\": \"forever\", \"name\": \"FOREVER启动\"},\n                            {\"value\": \"\", \"name\": \"NODE启动\"}\n                        ]\n                    }, {\n                        key: \"options.url\",\n                        htmlClass: \"md-block\",\n                        type: \"text\"\n                    }, {\n                        key: \"options.startCrawler\",\n                        condition: \"model.action==='crawler:start'\",\n                        htmlClass: \"md-block\",\n                        type: \"checkbox\"\n                    }, {\n                        key: \"options.startDeal\",\n                        condition: \"model.action==='crawler:start'\",\n                        htmlClass: \"md-block\",\n                        type: \"checkbox\"\n                    }, {\n                        key: \"options.startDownload\",\n                        condition: \"model.action==='crawler:start'\",\n                        htmlClass: \"md-block\",\n                        type: \"checkbox\"\n                    }, {\n                        key: \"options.startChip\",\n                        condition: \"model.action==='crawler:start'\",\n                        htmlClass: \"md-block\",\n                        type: \"checkbox\"\n                    }]\n                }]\n            }\n        };\n\n        return actionModel;\n    }\n}\n\nexport default (module: ng.IModule) => {\n    const services: Array<any> = [List, Search, Add, Edit, Delete, Copy, Ack, AddFirst, AddSecond, AddThird, AddForth, AddFifth];\n\n    _.each(services, (ser)=> {\n        module.service(ser.key, ser);\n    });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/action/schemas/crawler.value.ts\n **/"],"sourceRoot":""}