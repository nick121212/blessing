{"version":3,"sources":["webpack:///1.c3a4646135a892ae3623.hot-update.js","webpack:///./src/directives/action/index.ts?1f08","webpack:///./src/directives/action/directives/list.directive.ts?de17"],"names":["webpackHotUpdate","49","module","exports","__webpack_require__","module_1","Object","defineProperty","value","172","Directive","restrict","template","scope","bindToController","key","selected","_filter","clientData","showToolbar","multiple","autoSelect","local","itemToolbars","topToolbars","qtCtl","controller","Controller","controllerAs","replace","transclude","action_model_1","pointer","_","$rootScope","$scope","$q","$timeout","fxAction","toolbarUtils","materialUtils","_this","this","mdLimitOptions","isBusy","showPage","getModel","then","model","actionModel","cloneDeep","queryData","extend","offset","limit","page","list","toolbars","initToolbar","initItemToolbar","doSearch","initEvents","onOrderChange","orderChange","bind","onPageChange","pageChange","doSearchBind","$on","$watch","newValue","oldValue","prototype","timeId","cancel","where","orderFunc","order","doClickActionMenu","$event","item","itemSource","clone","$broadcast","type","ActionType","form","wizard","has","path","get","promise","doActionModel","result","showMsg","successMsg","refreshList","getModels","actions","actionModels","push","noneBuilder","iconBuilder","icon","toValue","labelBuilder","title","attrBuilder","flex","forEach","btnBuilder","tooltipBuilder","btnClick","showRefreshBtn","showSearchBtn","showSearchPanel","menuTool","menuBuilder","menuOptionsBuilder","keys","itemActionsObj","keyBy","itemActions","each","length","condition","none","confirm","menu","menuItemBuilder","noOptions","conditionBuilder","items","filterData","isObject","doAction","doDealResult","$inject","filter","inputArray","skip","isLocal","drop","concat","directive"],"mappings":"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","file":"1.c3a4646135a892ae3623.hot-update.js","sourcesContent":["webpackHotUpdate(1,{\n\n/***/ 49:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t__webpack_require__(180);\n\t__webpack_require__(176);\n\t__webpack_require__(179);\n\t__webpack_require__(177);\n\t__webpack_require__(178);\n\t__webpack_require__(181);\n\t__webpack_require__(175);\n\t__webpack_require__(171);\n\t__webpack_require__(172);\n\t__webpack_require__(167);\n\t__webpack_require__(169);\n\t__webpack_require__(173);\n\t__webpack_require__(174);\n\t__webpack_require__(170);\n\t__webpack_require__(168);\n\tvar module_1 = __webpack_require__(4);\n\t__webpack_require__(160);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = module_1.default;\n\n\n/***/ },\n\n/***/ 172:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar module_1 = __webpack_require__(4);\n\tvar action_model_1 = __webpack_require__(6);\n\tvar pointer = __webpack_require__(7);\n\tvar _ = __webpack_require__(3);\n\tvar Controller = (function () {\n\t    function Controller($rootScope, $scope, $q, $timeout, fxAction, toolbarUtils, materialUtils) {\n\t        var _this = this;\n\t        this.$rootScope = $rootScope;\n\t        this.$scope = $scope;\n\t        this.$q = $q;\n\t        this.$timeout = $timeout;\n\t        this.fxAction = fxAction;\n\t        this.toolbarUtils = toolbarUtils;\n\t        this.materialUtils = materialUtils;\n\t        this.mdLimitOptions = [1, 10, 30, 50, 100, 300];\n\t        this.isBusy = false;\n\t        this.showPage = true;\n\t        !this.clientData && (this.clientData = {});\n\t        !this.selected && (this.selected = []);\n\t        fxAction.getModel(this.key).then(function (model) {\n\t            _this.actionModel = _.cloneDeep(model);\n\t            _this.queryData = _.extend({ offset: 0, limit: 10, page: 1 }, _this.actionModel.list.queryData || {}, _this.queryData || {});\n\t            if (!_this.local) {\n\t                _this.initToolbar();\n\t                _this.initItemToolbar();\n\t                _this.doSearch();\n\t                _this.initEvents();\n\t            }\n\t            else {\n\t                _this.actionModel.list.itemToolbars = _this.itemToolbars || [];\n\t                _this.actionModel.list.toolbars = _this.topToolbars || [];\n\t            }\n\t        });\n\t        this.onOrderChange = this.orderChange.bind(this);\n\t        this.onPageChange = this.pageChange.bind(this);\n\t        this.doSearchBind = this.doSearch.bind(this);\n\t        this.$scope.$on(\"$destroy\", function () {\n\t            _this.actionModel = null;\n\t            _this.queryData = null;\n\t            _this.onOrderChange = null;\n\t            _this.onPageChange = null;\n\t            _this.doSearchBind = null;\n\t            _this.selected = null;\n\t            _this.itemToolbars = null;\n\t            _this.topToolbars = null;\n\t        });\n\t        this.$scope.$watch(function () {\n\t            return _this._filter;\n\t        }, function (newValue, oldValue) {\n\t            if (newValue && newValue != oldValue) {\n\t                _this.doSearch();\n\t            }\n\t        });\n\t    }\n\t    Controller.prototype.initEvents = function () {\n\t        var _this = this;\n\t        var timeId;\n\t        this.$rootScope.$on(this.key + \":refresh\", function () {\n\t            if (timeId)\n\t                _this.$timeout.cancel(timeId);\n\t            timeId = _this.$timeout(function () {\n\t                _this.doSearch(_this.queryData.where || {});\n\t            }, 500);\n\t        });\n\t    };\n\t    Controller.prototype.orderFunc = function () {\n\t        if (this.queryData && this.queryData.order) {\n\t            return this.queryData.order.replace(/\\-/ig, '');\n\t        }\n\t        return [];\n\t    };\n\t    Controller.prototype.doClickActionMenu = function ($event, actionModel, item) {\n\t        var _this = this;\n\t        var itemSource = _.clone(item);\n\t        actionModel.cancel = false;\n\t        this.$rootScope.$broadcast(this.key + \":clickItem\", actionModel, item);\n\t        if (actionModel.cancel) {\n\t            return;\n\t        }\n\t        if (actionModel.type === action_model_1.ActionType.form || actionModel.type === action_model_1.ActionType.wizard) {\n\t            itemSource = {};\n\t            if (pointer.has(item, actionModel.path || \"\")) {\n\t                itemSource = pointer.get(item, actionModel.path || \"\");\n\t            }\n\t        }\n\t        var promise = this.fxAction.doActionModel($event, actionModel, itemSource);\n\t        promise && promise.then(function (result) {\n\t            _this.materialUtils.showMsg(\"\" + (actionModel.successMsg || \"操作成功!\"));\n\t            _this.$timeout(function () {\n\t                if (actionModel.refreshList) {\n\t                    _this.doSearch(_this.queryData.where || {});\n\t                }\n\t            }, 200);\n\t        });\n\t    };\n\t    Controller.prototype.initToolbar = function () {\n\t        var _this = this;\n\t        this.actionModel.list.toolbars = [];\n\t        this.fxAction.getModels(this.actionModel.actions).then(function (actionModels) {\n\t            _this.actionModel.list.toolbars.push(_this.toolbarUtils.noneBuilder(\"icon\").iconBuilder(_this.actionModel.icon, {}).toValue());\n\t            _this.actionModel.list.toolbars.push(_this.toolbarUtils.labelBuilder(\"\" + _this.actionModel.title).attrBuilder({ flex: \"\" }).toValue());\n\t            _.forEach(actionModels, function (actionModel) {\n\t                if (actionModel.type !== action_model_1.ActionType.list) {\n\t                    _this.actionModel.list.toolbars.push(_this.toolbarUtils.btnBuilder(actionModel.title, \"md-icon-button\", false).tooltipBuilder(\"\").iconBuilder(actionModel.icon, {}).btnClick(function ($event, item) {\n\t                        _this.doClickActionMenu($event, actionModel, item || {});\n\t                    }).toValue());\n\t                }\n\t            });\n\t            if (_this.actionModel.list.showRefreshBtn) {\n\t                _this.actionModel.list.toolbars.push(_this.toolbarUtils.btnBuilder(\"刷新\", \"md-icon-button\", false).iconBuilder(\"refresh\", {}).btnClick(function ($event) {\n\t                    _this.doSearch(_this.queryData.where || {});\n\t                }).toValue());\n\t            }\n\t            if (_this.actionModel.list.showSearchBtn) {\n\t                _this.actionModel.list.toolbars.push(_this.toolbarUtils.btnBuilder(\"{{listCtl.actionModel.list.showSearchPanel?'关闭搜索栏':'打开搜索栏'}}\", \"md-icon-button\", false).iconBuilder(\"{{listCtl.actionModel.list.showSearchPanel?'window-open':'window-closed'}}\", {}).btnClick(function ($event) {\n\t                    _this.actionModel.list.showSearchPanel = !_this.actionModel.list.showSearchPanel;\n\t                }).toValue());\n\t            }\n\t            _this.$rootScope.$broadcast(_this.key + \":toolbarComplete\", _this.actionModel.list.toolbars);\n\t        });\n\t    };\n\t    Controller.prototype.initItemToolbar = function () {\n\t        var _this = this;\n\t        var menuTool = this.toolbarUtils.menuBuilder(\"\", \"md-icon-button\").tooltipBuilder(\"操作菜单\").iconBuilder(\"expand_more\").menuOptionsBuilder().toValue();\n\t        var keys = [];\n\t        var itemActionsObj = _.keyBy(this.actionModel.itemActions, \"key\");\n\t        _.each(this.actionModel.itemActions, function (item) {\n\t            keys.push(item.key);\n\t        });\n\t        keys.length && this.fxAction.getModels(keys).then(function (actionModels) {\n\t            _.each(keys, function (key) {\n\t                var actionModel = actionModels[key];\n\t                if (actionModel) {\n\t                    var condition = itemActionsObj[key].condition;\n\t                    switch (actionModel.type) {\n\t                        case action_model_1.ActionType.none:\n\t                        case action_model_1.ActionType.form:\n\t                        case action_model_1.ActionType.wizard:\n\t                        case action_model_1.ActionType.confirm:\n\t                            var menu = _this.toolbarUtils.menuItemBuilder(actionModel.title, null, true).tooltipBuilder(\"\").noOptions(true, false).iconBuilder(actionModel.icon).btnClick(function ($event, item) {\n\t                                _this.doClickActionMenu($event, actionModel, item);\n\t                            });\n\t                            if (condition) {\n\t                                menu.conditionBuilder(condition);\n\t                            }\n\t                            menuTool.items.push(menu.toValue());\n\t                            break;\n\t                    }\n\t                }\n\t            });\n\t            menuTool.items.length && (_this.actionModel.list.itemToolbars = [menuTool]);\n\t            _this.$rootScope.$broadcast(_this.key + \":itemToolbarComplete\", menuTool.items);\n\t        });\n\t    };\n\t    Controller.prototype.orderChange = function (order) {\n\t        this.queryData.order = order;\n\t        this.doSearch(this.queryData.where || {});\n\t        this.orderFunc();\n\t    };\n\t    Controller.prototype.pageChange = function (page, limit) {\n\t        if (limit !== this.queryData.limit) {\n\t            page = 1;\n\t        }\n\t        this.queryData.page = page;\n\t        if (page > 0) {\n\t            this.queryData.offset = (page - 1) * limit;\n\t        }\n\t        this.doSearch(this.queryData.where || {});\n\t    };\n\t    Controller.prototype.doSearch = function (filterData) {\n\t        var _this = this;\n\t        if (this.local) {\n\t            return;\n\t        }\n\t        this.isBusy = true;\n\t        this.queryData.where = filterData || {};\n\t        if (_.isObject(this._filter) && _.isObject(this.queryData[\"where\"])) {\n\t            _.extend(this.queryData[\"where\"], this._filter);\n\t        }\n\t        this.promise = this.fxAction.doAction(this.key, this.queryData);\n\t        if (!this.promise) {\n\t            return;\n\t        }\n\t        this.promise.then(function (result) {\n\t            _this.fxAction.doDealResult(_this.actionModel, result, _this.clientData);\n\t            _this.$rootScope.$broadcast(_this.key + \":searchComplete\", _this.clientData);\n\t        }).finally(function () {\n\t            _this.isBusy = false;\n\t        });\n\t    };\n\t    Controller.$inject = [\"$rootScope\", \"$scope\", \"$q\", \"$timeout\", \"fxAction\", \"toolbarUtils\", \"materialUtils\"];\n\t    return Controller;\n\t}());\n\tfunction Directive() {\n\t    return {\n\t        restrict: 'EA',\n\t        template: __webpack_require__(120)(),\n\t        scope: true,\n\t        bindToController: {\n\t            key: \"@\",\n\t            selected: '=?',\n\t            _filter: '=?filter',\n\t            clientData: '=?',\n\t            showToolbar: '=?',\n\t            multiple: '=?',\n\t            autoSelect: '=?',\n\t            local: '=?',\n\t            itemToolbars: '=?',\n\t            topToolbars: '=?',\n\t            qtCtl: '=?'\n\t        },\n\t        controller: Controller,\n\t        controllerAs: 'listCtl',\n\t        replace: true,\n\t        transclude: true\n\t    };\n\t}\n\tmodule_1.module.filter('skip', function () {\n\t    return function (inputArray, skip, isLocal) {\n\t        if (!inputArray)\n\t            return [];\n\t        if (skip && isLocal) {\n\t            return _.drop(inputArray.concat([]), skip);\n\t        }\n\t        return inputArray;\n\t    };\n\t});\n\tmodule_1.module.directive(\"fxListAction\", Directive);\n\n\n/***/ }\n\n})\n\n\n/** WEBPACK FOOTER **\n ** 1.c3a4646135a892ae3623.hot-update.js\n **/","import './services/utils.service';\nimport './services/action.provider';\nimport './services/layout.provider';\nimport './services/autocomplete.provider';\nimport './services/jsoneditor.provider';\nimport './services/validator.custom.value';\n\n// import './schemas/modules.value';\n// import './schemas/common.value';\n// import './schemas/backup.value';\n// import './schemas/schema.value';\n// import './schemas/interface.value';\n// import './schemas/action.value';\nimport './schemas/local.value';\n\nimport './directives/form.directive';\nimport './directives/list.directive';\nimport './directives/autocomplete.directive';\nimport './directives/dialog-form.directive';\nimport './directives/search.directive';\nimport './directives/wizard.directive';\nimport './directives/dialog-wizard.directive';\nimport './directives/builder.directive';\n\nimport mdl from './module';\n\nimport './index.scss';\n\nexport default mdl;\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/action/index.ts\n **/","import { module } from '../module';\nimport { IActionModel, IClientData, IQueryData, ActionType } from '../models/action.model';\nimport * as pointer from 'json-pointer';\nimport * as _ from 'lodash';\n\nclass Controller {\n    static $inject = [\"$rootScope\", \"$scope\", \"$q\", \"$timeout\", \"fxAction\", \"toolbarUtils\", \"materialUtils\"];\n\n    key: string;\n    mdLimitOptions: Array<number> = [1, 10, 30, 50, 100, 300];\n    actionModel: IActionModel;\n    clientData: IClientData;\n    queryData: IQueryData;\n    isBusy: boolean = false;\n    showPage: boolean = true;\n    selected: Array<Object>;\n    promise: ng.IPromise<any>;\n    showToolbar: boolean;\n    _filter: any;\n    multiple: boolean;\n    local: boolean;\n    autoSelect: boolean;\n    itemToolbars: Array<any>;\n    topToolbars: Array<any>;\n\n    onOrderChange: Function;\n    onPageChange: Function;\n    doSearchBind: Function;\n\n    /**\n     * 构造函数\n     * @param $scope\n     * @param $q\n     * @param $timeout\n     * @param fxAction\n     * @param toolbarUtils\n     * @param materialUtils\n     */\n    constructor(private $rootScope: angular.IRootScopeService, private $scope: angular.IScope, private $q, private $timeout, private fxAction, private toolbarUtils, private materialUtils: fx.utils.materialStatic) {\n        !this.clientData && (this.clientData = {});\n        !this.selected && (this.selected = []);\n\n        fxAction.getModel(this.key).then((model) => {\n            this.actionModel = _.cloneDeep(model);\n            this.queryData = _.extend({ offset: 0, limit: 10, page: 1 }, this.actionModel.list.queryData || {}, this.queryData || {});\n            if (!this.local) {\n                this.initToolbar();\n                this.initItemToolbar();\n                this.doSearch();\n                this.initEvents();\n            } else {\n                this.actionModel.list.itemToolbars = this.itemToolbars || [];\n                this.actionModel.list.toolbars = this.topToolbars || [];\n            }\n        });\n        this.onOrderChange = this.orderChange.bind(this);\n        this.onPageChange = this.pageChange.bind(this);\n        this.doSearchBind = this.doSearch.bind(this);\n        // 销毁事件\n        this.$scope.$on(\"$destroy\", () => {\n            this.actionModel = null;\n            this.queryData = null;\n            this.onOrderChange = null;\n            this.onPageChange = null;\n            this.doSearchBind = null;\n            this.selected = null;\n            this.itemToolbars = null;\n            this.topToolbars = null;\n        });\n\n        this.$scope.$watch(() => {\n            return this._filter;\n        }, (newValue, oldValue) => {\n            if (newValue && newValue != oldValue) {\n                this.doSearch();\n            }\n        });\n    }\n\n    initEvents() {\n        let timeId;\n\n        this.$rootScope.$on(`${this.key}:refresh`, () => {\n            if(timeId) this.$timeout.cancel(timeId);\n            timeId = this.$timeout(() => {\n                this.doSearch(this.queryData.where || {});\n            }, 500);\n        });\n    }\n\n    orderFunc(): string | Array<string> {\n        if (this.queryData && this.queryData.order) {\n            return this.queryData.order.replace(/\\-/ig, '');\n        }\n\n        return [];\n    }\n\n    /**\n     * 按钮的点击事件\n     * @param $event\n     * @param actionModel\n     * @param item\n     */\n    doClickActionMenu($event, actionModel: IActionModel, item) {\n        let itemSource = _.clone(item);\n\n        actionModel.cancel = false;\n        this.$rootScope.$broadcast(`${this.key}:clickItem`, actionModel, item);\n        if (actionModel.cancel) {\n            return;\n        }\n        // 取得数据中的特定部分\n        if (actionModel.type === ActionType.form || actionModel.type === ActionType.wizard) {\n            itemSource = {};\n            if (pointer.has(item, actionModel.path || \"\")) {\n                itemSource = pointer.get(item, actionModel.path || \"\");\n            }\n        }\n        // 执行相应的操作\n        let promise = this.fxAction.doActionModel($event, actionModel, itemSource);\n\n        promise && promise.then((result) => {\n            this.materialUtils.showMsg(`${actionModel.successMsg || \"操作成功!\"}`);\n            this.$timeout(() => {\n                if (actionModel.refreshList) {\n                    this.doSearch(this.queryData.where || {});\n                }\n            }, 200);\n        });\n    }\n\n    /**\n     * 初始化顶部toolbar\n     */\n    initToolbar() {\n        this.actionModel.list.toolbars = [];\n        // 获取操作按钮\n        this.fxAction.getModels(this.actionModel.actions).then((actionModels) => {\n            // 添加标题label和icon\n            this.actionModel.list.toolbars.push(this.toolbarUtils.noneBuilder(\"icon\").iconBuilder(this.actionModel.icon, {}).toValue());\n            this.actionModel.list.toolbars.push(this.toolbarUtils.labelBuilder(`${this.actionModel.title}`).attrBuilder({ flex: \"\" }).toValue());\n            // 添加顶部按钮\n            _.forEach(actionModels, (actionModel: IActionModel) => {\n                if (actionModel.type !== ActionType.list) {\n                    this.actionModel.list.toolbars.push(this.toolbarUtils.btnBuilder(actionModel.title, \"md-icon-button\", false).tooltipBuilder(\"\").iconBuilder(actionModel.icon, {}).btnClick(($event, item: any) => {\n                        this.doClickActionMenu($event, actionModel, item || {});\n                    }).toValue());\n                }\n            });\n            // 添加刷新按钮\n            if (this.actionModel.list.showRefreshBtn) {\n                this.actionModel.list.toolbars.push(this.toolbarUtils.btnBuilder(\"刷新\", \"md-icon-button\", false).iconBuilder(\"refresh\", {}).btnClick(($event) => {\n                    this.doSearch(this.queryData.where || {});\n                }).toValue());\n            }\n            // 添加显示/隐藏搜索按钮\n            if (this.actionModel.list.showSearchBtn) {\n                this.actionModel.list.toolbars.push(this.toolbarUtils.btnBuilder(\"{{listCtl.actionModel.list.showSearchPanel?'关闭搜索栏':'打开搜索栏'}}\", \"md-icon-button\", false).iconBuilder(\"{{listCtl.actionModel.list.showSearchPanel?'window-open':'window-closed'}}\", {}).btnClick(($event) => {\n                    this.actionModel.list.showSearchPanel = !this.actionModel.list.showSearchPanel;\n                }).toValue());\n            }\n            this.$rootScope.$broadcast(`${this.key}:toolbarComplete`, this.actionModel.list.toolbars);\n        });\n    }\n\n    /**\n     * 初始化单项的Item的toolbar\n     */\n    initItemToolbar() {\n        const menuTool: any = this.toolbarUtils.menuBuilder(\"\", \"md-icon-button\").tooltipBuilder(\"操作菜单\").iconBuilder(\"expand_more\").menuOptionsBuilder().toValue();\n        const keys = [];\n        let itemActionsObj = _.keyBy(this.actionModel.itemActions, \"key\");\n\n        // 提取所有的keys\n        _.each(this.actionModel.itemActions, (item) => {\n            keys.push(item.key);\n        });\n        // 处理所有提取的keys\n        keys.length && this.fxAction.getModels(keys).then((actionModels) => {\n            _.each(keys, (key) => {\n                let actionModel: IActionModel = actionModels[key];\n                if (actionModel) {\n                    let condition = itemActionsObj[key].condition;\n                    // 添加操作按钮\n                    switch (actionModel.type) {\n                        case ActionType.none:\n                        case ActionType.form:\n                        case ActionType.wizard:\n                        case ActionType.confirm:\n                            let menu = this.toolbarUtils.menuItemBuilder(actionModel.title, null, true).tooltipBuilder(\"\").noOptions(true, false).iconBuilder(actionModel.icon).btnClick(($event, item: any) => {\n                                this.doClickActionMenu($event, actionModel, item);\n                            });\n                            // 处理显示/隐藏逻辑\n                            if (condition) {\n                                menu.conditionBuilder(condition);\n                            }\n                            menuTool.items.push(menu.toValue());\n                            break;\n                    }\n                }\n            });\n            // 单挑数据的操作按钮数据\n            menuTool.items.length && (this.actionModel.list.itemToolbars = [menuTool]);\n            this.$rootScope.$broadcast(`${this.key}:itemToolbarComplete`, menuTool.items);\n        });\n    }\n\n    /**\n     * 更改排序回调\n     * @param order\n     */\n    orderChange(order: string) {\n        this.queryData.order = order;\n        this.doSearch(this.queryData.where || {});\n        this.orderFunc();\n    }\n\n    /**\n     * 更改页码或者pageSize回调\n     * @param page\n     * @param limit\n     */\n    pageChange(page: number, limit: number) {\n        if (limit !== this.queryData.limit) {\n            page = 1;\n        }\n        this.queryData.page = page;\n        if (page > 0) {\n            this.queryData.offset = (page - 1) * limit;\n        }\n        this.doSearch(this.queryData.where || {});\n    }\n\n    /**\n     * 搜索数据\n     * @param filterData {Object} 搜索数据\n     */\n    doSearch(filterData?: any) {\n        // 如果是本地模式，则不调用网络请求\n        if (this.local) {\n            return;\n        }\n\n        this.isBusy = true;\n        this.queryData.where = filterData || {};\n\n        if (_.isObject(this._filter) && _.isObject(this.queryData[\"where\"])) {\n            _.extend(this.queryData[\"where\"], this._filter);\n        }\n\n        this.promise = this.fxAction.doAction(this.key, this.queryData);\n\n        if (!this.promise) {\n            return;\n        }\n        this.promise.then((result) => {\n            this.fxAction.doDealResult(this.actionModel, result, this.clientData);\n            this.$rootScope.$broadcast(`${this.key}:searchComplete`, this.clientData);\n        }).finally(() => {\n            this.isBusy = false;\n        });\n    }\n}\n\n/**\n * 操作指令,某个表单操作\n * @returns {{restrict: string, template: any, scope: {}, replace: boolean, link: (($scope:IDirectiveScope))}}\n * @constructor\n */\nfunction Directive(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        template: require(\"../tpls/list.jade\")(),\n        scope: true,\n        bindToController: {\n            key: \"@\",\n            selected: '=?',\n            _filter: '=?filter',\n            clientData: '=?',\n            showToolbar: '=?',\n            multiple: '=?',\n            autoSelect: '=?',\n            local: '=?',\n            itemToolbars: '=?',\n            topToolbars: '=?',\n            qtCtl: '=?'\n        },\n        controller: Controller,\n        controllerAs: 'listCtl',\n        replace: true,\n        transclude: true\n    };\n}\n\nmodule.filter('skip', function () {\n    return (inputArray, skip, isLocal) => {\n        if (!inputArray) return [];\n\n        if (skip && isLocal) {\n            return _.drop(inputArray.concat([]), skip);\n        }\n\n        return inputArray;\n    }\n});\n\nmodule.directive(\"fxListAction\", Directive);\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/action/directives/list.directive.ts\n **/"],"sourceRoot":""}